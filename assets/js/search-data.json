{
  
    
        "post0": {
            "title": "AI-generated Movie Reviews",
            "content": "This blog post is basically a continuation of my previous post titled Classifying movie reviews using Sentiment Analysis and ULMFit, and you should definitely read that if you want to better understand the methodology behind the process used in this task. . The dataset we’ll be using is the IMDb Large Movie Review Dataset, which contains 25,000 highly polarized movie reviews for training, and 25,000 for testing. . !pip install -Uqq fastbook import fastbook fastbook.setup_book() . |████████████████████████████████| 727kB 4.4MB/s |████████████████████████████████| 204kB 37.9MB/s |████████████████████████████████| 51kB 5.7MB/s |████████████████████████████████| 1.2MB 38.5MB/s |████████████████████████████████| 61kB 5.9MB/s |████████████████████████████████| 61kB 7.2MB/s Mounted at /content/gdrive . from fastbook import * . from fastai.text.all import * path = untar_data(URLs.IMDB) . Path.BASE_PATH = path path.ls() . (#7) [Path(&#39;imdb.vocab&#39;),Path(&#39;train&#39;),Path(&#39;README&#39;),Path(&#39;tmp_clas&#39;),Path(&#39;test&#39;),Path(&#39;tmp_lm&#39;),Path(&#39;unsup&#39;)] . We’ll grab the text files using get_text_files, which gets all the text files in a pth. We can optionally pass folders to restrict the search to a particular list of subfolders. . files = get_text_files(path, folders=[&#39;train&#39;, &#39;test&#39;, &#39;unsup&#39;]) . txt = files[0].open().read() txt . &#34;Dressed to Kill (1980) is a mystery horror film from Brian De Palma and it really works.The atmosphere is right there.The atmosphere that makes you scared.And isn&#39;t that what a horror film is supposed to do.All the actors are in the right places.Michael Caine is perfect as Dr. Robert Elliott, the shrink with a little secret.Angie Dickinson as Kate Miller, the sexually frustrated mature woman is terrific.Keith Gordon as her son Peter is brilliant.Nancy Allen as Liz Blake the call girl is fantastic.Dennis Franz does his typical detective role.His Detective Marino is one of the most colorful in this movie.There are plenty of creepy scenes in this movie.The elevator scene is one of them.There have been made comparisons between this and Alfred Hitchcock&#39;s Psycho (1960).There are some similarities between these two movies.Both of these movies may cause some sleepless nights.&#34; . . Training a Text Classifier . Language Model using DataBlock . Fastai handles tokenization and numericalization automatically when TextBlock is passed to DataBlock. Let’s create a language model using TextBlock. . get_imdb = partial(get_text_files, folders=[&#39;train&#39;, &#39;test&#39;, &#39;unsup&#39;]) dls_lm = DataBlock( blocks=TextBlock.from_folder(path, is_lm=True), get_items=get_imdb, splitter=RandomSplitter(0.1) ).dataloaders(path, path=path, bs=128, seq_len=72) . dls_lm.show_batch(max_n=2) . text text_ . 0 xxbos xxmaj being that i am not a fan of xxmaj snoop xxmaj dogg , as an actor , that made me even more anxious to check out this flick . i remember he was interviewed on &quot; jay xxmaj leno , &quot; and said that he turned down a role in the big - budget xxmaj adam xxmaj sandler comedy &quot; the xxmaj longest xxmaj yard &quot; to be in this | xxmaj being that i am not a fan of xxmaj snoop xxmaj dogg , as an actor , that made me even more anxious to check out this flick . i remember he was interviewed on &quot; jay xxmaj leno , &quot; and said that he turned down a role in the big - budget xxmaj adam xxmaj sandler comedy &quot; the xxmaj longest xxmaj yard &quot; to be in this film | . 1 viewer , the first number in the series does provide an unexpected element of suspense in addition to capable costuming from xxmaj ha xxmaj nguyen , fine stunt performing , and a polished turn from xxmaj carr . xxmaj an unrated version is available that seemingly promises to provide additional footage of the ardent romantic actions shared by the mismatched lovers . xxbos xxmaj the xxmaj minion is about … well , | , the first number in the series does provide an unexpected element of suspense in addition to capable costuming from xxmaj ha xxmaj nguyen , fine stunt performing , and a polished turn from xxmaj carr . xxmaj an unrated version is available that seemingly promises to provide additional footage of the ardent romantic actions shared by the mismatched lovers . xxbos xxmaj the xxmaj minion is about … well , a | . Now that our data is ready, we can fine-tune the pretrained language model. . . Fine-tuning the Language Model . To convert the integer word indices into activations that we can use for our neural network, we will use embeddings. We’ll feed those embeddings into a recurrent neural network (RNN), using an architecture called AWD-LSTM. The embeddings in the pretrained model are merged with random embeddings added for words that weren’t in the pretraining vocabulary. This is handled automatically inside language_model_learner. . learn = language_model_learner( dls_lm, AWD_LSTM, drop_mult=0.3, metrics=[accuracy, Perplexity()] ).to_fp16() . learn.fit_one_cycle(3, 2e-2) . epoch train_loss valid_loss accuracy perplexity time . 0 | 4.128321 | 4.070849 | 0.284800 | 58.606724 | 29:54 | . 1 | 3.995339 | 3.938066 | 0.296213 | 51.319229 | 29:57 | . 2 | 3.860701 | 3.867283 | 0.303124 | 47.812309 | 30:00 | . learn.unfreeze() learn.fit_one_cycle(10, 2e-3) . epoch train_loss valid_loss accuracy perplexity time . 0 | 3.675387 | 3.746690 | 0.317715 | 42.380569 | 32:10 | . 1 | 3.645742 | 3.704438 | 0.322705 | 40.627209 | 32:08 | . 2 | 3.605402 | 3.664308 | 0.327991 | 39.029121 | 31:54 | . 3 | 3.535574 | 3.633687 | 0.331826 | 37.852131 | 31:51 | . 4 | 3.451682 | 3.618303 | 0.334019 | 37.274242 | 31:41 | . 5 | 3.417034 | 3.603825 | 0.336183 | 36.738476 | 31:49 | . 6 | 3.359589 | 3.594853 | 0.337721 | 36.410355 | 31:44 | . 7 | 3.266180 | 3.592850 | 0.338945 | 36.337505 | 31:36 | . 8 | 3.213485 | 3.597207 | 0.339176 | 36.496162 | 31:34 | . 9 | 3.178523 | 3.602469 | 0.339008 | 36.688713 | 31:36 | . . Text Generation . Let’s use our model to generate random reviews. Since it is trained to guess what the next word of the sentence is, we can use the model to write new reviews. . TEXT = &#39;This movie is terrible&#39; N_WORDS = 70 N_SENTENCES = 5 preds = [learn.predict(TEXT, N_WORDS, temperature=0.75) for _ in range(N_SENTENCES)] . print(&#39; n n&#39;.join(preds)) . This movie is terrible ! It &#39;s terrible . The actors are ALL bad . The story is bad . The special effects are TERRIBLE . And that &#39;s really the only thing that will save this movie . The plot is pathetic . The movie is just boring . a group of people are about to end up in a mental hospital where they This movie is terrible . My friend went to see it and we were so disappointed . I &#39;m not usually a fan of the book but i had earlier read that Chris Columbus wrote some of the best writing , directing and directing since , well , there are no words to describe how bad this piece of garbage was . It was a complete waste of time This movie is terrible . And it has been very long . i did n&#39;t think it was even worth the rental , but it was very recommended . If you are into action movies , be sure to rent Titanic . You will be disappointed . It is a well made movie . The acting is good enough to keep your interest . Everything about this This movie is terrible . Not only is it offensive in spots , it only gets worse . It has no story line . No acting and dead and cheap special effects . What a waste of talent . My 3 year old son was laughing , not laughing . Well , i really loved the first film . This one is clearly one of the This movie is terrible , i do n&#39;t know why i could n&#39;t find it , it was so awful that i had to leave the room after this horrible film was finished . The plot was so stupid that it went on way too long . It was painful to watch . The fact that the audience was so bored was incredible . The only reason this film .",
            "url": "https://shirolepranav.github.io/blog/nlp/pytorch/fastai/2021/08/08/ai-generated-movie-reviews.html",
            "relUrl": "/nlp/pytorch/fastai/2021/08/08/ai-generated-movie-reviews.html",
            "date": " • Aug 8, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Multiclass Classifications using CNN and Tensorflow",
            "content": "The dataset . Rock Paper Scissors is a dataset containing about 3,000 computer-generated images from a variety of different hands, from different races, ages and genders, posed into Rock, Paper or Scissors and labelled as such. Each image is 300 X 300 pixels in 24-bit color. The images have all been generated using CGI techniques as an experiment in determining if a CGI-based dataset can be used for classification against real images. You can download the dataset here. In this blog post, we will identify whether an image is Rock, Paper or Scissors. . # download the training and test set zip files !wget --no-check-certificate https://storage.googleapis.com/laurencemoroney-blog.appspot.com/rps.zip -O /tmp/rps.zip !wget --no-check-certificate https://storage.googleapis.com/laurencemoroney-blog.appspot.com/rps-test-set.zip -O /tmp/rps-test-set.zip . --2020-09-07 06:12:21-- https://storage.googleapis.com/laurencemoroney-blog.appspot.com/rps.zip Resolving storage.googleapis.com (storage.googleapis.com)... 172.217.212.128, 172.217.214.128, 108.177.111.128, ... Connecting to storage.googleapis.com (storage.googleapis.com)|172.217.212.128|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 200682221 (191M) [application/zip] Saving to: ‘/tmp/rps.zip’ /tmp/rps.zip 100%[===================&gt;] 191.38M 111MB/s in 1.7s 2020-09-07 06:12:22 (111 MB/s) - ‘/tmp/rps.zip’ saved [200682221/200682221] --2020-09-07 06:12:22-- https://storage.googleapis.com/laurencemoroney-blog.appspot.com/rps-test-set.zip Resolving storage.googleapis.com (storage.googleapis.com)... 74.125.124.128, 172.217.212.128, 172.217.214.128, ... Connecting to storage.googleapis.com (storage.googleapis.com)|74.125.124.128|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 29516758 (28M) [application/zip] Saving to: ‘/tmp/rps-test-set.zip’ /tmp/rps-test-set.z 100%[===================&gt;] 28.15M 169MB/s in 0.2s 2020-09-07 06:12:23 (169 MB/s) - ‘/tmp/rps-test-set.zip’ saved [29516758/29516758] . . import os import zipfile # unzip the data into the tmp directory local_zip = &#39;/tmp/rps.zip&#39; zip_ref = zipfile.ZipFile(local_zip, &#39;r&#39;) zip_ref.extractall(&#39;/tmp/&#39;) zip_ref.close() local_zip = &#39;/tmp/rps-test-set.zip&#39; zip_ref = zipfile.ZipFile(local_zip, &#39;r&#39;) zip_ref.extractall(&#39;/tmp/&#39;) zip_ref.close() . rock_dir = os.path.join(&#39;/tmp/rps/rock&#39;) paper_dir = os.path.join(&#39;/tmp/rps/paper&#39;) scissors_dir = os.path.join(&#39;/tmp/rps/scissors&#39;) print(&#39;total training rock images:&#39;, len(os.listdir(rock_dir))) print(&#39;total training paper images:&#39;, len(os.listdir(paper_dir))) print(&#39;total training scissors images:&#39;, len(os.listdir(scissors_dir))) rock_files = os.listdir(rock_dir) print(rock_files[:10]) paper_files = os.listdir(paper_dir) print(paper_files[:10]) scissors_files = os.listdir(scissors_dir) print(scissors_files[:10]) . total training rock images: 840 total training paper images: 840 total training scissors images: 840 [&#39;rock02-110.png&#39;, &#39;rock02-061.png&#39;, &#39;rock04-062.png&#39;, &#39;rock04-058.png&#39;, &#39;rock03-011.png&#39;, &#39;rock01-064.png&#39;, &#39;rock03-090.png&#39;, &#39;rock04-049.png&#39;, &#39;rock06ck02-062.png&#39;, &#39;rock06ck02-000.png&#39;] [&#39;paper02-028.png&#39;, &#39;paper03-019.png&#39;, &#39;paper05-007.png&#39;, &#39;paper07-113.png&#39;, &#39;paper07-104.png&#39;, &#39;paper01-027.png&#39;, &#39;paper06-062.png&#39;, &#39;paper05-011.png&#39;, &#39;paper01-101.png&#39;, &#39;paper02-004.png&#39;] [&#39;scissors04-059.png&#39;, &#39;scissors04-078.png&#39;, &#39;scissors01-029.png&#39;, &#39;scissors02-112.png&#39;, &#39;scissors04-074.png&#39;, &#39;testscissors02-068.png&#39;, &#39;scissors01-089.png&#39;, &#39;scissors04-041.png&#39;, &#39;scissors01-099.png&#39;, &#39;scissors01-082.png&#39;] . There are 840 images of each class. Let&#39;s see some examples of the images. . %matplotlib inline import matplotlib.pyplot as plt import matplotlib.image as mpimg pic_index = 2 next_rock = [os.path.join(rock_dir, fname) for fname in rock_files[pic_index-2:pic_index]] next_paper = [os.path.join(paper_dir, fname) for fname in paper_files[pic_index-2:pic_index]] next_scissors = [os.path.join(scissors_dir, fname) for fname in scissors_files[pic_index-2:pic_index]] for i, img_path in enumerate(next_rock+next_paper+next_scissors): print(img_path) img = mpimg.imread(img_path) plt.imshow(img) plt.axis(&#39;Off&#39;) plt.show() . /tmp/rps/rock/rock02-110.png . /tmp/rps/rock/rock02-061.png . /tmp/rps/paper/paper02-028.png . /tmp/rps/paper/paper03-019.png . /tmp/rps/scissors/scissors04-059.png . /tmp/rps/scissors/scissors04-078.png . import tensorflow as tf import keras_preprocessing from keras_preprocessing import image from keras_preprocessing.image import ImageDataGenerator # set up the image generator TRAINING_DIR = &quot;/tmp/rps/&quot; training_datagen = ImageDataGenerator( rescale = 1./255, rotation_range=40, width_shift_range=0.2, height_shift_range=0.2, shear_range=0.2, zoom_range=0.2, horizontal_flip=True, fill_mode=&#39;nearest&#39;) VALIDATION_DIR = &quot;/tmp/rps-test-set/&quot; validation_datagen = ImageDataGenerator(rescale = 1./255) train_generator = training_datagen.flow_from_directory( TRAINING_DIR, target_size=(150,150), class_mode=&#39;categorical&#39;, batch_size=126 ) validation_generator = validation_datagen.flow_from_directory( VALIDATION_DIR, target_size=(150,150), class_mode=&#39;categorical&#39;, batch_size=126 ) model = tf.keras.models.Sequential([ # Note the input shape is the desired size of the image 150x150 with 3 bytes color # the first convolution tf.keras.layers.Conv2D(64, (3,3), activation=&#39;relu&#39;, input_shape=(150, 150, 3)), tf.keras.layers.MaxPooling2D(2, 2), # the second convolution tf.keras.layers.Conv2D(64, (3,3), activation=&#39;relu&#39;), tf.keras.layers.MaxPooling2D(2,2), # the third convolution tf.keras.layers.Conv2D(128, (3,3), activation=&#39;relu&#39;), tf.keras.layers.MaxPooling2D(2,2), # the fourth convolution tf.keras.layers.Conv2D(128, (3,3), activation=&#39;relu&#39;), tf.keras.layers.MaxPooling2D(2,2), # flatten the results to feed into a DNN tf.keras.layers.Flatten(), tf.keras.layers.Dropout(0.5), # 512 neuron hidden layer tf.keras.layers.Dense(512, activation=&#39;relu&#39;), tf.keras.layers.Dense(3, activation=&#39;softmax&#39;) ]) model.summary() model.compile(loss = &#39;categorical_crossentropy&#39;, optimizer=&#39;rmsprop&#39;, metrics=[&#39;accuracy&#39;]) history = model.fit(train_generator, epochs=25, steps_per_epoch=20, validation_data = validation_generator, verbose = 1, validation_steps=3) model.save(&quot;rps.h5&quot;) . Found 2520 images belonging to 3 classes. Found 372 images belonging to 3 classes. Model: &#34;sequential&#34; _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= conv2d (Conv2D) (None, 148, 148, 64) 1792 _________________________________________________________________ max_pooling2d (MaxPooling2D) (None, 74, 74, 64) 0 _________________________________________________________________ conv2d_1 (Conv2D) (None, 72, 72, 64) 36928 _________________________________________________________________ max_pooling2d_1 (MaxPooling2 (None, 36, 36, 64) 0 _________________________________________________________________ conv2d_2 (Conv2D) (None, 34, 34, 128) 73856 _________________________________________________________________ max_pooling2d_2 (MaxPooling2 (None, 17, 17, 128) 0 _________________________________________________________________ conv2d_3 (Conv2D) (None, 15, 15, 128) 147584 _________________________________________________________________ max_pooling2d_3 (MaxPooling2 (None, 7, 7, 128) 0 _________________________________________________________________ flatten (Flatten) (None, 6272) 0 _________________________________________________________________ dropout (Dropout) (None, 6272) 0 _________________________________________________________________ dense (Dense) (None, 512) 3211776 _________________________________________________________________ dense_1 (Dense) (None, 3) 1539 ================================================================= Total params: 3,473,475 Trainable params: 3,473,475 Non-trainable params: 0 _________________________________________________________________ Epoch 1/25 2/20 [==&gt;...........................] - ETA: 1s - loss: 5.8507 - accuracy: 0.3452WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.0479s vs `on_train_batch_end` time: 0.1123s). Check your callbacks. 20/20 [==============================] - 21s 1s/step - loss: 1.6690 - accuracy: 0.3623 - val_loss: 1.0931 - val_accuracy: 0.4919 Epoch 2/25 20/20 [==============================] - 21s 1s/step - loss: 1.1116 - accuracy: 0.4052 - val_loss: 1.0942 - val_accuracy: 0.3468 Epoch 3/25 20/20 [==============================] - 21s 1s/step - loss: 1.0647 - accuracy: 0.4385 - val_loss: 0.9382 - val_accuracy: 0.6129 Epoch 4/25 20/20 [==============================] - 21s 1s/step - loss: 0.9481 - accuracy: 0.5214 - val_loss: 0.9023 - val_accuracy: 0.8011 Epoch 5/25 20/20 [==============================] - 21s 1s/step - loss: 0.8231 - accuracy: 0.6290 - val_loss: 0.5388 - val_accuracy: 0.6371 Epoch 6/25 20/20 [==============================] - 21s 1s/step - loss: 0.6919 - accuracy: 0.6821 - val_loss: 0.6611 - val_accuracy: 0.5565 Epoch 7/25 20/20 [==============================] - 21s 1s/step - loss: 0.5531 - accuracy: 0.7726 - val_loss: 0.5019 - val_accuracy: 0.7177 Epoch 8/25 20/20 [==============================] - 21s 1s/step - loss: 0.4280 - accuracy: 0.8310 - val_loss: 0.1039 - val_accuracy: 1.0000 Epoch 9/25 20/20 [==============================] - 22s 1s/step - loss: 0.4344 - accuracy: 0.8179 - val_loss: 0.3247 - val_accuracy: 0.8522 Epoch 10/25 20/20 [==============================] - 21s 1s/step - loss: 0.4032 - accuracy: 0.8504 - val_loss: 0.0396 - val_accuracy: 1.0000 Epoch 11/25 20/20 [==============================] - 21s 1s/step - loss: 0.2661 - accuracy: 0.9052 - val_loss: 0.0393 - val_accuracy: 1.0000 Epoch 12/25 20/20 [==============================] - 21s 1s/step - loss: 0.2516 - accuracy: 0.8964 - val_loss: 0.1177 - val_accuracy: 0.9597 Epoch 13/25 20/20 [==============================] - 21s 1s/step - loss: 0.1619 - accuracy: 0.9421 - val_loss: 0.1453 - val_accuracy: 0.9543 Epoch 14/25 20/20 [==============================] - 21s 1s/step - loss: 0.1787 - accuracy: 0.9361 - val_loss: 0.0986 - val_accuracy: 0.9758 Epoch 15/25 20/20 [==============================] - 21s 1s/step - loss: 0.2301 - accuracy: 0.9119 - val_loss: 0.2302 - val_accuracy: 0.8844 Epoch 16/25 20/20 [==============================] - 21s 1s/step - loss: 0.1690 - accuracy: 0.9417 - val_loss: 0.0461 - val_accuracy: 0.9973 Epoch 17/25 20/20 [==============================] - 21s 1s/step - loss: 0.0809 - accuracy: 0.9718 - val_loss: 0.0404 - val_accuracy: 0.9812 Epoch 18/25 20/20 [==============================] - 21s 1s/step - loss: 0.2039 - accuracy: 0.9286 - val_loss: 0.0465 - val_accuracy: 0.9839 Epoch 19/25 20/20 [==============================] - 21s 1s/step - loss: 0.1677 - accuracy: 0.9421 - val_loss: 0.0850 - val_accuracy: 0.9570 Epoch 20/25 20/20 [==============================] - 21s 1s/step - loss: 0.0885 - accuracy: 0.9702 - val_loss: 0.0294 - val_accuracy: 0.9946 Epoch 21/25 20/20 [==============================] - 21s 1s/step - loss: 0.1087 - accuracy: 0.9627 - val_loss: 0.0159 - val_accuracy: 0.9946 Epoch 22/25 20/20 [==============================] - 21s 1s/step - loss: 0.1243 - accuracy: 0.9623 - val_loss: 0.0410 - val_accuracy: 0.9866 Epoch 23/25 20/20 [==============================] - 21s 1s/step - loss: 0.0897 - accuracy: 0.9683 - val_loss: 0.0441 - val_accuracy: 0.9839 Epoch 24/25 20/20 [==============================] - 21s 1s/step - loss: 0.1056 - accuracy: 0.9643 - val_loss: 0.0088 - val_accuracy: 1.0000 Epoch 25/25 20/20 [==============================] - 21s 1s/step - loss: 0.1093 - accuracy: 0.9607 - val_loss: 0.0381 - val_accuracy: 0.9919 . . import matplotlib.pyplot as plt acc = history.history[&#39;accuracy&#39;] val_acc = history.history[&#39;val_accuracy&#39;] loss = history.history[&#39;loss&#39;] val_loss = history.history[&#39;val_loss&#39;] epochs = range(len(acc)) plt.plot(epochs, acc, &#39;r&#39;, label=&#39;Training accuracy&#39;) plt.plot(epochs, val_acc, &#39;b&#39;, label=&#39;Validation accuracy&#39;) plt.title(&#39;Training and validation accuracy&#39;) plt.legend(loc=0) plt.figure() plt.show() . &lt;Figure size 432x288 with 0 Axes&gt; . We can see that the training accuracy improved over time and trends towards 1.0. The validation accuracy was unstable in the beginning but has a value between 0.9 and 1.0 over time. . . Model evaluation . Let us now test the model with some images that it hasn&#39;t previously seen. This new dataset with 33 images can be downloaded here. . import numpy as np from google.colab import files from keras.preprocessing import image uploaded = files.upload() for fn in uploaded.keys(): # predicting images path = fn img = image.load_img(path, target_size=(150, 150)) x = image.img_to_array(img) x = np.expand_dims(x, axis=0) images = np.vstack([x]) classes = model.predict(images, batch_size=10) print(fn) print(classes) . Upload widget is only available when the cell has been executed in the current browser session. Please rerun this cell to enable. Saving paper1.png to paper1.png Saving paper2.png to paper2.png Saving paper3.png to paper3.png Saving paper4.png to paper4.png Saving paper5.png to paper5.png Saving paper6.png to paper6.png Saving paper7.png to paper7.png Saving paper8.png to paper8.png Saving paper9.png to paper9.png Saving paper-hires1.png to paper-hires1.png Saving paper-hires2.png to paper-hires2.png Saving rock1.png to rock1.png Saving rock2.png to rock2.png Saving rock3.png to rock3.png Saving rock4.png to rock4.png Saving rock5.png to rock5.png Saving rock6.png to rock6.png Saving rock7.png to rock7.png Saving rock8.png to rock8.png Saving rock9.png to rock9.png Saving rock-hires1.png to rock-hires1.png Saving rock-hires2.png to rock-hires2.png Saving scissors1.png to scissors1.png Saving scissors2.png to scissors2.png Saving scissors3.png to scissors3.png Saving scissors4.png to scissors4.png Saving scissors5.png to scissors5.png Saving scissors6.png to scissors6.png Saving scissors7.png to scissors7.png Saving scissors8.png to scissors8.png Saving scissors9.png to scissors9.png Saving scissors-hires1.png to scissors-hires1.png Saving scissors-hires2.png to scissors-hires2.png paper1.png [[1. 0. 0.]] paper2.png [[1. 0. 0.]] paper3.png [[1. 0. 0.]] paper4.png [[1. 0. 0.]] paper5.png [[1. 0. 0.]] paper6.png [[1. 0. 0.]] paper7.png [[1. 0. 0.]] paper8.png [[1. 0. 0.]] paper9.png [[0. 1. 0.]] paper-hires1.png [[1. 0. 0.]] paper-hires2.png [[1. 0. 0.]] rock1.png [[0. 1. 0.]] rock2.png [[0. 1. 0.]] rock3.png [[0. 1. 0.]] rock4.png [[0. 1. 0.]] rock5.png [[0. 1. 0.]] rock6.png [[0. 1. 0.]] rock7.png [[0. 1. 0.]] rock8.png [[0. 1. 0.]] rock9.png [[0. 1. 0.]] rock-hires1.png [[0. 1. 0.]] rock-hires2.png [[0. 1. 0.]] scissors1.png [[0. 0. 1.]] scissors2.png [[0. 0. 1.]] scissors3.png [[0. 0. 1.]] scissors4.png [[0. 0. 1.]] scissors5.png [[0. 0. 1.]] scissors6.png [[0. 0. 1.]] scissors7.png [[0. 0. 1.]] scissors8.png [[0. 0. 1.]] scissors9.png [[0. 0. 1.]] scissors-hires1.png [[0. 0. 1.]] scissors-hires2.png [[0. 0. 1.]] . . When using the image generator, the classes come from directories and thus were sorted in alphabetical order. So the first value is for paper, then rock, and then scissors. The model guessed 32 out of 33 images correctly. It got only 1 image wrong, the paper9.png. If you download the images for yourself, you can see why the model got confused. We can conclude that the model is highly accurate. . .",
            "url": "https://shirolepranav.github.io/blog/computer%20vision/tensorflow/cnn/2020/07/05/rock-paper-scissors.html",
            "relUrl": "/computer%20vision/tensorflow/cnn/2020/07/05/rock-paper-scissors.html",
            "date": " • Jul 5, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Where should you live in London?",
            "content": "Imagine you are moving to London, UK. It&#39;s a major metropolitan city, a financial hub, a famous tourist destination, and home to around 9 million people. But as with every big city, crime is a concern, and you would like to live in a neighborhood that is safe and also popular. In this blog, we&#39;ll use the London Crime data and the Foursquare API to select which neighborhood best fits our needs. . Note: To view the interactive maps, open the notebook in Google Colab. . The London Crime data consists of more than 13 million rows containing counts of criminal reports by month, LSOA (Lower Super Output Area) borough, and major/minor category. You can download the data here. About the data: . lsoa_code: code for Lower Super Output Area in Greater London. | borough: Common name for London borough. | major_category: High level categorization of crime | minor_category: Low level categorization of crime within major category. | value: monthly reported count of categorical crime in given borough | year: Year of reported counts, 2008-2016 | month: Month of reported counts, 1-12 | . import pandas as pd # library for data analysis import numpy as np # library to handle data in a vectorized manner import random # library for random number generation import requests # library to handle requests from bs4 import BeautifulSoup # library for web scraping #!conda install -c conda-forge geocoder --yes import geocoder #!conda install -c conda-forge geopy --yes from geopy.geocoders import Nominatim # module to convert an address into latitude and longitude values # libraries for displaying images from IPython.display import Image from IPython.core.display import HTML # transforming json file into a pandas dataframe library from pandas.io.json import json_normalize #!conda install -c conda-forge folium=0.5.0 --yes import folium # plotting library print(&#39;Libraries imported.&#39;) . Libraries imported. . Define Foursquare credentials. . CLIENT_ID = &#39;XXXX&#39; CLIENT_SECRET = &#39;XXXX&#39; VERSION = &#39;20191912&#39; # limit the number of venues returned by the foursquare API LIMIT = 50 . Read the dataset into a pandas dataframe. . df = pd.read_csv(&#39;london_crime_by_lsoa.csv&#39;) df.head() . lsoa_code borough major_category minor_category value year month . 0 E01001116 | Croydon | Burglary | Burglary in Other Buildings | 0 | 2016 | 11 | . 1 E01001646 | Greenwich | Violence Against the Person | Other violence | 0 | 2016 | 11 | . 2 E01000677 | Bromley | Violence Against the Person | Other violence | 0 | 2015 | 5 | . 3 E01003774 | Redbridge | Burglary | Burglary in Other Buildings | 0 | 2016 | 3 | . 4 E01004563 | Wandsworth | Robbery | Personal Property | 0 | 2008 | 6 | . df.shape . (13490604, 7) . . Preprocessing the data . df = df[df.value != 0] # reset the index and drop the previous index df = df.reset_index(drop=True) df.head() . lsoa_code borough major_category minor_category value year month . 0 E01004177 | Sutton | Theft and Handling | Theft/Taking of Pedal Cycle | 1 | 2016 | 8 | . 1 E01000086 | Barking and Dagenham | Theft and Handling | Other Theft Person | 1 | 2009 | 5 | . 2 E01001301 | Ealing | Theft and Handling | Other Theft Person | 2 | 2012 | 1 | . 3 E01001794 | Hackney | Violence Against the Person | Harassment | 1 | 2013 | 2 | . 4 E01000733 | Bromley | Criminal Damage | Criminal Damage To Motor Vehicle | 1 | 2016 | 4 | . df.shape . (3419099, 7) . Change the column names. . df.columns = [&#39;LSOA_Code&#39;, &#39;Borough&#39;, &#39;Major_Category&#39;, &#39;Minor_Category&#39;, &#39;No_of_Crimes&#39;, &#39;Year&#39;, &#39;Month&#39;] df.head(2) . LSOA_Code Borough Major_Category Minor_Category No_of_Crimes Year Month . 0 E01004177 | Sutton | Theft and Handling | Theft/Taking of Pedal Cycle | 1 | 2016 | 8 | . 1 E01000086 | Barking and Dagenham | Theft and Handling | Other Theft Person | 1 | 2009 | 5 | . df.info() . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; RangeIndex: 3419099 entries, 0 to 3419098 Data columns (total 7 columns): # Column Dtype -- 0 LSOA_Code object 1 Borough object 2 Major_Category object 3 Minor_Category object 4 No_of_Crimes int64 5 Year int64 6 Month int64 dtypes: int64(3), object(4) memory usage: 182.6+ MB . What is the total number of crimes in each Borough? . df[&#39;Borough&#39;].value_counts() . Lambeth 152784 Croydon 147203 Southwark 144362 Ealing 140006 Newham 137275 Brent 129925 Lewisham 128232 Barnet 127194 Tower Hamlets 120099 Wandsworth 118995 Enfield 117953 Hackney 116521 Haringey 116315 Waltham Forest 114603 Camden 112029 Islington 111755 Hillingdon 110614 Westminster 110070 Bromley 109855 Hounslow 106561 Redbridge 105932 Greenwich 104654 Hammersmith and Fulham 92084 Barking and Dagenham 86849 Havering 82288 Kensington and Chelsea 81295 Harrow 73993 Bexley 73948 Merton 73661 Sutton 62776 Richmond upon Thames 61857 Kingston upon Thames 46846 City of London 565 Name: Borough, dtype: int64 . The Boroughs of Lambeth, Croydon, Southwark and Ealing have the highest number of crimes from the year 2008 to 2016. . What is the total number of crimes per major category? . df[&#39;Major_Category&#39;].value_counts() . Theft and Handling 1136994 Violence Against the Person 894859 Criminal Damage 466268 Burglary 441209 Drugs 231894 Robbery 163549 Other Notifiable Offences 80569 Fraud or Forgery 2682 Sexual Offences 1075 Name: Major_Category, dtype: int64 . Pivot the table to view the number of crimes for each major category in each Borough. . London_crime = pd.pivot_table(df, values=[&#39;No_of_Crimes&#39;], index=[&#39;Borough&#39;], columns=[&#39;Major_Category&#39;], aggfunc=np.sum, fill_value=0) London_crime.head() . No_of_Crimes . Major_Category Burglary Criminal Damage Drugs Fraud or Forgery Other Notifiable Offences Robbery Sexual Offences Theft and Handling Violence Against the Person . Borough . Barking and Dagenham 18103 | 18888 | 9188 | 205 | 2819 | 6105 | 49 | 50999 | 43091 | . Barnet 36981 | 21024 | 9796 | 175 | 2953 | 7374 | 38 | 87285 | 46565 | . Bexley 14973 | 17244 | 7346 | 106 | 1999 | 2338 | 22 | 40071 | 30037 | . Brent 28923 | 20569 | 25978 | 157 | 3711 | 12473 | 39 | 72523 | 63178 | . Bromley 27135 | 24039 | 8942 | 196 | 2637 | 4868 | 31 | 69742 | 46759 | . London_crime.reset_index(inplace=True) . London_crime[&#39;Total&#39;] = London_crime.sum(axis=1) London_crime.head() . Borough No_of_Crimes Total . Major_Category Burglary Criminal Damage Drugs Fraud or Forgery Other Notifiable Offences Robbery Sexual Offences Theft and Handling Violence Against the Person . 0 Barking and Dagenham | 18103 | 18888 | 9188 | 205 | 2819 | 6105 | 49 | 50999 | 43091 | 149447 | . 1 Barnet | 36981 | 21024 | 9796 | 175 | 2953 | 7374 | 38 | 87285 | 46565 | 212191 | . 2 Bexley | 14973 | 17244 | 7346 | 106 | 1999 | 2338 | 22 | 40071 | 30037 | 114136 | . 3 Brent | 28923 | 20569 | 25978 | 157 | 3711 | 12473 | 39 | 72523 | 63178 | 227551 | . 4 Bromley | 27135 | 24039 | 8942 | 196 | 2637 | 4868 | 31 | 69742 | 46759 | 184349 | . Remove the multi-index so that it will be easier to merge the columns. . London_crime.columns = London_crime.columns.map(&#39; &#39;.join) London_crime.head() . Borough No_of_Crimes Burglary No_of_Crimes Criminal Damage No_of_Crimes Drugs No_of_Crimes Fraud or Forgery No_of_Crimes Other Notifiable Offences No_of_Crimes Robbery No_of_Crimes Sexual Offences No_of_Crimes Theft and Handling No_of_Crimes Violence Against the Person Total . 0 Barking and Dagenham | 18103 | 18888 | 9188 | 205 | 2819 | 6105 | 49 | 50999 | 43091 | 149447 | . 1 Barnet | 36981 | 21024 | 9796 | 175 | 2953 | 7374 | 38 | 87285 | 46565 | 212191 | . 2 Bexley | 14973 | 17244 | 7346 | 106 | 1999 | 2338 | 22 | 40071 | 30037 | 114136 | . 3 Brent | 28923 | 20569 | 25978 | 157 | 3711 | 12473 | 39 | 72523 | 63178 | 227551 | . 4 Bromley | 27135 | 24039 | 8942 | 196 | 2637 | 4868 | 31 | 69742 | 46759 | 184349 | . Let&#39;s rename the columns for better comprehensibility. . London_crime.columns = [&#39;Borough&#39;, &#39;Burglary&#39;, &#39;Criminal Damage&#39;, &#39;Drugs&#39;, &#39;Fraud or Forgery&#39;, &#39;Other Notifiable Offenses&#39;, &#39;Robbery&#39;, &#39;Sexual Offences&#39;, &#39;Theft and Handling&#39;, &#39;Violence Against the Person&#39;, &#39;Total&#39;] London_crime . Borough Burglary Criminal Damage Drugs Fraud or Forgery Other Notifiable Offenses Robbery Sexual Offences Theft and Handling Violence Against the Person Total . 0 Barking and Dagenham | 18103 | 18888 | 9188 | 205 | 2819 | 6105 | 49 | 50999 | 43091 | 149447 | . 1 Barnet | 36981 | 21024 | 9796 | 175 | 2953 | 7374 | 38 | 87285 | 46565 | 212191 | . 2 Bexley | 14973 | 17244 | 7346 | 106 | 1999 | 2338 | 22 | 40071 | 30037 | 114136 | . 3 Brent | 28923 | 20569 | 25978 | 157 | 3711 | 12473 | 39 | 72523 | 63178 | 227551 | . 4 Bromley | 27135 | 24039 | 8942 | 196 | 2637 | 4868 | 31 | 69742 | 46759 | 184349 | . 5 Camden | 27939 | 18482 | 21816 | 123 | 3857 | 9286 | 36 | 140596 | 53012 | 275147 | . 6 City of London | 15 | 16 | 33 | 0 | 17 | 24 | 0 | 561 | 114 | 780 | . 7 Croydon | 33376 | 31218 | 19162 | 270 | 4340 | 12645 | 55 | 91437 | 67791 | 260294 | . 8 Ealing | 30831 | 25613 | 18591 | 175 | 4406 | 9568 | 52 | 93834 | 68492 | 251562 | . 9 Enfield | 30213 | 22487 | 13251 | 132 | 3293 | 9059 | 38 | 70371 | 45036 | 193880 | . 10 Greenwich | 20966 | 22755 | 10836 | 107 | 3598 | 5430 | 56 | 64923 | 52897 | 181568 | . 11 Hackney | 21450 | 17327 | 18144 | 143 | 3332 | 8975 | 46 | 91118 | 56584 | 217119 | . 12 Hammersmith and Fulham | 17010 | 14595 | 15492 | 91 | 3352 | 5279 | 45 | 86381 | 43014 | 185259 | . 13 Haringey | 28213 | 22272 | 14563 | 207 | 2971 | 10084 | 40 | 83979 | 50943 | 213272 | . 14 Harrow | 19630 | 12724 | 7122 | 92 | 1998 | 4242 | 27 | 40800 | 30213 | 116848 | . 15 Havering | 21302 | 17252 | 8171 | 179 | 2358 | 3089 | 19 | 52609 | 33968 | 138947 | . 16 Hillingdon | 26056 | 24485 | 11413 | 223 | 6504 | 5663 | 44 | 80028 | 55264 | 209680 | . 17 Hounslow | 21026 | 21407 | 13722 | 183 | 3963 | 4847 | 40 | 70180 | 51404 | 186772 | . 18 Islington | 22207 | 18354 | 16553 | 85 | 3675 | 8736 | 40 | 107661 | 52975 | 230286 | . 19 Kensington and Chelsea | 14980 | 9839 | 14573 | 85 | 2203 | 4744 | 24 | 95963 | 29570 | 171981 | . 20 Kingston upon Thames | 10131 | 10610 | 5682 | 65 | 1332 | 1702 | 18 | 38226 | 21540 | 89306 | . 21 Lambeth | 30199 | 26136 | 25083 | 137 | 4520 | 18408 | 70 | 114899 | 72726 | 292178 | . 22 Lewisham | 24871 | 24810 | 16825 | 262 | 3809 | 10455 | 71 | 70382 | 63652 | 215137 | . 23 Merton | 16485 | 14339 | 6651 | 111 | 1571 | 4021 | 26 | 44128 | 28322 | 115654 | . 24 Newham | 25356 | 24177 | 18389 | 323 | 4456 | 16913 | 43 | 106146 | 66221 | 262024 | . 25 Redbridge | 26735 | 17543 | 15736 | 284 | 2619 | 7688 | 31 | 71496 | 41430 | 183562 | . 26 Richmond upon Thames | 16097 | 11722 | 4707 | 37 | 1420 | 1590 | 26 | 40858 | 20314 | 96771 | . 27 Southwark | 27980 | 24450 | 27381 | 321 | 4696 | 16153 | 40 | 109432 | 68356 | 278809 | . 28 Sutton | 13207 | 14474 | 4586 | 57 | 1393 | 2308 | 20 | 39533 | 25409 | 100987 | . 29 Tower Hamlets | 21510 | 21593 | 23408 | 124 | 4268 | 10050 | 47 | 87620 | 59993 | 228613 | . 30 Waltham Forest | 25565 | 20459 | 14101 | 236 | 3040 | 10606 | 34 | 77940 | 51898 | 203879 | . 31 Wandsworth | 25533 | 19630 | 9493 | 161 | 3091 | 8398 | 47 | 92523 | 45865 | 204741 | . 32 Westminster | 29295 | 20405 | 34031 | 273 | 6148 | 15752 | 59 | 277617 | 71448 | 455028 | . . Scraping data from the web . Let&#39;s scrape additional information about the different Boroughs in London from the &quot;List of London boroughs&quot; Wikipedia page. We&#39;ll use the Beautiful Soup library to scrape the latitude and longitude coordinates of the boroghs in London. . # getting data from internet wikipedia_link = &#39;https://en.wikipedia.org/wiki/List_of_London_boroughs&#39; raw_wikipedia_page = requests.get(wikipedia_link).text # using beautiful soup to parse the HTML/XML codes. soup = BeautifulSoup(raw_wikipedia_page,&#39;xml&#39;) print(soup.prettify()) . &lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&gt; &lt;!DOCTYPE html&gt; &lt;html class=&#34;client-nojs&#34; dir=&#34;ltr&#34; lang=&#34;en&#34;&gt; &lt;head&gt; &lt;meta charset=&#34;UTF-8&#34;/&gt; &lt;title&gt; List of London boroughs - Wikipedia &lt;/title&gt; &lt;script&gt; document.documentElement.className=&#34;client-js&#34;;RLCONF={&#34;wgBreakFrames&#34;:!1,&#34;wgSeparatorTransformTable&#34;:[&#34;&#34;,&#34;&#34;],&#34;wgDigitTransformTable&#34;:[&#34;&#34;,&#34;&#34;],&#34;wgDefaultDateFormat&#34;:&#34;dmy&#34;,&#34;wgMonthNames&#34;:[&#34;&#34;,&#34;January&#34;,&#34;February&#34;,&#34;March&#34;,&#34;April&#34;,&#34;May&#34;,&#34;June&#34;,&#34;July&#34;,&#34;August&#34;,&#34;September&#34;,&#34;October&#34;,&#34;November&#34;,&#34;December&#34;],&#34;wgMonthNamesShort&#34;:[&#34;&#34;,&#34;Jan&#34;,&#34;Feb&#34;,&#34;Mar&#34;,&#34;Apr&#34;,&#34;May&#34;,&#34;Jun&#34;,&#34;Jul&#34;,&#34;Aug&#34;,&#34;Sep&#34;,&#34;Oct&#34;,&#34;Nov&#34;,&#34;Dec&#34;],&#34;wgRequestId&#34;:&#34;XnGIbgpAMNIAAU@V7W8AAACD&#34;,&#34;wgCSPNonce&#34;:!1,&#34;wgCanonicalNamespace&#34;:&#34;&#34;,&#34;wgCanonicalSpecialPageName&#34;:!1,&#34;wgNamespaceNumber&#34;:0,&#34;wgPageName&#34;:&#34;List_of_London_boroughs&#34;,&#34;wgTitle&#34;:&#34;List of London boroughs&#34;,&#34;wgCurRevisionId&#34;:943613985,&#34;wgRevisionId&#34;:943613985,&#34;wgArticleId&#34;:28092685,&#34;wgIsArticle&#34;:!0,&#34;wgIsRedirect&#34;:!1,&#34;wgAction&#34;:&#34;view&#34;,&#34;wgUserName&#34;:null,&#34;wgUserGroups&#34;:[&#34;*&#34;],&#34;wgCategories&#34;:[&#34;Use dmy dates from August 2015&#34;,&#34;Use British English from August 2015&#34;,&#34;Lists of coordinates&#34;,&#34;Geographic coordinate lists&#34;,&#34;Articles with Geo&#34;,&#34;London boroughs&#34;,&#34;Lists of places in London&#34;], &#34;wgPageContentLanguage&#34;:&#34;en&#34;,&#34;wgPageContentModel&#34;:&#34;wikitext&#34;,&#34;wgRelevantPageName&#34;:&#34;List_of_London_boroughs&#34;,&#34;wgRelevantArticleId&#34;:28092685,&#34;wgIsProbablyEditable&#34;:!0,&#34;wgRelevantPageIsProbablyEditable&#34;:!0,&#34;wgRestrictionEdit&#34;:[],&#34;wgRestrictionMove&#34;:[],&#34;wgMediaViewerOnClick&#34;:!0,&#34;wgMediaViewerEnabledByDefault&#34;:!0,&#34;wgPopupsReferencePreviews&#34;:!1,&#34;wgPopupsConflictsWithNavPopupGadget&#34;:!1,&#34;wgVisualEditor&#34;:{&#34;pageLanguageCode&#34;:&#34;en&#34;,&#34;pageLanguageDir&#34;:&#34;ltr&#34;,&#34;pageVariantFallbacks&#34;:&#34;en&#34;},&#34;wgMFDisplayWikibaseDescriptions&#34;:{&#34;search&#34;:!0,&#34;nearby&#34;:!0,&#34;watchlist&#34;:!0,&#34;tagline&#34;:!1},&#34;wgWMESchemaEditAttemptStepOversample&#34;:!1,&#34;wgULSCurrentAutonym&#34;:&#34;English&#34;,&#34;wgNoticeProject&#34;:&#34;wikipedia&#34;,&#34;wgWikibaseItemId&#34;:&#34;Q6577004&#34;,&#34;wgCentralAuthMobileDomain&#34;:!1,&#34;wgEditSubmitButtonLabelPublish&#34;:!0};RLSTATE={&#34;ext.globalCssJs.user.styles&#34;:&#34;ready&#34;,&#34;site.styles&#34;:&#34;ready&#34;,&#34;noscript&#34;:&#34;ready&#34;,&#34;user.styles&#34;:&#34;ready&#34;,&#34;ext.globalCssJs.user&#34;:&#34;ready&#34;,&#34;user&#34;:&#34;ready&#34;,&#34;user.options&#34;:&#34;ready&#34;,&#34;user.tokens&#34;:&#34;loading&#34; ,&#34;ext.cite.styles&#34;:&#34;ready&#34;,&#34;mediawiki.legacy.shared&#34;:&#34;ready&#34;,&#34;mediawiki.legacy.commonPrint&#34;:&#34;ready&#34;,&#34;jquery.tablesorter.styles&#34;:&#34;ready&#34;,&#34;jquery.makeCollapsible.styles&#34;:&#34;ready&#34;,&#34;mediawiki.toc.styles&#34;:&#34;ready&#34;,&#34;skins.vector.styles&#34;:&#34;ready&#34;,&#34;wikibase.client.init&#34;:&#34;ready&#34;,&#34;ext.visualEditor.desktopArticleTarget.noscript&#34;:&#34;ready&#34;,&#34;ext.uls.interlanguage&#34;:&#34;ready&#34;,&#34;ext.wikimediaBadges&#34;:&#34;ready&#34;};RLPAGEMODULES=[&#34;ext.cite.ux-enhancements&#34;,&#34;site&#34;,&#34;mediawiki.page.startup&#34;,&#34;skins.vector.js&#34;,&#34;mediawiki.page.ready&#34;,&#34;jquery.tablesorter&#34;,&#34;jquery.makeCollapsible&#34;,&#34;mediawiki.toc&#34;,&#34;ext.gadget.ReferenceTooltips&#34;,&#34;ext.gadget.charinsert&#34;,&#34;ext.gadget.refToolbar&#34;,&#34;ext.gadget.extra-toolbar-buttons&#34;,&#34;ext.gadget.switcher&#34;,&#34;ext.centralauth.centralautologin&#34;,&#34;mmv.head&#34;,&#34;mmv.bootstrap.autostart&#34;,&#34;ext.popups&#34;,&#34;ext.visualEditor.desktopArticleTarget.init&#34;,&#34;ext.visualEditor.targetLoader&#34;,&#34;ext.eventLogging&#34;,&#34;ext.wikimediaEvents&#34;,&#34;ext.navigationTiming&#34;,&#34;ext.uls.compactlinks&#34;,&#34;ext.uls.interface&#34;, &#34;ext.cx.eventlogging.campaigns&#34;,&#34;ext.quicksurveys.init&#34;,&#34;ext.centralNotice.geoIP&#34;,&#34;ext.centralNotice.startUp&#34;]; &lt;/script&gt; &lt;script&gt; (RLQ=window.RLQ||[]).push(function(){mw.loader.implement(&#34;user.tokens@tffin&#34;,function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({&#34;patrolToken&#34;:&#34;+ &#34;,&#34;watchToken&#34;:&#34;+ &#34;,&#34;csrfToken&#34;:&#34;+ &#34;}); });}); &lt;/script&gt; &lt;link href=&#34;/w/load.php?lang=en&amp;amp;modules=ext.cite.styles%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cext.wikimediaBadges%7Cjquery.makeCollapsible.styles%7Cjquery.tablesorter.styles%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.toc.styles%7Cskins.vector.styles%7Cwikibase.client.init&amp;amp;only=styles&amp;amp;skin=vector&#34; rel=&#34;stylesheet&#34;/&gt; &lt;script async=&#34;&#34; src=&#34;/w/load.php?lang=en&amp;amp;modules=startup&amp;amp;only=scripts&amp;amp;raw=1&amp;amp;skin=vector&#34;/&gt; &lt;meta content=&#34;&#34; name=&#34;ResourceLoaderDynamicStyles&#34;/&gt; &lt;link href=&#34;/w/load.php?lang=en&amp;amp;modules=site.styles&amp;amp;only=styles&amp;amp;skin=vector&#34; rel=&#34;stylesheet&#34;/&gt; &lt;meta content=&#34;MediaWiki 1.35.0-wmf.22&#34; name=&#34;generator&#34;/&gt; &lt;meta content=&#34;origin&#34; name=&#34;referrer&#34;/&gt; &lt;meta content=&#34;origin-when-crossorigin&#34; name=&#34;referrer&#34;/&gt; &lt;meta content=&#34;origin-when-cross-origin&#34; name=&#34;referrer&#34;/&gt; &lt;link href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&#34; rel=&#34;alternate&#34; title=&#34;Edit this page&#34; type=&#34;application/x-wiki&#34;/&gt; &lt;link href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&#34; rel=&#34;edit&#34; title=&#34;Edit this page&#34;/&gt; &lt;link href=&#34;/static/apple-touch/wikipedia.png&#34; rel=&#34;apple-touch-icon&#34;/&gt; &lt;link href=&#34;/static/favicon/wikipedia.ico&#34; rel=&#34;shortcut icon&#34;/&gt; &lt;link href=&#34;/w/opensearch_desc.php&#34; rel=&#34;search&#34; title=&#34;Wikipedia (en)&#34; type=&#34;application/opensearchdescription+xml&#34;/&gt; &lt;link href=&#34;//en.wikipedia.org/w/api.php?action=rsd&#34; rel=&#34;EditURI&#34; type=&#34;application/rsd+xml&#34;/&gt; &lt;link href=&#34;//creativecommons.org/licenses/by-sa/3.0/&#34; rel=&#34;license&#34;/&gt; &lt;link href=&#34;/w/index.php?title=Special:RecentChanges&amp;amp;feed=atom&#34; rel=&#34;alternate&#34; title=&#34;Wikipedia Atom feed&#34; type=&#34;application/atom+xml&#34;/&gt; &lt;link href=&#34;https://en.wikipedia.org/wiki/List_of_London_boroughs&#34; rel=&#34;canonical&#34;/&gt; &lt;link href=&#34;//login.wikimedia.org&#34; rel=&#34;dns-prefetch&#34;/&gt; &lt;link href=&#34;//meta.wikimedia.org&#34; rel=&#34;dns-prefetch&#34;/&gt; &lt;!--[if lt IE 9]&gt;&lt;script src=&#34;/w/resources/lib/html5shiv/html5shiv.js&#34;&gt;&lt;/script&gt;&lt;![endif]--&gt; &lt;/head&gt; &lt;body class=&#34;mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-List_of_London_boroughs rootpage-List_of_London_boroughs skin-vector action-view&#34;&gt; &lt;div class=&#34;noprint&#34; id=&#34;mw-page-base&#34;/&gt; &lt;div class=&#34;noprint&#34; id=&#34;mw-head-base&#34;/&gt; &lt;div class=&#34;mw-body&#34; id=&#34;content&#34; role=&#34;main&#34;&gt; &lt;a id=&#34;top&#34;/&gt; &lt;div class=&#34;mw-body-content&#34; id=&#34;siteNotice&#34;&gt; &lt;!-- CentralNotice --&gt; &lt;/div&gt; &lt;div class=&#34;mw-indicators mw-body-content&#34;&gt; &lt;/div&gt; &lt;h1 class=&#34;firstHeading&#34; id=&#34;firstHeading&#34; lang=&#34;en&#34;&gt; List of London boroughs &lt;/h1&gt; &lt;div class=&#34;mw-body-content&#34; id=&#34;bodyContent&#34;&gt; &lt;div class=&#34;noprint&#34; id=&#34;siteSub&#34;&gt; From Wikipedia, the free encyclopedia &lt;/div&gt; &lt;div id=&#34;contentSub&#34;/&gt; &lt;div id=&#34;jump-to-nav&#34;/&gt; &lt;a class=&#34;mw-jump-link&#34; href=&#34;#mw-head&#34;&gt; Jump to navigation &lt;/a&gt; &lt;a class=&#34;mw-jump-link&#34; href=&#34;#p-search&#34;&gt; Jump to search &lt;/a&gt; &lt;div class=&#34;mw-content-ltr&#34; dir=&#34;ltr&#34; id=&#34;mw-content-text&#34; lang=&#34;en&#34;&gt; &lt;div class=&#34;mw-parser-output&#34;&gt; &lt;p class=&#34;mw-empty-elt&#34;&gt; &lt;/p&gt; &lt;div class=&#34;thumb tright&#34;&gt; &lt;div class=&#34;thumbinner&#34; style=&#34;width:302px;&#34;&gt; &lt;a class=&#34;image&#34; href=&#34;/wiki/File:London-boroughs.svg&#34;&gt; &lt;img alt=&#34;&#34; class=&#34;thumbimage&#34; data-file-height=&#34;386&#34; data-file-width=&#34;489&#34; decoding=&#34;async&#34; height=&#34;237&#34; src=&#34;//upload.wikimedia.org/wikipedia/commons/thumb/2/29/London-boroughs.svg/300px-London-boroughs.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/commons/thumb/2/29/London-boroughs.svg/450px-London-boroughs.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/2/29/London-boroughs.svg/600px-London-boroughs.svg.png 2x&#34; width=&#34;300&#34;/&gt; &lt;/a&gt; &lt;div class=&#34;thumbcaption&#34;&gt; &lt;div class=&#34;magnify&#34;&gt; &lt;a class=&#34;internal&#34; href=&#34;/wiki/File:London-boroughs.svg&#34; title=&#34;Enlarge&#34;/&gt; &lt;/div&gt; Map of the 32 London boroughs and the City of London. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt; This is a list of &lt;a href=&#34;/wiki/Districts_of_England&#34; title=&#34;Districts of England&#34;&gt; local authority districts &lt;/a&gt; within &lt;a href=&#34;/wiki/Greater_London&#34; title=&#34;Greater London&#34;&gt; Greater London &lt;/a&gt; , including 32 &lt;a href=&#34;/wiki/London_boroughs&#34; title=&#34;London boroughs&#34;&gt; London boroughs &lt;/a&gt; and the &lt;a href=&#34;/wiki/City_of_London&#34; title=&#34;City of London&#34;&gt; City of London &lt;/a&gt; . The London boroughs were all created on 1 April 1965. Upon creation, twelve were designated &lt;a href=&#34;/wiki/Inner_London&#34; title=&#34;Inner London&#34;&gt; Inner London &lt;/a&gt; boroughs and the remaining twenty were designated &lt;a href=&#34;/wiki/Outer_London&#34; title=&#34;Outer London&#34;&gt; Outer London &lt;/a&gt; boroughs. The &lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Office_for_National_Statistics&#34; title=&#34;Office for National Statistics&#34;&gt; Office for National Statistics &lt;/a&gt; has amended the designations of three boroughs for statistics purposes only. Three boroughs have been granted the designation &lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Royal_borough&#34; title=&#34;Royal borough&#34;&gt; royal borough &lt;/a&gt; and one has &lt;a href=&#34;/wiki/City_status_in_the_United_Kingdom&#34; title=&#34;City status in the United Kingdom&#34;&gt; city status &lt;/a&gt; . For planning purposes, in addition to the boroughs and City there are also two active development corporations, the &lt;a href=&#34;/wiki/London_Legacy_Development_Corporation&#34; title=&#34;London Legacy Development Corporation&#34;&gt; London Legacy Development Corporation &lt;/a&gt; and &lt;a href=&#34;/wiki/Old_Oak_and_Park_Royal_Development_Corporation&#34; title=&#34;Old Oak and Park Royal Development Corporation&#34;&gt; Old Oak and Park Royal Development Corporation &lt;/a&gt; . &lt;/p&gt; &lt;div aria-labelledby=&#34;mw-toc-heading&#34; class=&#34;toc&#34; id=&#34;toc&#34; role=&#34;navigation&#34;&gt; &lt;input class=&#34;toctogglecheckbox&#34; id=&#34;toctogglecheckbox&#34; role=&#34;button&#34; style=&#34;display:none&#34; type=&#34;checkbox&#34;/&gt; &lt;div class=&#34;toctitle&#34; dir=&#34;ltr&#34; lang=&#34;en&#34;&gt; &lt;h2 id=&#34;mw-toc-heading&#34;&gt; Contents &lt;/h2&gt; &lt;span class=&#34;toctogglespan&#34;&gt; &lt;label class=&#34;toctogglelabel&#34; for=&#34;toctogglecheckbox&#34;/&gt; &lt;/span&gt; &lt;/div&gt; &lt;ul&gt; &lt;li class=&#34;toclevel-1 tocsection-1&#34;&gt; &lt;a href=&#34;#List_of_boroughs_and_local_authorities&#34;&gt; &lt;span class=&#34;tocnumber&#34;&gt; 1 &lt;/span&gt; &lt;span class=&#34;toctext&#34;&gt; List of boroughs and local authorities &lt;/span&gt; &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;toclevel-1 tocsection-2&#34;&gt; &lt;a href=&#34;#City_of_London&#34;&gt; &lt;span class=&#34;tocnumber&#34;&gt; 2 &lt;/span&gt; &lt;span class=&#34;toctext&#34;&gt; City of London &lt;/span&gt; &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;toclevel-1 tocsection-3&#34;&gt; &lt;a href=&#34;#See_also&#34;&gt; &lt;span class=&#34;tocnumber&#34;&gt; 3 &lt;/span&gt; &lt;span class=&#34;toctext&#34;&gt; See also &lt;/span&gt; &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;toclevel-1 tocsection-4&#34;&gt; &lt;a href=&#34;#Notes&#34;&gt; &lt;span class=&#34;tocnumber&#34;&gt; 4 &lt;/span&gt; &lt;span class=&#34;toctext&#34;&gt; Notes &lt;/span&gt; &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;toclevel-1 tocsection-5&#34;&gt; &lt;a href=&#34;#References&#34;&gt; &lt;span class=&#34;tocnumber&#34;&gt; 5 &lt;/span&gt; &lt;span class=&#34;toctext&#34;&gt; References &lt;/span&gt; &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;toclevel-1 tocsection-6&#34;&gt; &lt;a href=&#34;#External_links&#34;&gt; &lt;span class=&#34;tocnumber&#34;&gt; 6 &lt;/span&gt; &lt;span class=&#34;toctext&#34;&gt; External links &lt;/span&gt; &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2&gt; &lt;span class=&#34;mw-headline&#34; id=&#34;List_of_boroughs_and_local_authorities&#34;&gt; List of boroughs and local authorities &lt;/span&gt; &lt;span class=&#34;mw-editsection&#34;&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; [ &lt;/span&gt; &lt;a href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&amp;amp;section=1&#34; title=&#34;Edit section: List of boroughs and local authorities&#34;&gt; edit &lt;/a&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; ] &lt;/span&gt; &lt;/span&gt; &lt;/h2&gt; &lt;table class=&#34;wikitable sortable&#34; style=&#34;font-size:100%&#34; width=&#34;100%&#34;&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt; Borough &lt;/th&gt; &lt;th&gt; Inner &lt;/th&gt; &lt;th&gt; Status &lt;/th&gt; &lt;th&gt; Local authority &lt;/th&gt; &lt;th&gt; Political control &lt;/th&gt; &lt;th&gt; Headquarters &lt;/th&gt; &lt;th&gt; Area (sq mi) &lt;/th&gt; &lt;th&gt; Population (2013 est) &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-1&#34;&gt; &lt;a href=&#34;#cite_note-1&#34;&gt; [1] &lt;/a&gt; &lt;/sup&gt; &lt;/th&gt; &lt;th&gt; Co-ordinates &lt;/th&gt; &lt;th&gt; &lt;span style=&#34;background:#67BCD3&#34;&gt; Nr. in map &lt;/span&gt; &lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Barking_and_Dagenham&#34; title=&#34;London Borough of Barking and Dagenham&#34;&gt; Barking and Dagenham &lt;/a&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-2&#34;&gt; &lt;a href=&#34;#cite_note-2&#34;&gt; [note 1] &lt;/a&gt; &lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Barking_and_Dagenham_London_Borough_Council&#34; title=&#34;Barking and Dagenham London Borough Council&#34;&gt; Barking and Dagenham London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Barking_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Barking Town Hall (page does not exist)&#34;&gt; Town Hall &lt;/a&gt; , 1 Town Square &lt;/td&gt; &lt;td&gt; 13.93 &lt;/td&gt; &lt;td&gt; 194,352 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5607_N_0.1557_E_region:GB_type:city&amp;amp;title=Barking+and+Dagenham&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°33′39″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°09′21″E &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5607°N 0.1557°E &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5607; 0.1557 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Barking and Dagenham &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 25 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Barnet&#34; title=&#34;London Borough of Barnet&#34;&gt; Barnet &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Barnet_London_Borough_Council&#34; title=&#34;Barnet London Borough Council&#34;&gt; Barnet London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt; Conservative &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=North_London_Business_Park&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;North London Business Park (page does not exist)&#34;&gt; North London Business Park &lt;/a&gt; , Oakleigh Road South &lt;/td&gt; &lt;td&gt; 33.49 &lt;/td&gt; &lt;td&gt; 369,088 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.6252_N_0.1517_W_region:GB_type:city&amp;amp;title=Barnet&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°37′31″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°09′06″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.6252°N 0.1517°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.6252; -0.1517 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Barnet &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 31 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Bexley&#34; title=&#34;London Borough of Bexley&#34;&gt; Bexley &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Bexley_London_Borough_Council&#34; title=&#34;Bexley London Borough Council&#34;&gt; Bexley London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt; Conservative &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Civic_Offices&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Civic Offices (page does not exist)&#34;&gt; Civic Offices &lt;/a&gt; , 2 Watling Street &lt;/td&gt; &lt;td&gt; 23.38 &lt;/td&gt; &lt;td&gt; 236,687 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4549_N_0.1505_E_region:GB_type:city&amp;amp;title=Bexley&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°27′18″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°09′02″E &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4549°N 0.1505°E &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4549; 0.1505 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Bexley &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 23 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Brent&#34; title=&#34;London Borough of Brent&#34;&gt; Brent &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Brent_London_Borough_Council&#34; title=&#34;Brent London Borough Council&#34;&gt; Brent London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Brent_Civic_Centre&#34; title=&#34;Brent Civic Centre&#34;&gt; Brent Civic Centre &lt;/a&gt; , Engineers Way &lt;/td&gt; &lt;td&gt; 16.70 &lt;/td&gt; &lt;td&gt; 317,264 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5588_N_0.2817_W_region:GB_type:city&amp;amp;title=Brent&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°33′32″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°16′54″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5588°N 0.2817°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5588; -0.2817 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Brent &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 12 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Bromley&#34; title=&#34;London Borough of Bromley&#34;&gt; Bromley &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Bromley_London_Borough_Council&#34; title=&#34;Bromley London Borough Council&#34;&gt; Bromley London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt; Conservative &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Bromley_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Bromley Civic Centre (page does not exist)&#34;&gt; Civic Centre &lt;/a&gt; , Stockwell Close &lt;/td&gt; &lt;td&gt; 57.97 &lt;/td&gt; &lt;td&gt; 317,899 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4039_N_0.0198_E_region:GB_type:city&amp;amp;title=Bromley&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°24′14″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°01′11″E &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4039°N 0.0198°E &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4039; 0.0198 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Bromley &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 20 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Camden&#34; title=&#34;London Borough of Camden&#34;&gt; Camden &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Camden_London_Borough_Council&#34; title=&#34;Camden London Borough Council&#34;&gt; Camden London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Camden_Town_Hall&#34; title=&#34;Camden Town Hall&#34;&gt; Camden Town Hall &lt;/a&gt; , Judd Street &lt;/td&gt; &lt;td&gt; 8.40 &lt;/td&gt; &lt;td&gt; 229,719 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.529_N_0.1255_W_region:GB_type:city&amp;amp;title=Camden&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°31′44″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°07′32″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5290°N 0.1255°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5290; -0.1255 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Camden &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 11 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Croydon&#34; title=&#34;London Borough of Croydon&#34;&gt; Croydon &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Croydon_London_Borough_Council&#34; title=&#34;Croydon London Borough Council&#34;&gt; Croydon London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Bernard_Weatherill_House&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Bernard Weatherill House (page does not exist)&#34;&gt; Bernard Weatherill House &lt;/a&gt; , Mint Walk &lt;/td&gt; &lt;td&gt; 33.41 &lt;/td&gt; &lt;td&gt; 372,752 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.3714_N_0.0977_W_region:GB_type:city&amp;amp;title=Croydon&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°22′17″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°05′52″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.3714°N 0.0977°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.3714; -0.0977 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Croydon &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 19 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Ealing&#34; title=&#34;London Borough of Ealing&#34;&gt; Ealing &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Ealing_London_Borough_Council&#34; title=&#34;Ealing London Borough Council&#34;&gt; Ealing London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Perceval_House,_Ealing&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Perceval House, Ealing (page does not exist)&#34;&gt; Perceval House &lt;/a&gt; , 14-16 Uxbridge Road &lt;/td&gt; &lt;td&gt; 21.44 &lt;/td&gt; &lt;td&gt; 342,494 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.513_N_0.3089_W_region:GB_type:city&amp;amp;title=Ealing&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°30′47″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°18′32″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5130°N 0.3089°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5130; -0.3089 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Ealing &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 13 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Enfield&#34; title=&#34;London Borough of Enfield&#34;&gt; Enfield &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Enfield_London_Borough_Council&#34; title=&#34;Enfield London Borough Council&#34;&gt; Enfield London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Enfield_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Enfield Civic Centre (page does not exist)&#34;&gt; Civic Centre &lt;/a&gt; , Silver Street &lt;/td&gt; &lt;td&gt; 31.74 &lt;/td&gt; &lt;td&gt; 320,524 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.6538_N_0.0799_W_region:GB_type:city&amp;amp;title=Enfield&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°39′14″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°04′48″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.6538°N 0.0799°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.6538; -0.0799 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Enfield &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 30 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Royal_Borough_of_Greenwich&#34; title=&#34;Royal Borough of Greenwich&#34;&gt; Greenwich &lt;/a&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-3&#34;&gt; &lt;a href=&#34;#cite_note-3&#34;&gt; [note 2] &lt;/a&gt; &lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-note2_4-0&#34;&gt; &lt;a href=&#34;#cite_note-note2-4&#34;&gt; [note 3] &lt;/a&gt; &lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Royal_borough&#34; title=&#34;Royal borough&#34;&gt; Royal &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Greenwich_London_Borough_Council&#34; title=&#34;Greenwich London Borough Council&#34;&gt; Greenwich London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Woolwich_Town_Hall&#34; title=&#34;Woolwich Town Hall&#34;&gt; Woolwich Town Hall &lt;/a&gt; , Wellington Street &lt;/td&gt; &lt;td&gt; 18.28 &lt;/td&gt; &lt;td&gt; 264,008 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4892_N_0.0648_E_region:GB_type:city&amp;amp;title=Greenwich&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°29′21″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°03′53″E &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4892°N 0.0648°E &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4892; 0.0648 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Greenwich &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 22 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Hackney&#34; title=&#34;London Borough of Hackney&#34;&gt; Hackney &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Hackney_London_Borough_Council&#34; title=&#34;Hackney London Borough Council&#34;&gt; Hackney London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Hackney_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Hackney Town Hall (page does not exist)&#34;&gt; Hackney Town Hall &lt;/a&gt; , Mare Street &lt;/td&gt; &lt;td&gt; 7.36 &lt;/td&gt; &lt;td&gt; 257,379 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.545_N_0.0553_W_region:GB_type:city&amp;amp;title=Hackney&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°32′42″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°03′19″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5450°N 0.0553°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5450; -0.0553 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Hackney &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 9 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Hammersmith_and_Fulham&#34; title=&#34;London Borough of Hammersmith and Fulham&#34;&gt; Hammersmith and Fulham &lt;/a&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-5&#34;&gt; &lt;a href=&#34;#cite_note-5&#34;&gt; [note 4] &lt;/a&gt; &lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Hammersmith_and_Fulham_London_Borough_Council&#34; title=&#34;Hammersmith and Fulham London Borough Council&#34;&gt; Hammersmith and Fulham London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Hammersmith_and_Fulham_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Hammersmith and Fulham Town Hall (page does not exist)&#34;&gt; Town Hall &lt;/a&gt; , King Street &lt;/td&gt; &lt;td&gt; 6.33 &lt;/td&gt; &lt;td&gt; 178,685 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4927_N_0.2339_W_region:GB_type:city&amp;amp;title=Hammersmith+and+Fulham&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°29′34″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°14′02″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4927°N 0.2339°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4927; -0.2339 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Hammersmith and Fulham &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Haringey&#34; title=&#34;London Borough of Haringey&#34;&gt; Haringey &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-note2_4-1&#34;&gt; &lt;a href=&#34;#cite_note-note2-4&#34;&gt; [note 3] &lt;/a&gt; &lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Haringey_London_Borough_Council&#34; title=&#34;Haringey London Borough Council&#34;&gt; Haringey London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Haringey_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Haringey Civic Centre (page does not exist)&#34;&gt; Civic Centre &lt;/a&gt; , High Road &lt;/td&gt; &lt;td&gt; 11.42 &lt;/td&gt; &lt;td&gt; 263,386 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.6_N_0.1119_W_region:GB_type:city&amp;amp;title=Haringey&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°36′00″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°06′43″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.6000°N 0.1119°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.6000; -0.1119 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Haringey &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 29 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Harrow&#34; title=&#34;London Borough of Harrow&#34;&gt; Harrow &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Harrow_London_Borough_Council&#34; title=&#34;Harrow London Borough Council&#34;&gt; Harrow London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Harrow_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Harrow Civic Centre (page does not exist)&#34;&gt; Civic Centre &lt;/a&gt; , Station Road &lt;/td&gt; &lt;td&gt; 19.49 &lt;/td&gt; &lt;td&gt; 243,372 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5898_N_0.3346_W_region:GB_type:city&amp;amp;title=Harrow&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°35′23″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°20′05″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5898°N 0.3346°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5898; -0.3346 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Harrow &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 32 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Havering&#34; title=&#34;London Borough of Havering&#34;&gt; Havering &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Havering_London_Borough_Council&#34; title=&#34;Havering London Borough Council&#34;&gt; Havering London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt; Conservative &lt;/a&gt; (council &lt;a href=&#34;/wiki/No_overall_control&#34; title=&#34;No overall control&#34;&gt; NOC &lt;/a&gt; ) &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Havering_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Havering Town Hall (page does not exist)&#34;&gt; Town Hall &lt;/a&gt; , Main Road &lt;/td&gt; &lt;td&gt; 43.35 &lt;/td&gt; &lt;td&gt; 242,080 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5812_N_0.1837_E_region:GB_type:city&amp;amp;title=Havering&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°34′52″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°11′01″E &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5812°N 0.1837°E &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5812; 0.1837 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Havering &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 24 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Hillingdon&#34; title=&#34;London Borough of Hillingdon&#34;&gt; Hillingdon &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Hillingdon_London_Borough_Council&#34; title=&#34;Hillingdon London Borough Council&#34;&gt; Hillingdon London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt; Conservative &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Hillingdon_Civic_Centre&#34; title=&#34;Hillingdon Civic Centre&#34;&gt; Civic Centre &lt;/a&gt; , High Street &lt;/td&gt; &lt;td&gt; 44.67 &lt;/td&gt; &lt;td&gt; 286,806 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5441_N_0.476_W_region:GB_type:city&amp;amp;title=Hillingdon&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°32′39″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°28′34″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5441°N 0.4760°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5441; -0.4760 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Hillingdon &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 33 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Hounslow&#34; title=&#34;London Borough of Hounslow&#34;&gt; Hounslow &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Hounslow_London_Borough_Council&#34; title=&#34;Hounslow London Borough Council&#34;&gt; Hounslow London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; Hounslow House, 7 Bath Road &lt;/td&gt; &lt;td&gt; 21.61 &lt;/td&gt; &lt;td&gt; 262,407 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4746_N_0.368_W_region:GB_type:city&amp;amp;title=Hounslow&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°28′29″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°22′05″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4746°N 0.3680°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4746; -0.3680 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Hounslow &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 14 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Islington&#34; title=&#34;London Borough of Islington&#34;&gt; Islington &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Islington_London_Borough_Council&#34; title=&#34;Islington London Borough Council&#34;&gt; Islington London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Islington_Municipal_Offices&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Islington Municipal Offices (page does not exist)&#34;&gt; Municipal Offices &lt;/a&gt; , 222 Upper Street &lt;/td&gt; &lt;td&gt; 5.74 &lt;/td&gt; &lt;td&gt; 215,667 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5416_N_0.1022_W_region:GB_type:city&amp;amp;title=Islington&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°32′30″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°06′08″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5416°N 0.1022°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5416; -0.1022 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Islington &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 10 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Royal_Borough_of_Kensington_and_Chelsea&#34; title=&#34;Royal Borough of Kensington and Chelsea&#34;&gt; Kensington and Chelsea &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Royal_borough&#34; title=&#34;Royal borough&#34;&gt; Royal &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Kensington_and_Chelsea_London_Borough_Council&#34; title=&#34;Kensington and Chelsea London Borough Council&#34;&gt; Kensington and Chelsea London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt; Conservative &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Kensington_Town_Hall,_London&#34; title=&#34;Kensington Town Hall, London&#34;&gt; The Town Hall &lt;/a&gt; , &lt;a href=&#34;/wiki/Hornton_Street&#34; title=&#34;Hornton Street&#34;&gt; Hornton Street &lt;/a&gt; &lt;/td&gt; &lt;td&gt; 4.68 &lt;/td&gt; &lt;td&gt; 155,594 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.502_N_0.1947_W_region:GB_type:city&amp;amp;title=Kensington+and+Chelsea&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°30′07″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°11′41″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5020°N 0.1947°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5020; -0.1947 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Kensington and Chelsea &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Royal_Borough_of_Kingston_upon_Thames&#34; title=&#34;Royal Borough of Kingston upon Thames&#34;&gt; Kingston upon Thames &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Royal_borough&#34; title=&#34;Royal borough&#34;&gt; Royal &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Kingston_upon_Thames_London_Borough_Council&#34; title=&#34;Kingston upon Thames London Borough Council&#34;&gt; Kingston upon Thames London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Liberal_Democrats_(UK)&#34; title=&#34;Liberal Democrats (UK)&#34;&gt; Liberal Democrat &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Kingston_upon_Thames_Guildhall&#34; title=&#34;Kingston upon Thames Guildhall&#34;&gt; Guildhall &lt;/a&gt; , High Street &lt;/td&gt; &lt;td&gt; 14.38 &lt;/td&gt; &lt;td&gt; 166,793 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4085_N_0.3064_W_region:GB_type:city&amp;amp;title=Kingston+upon+Thames&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°24′31″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°18′23″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4085°N 0.3064°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4085; -0.3064 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Kingston upon Thames &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 16 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Lambeth&#34; title=&#34;London Borough of Lambeth&#34;&gt; Lambeth &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Lambeth_London_Borough_Council&#34; title=&#34;Lambeth London Borough Council&#34;&gt; Lambeth London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Lambeth_Town_Hall&#34; title=&#34;Lambeth Town Hall&#34;&gt; Lambeth Town Hall &lt;/a&gt; , Brixton Hill &lt;/td&gt; &lt;td&gt; 10.36 &lt;/td&gt; &lt;td&gt; 314,242 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4607_N_0.1163_W_region:GB_type:city&amp;amp;title=Lambeth&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°27′39″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°06′59″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4607°N 0.1163°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4607; -0.1163 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Lambeth &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 6 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Lewisham&#34; title=&#34;London Borough of Lewisham&#34;&gt; Lewisham &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Lewisham_London_Borough_Council&#34; title=&#34;Lewisham London Borough Council&#34;&gt; Lewisham London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Lewisham_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Lewisham Town Hall (page does not exist)&#34;&gt; Town Hall &lt;/a&gt; , 1 Catford Road &lt;/td&gt; &lt;td&gt; 13.57 &lt;/td&gt; &lt;td&gt; 286,180 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4452_N_0.0209_W_region:GB_type:city&amp;amp;title=Lewisham&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°26′43″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°01′15″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4452°N 0.0209°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4452; -0.0209 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Lewisham &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 21 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Merton&#34; title=&#34;London Borough of Merton&#34;&gt; Merton &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Merton_London_Borough_Council&#34; title=&#34;Merton London Borough Council&#34;&gt; Merton London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Merton_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Merton Civic Centre (page does not exist)&#34;&gt; Civic Centre &lt;/a&gt; , London Road &lt;/td&gt; &lt;td&gt; 14.52 &lt;/td&gt; &lt;td&gt; 203,223 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4014_N_0.1958_W_region:GB_type:city&amp;amp;title=Merton&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°24′05″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°11′45″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4014°N 0.1958°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4014; -0.1958 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Merton &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 17 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Newham&#34; title=&#34;London Borough of Newham&#34;&gt; Newham &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-note2_4-2&#34;&gt; &lt;a href=&#34;#cite_note-note2-4&#34;&gt; [note 3] &lt;/a&gt; &lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Newham_London_Borough_Council&#34; title=&#34;Newham London Borough Council&#34;&gt; Newham London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Newham_Dockside&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Newham Dockside (page does not exist)&#34;&gt; Newham Dockside &lt;/a&gt; , 1000 Dockside Road &lt;/td&gt; &lt;td&gt; 13.98 &lt;/td&gt; &lt;td&gt; 318,227 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5077_N_0.0469_E_region:GB_type:city&amp;amp;title=Newham&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°30′28″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°02′49″E &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5077°N 0.0469°E &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5077; 0.0469 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Newham &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 27 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Redbridge&#34; title=&#34;London Borough of Redbridge&#34;&gt; Redbridge &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Redbridge_London_Borough_Council&#34; title=&#34;Redbridge London Borough Council&#34;&gt; Redbridge London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Redbridge_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Redbridge Town Hall (page does not exist)&#34;&gt; Town Hall &lt;/a&gt; , 128-142 High Road &lt;/td&gt; &lt;td&gt; 21.78 &lt;/td&gt; &lt;td&gt; 288,272 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.559_N_0.0741_E_region:GB_type:city&amp;amp;title=Redbridge&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°33′32″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°04′27″E &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5590°N 0.0741°E &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5590; 0.0741 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Redbridge &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 26 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Richmond_upon_Thames&#34; title=&#34;London Borough of Richmond upon Thames&#34;&gt; Richmond upon Thames &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Richmond_upon_Thames_London_Borough_Council&#34; title=&#34;Richmond upon Thames London Borough Council&#34;&gt; Richmond upon Thames London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Liberal_Democrats_(UK)&#34; title=&#34;Liberal Democrats (UK)&#34;&gt; Liberal Democrat &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Richmond_upon_Thames_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Richmond upon Thames Civic Centre (page does not exist)&#34;&gt; Civic Centre &lt;/a&gt; , 44 York Street &lt;/td&gt; &lt;td&gt; 22.17 &lt;/td&gt; &lt;td&gt; 191,365 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4479_N_0.326_W_region:GB_type:city&amp;amp;title=Richmond+upon+Thames&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°26′52″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°19′34″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4479°N 0.3260°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4479; -0.3260 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Richmond upon Thames &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 15 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Southwark&#34; title=&#34;London Borough of Southwark&#34;&gt; Southwark &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Southwark_London_Borough_Council&#34; title=&#34;Southwark London Borough Council&#34;&gt; Southwark London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=160_Tooley_Street&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;160 Tooley Street (page does not exist)&#34;&gt; 160 Tooley Street &lt;/a&gt; &lt;/td&gt; &lt;td&gt; 11.14 &lt;/td&gt; &lt;td&gt; 298,464 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5035_N_0.0804_W_region:GB_type:city&amp;amp;title=Southwark&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°30′13″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°04′49″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5035°N 0.0804°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5035; -0.0804 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Southwark &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 7 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Sutton&#34; title=&#34;London Borough of Sutton&#34;&gt; Sutton &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Sutton_London_Borough_Council&#34; title=&#34;Sutton London Borough Council&#34;&gt; Sutton London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Liberal_Democrats_(UK)&#34; title=&#34;Liberal Democrats (UK)&#34;&gt; Liberal Democrat &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Sutton_Civic_Offices&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Sutton Civic Offices (page does not exist)&#34;&gt; Civic Offices &lt;/a&gt; , St Nicholas Way &lt;/td&gt; &lt;td&gt; 16.93 &lt;/td&gt; &lt;td&gt; 195,914 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.3618_N_0.1945_W_region:GB_type:city&amp;amp;title=Sutton&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°21′42″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°11′40″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.3618°N 0.1945°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.3618; -0.1945 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Sutton &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 18 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Tower_Hamlets&#34; title=&#34;London Borough of Tower Hamlets&#34;&gt; Tower Hamlets &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Tower_Hamlets_London_Borough_Council&#34; title=&#34;Tower Hamlets London Borough Council&#34;&gt; Tower Hamlets London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Tower_Hamlets_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Tower Hamlets Town Hall (page does not exist)&#34;&gt; Town Hall &lt;/a&gt; , Mulberry Place, 5 Clove Crescent &lt;/td&gt; &lt;td&gt; 7.63 &lt;/td&gt; &lt;td&gt; 272,890 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5099_N_0.0059_W_region:GB_type:city&amp;amp;title=Tower+Hamlets&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°30′36″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°00′21″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5099°N 0.0059°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5099; -0.0059 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Tower Hamlets &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 8 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Waltham_Forest&#34; title=&#34;London Borough of Waltham Forest&#34;&gt; Waltham Forest &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Waltham_Forest_London_Borough_Council&#34; title=&#34;Waltham Forest London Borough Council&#34;&gt; Waltham Forest London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt; Labour &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Waltham_Forest_Town_Hall&#34; title=&#34;Waltham Forest Town Hall&#34;&gt; Waltham Forest Town Hall &lt;/a&gt; , Forest Road &lt;/td&gt; &lt;td&gt; 14.99 &lt;/td&gt; &lt;td&gt; 265,797 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5908_N_0.0134_W_region:GB_type:city&amp;amp;title=Waltham+Forest&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°35′27″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°00′48″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5908°N 0.0134°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5908; -0.0134 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Waltham Forest &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 28 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/London_Borough_of_Wandsworth&#34; title=&#34;London Borough of Wandsworth&#34;&gt; Wandsworth &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Wandsworth_London_Borough_Council&#34; title=&#34;Wandsworth London Borough Council&#34;&gt; Wandsworth London Borough Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt; Conservative &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Wandsworth_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Wandsworth Town Hall (page does not exist)&#34;&gt; The Town Hall &lt;/a&gt; , &lt;a href=&#34;/wiki/Wandsworth_High_Street&#34; title=&#34;Wandsworth High Street&#34;&gt; Wandsworth High Street &lt;/a&gt; &lt;/td&gt; &lt;td&gt; 13.23 &lt;/td&gt; &lt;td&gt; 310,516 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4567_N_0.191_W_region:GB_type:city&amp;amp;title=Wandsworth&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°27′24″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°11′28″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4567°N 0.1910°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4567; -0.1910 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Wandsworth &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 5 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/City_of_Westminster&#34; title=&#34;City of Westminster&#34;&gt; Westminster &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/City_status_in_the_United_Kingdom&#34; title=&#34;City status in the United Kingdom&#34;&gt; City &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Westminster_City_Council&#34; title=&#34;Westminster City Council&#34;&gt; Westminster City Council &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt; Conservative &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Westminster_City_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Westminster City Hall (page does not exist)&#34;&gt; Westminster City Hall &lt;/a&gt; , 64 Victoria Street &lt;/td&gt; &lt;td&gt; 8.29 &lt;/td&gt; &lt;td&gt; 226,841 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4973_N_0.1372_W_region:GB_type:city&amp;amp;title=Westminster&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°29′50″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°08′14″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.4973°N 0.1372°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.4973; -0.1372 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; Westminster &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2&gt; &lt;span class=&#34;mw-headline&#34; id=&#34;City_of_London&#34;&gt; City of London &lt;/span&gt; &lt;span class=&#34;mw-editsection&#34;&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; [ &lt;/span&gt; &lt;a href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&amp;amp;section=2&#34; title=&#34;Edit section: City of London&#34;&gt; edit &lt;/a&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; ] &lt;/span&gt; &lt;/span&gt; &lt;/h2&gt; &lt;p&gt; The &lt;a href=&#34;/wiki/City_of_London&#34; title=&#34;City of London&#34;&gt; City of London &lt;/a&gt; is the 33rd principal division of Greater London but it is not a London borough. &lt;/p&gt; &lt;table class=&#34;wikitable sortable&#34; style=&#34;font-size:95%&#34; width=&#34;100%&#34;&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th width=&#34;100px&#34;&gt; Borough &lt;/th&gt; &lt;th&gt; Inner &lt;/th&gt; &lt;th width=&#34;100px&#34;&gt; Status &lt;/th&gt; &lt;th&gt; Local authority &lt;/th&gt; &lt;th&gt; Political control &lt;/th&gt; &lt;th width=&#34;120px&#34;&gt; Headquarters &lt;/th&gt; &lt;th&gt; Area (sq mi) &lt;/th&gt; &lt;th&gt; Population &lt;br/&gt; (2011 est) &lt;/th&gt; &lt;th width=&#34;20px&#34;&gt; Co-ordinates &lt;/th&gt; &lt;th&gt; &lt;span style=&#34;background:#67BCD3&#34;&gt; Nr. in &lt;br/&gt; map &lt;/span&gt; &lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&#34;/wiki/City_of_London&#34; title=&#34;City of London&#34;&gt; City of London &lt;/a&gt; &lt;/td&gt; &lt;td&gt; ( &lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt; &lt;span style=&#34;display:none&#34;&gt; Y &lt;/span&gt; ) &lt;br/&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-6&#34;&gt; &lt;a href=&#34;#cite_note-6&#34;&gt; [note 5] &lt;/a&gt; &lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;i&gt; &lt;a href=&#34;/wiki/Sui_generis&#34; title=&#34;Sui generis&#34;&gt; Sui generis &lt;/a&gt; &lt;/i&gt; ; &lt;br/&gt; &lt;a href=&#34;/wiki/City_status_in_the_United_Kingdom&#34; title=&#34;City status in the United Kingdom&#34;&gt; City &lt;/a&gt; ; &lt;br/&gt; &lt;a href=&#34;/wiki/Ceremonial_counties_of_England&#34; title=&#34;Ceremonial counties of England&#34;&gt; Ceremonial county &lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Corporation_of_London&#34; title=&#34;Corporation of London&#34;&gt; Corporation of London &lt;/a&gt; ; &lt;br/&gt; &lt;a href=&#34;/wiki/Inner_Temple&#34; title=&#34;Inner Temple&#34;&gt; Inner Temple &lt;/a&gt; ; &lt;br/&gt; &lt;a href=&#34;/wiki/Middle_Temple&#34; title=&#34;Middle Temple&#34;&gt; Middle Temple &lt;/a&gt; &lt;/td&gt; &lt;td&gt; ? &lt;/td&gt; &lt;td&gt; &lt;a href=&#34;/wiki/Guildhall,_London&#34; title=&#34;Guildhall, London&#34;&gt; Guildhall &lt;/a&gt; &lt;/td&gt; &lt;td&gt; 1.12 &lt;/td&gt; &lt;td&gt; 7,000 &lt;/td&gt; &lt;td&gt; &lt;span class=&#34;plainlinks nourlexpansion&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5155_N_0.0922_W_region:GB_type:city&amp;amp;title=City+of+London&#34;&gt; &lt;span class=&#34;geo-nondefault&#34;&gt; &lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; &lt;span class=&#34;latitude&#34;&gt; 51°30′56″N &lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt; 0°05′32″W &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;span class=&#34;geo-multi-punct&#34;&gt; ﻿ / ﻿ &lt;/span&gt; &lt;span class=&#34;geo-default&#34;&gt; &lt;span class=&#34;vcard&#34;&gt; &lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt; 51.5155°N 0.0922°W &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ / &lt;span class=&#34;geo&#34;&gt; 51.5155; -0.0922 &lt;/span&gt; &lt;/span&gt; &lt;span style=&#34;display:none&#34;&gt; ﻿ ( &lt;span class=&#34;fn org&#34;&gt; City of London &lt;/span&gt; ) &lt;/span&gt; &lt;/span&gt; &lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;table class=&#34;noprint infobox&#34; id=&#34;GeoGroup&#34; style=&#34;width: 23em; font-size: 88%; line-height: 1.5em&#34;&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;b&gt; Map all coordinates using: &lt;/b&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/osm4wiki/cgi-bin/wiki/wiki-osm.pl?project=en&amp;amp;article=List_of_London_boroughs&#34;&gt; OpenStreetMap &lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;b&gt; Download coordinates as: &lt;/b&gt; &lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/kmlexport?article=List_of_London_boroughs&#34;&gt; KML &lt;/a&gt; &lt;b&gt; · &lt;/b&gt; &lt;a class=&#34;external text&#34; href=&#34;http://tripgang.com/kml2gpx/http%3A%2F%2Ftools.wmflabs.org%2Fkmlexport%3Farticle%3DList_of_London_boroughs?gpx=1&#34; rel=&#34;nofollow&#34;&gt; GPX &lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2&gt; &lt;span class=&#34;mw-headline&#34; id=&#34;See_also&#34;&gt; See also &lt;/span&gt; &lt;span class=&#34;mw-editsection&#34;&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; [ &lt;/span&gt; &lt;a href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&amp;amp;section=3&#34; title=&#34;Edit section: See also&#34;&gt; edit &lt;/a&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; ] &lt;/span&gt; &lt;/span&gt; &lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Political_make-up_of_London_borough_councils&#34; title=&#34;Political make-up of London borough councils&#34;&gt; Political make-up of London borough councils &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/List_of_areas_of_London&#34; title=&#34;List of areas of London&#34;&gt; List of areas of London &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Subdivisions_of_England&#34; title=&#34;Subdivisions of England&#34;&gt; Subdivisions of England &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2&gt; &lt;span class=&#34;mw-headline&#34; id=&#34;Notes&#34;&gt; Notes &lt;/span&gt; &lt;span class=&#34;mw-editsection&#34;&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; [ &lt;/span&gt; &lt;a href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&amp;amp;section=4&#34; title=&#34;Edit section: Notes&#34;&gt; edit &lt;/a&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; ] &lt;/span&gt; &lt;/span&gt; &lt;/h2&gt; &lt;div class=&#34;reflist&#34; style=&#34;list-style-type: decimal;&#34;&gt; &lt;div class=&#34;mw-references-wrap&#34;&gt; &lt;ol class=&#34;references&#34;&gt; &lt;li id=&#34;cite_note-2&#34;&gt; &lt;span class=&#34;mw-cite-backlink&#34;&gt; &lt;b&gt; &lt;a href=&#34;#cite_ref-2&#34;&gt; ^ &lt;/a&gt; &lt;/b&gt; &lt;/span&gt; &lt;span class=&#34;reference-text&#34;&gt; Renamed from London Borough of Barking 1 January 1980. &lt;cite class=&#34;citation magazine&#34; id=&#34;CITEREFGazette48021&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;https://www.thegazette.co.uk/London/issue/48021/page/15280&#34; rel=&#34;nofollow&#34;&gt; &#34;No. 48021&#34; &lt;/a&gt; . &lt;i&gt; &lt;a href=&#34;/wiki/The_London_Gazette&#34; title=&#34;The London Gazette&#34;&gt; The London Gazette &lt;/a&gt; &lt;/i&gt; . 4 December 1979. p. 15280. &lt;/cite&gt; &lt;span class=&#34;Z3988&#34; title=&#34;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=The+London+Gazette&amp;amp;rft.atitle=No.+48021&amp;amp;rft.pages=15280&amp;amp;rft.date=1979-12-04&amp;amp;rft_id=https%3A%2F%2Fwww.thegazette.co.uk%2FLondon%2Fissue%2F48021%2Fpage%2F15280&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AList+of+London+boroughs&#34;/&gt; &lt;style data-mw-deduplicate=&#34;TemplateStyles:r935243608&#34;&gt; .mw-parser-output cite.citation{font-style:inherit}.mw-parser-output .citation q{quotes:&#34; &#34;&#34;&#34; &#34;&#34;&#34;&#39;&#34;&#34;&#39;&#34;}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url(&#34;//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png&#34;)no-repeat;background-position:right .1em center}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url(&#34;//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png&#34;)no-repeat;background-position:right .1em center}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url(&#34;//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png&#34;)no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-ws-icon a{background:url(&#34;//upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Wikisource-logo.svg/12px-Wikisource-logo.svg.png&#34;)no-repeat;background-position:right .1em center}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-maint{display:none;color:#33aa33;margin-left:0.3em}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em} &lt;/style&gt; &lt;/span&gt; &lt;/li&gt; &lt;li id=&#34;cite_note-3&#34;&gt; &lt;span class=&#34;mw-cite-backlink&#34;&gt; &lt;b&gt; &lt;a href=&#34;#cite_ref-3&#34;&gt; ^ &lt;/a&gt; &lt;/b&gt; &lt;/span&gt; &lt;span class=&#34;reference-text&#34;&gt; Royal borough from 2012 &lt;/span&gt; &lt;/li&gt; &lt;li id=&#34;cite_note-note2-4&#34;&gt; &lt;span class=&#34;mw-cite-backlink&#34;&gt; ^ &lt;a href=&#34;#cite_ref-note2_4-0&#34;&gt; &lt;sup&gt; &lt;i&gt; &lt;b&gt; a &lt;/b&gt; &lt;/i&gt; &lt;/sup&gt; &lt;/a&gt; &lt;a href=&#34;#cite_ref-note2_4-1&#34;&gt; &lt;sup&gt; &lt;i&gt; &lt;b&gt; b &lt;/b&gt; &lt;/i&gt; &lt;/sup&gt; &lt;/a&gt; &lt;a href=&#34;#cite_ref-note2_4-2&#34;&gt; &lt;sup&gt; &lt;i&gt; &lt;b&gt; c &lt;/b&gt; &lt;/i&gt; &lt;/sup&gt; &lt;/a&gt; &lt;/span&gt; &lt;span class=&#34;reference-text&#34;&gt; Haringey and Newham are Inner London for statistics; Greenwich is Outer London for statistics &lt;/span&gt; &lt;/li&gt; &lt;li id=&#34;cite_note-5&#34;&gt; &lt;span class=&#34;mw-cite-backlink&#34;&gt; &lt;b&gt; &lt;a href=&#34;#cite_ref-5&#34;&gt; ^ &lt;/a&gt; &lt;/b&gt; &lt;/span&gt; &lt;span class=&#34;reference-text&#34;&gt; Renamed from London Borough of Hammersmith 1 April 1979. &lt;cite class=&#34;citation magazine&#34; id=&#34;CITEREFGazette47771&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;https://www.thegazette.co.uk/London/issue/47771/page/2095&#34; rel=&#34;nofollow&#34;&gt; &#34;No. 47771&#34; &lt;/a&gt; . &lt;i&gt; &lt;a href=&#34;/wiki/The_London_Gazette&#34; title=&#34;The London Gazette&#34;&gt; The London Gazette &lt;/a&gt; &lt;/i&gt; . 13 February 1979. p. 2095. &lt;/cite&gt; &lt;span class=&#34;Z3988&#34; title=&#34;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=The+London+Gazette&amp;amp;rft.atitle=No.+47771&amp;amp;rft.pages=2095&amp;amp;rft.date=1979-02-13&amp;amp;rft_id=https%3A%2F%2Fwww.thegazette.co.uk%2FLondon%2Fissue%2F47771%2Fpage%2F2095&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AList+of+London+boroughs&#34;/&gt; &lt;link href=&#34;mw-data:TemplateStyles:r935243608&#34; rel=&#34;mw-deduplicated-inline-style&#34;/&gt; &lt;/span&gt; &lt;/li&gt; &lt;li id=&#34;cite_note-6&#34;&gt; &lt;span class=&#34;mw-cite-backlink&#34;&gt; &lt;b&gt; &lt;a href=&#34;#cite_ref-6&#34;&gt; ^ &lt;/a&gt; &lt;/b&gt; &lt;/span&gt; &lt;span class=&#34;reference-text&#34;&gt; The City of London was not part of the &lt;a href=&#34;/wiki/County_of_London&#34; title=&#34;County of London&#34;&gt; County of London &lt;/a&gt; and is not a London Borough but can be counted to &lt;a href=&#34;/wiki/Inner_London&#34; title=&#34;Inner London&#34;&gt; Inner London &lt;/a&gt; . &lt;/span&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2&gt; &lt;span class=&#34;mw-headline&#34; id=&#34;References&#34;&gt; References &lt;/span&gt; &lt;span class=&#34;mw-editsection&#34;&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; [ &lt;/span&gt; &lt;a href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&amp;amp;section=5&#34; title=&#34;Edit section: References&#34;&gt; edit &lt;/a&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; ] &lt;/span&gt; &lt;/span&gt; &lt;/h2&gt; &lt;div class=&#34;reflist&#34; style=&#34;list-style-type: decimal;&#34;&gt; &lt;div class=&#34;mw-references-wrap&#34;&gt; &lt;ol class=&#34;references&#34;&gt; &lt;li id=&#34;cite_note-1&#34;&gt; &lt;span class=&#34;mw-cite-backlink&#34;&gt; &lt;b&gt; &lt;a href=&#34;#cite_ref-1&#34;&gt; ^ &lt;/a&gt; &lt;/b&gt; &lt;/span&gt; &lt;span class=&#34;reference-text&#34;&gt; &lt;cite class=&#34;citation web&#34;&gt; ONS (2 July 2010). &lt;a class=&#34;external text&#34; href=&#34;https://webarchive.nationalarchives.gov.uk/20160107070948/http://www.ons.gov.uk/ons/publications/re-reference-tables.html&#34; rel=&#34;nofollow&#34;&gt; &#34;Release Edition Reference Tables&#34; &lt;/a&gt; . &lt;i&gt; Webarchive.nationalarchives.gov.uk &lt;/i&gt; &lt;span class=&#34;reference-accessdate&#34;&gt; . Retrieved &lt;span class=&#34;nowrap&#34;&gt; 5 February &lt;/span&gt; 2019 &lt;/span&gt; . &lt;/cite&gt; &lt;span class=&#34;Z3988&#34; title=&#34;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=unknown&amp;amp;rft.jtitle=Webarchive.nationalarchives.gov.uk&amp;amp;rft.atitle=Release+Edition+Reference+Tables&amp;amp;rft.date=2010-07-02&amp;amp;rft.au=ONS&amp;amp;rft_id=https%3A%2F%2Fwebarchive.nationalarchives.gov.uk%2F20160107070948%2Fhttp%3A%2F%2Fwww.ons.gov.uk%2Fons%2Fpublications%2Fre-reference-tables.html&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AList+of+London+boroughs&#34;/&gt; &lt;link href=&#34;mw-data:TemplateStyles:r935243608&#34; rel=&#34;mw-deduplicated-inline-style&#34;/&gt; &lt;/span&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2&gt; &lt;span class=&#34;mw-headline&#34; id=&#34;External_links&#34;&gt; External links &lt;/span&gt; &lt;span class=&#34;mw-editsection&#34;&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; [ &lt;/span&gt; &lt;a href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&amp;amp;section=6&#34; title=&#34;Edit section: External links&#34;&gt; edit &lt;/a&gt; &lt;span class=&#34;mw-editsection-bracket&#34;&gt; ] &lt;/span&gt; &lt;/span&gt; &lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;a class=&#34;external text&#34; href=&#34;https://web.archive.org/web/20101010011530/http://londoncouncils.gov.uk/londonlocalgovernment/londonboroughs.htm&#34; rel=&#34;nofollow&#34;&gt; London Councils: List of inner/outer London boroughs &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&#34;external text&#34; href=&#34;http://londonboroughsmap.co.uk/&#34; rel=&#34;nofollow&#34;&gt; London Boroughs Map &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div aria-labelledby=&#34;Governance_of_Greater_London&#34; class=&#34;navbox&#34; role=&#34;navigation&#34; style=&#34;padding:3px&#34;&gt; &lt;table class=&#34;nowraplinks hlist mw-collapsible mw-collapsed navbox-inner&#34; style=&#34;border-spacing:0;background:transparent;color:inherit&#34;&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th class=&#34;navbox-title&#34; colspan=&#34;2&#34; scope=&#34;col&#34;&gt; &lt;div class=&#34;plainlinks hlist navbar mini&#34;&gt; &lt;ul&gt; &lt;li class=&#34;nv-view&#34;&gt; &lt;a href=&#34;/wiki/Template:Governance_of_Greater_London&#34; title=&#34;Template:Governance of Greater London&#34;&gt; &lt;abbr style=&#34;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none; padding:0;&#34; title=&#34;View this template&#34;&gt; v &lt;/abbr&gt; &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;nv-talk&#34;&gt; &lt;a href=&#34;/wiki/Template_talk:Governance_of_Greater_London&#34; title=&#34;Template talk:Governance of Greater London&#34;&gt; &lt;abbr style=&#34;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none; padding:0;&#34; title=&#34;Discuss this template&#34;&gt; t &lt;/abbr&gt; &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;nv-edit&#34;&gt; &lt;a class=&#34;external text&#34; href=&#34;https://en.wikipedia.org/w/index.php?title=Template:Governance_of_Greater_London&amp;amp;action=edit&#34;&gt; &lt;abbr style=&#34;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none; padding:0;&#34; title=&#34;Edit this template&#34;&gt; e &lt;/abbr&gt; &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div id=&#34;Governance_of_Greater_London&#34; style=&#34;font-size:114%;margin:0 4em&#34;&gt; Governance of &lt;a href=&#34;/wiki/Greater_London&#34; title=&#34;Greater London&#34;&gt; Greater London &lt;/a&gt; &lt;/div&gt; &lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class=&#34;navbox-abovebelow&#34; colspan=&#34;2&#34;&gt; &lt;div id=&#34;*_City_of_London&amp;amp;#10;*_London&#34;&gt; &lt;ul&gt; &lt;li&gt; &lt;a href=&#34;/wiki/City_of_London&#34; title=&#34;City of London&#34;&gt; City of London &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London&#34; title=&#34;London&#34;&gt; London &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th class=&#34;navbox-group&#34; scope=&#34;row&#34; style=&#34;width:1%&#34;&gt; Regional &lt;/th&gt; &lt;td class=&#34;navbox-list navbox-odd&#34; style=&#34;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&#34;&gt; &lt;div style=&#34;padding:0em 0.25em&#34;&gt; &lt;ul&gt; &lt;li&gt; &lt;b&gt; &lt;a href=&#34;/wiki/Greater_London_Authority&#34; title=&#34;Greater London Authority&#34;&gt; Greater London Authority &lt;/a&gt; : &lt;/b&gt; &lt;a href=&#34;/wiki/London_Assembly&#34; title=&#34;London Assembly&#34;&gt; London Assembly &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Mayor_of_London&#34; title=&#34;Mayor of London&#34;&gt; Mayor of London &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th class=&#34;navbox-group&#34; scope=&#34;row&#34; style=&#34;width:1%&#34;&gt; &lt;a href=&#34;/wiki/London_boroughs&#34; title=&#34;London boroughs&#34;&gt; Boroughs &lt;/a&gt; &lt;br/&gt; ( &lt;a class=&#34;mw-selflink selflink&#34;&gt; list &lt;/a&gt; ) &lt;/th&gt; &lt;td class=&#34;navbox-list navbox-even&#34; style=&#34;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&#34;&gt; &lt;div style=&#34;padding:0em 0.25em&#34;&gt; &lt;ul&gt; &lt;li&gt; &lt;b&gt; &lt;a href=&#34;/wiki/London_Councils&#34; title=&#34;London Councils&#34;&gt; London Councils &lt;/a&gt; : &lt;/b&gt; &lt;a href=&#34;/wiki/London_Borough_of_Barking_and_Dagenham&#34; title=&#34;London Borough of Barking and Dagenham&#34;&gt; Barking and Dagenham &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Barnet&#34; title=&#34;London Borough of Barnet&#34;&gt; Barnet &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Bexley&#34; title=&#34;London Borough of Bexley&#34;&gt; Bexley &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Brent&#34; title=&#34;London Borough of Brent&#34;&gt; Brent &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Bromley&#34; title=&#34;London Borough of Bromley&#34;&gt; Bromley &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Camden&#34; title=&#34;London Borough of Camden&#34;&gt; Camden &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Croydon&#34; title=&#34;London Borough of Croydon&#34;&gt; Croydon &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Ealing&#34; title=&#34;London Borough of Ealing&#34;&gt; Ealing &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Enfield&#34; title=&#34;London Borough of Enfield&#34;&gt; Enfield &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Royal_Borough_of_Greenwich&#34; title=&#34;Royal Borough of Greenwich&#34;&gt; Greenwich &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Hackney&#34; title=&#34;London Borough of Hackney&#34;&gt; Hackney &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Hammersmith_and_Fulham&#34; title=&#34;London Borough of Hammersmith and Fulham&#34;&gt; Hammersmith and Fulham &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Haringey&#34; title=&#34;London Borough of Haringey&#34;&gt; Haringey &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Harrow&#34; title=&#34;London Borough of Harrow&#34;&gt; Harrow &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Havering&#34; title=&#34;London Borough of Havering&#34;&gt; Havering &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Hillingdon&#34; title=&#34;London Borough of Hillingdon&#34;&gt; Hillingdon &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Hounslow&#34; title=&#34;London Borough of Hounslow&#34;&gt; Hounslow &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Islington&#34; title=&#34;London Borough of Islington&#34;&gt; Islington &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Royal_Borough_of_Kensington_and_Chelsea&#34; title=&#34;Royal Borough of Kensington and Chelsea&#34;&gt; Kensington and Chelsea &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Royal_Borough_of_Kingston_upon_Thames&#34; title=&#34;Royal Borough of Kingston upon Thames&#34;&gt; Kingston upon Thames &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Lambeth&#34; title=&#34;London Borough of Lambeth&#34;&gt; Lambeth &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Lewisham&#34; title=&#34;London Borough of Lewisham&#34;&gt; Lewisham &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Merton&#34; title=&#34;London Borough of Merton&#34;&gt; Merton &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Newham&#34; title=&#34;London Borough of Newham&#34;&gt; Newham &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Redbridge&#34; title=&#34;London Borough of Redbridge&#34;&gt; Redbridge &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Richmond_upon_Thames&#34; title=&#34;London Borough of Richmond upon Thames&#34;&gt; Richmond upon Thames &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Southwark&#34; title=&#34;London Borough of Southwark&#34;&gt; Southwark &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Sutton&#34; title=&#34;London Borough of Sutton&#34;&gt; Sutton &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Tower_Hamlets&#34; title=&#34;London Borough of Tower Hamlets&#34;&gt; Tower Hamlets &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Waltham_Forest&#34; title=&#34;London Borough of Waltham Forest&#34;&gt; Waltham Forest &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_Borough_of_Wandsworth&#34; title=&#34;London Borough of Wandsworth&#34;&gt; Wandsworth &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/City_of_Westminster&#34; title=&#34;City of Westminster&#34;&gt; Westminster &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th class=&#34;navbox-group&#34; scope=&#34;row&#34; style=&#34;width:1%&#34;&gt; Ceremonial &lt;/th&gt; &lt;td class=&#34;navbox-list navbox-odd&#34; style=&#34;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&#34;&gt; &lt;div style=&#34;padding:0em 0.25em&#34;&gt; &lt;ul&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Lord_Mayor_of_London&#34; title=&#34;Lord Mayor of London&#34;&gt; Lord Mayor of the City of London &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Lord_Lieutenant_of_Greater_London&#34; title=&#34;Lord Lieutenant of Greater London&#34;&gt; Lord Lieutenant of Greater London &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/High_Sheriff_of_Greater_London&#34; title=&#34;High Sheriff of Greater London&#34;&gt; High Sheriff of Greater London &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th class=&#34;navbox-group&#34; scope=&#34;row&#34; style=&#34;width:1%&#34;&gt; &lt;a href=&#34;/wiki/History_of_local_government_in_London&#34; title=&#34;History of local government in London&#34;&gt; Historical &lt;/a&gt; &lt;/th&gt; &lt;td class=&#34;navbox-list navbox-even&#34; style=&#34;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&#34;&gt; &lt;div style=&#34;padding:0em 0.25em&#34;&gt; &lt;ul&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Metropolitan_Board_of_Works&#34; title=&#34;Metropolitan Board of Works&#34;&gt; Metropolitan Board of Works &lt;/a&gt; &lt;span style=&#34;font-size:85%;&#34;&gt; (MBW) 1855–1889 &lt;/span&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/London_County_Council&#34; title=&#34;London County Council&#34;&gt; London County Council &lt;/a&gt; &lt;span style=&#34;font-size:85%;&#34;&gt; (LCC) 1889–1965 &lt;/span&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Greater_London_Council&#34; title=&#34;Greater London Council&#34;&gt; Greater London Council &lt;/a&gt; &lt;span style=&#34;font-size:85%;&#34;&gt; (GLC) 1965–1986 &lt;/span&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/List_of_heads_of_London_government&#34; title=&#34;List of heads of London government&#34;&gt; Leaders &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Sheriffs_of_the_City_of_London&#34; title=&#34;Sheriffs of the City of London&#34;&gt; Sheriffs of the City of London &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;!-- NewPP limit report Parsed by mw1330 Cached time: 20200311193737 Cache expiry: 2592000 Dynamic content: false Complications: [vary‐revision‐sha1] CPU time usage: 0.356 seconds Real time usage: 0.442 seconds Preprocessor visited node count: 5140/1000000 Post‐expand include size: 79370/2097152 bytes Template argument size: 1081/2097152 bytes Highest expansion depth: 13/40 Expensive parser function count: 2/500 Unstrip recursion depth: 1/20 Unstrip post‐expand size: 10566/5000000 bytes Number of Wikibase entities loaded: 0/400 Lua time usage: 0.109/10.000 seconds Lua memory usage: 3.11 MB/50 MB --&gt; &lt;!-- Transclusion expansion time report (%,ms,calls,template) 100.00% 301.212 1 -total 38.94% 117.279 2 Template:Reflist 32.47% 97.807 2 Template:London_Gazette 30.53% 91.950 2 Template:Cite_magazine 19.10% 57.526 33 Template:Coord 12.97% 39.078 1 Template:Use_dmy_dates 10.87% 32.731 33 Template:English_district_control 7.42% 22.349 1 Template:London 5.55% 16.731 2 Template:DMCA 5.23% 15.756 1 Template:Navbox --&gt; &lt;!-- Saved in parser cache with key enwiki:pcache:idhash:28092685-0!canonical and timestamp 20200311193736 and revision id 943613985 --&gt; &lt;/div&gt; &lt;noscript&gt; &lt;img alt=&#34;&#34; height=&#34;1&#34; src=&#34;//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1&#34; style=&#34;border: none; position: absolute;&#34; title=&#34;&#34; width=&#34;1&#34;/&gt; &lt;/noscript&gt; &lt;/div&gt; &lt;div class=&#34;printfooter&#34;&gt; Retrieved from &#34; &lt;a dir=&#34;ltr&#34; href=&#34;https://en.wikipedia.org/w/index.php?title=List_of_London_boroughs&amp;amp;oldid=943613985&#34;&gt; https://en.wikipedia.org/w/index.php?title=List_of_London_boroughs&amp;amp;oldid=943613985 &lt;/a&gt; &#34; &lt;/div&gt; &lt;div class=&#34;catlinks&#34; data-mw=&#34;interface&#34; id=&#34;catlinks&#34;&gt; &lt;div class=&#34;mw-normal-catlinks&#34; id=&#34;mw-normal-catlinks&#34;&gt; &lt;a href=&#34;/wiki/Help:Category&#34; title=&#34;Help:Category&#34;&gt; Categories &lt;/a&gt; : &lt;ul&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Category:London_boroughs&#34; title=&#34;Category:London boroughs&#34;&gt; London boroughs &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Category:Lists_of_places_in_London&#34; title=&#34;Category:Lists of places in London&#34;&gt; Lists of places in London &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&#34;mw-hidden-catlinks mw-hidden-cats-hidden&#34; id=&#34;mw-hidden-catlinks&#34;&gt; Hidden categories: &lt;ul&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Category:Use_dmy_dates_from_August_2015&#34; title=&#34;Category:Use dmy dates from August 2015&#34;&gt; Use dmy dates from August 2015 &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Category:Use_British_English_from_August_2015&#34; title=&#34;Category:Use British English from August 2015&#34;&gt; Use British English from August 2015 &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Category:Lists_of_coordinates&#34; title=&#34;Category:Lists of coordinates&#34;&gt; Lists of coordinates &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Category:Geographic_coordinate_lists&#34; title=&#34;Category:Geographic coordinate lists&#34;&gt; Geographic coordinate lists &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&#34;/wiki/Category:Articles_with_Geo&#34; title=&#34;Category:Articles with Geo&#34;&gt; Articles with Geo &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&#34;visualClear&#34;/&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=&#34;mw-data-after-content&#34;&gt; &lt;div class=&#34;read-more-container&#34;/&gt; &lt;/div&gt; &lt;div id=&#34;mw-navigation&#34;&gt; &lt;h2&gt; Navigation menu &lt;/h2&gt; &lt;div id=&#34;mw-head&#34;&gt; &lt;div aria-labelledby=&#34;p-personal-label&#34; class=&#34;&#34; id=&#34;p-personal&#34; role=&#34;navigation&#34;&gt; &lt;h3 id=&#34;p-personal-label&#34;&gt; Personal tools &lt;/h3&gt; &lt;ul&gt; &lt;li id=&#34;pt-anonuserpage&#34;&gt; Not logged in &lt;/li&gt; &lt;li id=&#34;pt-anontalk&#34;&gt; &lt;a accesskey=&#34;n&#34; href=&#34;/wiki/Special:MyTalk&#34; title=&#34;Discussion about edits from this IP address [n]&#34;&gt; Talk &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;pt-anoncontribs&#34;&gt; &lt;a accesskey=&#34;y&#34; href=&#34;/wiki/Special:MyContributions&#34; title=&#34;A list of edits made from this IP address [y]&#34;&gt; Contributions &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;pt-createaccount&#34;&gt; &lt;a href=&#34;/w/index.php?title=Special:CreateAccount&amp;amp;returnto=List+of+London+boroughs&#34; title=&#34;You are encouraged to create an account and log in; however, it is not mandatory&#34;&gt; Create account &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;pt-login&#34;&gt; &lt;a accesskey=&#34;o&#34; href=&#34;/w/index.php?title=Special:UserLogin&amp;amp;returnto=List+of+London+boroughs&#34; title=&#34;You&#39;re encouraged to log in; however, it&#39;s not mandatory. [o]&#34;&gt; Log in &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div id=&#34;left-navigation&#34;&gt; &lt;div aria-labelledby=&#34;p-namespaces-label&#34; class=&#34;vectorTabs &#34; id=&#34;p-namespaces&#34; role=&#34;navigation&#34;&gt; &lt;h3 id=&#34;p-namespaces-label&#34;&gt; Namespaces &lt;/h3&gt; &lt;ul&gt; &lt;li class=&#34;selected&#34; id=&#34;ca-nstab-main&#34;&gt; &lt;a accesskey=&#34;c&#34; href=&#34;/wiki/List_of_London_boroughs&#34; title=&#34;View the content page [c]&#34;&gt; Article &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;ca-talk&#34;&gt; &lt;a accesskey=&#34;t&#34; href=&#34;/wiki/Talk:List_of_London_boroughs&#34; rel=&#34;discussion&#34; title=&#34;Discussion about the content page [t]&#34;&gt; Talk &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div aria-labelledby=&#34;p-variants-label&#34; class=&#34;vectorMenu emptyPortlet&#34; id=&#34;p-variants&#34; role=&#34;navigation&#34;&gt; &lt;input aria-labelledby=&#34;p-variants-label&#34; class=&#34;vectorMenuCheckbox&#34; type=&#34;checkbox&#34;/&gt; &lt;h3 id=&#34;p-variants-label&#34;&gt; &lt;span&gt; Variants &lt;/span&gt; &lt;/h3&gt; &lt;ul class=&#34;menu&#34;&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=&#34;right-navigation&#34;&gt; &lt;div aria-labelledby=&#34;p-views-label&#34; class=&#34;vectorTabs &#34; id=&#34;p-views&#34; role=&#34;navigation&#34;&gt; &lt;h3 id=&#34;p-views-label&#34;&gt; Views &lt;/h3&gt; &lt;ul&gt; &lt;li class=&#34;collapsible selected&#34; id=&#34;ca-view&#34;&gt; &lt;a href=&#34;/wiki/List_of_London_boroughs&#34;&gt; Read &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;collapsible&#34; id=&#34;ca-edit&#34;&gt; &lt;a accesskey=&#34;e&#34; href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=edit&#34; title=&#34;Edit this page [e]&#34;&gt; Edit &lt;/a&gt; &lt;/li&gt; &lt;li class=&#34;collapsible&#34; id=&#34;ca-history&#34;&gt; &lt;a accesskey=&#34;h&#34; href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=history&#34; title=&#34;Past revisions of this page [h]&#34;&gt; View history &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div aria-labelledby=&#34;p-cactions-label&#34; class=&#34;vectorMenu emptyPortlet&#34; id=&#34;p-cactions&#34; role=&#34;navigation&#34;&gt; &lt;input aria-labelledby=&#34;p-cactions-label&#34; class=&#34;vectorMenuCheckbox&#34; type=&#34;checkbox&#34;/&gt; &lt;h3 id=&#34;p-cactions-label&#34;&gt; &lt;span&gt; More &lt;/span&gt; &lt;/h3&gt; &lt;ul class=&#34;menu&#34;&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div id=&#34;p-search&#34; role=&#34;search&#34;&gt; &lt;h3&gt; &lt;label for=&#34;searchInput&#34;&gt; Search &lt;/label&gt; &lt;/h3&gt; &lt;form action=&#34;/w/index.php&#34; id=&#34;searchform&#34;&gt; &lt;div id=&#34;simpleSearch&#34;&gt; &lt;input accesskey=&#34;f&#34; id=&#34;searchInput&#34; name=&#34;search&#34; placeholder=&#34;Search Wikipedia&#34; title=&#34;Search Wikipedia [f]&#34; type=&#34;search&#34;/&gt; &lt;input name=&#34;title&#34; type=&#34;hidden&#34; value=&#34;Special:Search&#34;/&gt; &lt;input class=&#34;searchButton mw-fallbackSearchButton&#34; id=&#34;mw-searchButton&#34; name=&#34;fulltext&#34; title=&#34;Search Wikipedia for this text&#34; type=&#34;submit&#34; value=&#34;Search&#34;/&gt; &lt;input class=&#34;searchButton&#34; id=&#34;searchButton&#34; name=&#34;go&#34; title=&#34;Go to a page with this exact name if it exists&#34; type=&#34;submit&#34; value=&#34;Go&#34;/&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=&#34;mw-panel&#34;&gt; &lt;div id=&#34;p-logo&#34; role=&#34;banner&#34;&gt; &lt;a class=&#34;mw-wiki-logo&#34; href=&#34;/wiki/Main_Page&#34; title=&#34;Visit the main page&#34;/&gt; &lt;/div&gt; &lt;div aria-labelledby=&#34;p-navigation-label&#34; class=&#34;portal&#34; id=&#34;p-navigation&#34; role=&#34;navigation&#34;&gt; &lt;h3 id=&#34;p-navigation-label&#34;&gt; Navigation &lt;/h3&gt; &lt;div class=&#34;body&#34;&gt; &lt;ul&gt; &lt;li id=&#34;n-mainpage-description&#34;&gt; &lt;a accesskey=&#34;z&#34; href=&#34;/wiki/Main_Page&#34; title=&#34;Visit the main page [z]&#34;&gt; Main page &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-contents&#34;&gt; &lt;a href=&#34;/wiki/Wikipedia:Contents&#34; title=&#34;Guides to browsing Wikipedia&#34;&gt; Contents &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-featuredcontent&#34;&gt; &lt;a href=&#34;/wiki/Wikipedia:Featured_content&#34; title=&#34;Featured content – the best of Wikipedia&#34;&gt; Featured content &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-currentevents&#34;&gt; &lt;a href=&#34;/wiki/Portal:Current_events&#34; title=&#34;Find background information on current events&#34;&gt; Current events &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-randompage&#34;&gt; &lt;a accesskey=&#34;x&#34; href=&#34;/wiki/Special:Random&#34; title=&#34;Load a random article [x]&#34;&gt; Random article &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-sitesupport&#34;&gt; &lt;a href=&#34;https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;amp;utm_medium=sidebar&amp;amp;utm_campaign=C13_en.wikipedia.org&amp;amp;uselang=en&#34; title=&#34;Support us&#34;&gt; Donate to Wikipedia &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-shoplink&#34;&gt; &lt;a href=&#34;//shop.wikimedia.org&#34; title=&#34;Visit the Wikipedia store&#34;&gt; Wikipedia store &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div aria-labelledby=&#34;p-interaction-label&#34; class=&#34;portal&#34; id=&#34;p-interaction&#34; role=&#34;navigation&#34;&gt; &lt;h3 id=&#34;p-interaction-label&#34;&gt; Interaction &lt;/h3&gt; &lt;div class=&#34;body&#34;&gt; &lt;ul&gt; &lt;li id=&#34;n-help&#34;&gt; &lt;a href=&#34;/wiki/Help:Contents&#34; title=&#34;Guidance on how to use and edit Wikipedia&#34;&gt; Help &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-aboutsite&#34;&gt; &lt;a href=&#34;/wiki/Wikipedia:About&#34; title=&#34;Find out about Wikipedia&#34;&gt; About Wikipedia &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-portal&#34;&gt; &lt;a href=&#34;/wiki/Wikipedia:Community_portal&#34; title=&#34;About the project, what you can do, where to find things&#34;&gt; Community portal &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-recentchanges&#34;&gt; &lt;a accesskey=&#34;r&#34; href=&#34;/wiki/Special:RecentChanges&#34; title=&#34;A list of recent changes in the wiki [r]&#34;&gt; Recent changes &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;n-contactpage&#34;&gt; &lt;a href=&#34;//en.wikipedia.org/wiki/Wikipedia:Contact_us&#34; title=&#34;How to contact Wikipedia&#34;&gt; Contact page &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div aria-labelledby=&#34;p-tb-label&#34; class=&#34;portal&#34; id=&#34;p-tb&#34; role=&#34;navigation&#34;&gt; &lt;h3 id=&#34;p-tb-label&#34;&gt; Tools &lt;/h3&gt; &lt;div class=&#34;body&#34;&gt; &lt;ul&gt; &lt;li id=&#34;t-whatlinkshere&#34;&gt; &lt;a accesskey=&#34;j&#34; href=&#34;/wiki/Special:WhatLinksHere/List_of_London_boroughs&#34; title=&#34;List of all English Wikipedia pages containing links to this page [j]&#34;&gt; What links here &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;t-recentchangeslinked&#34;&gt; &lt;a accesskey=&#34;k&#34; href=&#34;/wiki/Special:RecentChangesLinked/List_of_London_boroughs&#34; rel=&#34;nofollow&#34; title=&#34;Recent changes in pages linked from this page [k]&#34;&gt; Related changes &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;t-upload&#34;&gt; &lt;a accesskey=&#34;u&#34; href=&#34;/wiki/Wikipedia:File_Upload_Wizard&#34; title=&#34;Upload files [u]&#34;&gt; Upload file &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;t-specialpages&#34;&gt; &lt;a accesskey=&#34;q&#34; href=&#34;/wiki/Special:SpecialPages&#34; title=&#34;A list of all special pages [q]&#34;&gt; Special pages &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;t-permalink&#34;&gt; &lt;a href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;oldid=943613985&#34; title=&#34;Permanent link to this revision of the page&#34;&gt; Permanent link &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;t-info&#34;&gt; &lt;a href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;action=info&#34; title=&#34;More information about this page&#34;&gt; Page information &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;t-wikibase&#34;&gt; &lt;a accesskey=&#34;g&#34; href=&#34;https://www.wikidata.org/wiki/Special:EntityPage/Q6577004&#34; title=&#34;Link to connected data repository item [g]&#34;&gt; Wikidata item &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;t-cite&#34;&gt; &lt;a href=&#34;/w/index.php?title=Special:CiteThisPage&amp;amp;page=List_of_London_boroughs&amp;amp;id=943613985&#34; title=&#34;Information on how to cite this page&#34;&gt; Cite this page &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div aria-labelledby=&#34;p-coll-print_export-label&#34; class=&#34;portal&#34; id=&#34;p-coll-print_export&#34; role=&#34;navigation&#34;&gt; &lt;h3 id=&#34;p-coll-print_export-label&#34;&gt; Print/export &lt;/h3&gt; &lt;div class=&#34;body&#34;&gt; &lt;ul&gt; &lt;li id=&#34;coll-create_a_book&#34;&gt; &lt;a href=&#34;/w/index.php?title=Special:Book&amp;amp;bookcmd=book_creator&amp;amp;referer=List+of+London+boroughs&#34;&gt; Create a book &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;coll-download-as-rl&#34;&gt; &lt;a href=&#34;/w/index.php?title=Special:ElectronPdf&amp;amp;page=List+of+London+boroughs&amp;amp;action=show-download-screen&#34;&gt; Download as PDF &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;t-print&#34;&gt; &lt;a accesskey=&#34;p&#34; href=&#34;/w/index.php?title=List_of_London_boroughs&amp;amp;printable=yes&#34; title=&#34;Printable version of this page [p]&#34;&gt; Printable version &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div aria-labelledby=&#34;p-lang-label&#34; class=&#34;portal&#34; id=&#34;p-lang&#34; role=&#34;navigation&#34;&gt; &lt;h3 id=&#34;p-lang-label&#34;&gt; Languages &lt;/h3&gt; &lt;div class=&#34;body&#34;&gt; &lt;ul&gt; &lt;li class=&#34;interlanguage-link interwiki-ru&#34;&gt; &lt;a class=&#34;interlanguage-link-target&#34; href=&#34;https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BB%D0%BE%D0%BD%D0%B4%D0%BE%D0%BD%D1%81%D0%BA%D0%B8%D1%85_%D0%B1%D0%BE%D1%80%D0%BE&#34; hreflang=&#34;ru&#34; lang=&#34;ru&#34; title=&#34;Список лондонских боро – Russian&#34;&gt; Русский &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;after-portlet after-portlet-lang&#34;&gt; &lt;span class=&#34;wb-langlinks-edit wb-langlinks-link&#34;&gt; &lt;a class=&#34;wbc-editpage&#34; href=&#34;https://www.wikidata.org/wiki/Special:EntityPage/Q6577004#sitelinks-wikipedia&#34; title=&#34;Edit interlanguage links&#34;&gt; Edit links &lt;/a&gt; &lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=&#34;footer&#34; role=&#34;contentinfo&#34;&gt; &lt;ul class=&#34;&#34; id=&#34;footer-info&#34;&gt; &lt;li id=&#34;footer-info-lastmod&#34;&gt; This page was last edited on 2 March 2020, at 22:20 &lt;span class=&#34;anonymous-show&#34;&gt; (UTC) &lt;/span&gt; . &lt;/li&gt; &lt;li id=&#34;footer-info-copyright&#34;&gt; Text is available under the &lt;a href=&#34;//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License&#34; rel=&#34;license&#34;&gt; Creative Commons Attribution-ShareAlike License &lt;/a&gt; &lt;a href=&#34;//creativecommons.org/licenses/by-sa/3.0/&#34; rel=&#34;license&#34; style=&#34;display:none;&#34;/&gt; ; additional terms may apply. By using this site, you agree to the &lt;a href=&#34;//foundation.wikimedia.org/wiki/Terms_of_Use&#34;&gt; Terms of Use &lt;/a&gt; and &lt;a href=&#34;//foundation.wikimedia.org/wiki/Privacy_policy&#34;&gt; Privacy Policy &lt;/a&gt; . Wikipedia® is a registered trademark of the &lt;a href=&#34;//www.wikimediafoundation.org/&#34;&gt; Wikimedia Foundation, Inc. &lt;/a&gt; , a non-profit organization. &lt;/li&gt; &lt;/ul&gt; &lt;ul class=&#34;&#34; id=&#34;footer-places&#34;&gt; &lt;li id=&#34;footer-places-privacy&#34;&gt; &lt;a class=&#34;extiw&#34; href=&#34;https://foundation.wikimedia.org/wiki/Privacy_policy&#34; title=&#34;wmf:Privacy policy&#34;&gt; Privacy policy &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;footer-places-about&#34;&gt; &lt;a href=&#34;/wiki/Wikipedia:About&#34; title=&#34;Wikipedia:About&#34;&gt; About Wikipedia &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;footer-places-disclaimer&#34;&gt; &lt;a href=&#34;/wiki/Wikipedia:General_disclaimer&#34; title=&#34;Wikipedia:General disclaimer&#34;&gt; Disclaimers &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;footer-places-contact&#34;&gt; &lt;a href=&#34;//en.wikipedia.org/wiki/Wikipedia:Contact_us&#34;&gt; Contact Wikipedia &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;footer-places-developers&#34;&gt; &lt;a href=&#34;https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute&#34;&gt; Developers &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;footer-places-statslink&#34;&gt; &lt;a href=&#34;https://stats.wikimedia.org/#/en.wikipedia.org&#34;&gt; Statistics &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;footer-places-cookiestatement&#34;&gt; &lt;a href=&#34;https://foundation.wikimedia.org/wiki/Cookie_statement&#34;&gt; Cookie statement &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;footer-places-mobileview&#34;&gt; &lt;a class=&#34;noprint stopMobileRedirectToggle&#34; href=&#34;//en.m.wikipedia.org/w/index.php?title=List_of_London_boroughs&amp;amp;mobileaction=toggle_view_mobile&#34;&gt; Mobile view &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul class=&#34;noprint&#34; id=&#34;footer-icons&#34;&gt; &lt;li id=&#34;footer-copyrightico&#34;&gt; &lt;a href=&#34;https://wikimediafoundation.org/&#34;&gt; &lt;img alt=&#34;Wikimedia Foundation&#34; height=&#34;31&#34; src=&#34;/static/images/wikimedia-button.png&#34; srcset=&#34;/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x&#34; width=&#34;88&#34;/&gt; &lt;/a&gt; &lt;/li&gt; &lt;li id=&#34;footer-poweredbyico&#34;&gt; &lt;a href=&#34;https://www.mediawiki.org/&#34;&gt; &lt;img alt=&#34;Powered by MediaWiki&#34; height=&#34;31&#34; src=&#34;/static/images/poweredby_mediawiki_88x31.png&#34; srcset=&#34;/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x&#34; width=&#34;88&#34;/&gt; &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div style=&#34;clear: both;&#34;/&gt; &lt;/div&gt; &lt;script&gt; (RLQ=window.RLQ||[]).push(function(){mw.config.set({&#34;wgPageParseReport&#34;:{&#34;limitreport&#34;:{&#34;cputime&#34;:&#34;0.356&#34;,&#34;walltime&#34;:&#34;0.442&#34;,&#34;ppvisitednodes&#34;:{&#34;value&#34;:5140,&#34;limit&#34;:1000000},&#34;postexpandincludesize&#34;:{&#34;value&#34;:79370,&#34;limit&#34;:2097152},&#34;templateargumentsize&#34;:{&#34;value&#34;:1081,&#34;limit&#34;:2097152},&#34;expansiondepth&#34;:{&#34;value&#34;:13,&#34;limit&#34;:40},&#34;expensivefunctioncount&#34;:{&#34;value&#34;:2,&#34;limit&#34;:500},&#34;unstrip-depth&#34;:{&#34;value&#34;:1,&#34;limit&#34;:20},&#34;unstrip-size&#34;:{&#34;value&#34;:10566,&#34;limit&#34;:5000000},&#34;entityaccesscount&#34;:{&#34;value&#34;:0,&#34;limit&#34;:400},&#34;timingprofile&#34;:[&#34;100.00% 301.212 1 -total&#34;,&#34; 38.94% 117.279 2 Template:Reflist&#34;,&#34; 32.47% 97.807 2 Template:London_Gazette&#34;,&#34; 30.53% 91.950 2 Template:Cite_magazine&#34;,&#34; 19.10% 57.526 33 Template:Coord&#34;,&#34; 12.97% 39.078 1 Template:Use_dmy_dates&#34;,&#34; 10.87% 32.731 33 Template:English_district_control&#34;,&#34; 7.42% 22.349 1 Template:London&#34;,&#34; 5.55% 16.731 2 Template:DMCA&#34;,&#34; 5.23% 15.756 1 Template:Navbox&#34;]},&#34;scribunto&#34;:{&#34;limitreport-timeusage&#34;:{&#34;value&#34;:&#34;0.109&#34;,&#34;limit&#34;:&#34;10.000&#34;},&#34;limitreport-memusage&#34;:{&#34;value&#34;:3259903,&#34;limit&#34;:52428800}},&#34;cachereport&#34;:{&#34;origin&#34;:&#34;mw1330&#34;,&#34;timestamp&#34;:&#34;20200311193737&#34;,&#34;ttl&#34;:2592000,&#34;transientcontent&#34;:false}}});}); &lt;/script&gt; &lt;script type=&#34;application/ld+json&#34;&gt; {&#34;@context&#34;:&#34;https: / /schema.org&#34;,&#34;@type&#34;:&#34;Article&#34;,&#34;name&#34;:&#34;List of London boroughs&#34;,&#34;url&#34;:&#34;https: / /en.wikipedia.org /wiki /List_of_London_boroughs&#34;,&#34;sameAs&#34;:&#34;http: / /www.wikidata.org /entity /Q6577004&#34;,&#34;mainEntity&#34;:&#34;http: / /www.wikidata.org /entity /Q6577004&#34;,&#34;author&#34;:{&#34;@type&#34;:&#34;Organization&#34;,&#34;name&#34;:&#34;Contributors to Wikimedia projects&#34;},&#34;publisher&#34;:{&#34;@type&#34;:&#34;Organization&#34;,&#34;name&#34;:&#34;Wikimedia Foundation, Inc.&#34;,&#34;logo&#34;:{&#34;@type&#34;:&#34;ImageObject&#34;,&#34;url&#34;:&#34;https: / /www.wikimedia.org /static /images /wmf-hor-googpub.png&#34;}},&#34;datePublished&#34;:&#34;2010-07-20T07:28:35Z&#34;,&#34;dateModified&#34;:&#34;2020-03-02T22:20:38Z&#34;,&#34;headline&#34;:&#34;Wikimedia list article&#34;} &lt;/script&gt; &lt;script&gt; (RLQ=window.RLQ||[]).push(function(){mw.config.set({&#34;wgBackendResponseTime&#34;:100,&#34;wgHostname&#34;:&#34;mw1368&#34;});}); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . . Extract the raw table inside the webpage. . table = soup.find_all(&#39;table&#39;, {&#39;class&#39;:&#39;wikitable sortable&#39;}) print(table) . [&lt;table class=&#34;wikitable sortable&#34; style=&#34;font-size:100%&#34; width=&#34;100%&#34;&gt; &lt;tbody&gt;&lt;tr&gt; &lt;th&gt;Borough &lt;/th&gt; &lt;th&gt;Inner &lt;/th&gt; &lt;th&gt;Status &lt;/th&gt; &lt;th&gt;Local authority &lt;/th&gt; &lt;th&gt;Political control &lt;/th&gt; &lt;th&gt;Headquarters &lt;/th&gt; &lt;th&gt;Area (sq mi) &lt;/th&gt; &lt;th&gt;Population (2013 est)&lt;sup class=&#34;reference&#34; id=&#34;cite_ref-1&#34;&gt;&lt;a href=&#34;#cite_note-1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt; &lt;/th&gt; &lt;th&gt;Co-ordinates &lt;/th&gt; &lt;th&gt;&lt;span style=&#34;background:#67BCD3&#34;&gt; Nr. in map &lt;/span&gt; &lt;/th&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Barking_and_Dagenham&#34; title=&#34;London Borough of Barking and Dagenham&#34;&gt;Barking and Dagenham&lt;/a&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-2&#34;&gt;&lt;a href=&#34;#cite_note-2&#34;&gt;[note 1]&lt;/a&gt;&lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Barking_and_Dagenham_London_Borough_Council&#34; title=&#34;Barking and Dagenham London Borough Council&#34;&gt;Barking and Dagenham London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Barking_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Barking Town Hall (page does not exist)&#34;&gt;Town Hall&lt;/a&gt;, 1 Town Square &lt;/td&gt; &lt;td&gt;13.93 &lt;/td&gt; &lt;td&gt;194,352 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5607_N_0.1557_E_region:GB_type:city&amp;amp;title=Barking+and+Dagenham&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°33′39″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°09′21″E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5607°N 0.1557°E&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5607; 0.1557&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Barking and Dagenham&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;25 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Barnet&#34; title=&#34;London Borough of Barnet&#34;&gt;Barnet&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Barnet_London_Borough_Council&#34; title=&#34;Barnet London Borough Council&#34;&gt;Barnet London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt;Conservative&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=North_London_Business_Park&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;North London Business Park (page does not exist)&#34;&gt;North London Business Park&lt;/a&gt;, Oakleigh Road South &lt;/td&gt; &lt;td&gt;33.49 &lt;/td&gt; &lt;td&gt;369,088 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.6252_N_0.1517_W_region:GB_type:city&amp;amp;title=Barnet&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°37′31″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°09′06″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.6252°N 0.1517°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.6252; -0.1517&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Barnet&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;31 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Bexley&#34; title=&#34;London Borough of Bexley&#34;&gt;Bexley&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Bexley_London_Borough_Council&#34; title=&#34;Bexley London Borough Council&#34;&gt;Bexley London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt;Conservative&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Civic_Offices&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Civic Offices (page does not exist)&#34;&gt;Civic Offices&lt;/a&gt;, 2 Watling Street &lt;/td&gt; &lt;td&gt;23.38 &lt;/td&gt; &lt;td&gt;236,687 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4549_N_0.1505_E_region:GB_type:city&amp;amp;title=Bexley&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°27′18″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°09′02″E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4549°N 0.1505°E&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4549; 0.1505&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Bexley&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;23 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Brent&#34; title=&#34;London Borough of Brent&#34;&gt;Brent&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Brent_London_Borough_Council&#34; title=&#34;Brent London Borough Council&#34;&gt;Brent London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Brent_Civic_Centre&#34; title=&#34;Brent Civic Centre&#34;&gt;Brent Civic Centre&lt;/a&gt;, Engineers Way &lt;/td&gt; &lt;td&gt;16.70 &lt;/td&gt; &lt;td&gt;317,264 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5588_N_0.2817_W_region:GB_type:city&amp;amp;title=Brent&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°33′32″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°16′54″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5588°N 0.2817°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5588; -0.2817&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Brent&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;12 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Bromley&#34; title=&#34;London Borough of Bromley&#34;&gt;Bromley&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Bromley_London_Borough_Council&#34; title=&#34;Bromley London Borough Council&#34;&gt;Bromley London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt;Conservative&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Bromley_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Bromley Civic Centre (page does not exist)&#34;&gt;Civic Centre&lt;/a&gt;, Stockwell Close &lt;/td&gt; &lt;td&gt;57.97 &lt;/td&gt; &lt;td&gt;317,899 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4039_N_0.0198_E_region:GB_type:city&amp;amp;title=Bromley&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°24′14″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°01′11″E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4039°N 0.0198°E&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4039; 0.0198&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Bromley&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;20 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Camden&#34; title=&#34;London Borough of Camden&#34;&gt;Camden&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Camden_London_Borough_Council&#34; title=&#34;Camden London Borough Council&#34;&gt;Camden London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Camden_Town_Hall&#34; title=&#34;Camden Town Hall&#34;&gt;Camden Town Hall&lt;/a&gt;, Judd Street &lt;/td&gt; &lt;td&gt;8.40 &lt;/td&gt; &lt;td&gt;229,719 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.529_N_0.1255_W_region:GB_type:city&amp;amp;title=Camden&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°31′44″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°07′32″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5290°N 0.1255°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5290; -0.1255&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Camden&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;11 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Croydon&#34; title=&#34;London Borough of Croydon&#34;&gt;Croydon&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Croydon_London_Borough_Council&#34; title=&#34;Croydon London Borough Council&#34;&gt;Croydon London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Bernard_Weatherill_House&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Bernard Weatherill House (page does not exist)&#34;&gt;Bernard Weatherill House&lt;/a&gt;, Mint Walk &lt;/td&gt; &lt;td&gt;33.41 &lt;/td&gt; &lt;td&gt;372,752 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.3714_N_0.0977_W_region:GB_type:city&amp;amp;title=Croydon&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°22′17″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°05′52″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.3714°N 0.0977°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.3714; -0.0977&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Croydon&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;19 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Ealing&#34; title=&#34;London Borough of Ealing&#34;&gt;Ealing&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Ealing_London_Borough_Council&#34; title=&#34;Ealing London Borough Council&#34;&gt;Ealing London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Perceval_House,_Ealing&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Perceval House, Ealing (page does not exist)&#34;&gt;Perceval House&lt;/a&gt;, 14-16 Uxbridge Road &lt;/td&gt; &lt;td&gt;21.44 &lt;/td&gt; &lt;td&gt;342,494 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.513_N_0.3089_W_region:GB_type:city&amp;amp;title=Ealing&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°30′47″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°18′32″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5130°N 0.3089°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5130; -0.3089&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Ealing&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;13 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Enfield&#34; title=&#34;London Borough of Enfield&#34;&gt;Enfield&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Enfield_London_Borough_Council&#34; title=&#34;Enfield London Borough Council&#34;&gt;Enfield London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Enfield_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Enfield Civic Centre (page does not exist)&#34;&gt;Civic Centre&lt;/a&gt;, Silver Street &lt;/td&gt; &lt;td&gt;31.74 &lt;/td&gt; &lt;td&gt;320,524 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.6538_N_0.0799_W_region:GB_type:city&amp;amp;title=Enfield&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°39′14″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°04′48″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.6538°N 0.0799°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.6538; -0.0799&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Enfield&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;30 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Royal_Borough_of_Greenwich&#34; title=&#34;Royal Borough of Greenwich&#34;&gt;Greenwich&lt;/a&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-3&#34;&gt;&lt;a href=&#34;#cite_note-3&#34;&gt;[note 2]&lt;/a&gt;&lt;/sup&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-note2_4-0&#34;&gt;&lt;a href=&#34;#cite_note-note2-4&#34;&gt;[note 3]&lt;/a&gt;&lt;/sup&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Royal_borough&#34; title=&#34;Royal borough&#34;&gt;Royal&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Greenwich_London_Borough_Council&#34; title=&#34;Greenwich London Borough Council&#34;&gt;Greenwich London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Woolwich_Town_Hall&#34; title=&#34;Woolwich Town Hall&#34;&gt;Woolwich Town Hall&lt;/a&gt;, Wellington Street &lt;/td&gt; &lt;td&gt;18.28 &lt;/td&gt; &lt;td&gt;264,008 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4892_N_0.0648_E_region:GB_type:city&amp;amp;title=Greenwich&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°29′21″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°03′53″E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4892°N 0.0648°E&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4892; 0.0648&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Greenwich&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;22 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Hackney&#34; title=&#34;London Borough of Hackney&#34;&gt;Hackney&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Hackney_London_Borough_Council&#34; title=&#34;Hackney London Borough Council&#34;&gt;Hackney London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Hackney_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Hackney Town Hall (page does not exist)&#34;&gt;Hackney Town Hall&lt;/a&gt;, Mare Street &lt;/td&gt; &lt;td&gt;7.36 &lt;/td&gt; &lt;td&gt;257,379 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.545_N_0.0553_W_region:GB_type:city&amp;amp;title=Hackney&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°32′42″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°03′19″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5450°N 0.0553°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5450; -0.0553&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Hackney&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;9 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Hammersmith_and_Fulham&#34; title=&#34;London Borough of Hammersmith and Fulham&#34;&gt;Hammersmith and Fulham&lt;/a&gt; &lt;sup class=&#34;reference&#34; id=&#34;cite_ref-5&#34;&gt;&lt;a href=&#34;#cite_note-5&#34;&gt;[note 4]&lt;/a&gt;&lt;/sup&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Hammersmith_and_Fulham_London_Borough_Council&#34; title=&#34;Hammersmith and Fulham London Borough Council&#34;&gt;Hammersmith and Fulham London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Hammersmith_and_Fulham_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Hammersmith and Fulham Town Hall (page does not exist)&#34;&gt;Town Hall&lt;/a&gt;, King Street &lt;/td&gt; &lt;td&gt;6.33 &lt;/td&gt; &lt;td&gt;178,685 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4927_N_0.2339_W_region:GB_type:city&amp;amp;title=Hammersmith+and+Fulham&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°29′34″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°14′02″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4927°N 0.2339°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4927; -0.2339&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Hammersmith and Fulham&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;4 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Haringey&#34; title=&#34;London Borough of Haringey&#34;&gt;Haringey&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;sup class=&#34;reference&#34; id=&#34;cite_ref-note2_4-1&#34;&gt;&lt;a href=&#34;#cite_note-note2-4&#34;&gt;[note 3]&lt;/a&gt;&lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Haringey_London_Borough_Council&#34; title=&#34;Haringey London Borough Council&#34;&gt;Haringey London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Haringey_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Haringey Civic Centre (page does not exist)&#34;&gt;Civic Centre&lt;/a&gt;, High Road &lt;/td&gt; &lt;td&gt;11.42 &lt;/td&gt; &lt;td&gt;263,386 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.6_N_0.1119_W_region:GB_type:city&amp;amp;title=Haringey&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°36′00″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°06′43″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.6000°N 0.1119°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.6000; -0.1119&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Haringey&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;29 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Harrow&#34; title=&#34;London Borough of Harrow&#34;&gt;Harrow&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Harrow_London_Borough_Council&#34; title=&#34;Harrow London Borough Council&#34;&gt;Harrow London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Harrow_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Harrow Civic Centre (page does not exist)&#34;&gt;Civic Centre&lt;/a&gt;, Station Road &lt;/td&gt; &lt;td&gt;19.49 &lt;/td&gt; &lt;td&gt;243,372 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5898_N_0.3346_W_region:GB_type:city&amp;amp;title=Harrow&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°35′23″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°20′05″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5898°N 0.3346°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5898; -0.3346&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Harrow&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;32 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Havering&#34; title=&#34;London Borough of Havering&#34;&gt;Havering&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Havering_London_Borough_Council&#34; title=&#34;Havering London Borough Council&#34;&gt;Havering London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt;Conservative&lt;/a&gt; (council &lt;a href=&#34;/wiki/No_overall_control&#34; title=&#34;No overall control&#34;&gt;NOC&lt;/a&gt;) &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Havering_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Havering Town Hall (page does not exist)&#34;&gt;Town Hall&lt;/a&gt;, Main Road &lt;/td&gt; &lt;td&gt;43.35 &lt;/td&gt; &lt;td&gt;242,080 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5812_N_0.1837_E_region:GB_type:city&amp;amp;title=Havering&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°34′52″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°11′01″E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5812°N 0.1837°E&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5812; 0.1837&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Havering&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;24 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Hillingdon&#34; title=&#34;London Borough of Hillingdon&#34;&gt;Hillingdon&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Hillingdon_London_Borough_Council&#34; title=&#34;Hillingdon London Borough Council&#34;&gt;Hillingdon London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt;Conservative&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Hillingdon_Civic_Centre&#34; title=&#34;Hillingdon Civic Centre&#34;&gt;Civic Centre&lt;/a&gt;, High Street &lt;/td&gt; &lt;td&gt;44.67 &lt;/td&gt; &lt;td&gt;286,806 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5441_N_0.476_W_region:GB_type:city&amp;amp;title=Hillingdon&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°32′39″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°28′34″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5441°N 0.4760°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5441; -0.4760&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Hillingdon&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;33 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Hounslow&#34; title=&#34;London Borough of Hounslow&#34;&gt;Hounslow&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Hounslow_London_Borough_Council&#34; title=&#34;Hounslow London Borough Council&#34;&gt;Hounslow London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;Hounslow House, 7 Bath Road &lt;/td&gt; &lt;td&gt;21.61 &lt;/td&gt; &lt;td&gt;262,407 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4746_N_0.368_W_region:GB_type:city&amp;amp;title=Hounslow&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°28′29″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°22′05″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4746°N 0.3680°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4746; -0.3680&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Hounslow&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;14 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Islington&#34; title=&#34;London Borough of Islington&#34;&gt;Islington&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Islington_London_Borough_Council&#34; title=&#34;Islington London Borough Council&#34;&gt;Islington London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Islington_Municipal_Offices&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Islington Municipal Offices (page does not exist)&#34;&gt;Municipal Offices&lt;/a&gt;, 222 Upper Street &lt;/td&gt; &lt;td&gt;5.74 &lt;/td&gt; &lt;td&gt;215,667 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5416_N_0.1022_W_region:GB_type:city&amp;amp;title=Islington&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°32′30″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°06′08″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5416°N 0.1022°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5416; -0.1022&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Islington&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;10 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Royal_Borough_of_Kensington_and_Chelsea&#34; title=&#34;Royal Borough of Kensington and Chelsea&#34;&gt;Kensington and Chelsea&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Royal_borough&#34; title=&#34;Royal borough&#34;&gt;Royal&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Kensington_and_Chelsea_London_Borough_Council&#34; title=&#34;Kensington and Chelsea London Borough Council&#34;&gt;Kensington and Chelsea London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt;Conservative&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Kensington_Town_Hall,_London&#34; title=&#34;Kensington Town Hall, London&#34;&gt;The Town Hall&lt;/a&gt;, &lt;a href=&#34;/wiki/Hornton_Street&#34; title=&#34;Hornton Street&#34;&gt;Hornton Street&lt;/a&gt; &lt;/td&gt; &lt;td&gt;4.68 &lt;/td&gt; &lt;td&gt;155,594 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.502_N_0.1947_W_region:GB_type:city&amp;amp;title=Kensington+and+Chelsea&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°30′07″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°11′41″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5020°N 0.1947°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5020; -0.1947&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Kensington and Chelsea&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;3 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Royal_Borough_of_Kingston_upon_Thames&#34; title=&#34;Royal Borough of Kingston upon Thames&#34;&gt;Kingston upon Thames&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Royal_borough&#34; title=&#34;Royal borough&#34;&gt;Royal&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Kingston_upon_Thames_London_Borough_Council&#34; title=&#34;Kingston upon Thames London Borough Council&#34;&gt;Kingston upon Thames London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Liberal_Democrats_(UK)&#34; title=&#34;Liberal Democrats (UK)&#34;&gt;Liberal Democrat&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Kingston_upon_Thames_Guildhall&#34; title=&#34;Kingston upon Thames Guildhall&#34;&gt;Guildhall&lt;/a&gt;, High Street &lt;/td&gt; &lt;td&gt;14.38 &lt;/td&gt; &lt;td&gt;166,793 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4085_N_0.3064_W_region:GB_type:city&amp;amp;title=Kingston+upon+Thames&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°24′31″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°18′23″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4085°N 0.3064°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4085; -0.3064&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Kingston upon Thames&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;16 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Lambeth&#34; title=&#34;London Borough of Lambeth&#34;&gt;Lambeth&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Lambeth_London_Borough_Council&#34; title=&#34;Lambeth London Borough Council&#34;&gt;Lambeth London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Lambeth_Town_Hall&#34; title=&#34;Lambeth Town Hall&#34;&gt;Lambeth Town Hall&lt;/a&gt;, Brixton Hill &lt;/td&gt; &lt;td&gt;10.36 &lt;/td&gt; &lt;td&gt;314,242 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4607_N_0.1163_W_region:GB_type:city&amp;amp;title=Lambeth&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°27′39″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°06′59″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4607°N 0.1163°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4607; -0.1163&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Lambeth&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;6 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Lewisham&#34; title=&#34;London Borough of Lewisham&#34;&gt;Lewisham&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Lewisham_London_Borough_Council&#34; title=&#34;Lewisham London Borough Council&#34;&gt;Lewisham London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Lewisham_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Lewisham Town Hall (page does not exist)&#34;&gt;Town Hall&lt;/a&gt;, 1 Catford Road &lt;/td&gt; &lt;td&gt;13.57 &lt;/td&gt; &lt;td&gt;286,180 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4452_N_0.0209_W_region:GB_type:city&amp;amp;title=Lewisham&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°26′43″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°01′15″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4452°N 0.0209°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4452; -0.0209&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Lewisham&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;21 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Merton&#34; title=&#34;London Borough of Merton&#34;&gt;Merton&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Merton_London_Borough_Council&#34; title=&#34;Merton London Borough Council&#34;&gt;Merton London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Merton_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Merton Civic Centre (page does not exist)&#34;&gt;Civic Centre&lt;/a&gt;, London Road &lt;/td&gt; &lt;td&gt;14.52 &lt;/td&gt; &lt;td&gt;203,223 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4014_N_0.1958_W_region:GB_type:city&amp;amp;title=Merton&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°24′05″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°11′45″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4014°N 0.1958°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4014; -0.1958&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Merton&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;17 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Newham&#34; title=&#34;London Borough of Newham&#34;&gt;Newham&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;sup class=&#34;reference&#34; id=&#34;cite_ref-note2_4-2&#34;&gt;&lt;a href=&#34;#cite_note-note2-4&#34;&gt;[note 3]&lt;/a&gt;&lt;/sup&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Newham_London_Borough_Council&#34; title=&#34;Newham London Borough Council&#34;&gt;Newham London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Newham_Dockside&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Newham Dockside (page does not exist)&#34;&gt;Newham Dockside&lt;/a&gt;, 1000 Dockside Road &lt;/td&gt; &lt;td&gt;13.98 &lt;/td&gt; &lt;td&gt;318,227 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5077_N_0.0469_E_region:GB_type:city&amp;amp;title=Newham&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°30′28″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°02′49″E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5077°N 0.0469°E&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5077; 0.0469&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Newham&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;27 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Redbridge&#34; title=&#34;London Borough of Redbridge&#34;&gt;Redbridge&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Redbridge_London_Borough_Council&#34; title=&#34;Redbridge London Borough Council&#34;&gt;Redbridge London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Redbridge_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Redbridge Town Hall (page does not exist)&#34;&gt;Town Hall&lt;/a&gt;, 128-142 High Road &lt;/td&gt; &lt;td&gt;21.78 &lt;/td&gt; &lt;td&gt;288,272 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.559_N_0.0741_E_region:GB_type:city&amp;amp;title=Redbridge&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°33′32″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°04′27″E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5590°N 0.0741°E&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5590; 0.0741&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Redbridge&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;26 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Richmond_upon_Thames&#34; title=&#34;London Borough of Richmond upon Thames&#34;&gt;Richmond upon Thames&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Richmond_upon_Thames_London_Borough_Council&#34; title=&#34;Richmond upon Thames London Borough Council&#34;&gt;Richmond upon Thames London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Liberal_Democrats_(UK)&#34; title=&#34;Liberal Democrats (UK)&#34;&gt;Liberal Democrat&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Richmond_upon_Thames_Civic_Centre&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Richmond upon Thames Civic Centre (page does not exist)&#34;&gt;Civic Centre&lt;/a&gt;, 44 York Street &lt;/td&gt; &lt;td&gt;22.17 &lt;/td&gt; &lt;td&gt;191,365 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4479_N_0.326_W_region:GB_type:city&amp;amp;title=Richmond+upon+Thames&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°26′52″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°19′34″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4479°N 0.3260°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4479; -0.3260&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Richmond upon Thames&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;15 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Southwark&#34; title=&#34;London Borough of Southwark&#34;&gt;Southwark&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Southwark_London_Borough_Council&#34; title=&#34;Southwark London Borough Council&#34;&gt;Southwark London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=160_Tooley_Street&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;160 Tooley Street (page does not exist)&#34;&gt;160 Tooley Street&lt;/a&gt; &lt;/td&gt; &lt;td&gt;11.14 &lt;/td&gt; &lt;td&gt;298,464 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5035_N_0.0804_W_region:GB_type:city&amp;amp;title=Southwark&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°30′13″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°04′49″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5035°N 0.0804°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5035; -0.0804&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Southwark&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;7 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Sutton&#34; title=&#34;London Borough of Sutton&#34;&gt;Sutton&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Sutton_London_Borough_Council&#34; title=&#34;Sutton London Borough Council&#34;&gt;Sutton London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Liberal_Democrats_(UK)&#34; title=&#34;Liberal Democrats (UK)&#34;&gt;Liberal Democrat&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Sutton_Civic_Offices&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Sutton Civic Offices (page does not exist)&#34;&gt;Civic Offices&lt;/a&gt;, St Nicholas Way &lt;/td&gt; &lt;td&gt;16.93 &lt;/td&gt; &lt;td&gt;195,914 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.3618_N_0.1945_W_region:GB_type:city&amp;amp;title=Sutton&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°21′42″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°11′40″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.3618°N 0.1945°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.3618; -0.1945&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Sutton&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;18 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Tower_Hamlets&#34; title=&#34;London Borough of Tower Hamlets&#34;&gt;Tower Hamlets&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Tower_Hamlets_London_Borough_Council&#34; title=&#34;Tower Hamlets London Borough Council&#34;&gt;Tower Hamlets London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Tower_Hamlets_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Tower Hamlets Town Hall (page does not exist)&#34;&gt;Town Hall&lt;/a&gt;, Mulberry Place, 5 Clove Crescent &lt;/td&gt; &lt;td&gt;7.63 &lt;/td&gt; &lt;td&gt;272,890 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5099_N_0.0059_W_region:GB_type:city&amp;amp;title=Tower+Hamlets&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°30′36″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°00′21″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5099°N 0.0059°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5099; -0.0059&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Tower Hamlets&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;8 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Waltham_Forest&#34; title=&#34;London Borough of Waltham Forest&#34;&gt;Waltham Forest&lt;/a&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Waltham_Forest_London_Borough_Council&#34; title=&#34;Waltham Forest London Borough Council&#34;&gt;Waltham Forest London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Labour_Party_(UK)&#34; title=&#34;Labour Party (UK)&#34;&gt;Labour&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Waltham_Forest_Town_Hall&#34; title=&#34;Waltham Forest Town Hall&#34;&gt;Waltham Forest Town Hall&lt;/a&gt;, Forest Road &lt;/td&gt; &lt;td&gt;14.99 &lt;/td&gt; &lt;td&gt;265,797 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5908_N_0.0134_W_region:GB_type:city&amp;amp;title=Waltham+Forest&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°35′27″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°00′48″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5908°N 0.0134°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5908; -0.0134&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Waltham Forest&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;28 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/London_Borough_of_Wandsworth&#34; title=&#34;London Borough of Wandsworth&#34;&gt;Wandsworth&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Wandsworth_London_Borough_Council&#34; title=&#34;Wandsworth London Borough Council&#34;&gt;Wandsworth London Borough Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt;Conservative&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Wandsworth_Town_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Wandsworth Town Hall (page does not exist)&#34;&gt;The Town Hall&lt;/a&gt;, &lt;a href=&#34;/wiki/Wandsworth_High_Street&#34; title=&#34;Wandsworth High Street&#34;&gt;Wandsworth High Street&lt;/a&gt; &lt;/td&gt; &lt;td&gt;13.23 &lt;/td&gt; &lt;td&gt;310,516 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4567_N_0.191_W_region:GB_type:city&amp;amp;title=Wandsworth&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°27′24″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°11′28″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4567°N 0.1910°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4567; -0.1910&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Wandsworth&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;5 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/City_of_Westminster&#34; title=&#34;City of Westminster&#34;&gt;Westminster&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/City_status_in_the_United_Kingdom&#34; title=&#34;City status in the United Kingdom&#34;&gt;City&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Westminster_City_Council&#34; title=&#34;Westminster City Council&#34;&gt;Westminster City Council&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Conservative_Party_(UK)&#34; title=&#34;Conservative Party (UK)&#34;&gt;Conservative&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;new&#34; href=&#34;/w/index.php?title=Westminster_City_Hall&amp;amp;action=edit&amp;amp;redlink=1&#34; title=&#34;Westminster City Hall (page does not exist)&#34;&gt;Westminster City Hall&lt;/a&gt;, 64 Victoria Street &lt;/td&gt; &lt;td&gt;8.29 &lt;/td&gt; &lt;td&gt;226,841 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.4973_N_0.1372_W_region:GB_type:city&amp;amp;title=Westminster&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°29′50″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°08′14″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.4973°N 0.1372°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.4973; -0.1372&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;Westminster&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;2 &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;, &lt;table class=&#34;wikitable sortable&#34; style=&#34;font-size:95%&#34; width=&#34;100%&#34;&gt; &lt;tbody&gt;&lt;tr&gt; &lt;th width=&#34;100px&#34;&gt;Borough &lt;/th&gt; &lt;th&gt;Inner &lt;/th&gt; &lt;th width=&#34;100px&#34;&gt;Status &lt;/th&gt; &lt;th&gt;Local authority &lt;/th&gt; &lt;th&gt;Political control &lt;/th&gt; &lt;th width=&#34;120px&#34;&gt;Headquarters &lt;/th&gt; &lt;th&gt;Area (sq mi) &lt;/th&gt; &lt;th&gt;Population&lt;br/&gt;(2011 est) &lt;/th&gt; &lt;th width=&#34;20px&#34;&gt;Co-ordinates &lt;/th&gt; &lt;th&gt;&lt;span style=&#34;background:#67BCD3&#34;&gt; Nr. in&lt;br/&gt;map &lt;/span&gt; &lt;/th&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/wiki/City_of_London&#34; title=&#34;City of London&#34;&gt;City of London&lt;/a&gt; &lt;/td&gt; &lt;td&gt;(&lt;img alt=&#34;☑&#34; data-file-height=&#34;600&#34; data-file-width=&#34;600&#34; decoding=&#34;async&#34; height=&#34;20&#34; src=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/20px-Yes_check.svg.png&#34; srcset=&#34;//upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/30px-Yes_check.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/fb/Yes_check.svg/40px-Yes_check.svg.png 2x&#34; width=&#34;20&#34;/&gt;&lt;span style=&#34;display:none&#34;&gt;Y&lt;/span&gt;)&lt;br/&gt;&lt;sup class=&#34;reference&#34; id=&#34;cite_ref-6&#34;&gt;&lt;a href=&#34;#cite_note-6&#34;&gt;[note 5]&lt;/a&gt;&lt;/sup&gt; &lt;/td&gt; &lt;td&gt;&lt;i&gt;&lt;a href=&#34;/wiki/Sui_generis&#34; title=&#34;Sui generis&#34;&gt;Sui generis&lt;/a&gt;&lt;/i&gt;;&lt;br/&gt;&lt;a href=&#34;/wiki/City_status_in_the_United_Kingdom&#34; title=&#34;City status in the United Kingdom&#34;&gt;City&lt;/a&gt;;&lt;br/&gt;&lt;a href=&#34;/wiki/Ceremonial_counties_of_England&#34; title=&#34;Ceremonial counties of England&#34;&gt;Ceremonial county&lt;/a&gt; &lt;/td&gt; &lt;td&gt;&lt;a class=&#34;mw-redirect&#34; href=&#34;/wiki/Corporation_of_London&#34; title=&#34;Corporation of London&#34;&gt;Corporation of London&lt;/a&gt;;&lt;br/&gt;&lt;a href=&#34;/wiki/Inner_Temple&#34; title=&#34;Inner Temple&#34;&gt;Inner Temple&lt;/a&gt;;&lt;br/&gt;&lt;a href=&#34;/wiki/Middle_Temple&#34; title=&#34;Middle Temple&#34;&gt;Middle Temple&lt;/a&gt; &lt;/td&gt; &lt;td&gt;?  &lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/wiki/Guildhall,_London&#34; title=&#34;Guildhall, London&#34;&gt;Guildhall&lt;/a&gt; &lt;/td&gt; &lt;td&gt;1.12 &lt;/td&gt; &lt;td&gt;7,000 &lt;/td&gt; &lt;td&gt;&lt;span class=&#34;plainlinks nourlexpansion&#34;&gt;&lt;a class=&#34;external text&#34; href=&#34;//tools.wmflabs.org/geohack/geohack.php?pagename=List_of_London_boroughs&amp;amp;params=51.5155_N_0.0922_W_region:GB_type:city&amp;amp;title=City+of+London&#34;&gt;&lt;span class=&#34;geo-nondefault&#34;&gt;&lt;span class=&#34;geo-dms&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;&lt;span class=&#34;latitude&#34;&gt;51°30′56″N&lt;/span&gt; &lt;span class=&#34;longitude&#34;&gt;0°05′32″W&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;geo-multi-punct&#34;&gt;﻿ / ﻿&lt;/span&gt;&lt;span class=&#34;geo-default&#34;&gt;&lt;span class=&#34;vcard&#34;&gt;&lt;span class=&#34;geo-dec&#34; title=&#34;Maps, aerial photos, and other data for this location&#34;&gt;51.5155°N 0.0922°W&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ / &lt;span class=&#34;geo&#34;&gt;51.5155; -0.0922&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:none&#34;&gt;﻿ (&lt;span class=&#34;fn org&#34;&gt;City of London&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;/td&gt; &lt;td&gt;1 &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;] . . Convert the table into a dataframe. . London_table = pd.read_html(str(table[0]), index_col=None, header=0)[0] London_table.head() . Borough Inner Status Local authority Political control Headquarters Area (sq mi) Population (2013 est)[1] Co-ordinates Nr. in map . 0 Barking and Dagenham [note 1] | NaN | NaN | Barking and Dagenham London Borough Council | Labour | Town Hall, 1 Town Square | 13.93 | 194352 | 51°33′39″N 0°09′21″E﻿ / ﻿51.5607°N 0.1557°E | 25 | . 1 Barnet | NaN | NaN | Barnet London Borough Council | Conservative | North London Business Park, Oakleigh Road South | 33.49 | 369088 | 51°37′31″N 0°09′06″W﻿ / ﻿51.6252°N 0.1517°W | 31 | . 2 Bexley | NaN | NaN | Bexley London Borough Council | Conservative | Civic Offices, 2 Watling Street | 23.38 | 236687 | 51°27′18″N 0°09′02″E﻿ / ﻿51.4549°N 0.1505°E | 23 | . 3 Brent | NaN | NaN | Brent London Borough Council | Labour | Brent Civic Centre, Engineers Way | 16.70 | 317264 | 51°33′32″N 0°16′54″W﻿ / ﻿51.5588°N 0.2817°W | 12 | . 4 Bromley | NaN | NaN | Bromley London Borough Council | Conservative | Civic Centre, Stockwell Close | 57.97 | 317899 | 51°24′14″N 0°01′11″E﻿ / ﻿51.4039°N 0.0198°E | 20 | . There is a second table on the webpage that contains the additional Borough - City of London. . London_table1 = pd.read_html(str(table[1]), index_col=None, header=0)[0] # rename the columns to match the previous table London_table1.columns = [&#39;Borough&#39;, &#39;Inner&#39;, &#39;Status&#39;, &#39;Local authority&#39;, &#39;Political control&#39;, &#39;Headquarters&#39;, &#39;Area (sq mi)&#39;, &#39;Population (2013 est)[1]&#39;, &#39;Co-ordinates&#39;, &#39;Nr. in map&#39;] # view the table London_table1 . Borough Inner Status Local authority Political control Headquarters Area (sq mi) Population (2013 est)[1] Co-ordinates Nr. in map . 0 City of London | ([note 5] | Sui generis;City;Ceremonial county | Corporation of London;Inner Temple;Middle Temple | ? | Guildhall | 1.12 | 7000 | 51°30′56″N 0°05′32″W﻿ / ﻿51.5155°N 0.0922°W | 1 | . Let&#39;s append the dataframes of &#39;London_table&#39; and &#39;London_table1&#39; together. A continuous index value will be maintained across the rows in the new appended dataframe. . London_table = London_table.append(London_table1, ignore_index=True) # check the last rows of the data set London_table.tail() . Borough Inner Status Local authority Political control Headquarters Area (sq mi) Population (2013 est)[1] Co-ordinates Nr. in map . 28 Tower Hamlets | NaN | NaN | Tower Hamlets London Borough Council | Labour | Town Hall, Mulberry Place, 5 Clove Crescent | 7.63 | 272890 | 51°30′36″N 0°00′21″W﻿ / ﻿51.5099°N 0.0059°W | 8 | . 29 Waltham Forest | NaN | NaN | Waltham Forest London Borough Council | Labour | Waltham Forest Town Hall, Forest Road | 14.99 | 265797 | 51°35′27″N 0°00′48″W﻿ / ﻿51.5908°N 0.0134°W | 28 | . 30 Wandsworth | NaN | NaN | Wandsworth London Borough Council | Conservative | The Town Hall, Wandsworth High Street | 13.23 | 310516 | 51°27′24″N 0°11′28″W﻿ / ﻿51.4567°N 0.1910°W | 5 | . 31 Westminster | NaN | City | Westminster City Council | Conservative | Westminster City Hall, 64 Victoria Street | 8.29 | 226841 | 51°29′50″N 0°08′14″W﻿ / ﻿51.4973°N 0.1372°W | 2 | . 32 City of London | ([note 5] | Sui generis;City;Ceremonial county | Corporation of London;Inner Temple;Middle Temple | ? | Guildhall | 1.12 | 7000 | 51°30′56″N 0°05′32″W﻿ / ﻿51.5155°N 0.0922°W | 1 | . We&#39;ll remove the unnecessary strings in the dataset. . London_table = London_table.replace(&#39;note 1&#39;,&#39;&#39;, regex=True) London_table = London_table.replace(&#39;note 2&#39;,&#39;&#39;, regex=True) London_table = London_table.replace(&#39;note 3&#39;,&#39;&#39;, regex=True) London_table = London_table.replace(&#39;note 4&#39;,&#39;&#39;, regex=True) London_table = London_table.replace(&#39;note 5&#39;,&#39;&#39;, regex=True) London_table.head() . Borough Inner Status Local authority Political control Headquarters Area (sq mi) Population (2013 est)[1] Co-ordinates Nr. in map . 0 Barking and Dagenham [] | NaN | NaN | Barking and Dagenham London Borough Council | Labour | Town Hall, 1 Town Square | 13.93 | 194352 | 51°33′39″N 0°09′21″E﻿ / ﻿51.5607°N 0.1557°E | 25 | . 1 Barnet | NaN | NaN | Barnet London Borough Council | Conservative | North London Business Park, Oakleigh Road South | 33.49 | 369088 | 51°37′31″N 0°09′06″W﻿ / ﻿51.6252°N 0.1517°W | 31 | . 2 Bexley | NaN | NaN | Bexley London Borough Council | Conservative | Civic Offices, 2 Watling Street | 23.38 | 236687 | 51°27′18″N 0°09′02″E﻿ / ﻿51.4549°N 0.1505°E | 23 | . 3 Brent | NaN | NaN | Brent London Borough Council | Labour | Brent Civic Centre, Engineers Way | 16.70 | 317264 | 51°33′32″N 0°16′54″W﻿ / ﻿51.5588°N 0.2817°W | 12 | . 4 Bromley | NaN | NaN | Bromley London Borough Council | Conservative | Civic Centre, Stockwell Close | 57.97 | 317899 | 51°24′14″N 0°01′11″E﻿ / ﻿51.4039°N 0.0198°E | 20 | . type(London_table) . pandas.core.frame.DataFrame . London_table.shape . (33, 10) . Check if the Borough in both the dataframes match. . set(df.Borough) - set(London_table.Borough) . {&#39;Barking and Dagenham&#39;, &#39;Greenwich&#39;, &#39;Hammersmith and Fulham&#39;} . These 3 Boroughs don&#39;t match because of the unnecessary symbols like &#39;[ ]&#39; present. Let&#39;s find the index of the 3 Boroughs that do not match. . print(&quot;The index of first borough is&quot;,London_table.index[London_table[&#39;Borough&#39;] == &#39;Barking and Dagenham []&#39;].tolist()) print(&quot;The index of second borough is&quot;,London_table.index[London_table[&#39;Borough&#39;] == &#39;Greenwich []&#39;].tolist()) print(&quot;The index of third borough is&quot;,London_table.index[London_table[&#39;Borough&#39;] == &#39;Hammersmith and Fulham []&#39;].tolist()) . The index of first borough is [0] The index of second borough is [9] The index of third borough is [11] . Change the Borough names to match the other data frame. . London_table.iloc[0,0] = &#39;Barking and Dagenham&#39; London_table.iloc[9,0] = &#39;Greenwich&#39; London_table.iloc[11,0] = &#39;Hammersmith and Fulham&#39; . set(df.Borough) - set(London_table.Borough) . set() . The Borough names in both dataframes match. Now, we combine both the dataframes together. . Ld_crime = pd.merge(London_crime, London_table, on=&#39;Borough&#39;) Ld_crime.head() . Borough Burglary Criminal Damage Drugs Fraud or Forgery Other Notifiable Offenses Robbery Sexual Offences Theft and Handling Violence Against the Person Total Inner Status Local authority Political control Headquarters Area (sq mi) Population (2013 est)[1] Co-ordinates Nr. in map . 0 Barking and Dagenham | 18103 | 18888 | 9188 | 205 | 2819 | 6105 | 49 | 50999 | 43091 | 149447 | NaN | NaN | Barking and Dagenham London Borough Council | Labour | Town Hall, 1 Town Square | 13.93 | 194352 | 51°33′39″N 0°09′21″E﻿ / ﻿51.5607°N 0.1557°E | 25 | . 1 Barnet | 36981 | 21024 | 9796 | 175 | 2953 | 7374 | 38 | 87285 | 46565 | 212191 | NaN | NaN | Barnet London Borough Council | Conservative | North London Business Park, Oakleigh Road South | 33.49 | 369088 | 51°37′31″N 0°09′06″W﻿ / ﻿51.6252°N 0.1517°W | 31 | . 2 Bexley | 14973 | 17244 | 7346 | 106 | 1999 | 2338 | 22 | 40071 | 30037 | 114136 | NaN | NaN | Bexley London Borough Council | Conservative | Civic Offices, 2 Watling Street | 23.38 | 236687 | 51°27′18″N 0°09′02″E﻿ / ﻿51.4549°N 0.1505°E | 23 | . 3 Brent | 28923 | 20569 | 25978 | 157 | 3711 | 12473 | 39 | 72523 | 63178 | 227551 | NaN | NaN | Brent London Borough Council | Labour | Brent Civic Centre, Engineers Way | 16.70 | 317264 | 51°33′32″N 0°16′54″W﻿ / ﻿51.5588°N 0.2817°W | 12 | . 4 Bromley | 27135 | 24039 | 8942 | 196 | 2637 | 4868 | 31 | 69742 | 46759 | 184349 | NaN | NaN | Bromley London Borough Council | Conservative | Civic Centre, Stockwell Close | 57.97 | 317899 | 51°24′14″N 0°01′11″E﻿ / ﻿51.4039°N 0.0198°E | 20 | . Ld_crime.shape . (33, 20) . set(df.Borough) - set(Ld_crime.Borough) . set() . Rearrange the Columns. . list(Ld_crime) . [&#39;Borough&#39;, &#39;Burglary&#39;, &#39;Criminal Damage&#39;, &#39;Drugs&#39;, &#39;Fraud or Forgery&#39;, &#39;Other Notifiable Offenses&#39;, &#39;Robbery&#39;, &#39;Sexual Offences&#39;, &#39;Theft and Handling&#39;, &#39;Violence Against the Person&#39;, &#39;Total&#39;, &#39;Inner&#39;, &#39;Status&#39;, &#39;Local authority&#39;, &#39;Political control&#39;, &#39;Headquarters&#39;, &#39;Area (sq mi)&#39;, &#39;Population (2013 est)[1]&#39;, &#39;Co-ordinates&#39;, &#39;Nr. in map&#39;] . Ld_crime = Ld_crime.rename(columns = {&#39;Population (2013 est)[1]&#39;:&#39;Population&#39;}) . columnsTitles = [&#39;Borough&#39;, &#39;Local authority&#39;, &#39;Political control&#39;, &#39;Headquarters&#39;, &#39;Area (sq mi)&#39;, &#39;Population&#39;, &#39;Co-ordinates&#39;, &#39;Burglary&#39;, &#39;Criminal Damage&#39;, &#39;Drugs&#39;, &#39;Fraud or Forgery&#39;, &#39;Other Notifiable Offenses&#39;, &#39;Robbery&#39;, &#39;Sexual Offenses&#39;, &#39;Theft and Handling&#39;, &#39;Violence Against the Person&#39;, &#39;Total&#39;] Ld_crime = Ld_crime.reindex(columns=columnsTitles) Ld_crime = Ld_crime[[&#39;Borough&#39;, &#39;Local authority&#39;, &#39;Political control&#39;, &#39;Headquarters&#39;, &#39;Area (sq mi)&#39;, &#39;Population&#39;, &#39;Co-ordinates&#39;, &#39;Burglary&#39;, &#39;Criminal Damage&#39;, &#39;Drugs&#39;, &#39;Fraud or Forgery&#39;, &#39;Other Notifiable Offenses&#39;, &#39;Robbery&#39;, &#39;Sexual Offenses&#39;, &#39;Theft and Handling&#39;, &#39;Violence Against the Person&#39;, &#39;Total&#39;]] Ld_crime . Borough Local authority Political control Headquarters Area (sq mi) Population Co-ordinates Burglary Criminal Damage Drugs Fraud or Forgery Other Notifiable Offenses Robbery Sexual Offenses Theft and Handling Violence Against the Person Total . 0 Barking and Dagenham | Barking and Dagenham London Borough Council | Labour | Town Hall, 1 Town Square | 13.93 | 194352 | 51°33′39″N 0°09′21″E﻿ / ﻿51.5607°N 0.1557°E | 18103 | 18888 | 9188 | 205 | 2819 | 6105 | NaN | 50999 | 43091 | 149447 | . 1 Barnet | Barnet London Borough Council | Conservative | North London Business Park, Oakleigh Road South | 33.49 | 369088 | 51°37′31″N 0°09′06″W﻿ / ﻿51.6252°N 0.1517°W | 36981 | 21024 | 9796 | 175 | 2953 | 7374 | NaN | 87285 | 46565 | 212191 | . 2 Bexley | Bexley London Borough Council | Conservative | Civic Offices, 2 Watling Street | 23.38 | 236687 | 51°27′18″N 0°09′02″E﻿ / ﻿51.4549°N 0.1505°E | 14973 | 17244 | 7346 | 106 | 1999 | 2338 | NaN | 40071 | 30037 | 114136 | . 3 Brent | Brent London Borough Council | Labour | Brent Civic Centre, Engineers Way | 16.70 | 317264 | 51°33′32″N 0°16′54″W﻿ / ﻿51.5588°N 0.2817°W | 28923 | 20569 | 25978 | 157 | 3711 | 12473 | NaN | 72523 | 63178 | 227551 | . 4 Bromley | Bromley London Borough Council | Conservative | Civic Centre, Stockwell Close | 57.97 | 317899 | 51°24′14″N 0°01′11″E﻿ / ﻿51.4039°N 0.0198°E | 27135 | 24039 | 8942 | 196 | 2637 | 4868 | NaN | 69742 | 46759 | 184349 | . 5 Camden | Camden London Borough Council | Labour | Camden Town Hall, Judd Street | 8.40 | 229719 | 51°31′44″N 0°07′32″W﻿ / ﻿51.5290°N 0.1255°W | 27939 | 18482 | 21816 | 123 | 3857 | 9286 | NaN | 140596 | 53012 | 275147 | . 6 City of London | Corporation of London;Inner Temple;Middle Temple | ? | Guildhall | 1.12 | 7000 | 51°30′56″N 0°05′32″W﻿ / ﻿51.5155°N 0.0922°W | 15 | 16 | 33 | 0 | 17 | 24 | NaN | 561 | 114 | 780 | . 7 Croydon | Croydon London Borough Council | Labour | Bernard Weatherill House, Mint Walk | 33.41 | 372752 | 51°22′17″N 0°05′52″W﻿ / ﻿51.3714°N 0.0977°W | 33376 | 31218 | 19162 | 270 | 4340 | 12645 | NaN | 91437 | 67791 | 260294 | . 8 Ealing | Ealing London Borough Council | Labour | Perceval House, 14-16 Uxbridge Road | 21.44 | 342494 | 51°30′47″N 0°18′32″W﻿ / ﻿51.5130°N 0.3089°W | 30831 | 25613 | 18591 | 175 | 4406 | 9568 | NaN | 93834 | 68492 | 251562 | . 9 Enfield | Enfield London Borough Council | Labour | Civic Centre, Silver Street | 31.74 | 320524 | 51°39′14″N 0°04′48″W﻿ / ﻿51.6538°N 0.0799°W | 30213 | 22487 | 13251 | 132 | 3293 | 9059 | NaN | 70371 | 45036 | 193880 | . 10 Greenwich | Greenwich London Borough Council | Labour | Woolwich Town Hall, Wellington Street | 18.28 | 264008 | 51°29′21″N 0°03′53″E﻿ / ﻿51.4892°N 0.0648°E | 20966 | 22755 | 10836 | 107 | 3598 | 5430 | NaN | 64923 | 52897 | 181568 | . 11 Hackney | Hackney London Borough Council | Labour | Hackney Town Hall, Mare Street | 7.36 | 257379 | 51°32′42″N 0°03′19″W﻿ / ﻿51.5450°N 0.0553°W | 21450 | 17327 | 18144 | 143 | 3332 | 8975 | NaN | 91118 | 56584 | 217119 | . 12 Hammersmith and Fulham | Hammersmith and Fulham London Borough Council | Labour | Town Hall, King Street | 6.33 | 178685 | 51°29′34″N 0°14′02″W﻿ / ﻿51.4927°N 0.2339°W | 17010 | 14595 | 15492 | 91 | 3352 | 5279 | NaN | 86381 | 43014 | 185259 | . 13 Haringey | Haringey London Borough Council | Labour | Civic Centre, High Road | 11.42 | 263386 | 51°36′00″N 0°06′43″W﻿ / ﻿51.6000°N 0.1119°W | 28213 | 22272 | 14563 | 207 | 2971 | 10084 | NaN | 83979 | 50943 | 213272 | . 14 Harrow | Harrow London Borough Council | Labour | Civic Centre, Station Road | 19.49 | 243372 | 51°35′23″N 0°20′05″W﻿ / ﻿51.5898°N 0.3346°W | 19630 | 12724 | 7122 | 92 | 1998 | 4242 | NaN | 40800 | 30213 | 116848 | . 15 Havering | Havering London Borough Council | Conservative (council NOC) | Town Hall, Main Road | 43.35 | 242080 | 51°34′52″N 0°11′01″E﻿ / ﻿51.5812°N 0.1837°E | 21302 | 17252 | 8171 | 179 | 2358 | 3089 | NaN | 52609 | 33968 | 138947 | . 16 Hillingdon | Hillingdon London Borough Council | Conservative | Civic Centre, High Street | 44.67 | 286806 | 51°32′39″N 0°28′34″W﻿ / ﻿51.5441°N 0.4760°W | 26056 | 24485 | 11413 | 223 | 6504 | 5663 | NaN | 80028 | 55264 | 209680 | . 17 Hounslow | Hounslow London Borough Council | Labour | Hounslow House, 7 Bath Road | 21.61 | 262407 | 51°28′29″N 0°22′05″W﻿ / ﻿51.4746°N 0.3680°W | 21026 | 21407 | 13722 | 183 | 3963 | 4847 | NaN | 70180 | 51404 | 186772 | . 18 Islington | Islington London Borough Council | Labour | Municipal Offices, 222 Upper Street | 5.74 | 215667 | 51°32′30″N 0°06′08″W﻿ / ﻿51.5416°N 0.1022°W | 22207 | 18354 | 16553 | 85 | 3675 | 8736 | NaN | 107661 | 52975 | 230286 | . 19 Kensington and Chelsea | Kensington and Chelsea London Borough Council | Conservative | The Town Hall, Hornton Street | 4.68 | 155594 | 51°30′07″N 0°11′41″W﻿ / ﻿51.5020°N 0.1947°W | 14980 | 9839 | 14573 | 85 | 2203 | 4744 | NaN | 95963 | 29570 | 171981 | . 20 Kingston upon Thames | Kingston upon Thames London Borough Council | Liberal Democrat | Guildhall, High Street | 14.38 | 166793 | 51°24′31″N 0°18′23″W﻿ / ﻿51.4085°N 0.3064°W | 10131 | 10610 | 5682 | 65 | 1332 | 1702 | NaN | 38226 | 21540 | 89306 | . 21 Lambeth | Lambeth London Borough Council | Labour | Lambeth Town Hall, Brixton Hill | 10.36 | 314242 | 51°27′39″N 0°06′59″W﻿ / ﻿51.4607°N 0.1163°W | 30199 | 26136 | 25083 | 137 | 4520 | 18408 | NaN | 114899 | 72726 | 292178 | . 22 Lewisham | Lewisham London Borough Council | Labour | Town Hall, 1 Catford Road | 13.57 | 286180 | 51°26′43″N 0°01′15″W﻿ / ﻿51.4452°N 0.0209°W | 24871 | 24810 | 16825 | 262 | 3809 | 10455 | NaN | 70382 | 63652 | 215137 | . 23 Merton | Merton London Borough Council | Labour | Civic Centre, London Road | 14.52 | 203223 | 51°24′05″N 0°11′45″W﻿ / ﻿51.4014°N 0.1958°W | 16485 | 14339 | 6651 | 111 | 1571 | 4021 | NaN | 44128 | 28322 | 115654 | . 24 Newham | Newham London Borough Council | Labour | Newham Dockside, 1000 Dockside Road | 13.98 | 318227 | 51°30′28″N 0°02′49″E﻿ / ﻿51.5077°N 0.0469°E | 25356 | 24177 | 18389 | 323 | 4456 | 16913 | NaN | 106146 | 66221 | 262024 | . 25 Redbridge | Redbridge London Borough Council | Labour | Town Hall, 128-142 High Road | 21.78 | 288272 | 51°33′32″N 0°04′27″E﻿ / ﻿51.5590°N 0.0741°E | 26735 | 17543 | 15736 | 284 | 2619 | 7688 | NaN | 71496 | 41430 | 183562 | . 26 Richmond upon Thames | Richmond upon Thames London Borough Council | Liberal Democrat | Civic Centre, 44 York Street | 22.17 | 191365 | 51°26′52″N 0°19′34″W﻿ / ﻿51.4479°N 0.3260°W | 16097 | 11722 | 4707 | 37 | 1420 | 1590 | NaN | 40858 | 20314 | 96771 | . 27 Southwark | Southwark London Borough Council | Labour | 160 Tooley Street | 11.14 | 298464 | 51°30′13″N 0°04′49″W﻿ / ﻿51.5035°N 0.0804°W | 27980 | 24450 | 27381 | 321 | 4696 | 16153 | NaN | 109432 | 68356 | 278809 | . 28 Sutton | Sutton London Borough Council | Liberal Democrat | Civic Offices, St Nicholas Way | 16.93 | 195914 | 51°21′42″N 0°11′40″W﻿ / ﻿51.3618°N 0.1945°W | 13207 | 14474 | 4586 | 57 | 1393 | 2308 | NaN | 39533 | 25409 | 100987 | . 29 Tower Hamlets | Tower Hamlets London Borough Council | Labour | Town Hall, Mulberry Place, 5 Clove Crescent | 7.63 | 272890 | 51°30′36″N 0°00′21″W﻿ / ﻿51.5099°N 0.0059°W | 21510 | 21593 | 23408 | 124 | 4268 | 10050 | NaN | 87620 | 59993 | 228613 | . 30 Waltham Forest | Waltham Forest London Borough Council | Labour | Waltham Forest Town Hall, Forest Road | 14.99 | 265797 | 51°35′27″N 0°00′48″W﻿ / ﻿51.5908°N 0.0134°W | 25565 | 20459 | 14101 | 236 | 3040 | 10606 | NaN | 77940 | 51898 | 203879 | . 31 Wandsworth | Wandsworth London Borough Council | Conservative | The Town Hall, Wandsworth High Street | 13.23 | 310516 | 51°27′24″N 0°11′28″W﻿ / ﻿51.4567°N 0.1910°W | 25533 | 19630 | 9493 | 161 | 3091 | 8398 | NaN | 92523 | 45865 | 204741 | . 32 Westminster | Westminster City Council | Conservative | Westminster City Hall, 64 Victoria Street | 8.29 | 226841 | 51°29′50″N 0°08′14″W﻿ / ﻿51.4973°N 0.1372°W | 29295 | 20405 | 34031 | 273 | 6148 | 15752 | NaN | 277617 | 71448 | 455028 | . Ld_crime.shape . (33, 17) . . Exploratory Data Analysis . London_crime.describe() . Burglary Criminal Damage Drugs Fraud or Forgery Other Notifiable Offenses Robbery Sexual Offences Theft and Handling Violence Against the Person Total . count 33.000000 | 33.000000 | 33.000000 | 33.000000 | 33.000000 | 33.000000 | 33.000000 | 33.000000 | 33.000000 | 33.000000 | . mean 22857.363636 | 19119.333333 | 14265.606061 | 161.363636 | 3222.696970 | 7844.636364 | 38.575758 | 80662.454545 | 47214.575758 | 195386.606061 | . std 7452.366846 | 5942.903618 | 7544.259564 | 81.603775 | 1362.107294 | 4677.643075 | 15.139002 | 45155.624776 | 17226.165191 | 79148.057551 | . min 15.000000 | 16.000000 | 33.000000 | 0.000000 | 17.000000 | 24.000000 | 0.000000 | 561.000000 | 114.000000 | 780.000000 | . 25% 18103.000000 | 17244.000000 | 8942.000000 | 106.000000 | 2358.000000 | 4744.000000 | 27.000000 | 52609.000000 | 33968.000000 | 149447.000000 | . 50% 24871.000000 | 20405.000000 | 14101.000000 | 157.000000 | 3293.000000 | 7688.000000 | 40.000000 | 77940.000000 | 50943.000000 | 203879.000000 | . 75% 27980.000000 | 22755.000000 | 18389.000000 | 207.000000 | 3963.000000 | 10084.000000 | 47.000000 | 92523.000000 | 59993.000000 | 228613.000000 | . max 36981.000000 | 31218.000000 | 34031.000000 | 323.000000 | 6504.000000 | 18408.000000 | 71.000000 | 277617.000000 | 72726.000000 | 455028.000000 | . import matplotlib as mpl import matplotlib.pyplot as plt import matplotlib.cm as cm import matplotlib.colors as colors mpl.style.use(&#39;ggplot&#39;) . Check if the column names are strings. . Ld_crime.columns = list(map(str, Ld_crime.columns)) # check the column labels type all(isinstance(column, str) for column in Ld_crime.columns) . True . Let&#39;s sort the total crimes in descending order to see 5 boroughs with the highest number of crimes. . Ld_crime.sort_values([&#39;Total&#39;], ascending=False, axis=0, inplace=True) df_top5 = Ld_crime.head() df_top5 . Borough Local authority Political control Headquarters Area (sq mi) Population Co-ordinates Burglary Criminal Damage Drugs Fraud or Forgery Other Notifiable Offenses Robbery Sexual Offenses Theft and Handling Violence Against the Person Total . 32 Westminster | Westminster City Council | Conservative | Westminster City Hall, 64 Victoria Street | 8.29 | 226841 | 51°29′50″N 0°08′14″W﻿ / ﻿51.4973°N 0.1372°W | 29295 | 20405 | 34031 | 273 | 6148 | 15752 | NaN | 277617 | 71448 | 455028 | . 21 Lambeth | Lambeth London Borough Council | Labour | Lambeth Town Hall, Brixton Hill | 10.36 | 314242 | 51°27′39″N 0°06′59″W﻿ / ﻿51.4607°N 0.1163°W | 30199 | 26136 | 25083 | 137 | 4520 | 18408 | NaN | 114899 | 72726 | 292178 | . 27 Southwark | Southwark London Borough Council | Labour | 160 Tooley Street | 11.14 | 298464 | 51°30′13″N 0°04′49″W﻿ / ﻿51.5035°N 0.0804°W | 27980 | 24450 | 27381 | 321 | 4696 | 16153 | NaN | 109432 | 68356 | 278809 | . 5 Camden | Camden London Borough Council | Labour | Camden Town Hall, Judd Street | 8.40 | 229719 | 51°31′44″N 0°07′32″W﻿ / ﻿51.5290°N 0.1255°W | 27939 | 18482 | 21816 | 123 | 3857 | 9286 | NaN | 140596 | 53012 | 275147 | . 24 Newham | Newham London Borough Council | Labour | Newham Dockside, 1000 Dockside Road | 13.98 | 318227 | 51°30′28″N 0°02′49″E﻿ / ﻿51.5077°N 0.0469°E | 25356 | 24177 | 18389 | 323 | 4456 | 16913 | NaN | 106146 | 66221 | 262024 | . Let&#39;s visualize these 5 boroughs. . df_tt = df_top5[[&#39;Borough&#39;,&#39;Total&#39;]] df_tt.set_index(&#39;Borough&#39;,inplace = True) ax = df_tt.plot(kind=&#39;bar&#39;, figsize=(10, 6), rot=0) ax.set_ylabel(&#39;Number of Crimes&#39;) ax.set_xlabel(&#39;Borough&#39;) ax.set_title(&#39;London Boroughs with the Highest no. of crime&#39;) # create a function to display the percentage. for p in ax.patches: ax.annotate(np.round(p.get_height(),decimals=2), (p.get_x()+p.get_width()/2., p.get_height()), ha=&#39;center&#39;, va=&#39;center&#39;, xytext=(0, 10), textcoords=&#39;offset points&#39;, fontsize = 14 ) plt.show() . Okay. Now we know which places you need to stay away from. . Now, let&#39;s sort the total crimes in ascending order to see 5 boroughs with the lowest number of crimes. . Ld_crime.sort_values([&#39;Total&#39;], ascending=True, axis=0, inplace=True) df_bot5 = Ld_crime.head() df_bot5 . Borough Local authority Political control Headquarters Area (sq mi) Population Co-ordinates Burglary Criminal Damage Drugs Fraud or Forgery Other Notifiable Offenses Robbery Sexual Offenses Theft and Handling Violence Against the Person Total . 6 City of London | Corporation of London;Inner Temple;Middle Temple | ? | Guildhall | 1.12 | 7000 | 51°30′56″N 0°05′32″W﻿ / ﻿51.5155°N 0.0922°W | 15 | 16 | 33 | 0 | 17 | 24 | NaN | 561 | 114 | 780 | . 20 Kingston upon Thames | Kingston upon Thames London Borough Council | Liberal Democrat | Guildhall, High Street | 14.38 | 166793 | 51°24′31″N 0°18′23″W﻿ / ﻿51.4085°N 0.3064°W | 10131 | 10610 | 5682 | 65 | 1332 | 1702 | NaN | 38226 | 21540 | 89306 | . 26 Richmond upon Thames | Richmond upon Thames London Borough Council | Liberal Democrat | Civic Centre, 44 York Street | 22.17 | 191365 | 51°26′52″N 0°19′34″W﻿ / ﻿51.4479°N 0.3260°W | 16097 | 11722 | 4707 | 37 | 1420 | 1590 | NaN | 40858 | 20314 | 96771 | . 28 Sutton | Sutton London Borough Council | Liberal Democrat | Civic Offices, St Nicholas Way | 16.93 | 195914 | 51°21′42″N 0°11′40″W﻿ / ﻿51.3618°N 0.1945°W | 13207 | 14474 | 4586 | 57 | 1393 | 2308 | NaN | 39533 | 25409 | 100987 | . 2 Bexley | Bexley London Borough Council | Conservative | Civic Offices, 2 Watling Street | 23.38 | 236687 | 51°27′18″N 0°09′02″E﻿ / ﻿51.4549°N 0.1505°E | 14973 | 17244 | 7346 | 106 | 1999 | 2338 | NaN | 40071 | 30037 | 114136 | . Let&#39;s visualize these 5 boroughs. . df_bt = df_bot5[[&#39;Borough&#39;,&#39;Total&#39;]] df_bt.set_index(&#39;Borough&#39;,inplace = True) ax = df_bt.plot(kind=&#39;bar&#39;, figsize=(10, 6), rot=0) ax.set_ylabel(&#39;Number of Crimes&#39;) ax.set_xlabel(&#39;Borough&#39;) ax.set_title(&#39;London Boroughs with the least no. of crime&#39;) # create a function to display the percentage. for p in ax.patches: ax.annotate(np.round(p.get_height(),decimals=2), (p.get_x()+p.get_width()/2., p.get_height()), ha=&#39;center&#39;, va=&#39;center&#39;, xytext=(0, 10), textcoords=&#39;offset points&#39;, fontsize = 14 ) plt.show() . The borough City of London has the lowest crime recorded over the years. Let&#39;s look into its details. . df_col = df_bot5[df_bot5[&#39;Borough&#39;] == &#39;City of London&#39;] df_col = df_col[[&#39;Borough&#39;,&#39;Total&#39;,&#39;Area (sq mi)&#39;,&#39;Population&#39;]] df_col . Borough Total Area (sq mi) Population . 6 City of London | 780 | 1.12 | 7000 | . According to the London Boroughs Wikipedia page, the City of London is the 33rd principal division of Greater London, but it is not a London borough. You also realise that living in this area would be very expensive and you&#39;re not looking to spend most of your income on rent. So let&#39;s focus on the next safest borough i.e. Kingston upon Thames, just to keep our options open. . Visualize different types of crimes in the borough &#39;Kingston upon Thames&#39;. . df_bc1 = df_bot5[df_bot5[&#39;Borough&#39;] == &#39;Kingston upon Thames&#39;] df_bc = df_bc1[[&#39;Borough&#39;, &#39;Burglary&#39;, &#39;Criminal Damage&#39;, &#39;Drugs&#39;, &#39;Fraud or Forgery&#39;, &#39;Other Notifiable Offenses&#39;, &#39;Robbery&#39;, &#39;Sexual Offenses&#39;, &#39;Theft and Handling&#39;, &#39;Violence Against the Person&#39;]] df_bc.set_index(&#39;Borough&#39;, inplace=True) ax = df_bc.plot(kind=&#39;bar&#39;, figsize=(10, 6), rot=0) ax.set_ylabel(&#39;Number of Crimes&#39;) ax.set_xlabel(&#39;Borough&#39;) ax.set_title(&#39;Crimes in Kingston upon Thames&#39;) # create a function to display the percentage. for p in ax.patches: ax.annotate(np.round(p.get_height(),decimals=2), (p.get_x()+p.get_width()/2., p.get_height()), ha=&#39;center&#39;, va=&#39;center&#39;, xytext=(0, 10), textcoords=&#39;offset points&#39;, fontsize = 14 ) plt.show() . This borough is a great option for you to live in and is also extremely safe compared to the other boroughs. . . Dataset of the Neighborhood . The list of Neighborhoods in the Royal Borough of Kingston upon Thames can be found here. . Neighborhood = [&#39;Berrylands&#39;,&#39;Canbury&#39;,&#39;Chessington&#39;,&#39;Coombe&#39;,&#39;Kingston upon Thames&#39;,&#39;Kingston Vale&#39;, &#39;Malden Rushett&#39;,&#39;Motspur Park&#39;,&#39;New Malden&#39;,&#39;Norbiton&#39;,&#39;Old Malden&#39;,&#39;Surbiton&#39;,&#39;Tolworth&#39;] Borough = [&#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;, &#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;, &#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;,&#39;Kingston upon Thames&#39;] Latitude = [&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;] Longitude = [&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;] df_neigh = {&#39;Neighborhood&#39;:Neighborhood, &#39;Borough&#39;:Borough, &#39;Latitude&#39;:Latitude, &#39;Longitude&#39;:Longitude} kut_neigh = pd.DataFrame(data=df_neigh, columns=[&#39;Neighborhood&#39;, &#39;Borough&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;], index=None) kut_neigh . Neighborhood Borough Latitude Longitude . 0 Berrylands | Kingston upon Thames | | | . 1 Canbury | Kingston upon Thames | | | . 2 Chessington | Kingston upon Thames | | | . 3 Coombe | Kingston upon Thames | | | . 4 Kingston upon Thames | Kingston upon Thames | | | . 5 Kingston Vale | Kingston upon Thames | | | . 6 Malden Rushett | Kingston upon Thames | | | . 7 Motspur Park | Kingston upon Thames | | | . 8 New Malden | Kingston upon Thames | | | . 9 Norbiton | Kingston upon Thames | | | . 10 Old Malden | Kingston upon Thames | | | . 11 Surbiton | Kingston upon Thames | | | . 12 Tolworth | Kingston upon Thames | | | . Find the co-ordinates of each neighborhood in the Kingston upon Thames borough. . Latitude = [] Longitude = [] for i in range(len(Neighborhood)): address = &#39;{}, London, United Kingdom&#39;.format(Neighborhood[i]) geolocator = Nominatim(user_agent=&#39;London_agent&#39;) location = geolocator.geocode(address) Latitude.append(location.latitude) Longitude.append(location.longitude) print(Latitude, Longitude) . [51.3937811, 51.41749865, 51.358336, 51.4194499, 51.4096275, 51.43185, 51.3410523, 51.3909852, 51.4053347, 51.4099994, 51.382484, 51.3937557, 51.3788758] [-0.2848024, -0.30555280504926163, -0.2986216, -0.2653985, -0.3062621, -0.2581379, -0.3190757, -0.2488979, -0.2634066, -0.2873963, -0.2590897, -0.3033105, -0.2828604] . df_neigh = {&#39;Neighborhood&#39;:Neighborhood, &#39;Borough&#39;:Borough, &#39;Latitude&#39;:Latitude, &#39;Longitude&#39;:Longitude} kut_neigh = pd.DataFrame(data=df_neigh, columns=[&#39;Neighborhood&#39;, &#39;Borough&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;], index=None) kut_neigh . Neighborhood Borough Latitude Longitude . 0 Berrylands | Kingston upon Thames | 51.393781 | -0.284802 | . 1 Canbury | Kingston upon Thames | 51.417499 | -0.305553 | . 2 Chessington | Kingston upon Thames | 51.358336 | -0.298622 | . 3 Coombe | Kingston upon Thames | 51.419450 | -0.265398 | . 4 Kingston upon Thames | Kingston upon Thames | 51.409627 | -0.306262 | . 5 Kingston Vale | Kingston upon Thames | 51.431850 | -0.258138 | . 6 Malden Rushett | Kingston upon Thames | 51.341052 | -0.319076 | . 7 Motspur Park | Kingston upon Thames | 51.390985 | -0.248898 | . 8 New Malden | Kingston upon Thames | 51.405335 | -0.263407 | . 9 Norbiton | Kingston upon Thames | 51.409999 | -0.287396 | . 10 Old Malden | Kingston upon Thames | 51.382484 | -0.259090 | . 11 Surbiton | Kingston upon Thames | 51.393756 | -0.303310 | . 12 Tolworth | Kingston upon Thames | 51.378876 | -0.282860 | . Let&#39;s get the co-ordinates of Berrylands, which is the center neighborhood of the Kingston upon Thames borough. . address = &#39;Berrylands, London, United Kingdom&#39; geolocator = Nominatim(user_agent=&#39;ld_explorer&#39;) location = geolocator.geocode(address) latitude = location.latitude longitude = location.longitude print(&#39;The geographical co-ordinates of Berrylands, London are {}, {}.&#39;.format(latitude, longitude)) . The geographical co-ordinates of Berrylands, London are 51.3937811, -0.2848024. . Let&#39;s visualize the neighborhood of Kingston upon Thames borough. . map_lon = folium.Map(location=[latitude, longitude], zoom_start=12) # add markers to map for lat, lng, borough, neighborhood in zip(kut_neigh[&#39;Latitude&#39;], kut_neigh[&#39;Longitude&#39;], kut_neigh[&#39;Borough&#39;], kut_neigh[&#39;Neighborhood&#39;]): label = &#39;{}, {}&#39;.format(neighborhood, borough) label = folium.Popup(label, parse_html=True) folium.CircleMarker([lat, lng], radius=5, popup=label, color=&#39;blue&#39;, fill=True, fill_color=&#39;#3186cc&#39;, fill_opacity=0.7, parse_html=False).add_to(map_lon) map_lon . &lt;iframe src=&quot;about:blank&quot; style=&quot;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&quot; data-html= onload=&quot;this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute(&#39;data-html&#39;)));this.contentDocument.close();&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt; . Modeling . Find all the venues within a 500 meter radius of each neighborhood. | Perform one hot encoding on the venues data. | Group the venues by the neighborhood and calculate their mean. | Perform a k-means clustering. | . Create a function to extract the venues from each Neighborhood . def getNearbyVenues(names, latitudes, longitudes, radius=500): venues_list=[] for name, lat, lng in zip(names, latitudes, longitudes): print(name) # create the API request URL url = &#39;https://api.foursquare.com/v2/venues/explore?&amp;client_id={}&amp;client_secret={}&amp;v={}&amp;ll={},{}&amp;radius={}&amp;limit={}&#39;.format( CLIENT_ID, CLIENT_SECRET, VERSION, lat, lng, radius, LIMIT) # make the GET request results = requests.get(url).json()[&#39;response&#39;][&#39;groups&#39;][0][&#39;items&#39;] # return only relevant information for each nearby venue venues_list.append([( name, lat, lng, v[&#39;venue&#39;][&#39;name&#39;], v[&#39;venue&#39;][&#39;location&#39;][&#39;lat&#39;], v[&#39;venue&#39;][&#39;location&#39;][&#39;lng&#39;], v[&#39;venue&#39;][&#39;categories&#39;][0][&#39;name&#39;]) for v in results]) nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list]) nearby_venues.columns = [&#39;Neighborhood&#39;, &#39;Neighborhood Latitude&#39;, &#39;Neighborhood Longitude&#39;, &#39;Venue&#39;, &#39;Venue Latitude&#39;, &#39;Venue Longitude&#39;, &#39;Venue Category&#39;] return(nearby_venues) . kut_venues= getNearbyVenues(names=kut_neigh[&#39;Neighborhood&#39;], latitudes=kut_neigh[&#39;Latitude&#39;], longitudes=kut_neigh[&#39;Longitude&#39;]) . Berrylands Canbury Chessington Coombe Kingston upon Thames Kingston Vale Malden Rushett Motspur Park New Malden Norbiton Old Malden Surbiton Tolworth . print(kut_venues.shape) kut_venues.head() . (171, 7) . Neighborhood Neighborhood Latitude Neighborhood Longitude Venue Venue Latitude Venue Longitude Venue Category . 0 Berrylands | 51.393781 | -0.284802 | Surbiton Racket &amp; Fitness Club | 51.392676 | -0.290224 | Gym / Fitness Center | . 1 Berrylands | 51.393781 | -0.284802 | Alexandra Park | 51.394230 | -0.281206 | Park | . 2 Berrylands | 51.393781 | -0.284802 | K2 Bus Stop | 51.392302 | -0.281534 | Bus Stop | . 3 Canbury | 51.417499 | -0.305553 | Canbury Gardens | 51.417409 | -0.305300 | Park | . 4 Canbury | 51.417499 | -0.305553 | The Grey Horse | 51.414192 | -0.300759 | Pub | . kut_venues.groupby(&#39;Neighborhood&#39;).count() . Neighborhood Latitude Neighborhood Longitude Venue Venue Latitude Venue Longitude Venue Category . Neighborhood . Berrylands 3 | 3 | 3 | 3 | 3 | 3 | . Canbury 14 | 14 | 14 | 14 | 14 | 14 | . Coombe 1 | 1 | 1 | 1 | 1 | 1 | . Kingston Vale 4 | 4 | 4 | 4 | 4 | 4 | . Kingston upon Thames 50 | 50 | 50 | 50 | 50 | 50 | . Malden Rushett 4 | 4 | 4 | 4 | 4 | 4 | . Motspur Park 4 | 4 | 4 | 4 | 4 | 4 | . New Malden 8 | 8 | 8 | 8 | 8 | 8 | . Norbiton 28 | 28 | 28 | 28 | 28 | 28 | . Old Malden 3 | 3 | 3 | 3 | 3 | 3 | . Surbiton 33 | 33 | 33 | 33 | 33 | 33 | . Tolworth 19 | 19 | 19 | 19 | 19 | 19 | . print(&#39;There are {} uniques categories.&#39;.format(len(kut_venues[&#39;Venue Category&#39;].unique()))) . There are 72 uniques categories. . One hot encoding . kut_onehot = pd.get_dummies(kut_venues[[&#39;Venue Category&#39;]], prefix=&#39;&#39;, prefix_sep=&#39;&#39;) # add neighborhood column back to the dataframe kut_onehot[&#39;Neighborhood&#39;] = kut_venues[&#39;Neighborhood&#39;] # move neighborhood column to the first column fixed_columns = [kut_onehot.columns[-1]] + list(kut_onehot.columns[:-1]) kut_onehot = kut_onehot[fixed_columns] kut_onehot.head() . Neighborhood Asian Restaurant Athletics &amp; Sports Auto Garage Bakery Bar Beer Bar Bistro Bookstore Bowling Alley ... Spa Stationery Store Supermarket Sushi Restaurant Tea Room Thai Restaurant Theater Train Station Turkish Restaurant Wine Shop . 0 Berrylands | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 1 Berrylands | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 2 Berrylands | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 3 Canbury | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 4 Canbury | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 5 rows × 73 columns . Group the rows by neighborhood and take the mean of the frequency of coocurence of each category. . kut_grouped = kut_onehot.groupby(&#39;Neighborhood&#39;).mean().reset_index() kut_grouped . Neighborhood Asian Restaurant Athletics &amp; Sports Auto Garage Bakery Bar Beer Bar Bistro Bookstore Bowling Alley ... Spa Stationery Store Supermarket Sushi Restaurant Tea Room Thai Restaurant Theater Train Station Turkish Restaurant Wine Shop . 0 Berrylands | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | . 1 Canbury | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.071429 | 0.00 | 0.071429 | 0.000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | . 2 Coombe | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.000000 | 0.000 | 1.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | . 3 Kingston Vale | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | . 4 Kingston upon Thames | 0.02 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.02 | 0.000000 | 0.02 | 0.000000 | ... | 0.000000 | 0.02 | 0.020000 | 0.040 | 0.000000 | 0.040000 | 0.02 | 0.000000 | 0.02 | 0.000000 | . 5 Malden Rushett | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | . 6 Motspur Park | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | . 7 New Malden | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.125000 | 0.125 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | . 8 Norbiton | 0.00 | 0.035714 | 0.035714 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.035714 | 0.000 | 0.000000 | 0.035714 | 0.00 | 0.000000 | 0.00 | 0.035714 | . 9 Old Malden | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.00 | 0.333333 | 0.00 | 0.000000 | . 10 Surbiton | 0.00 | 0.000000 | 0.000000 | 0.030303 | 0.030303 | 0.00 | 0.030303 | 0.00 | 0.000000 | ... | 0.000000 | 0.00 | 0.030303 | 0.000 | 0.030303 | 0.030303 | 0.00 | 0.030303 | 0.00 | 0.000000 | . 11 Tolworth | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.052632 | ... | 0.000000 | 0.00 | 0.000000 | 0.000 | 0.000000 | 0.052632 | 0.00 | 0.052632 | 0.00 | 0.000000 | . 12 rows × 73 columns . kut_grouped.shape . (12, 73) . num_top_venues = 5 for hood in kut_grouped[&#39;Neighborhood&#39;]: print(&#39;-&#39;+hood+&#39;-&#39;) temp = kut_grouped[kut_grouped[&#39;Neighborhood&#39;] == hood].T.reset_index() temp.columns = [&#39;venue&#39;, &#39;freq&#39;] temp = temp.iloc[1:] temp[&#39;freq&#39;] = temp[&#39;freq&#39;].astype(float) temp = temp.round({&#39;freq&#39;: 2}) print(temp.sort_values(&#39;freq&#39;, ascending=False).reset_index(drop=True).head(num_top_venues)) print(&#39; n&#39;) . -Berrylands- venue freq 0 Gym / Fitness Center 0.33 1 Park 0.33 2 Bus Stop 0.33 3 Portuguese Restaurant 0.00 4 Plaza 0.00 -Canbury- venue freq 0 Pub 0.29 1 Plaza 0.07 2 Park 0.07 3 Hotel 0.07 4 Indian Restaurant 0.07 -Coombe- venue freq 0 Tea Room 1.0 1 Asian Restaurant 0.0 2 Market 0.0 3 Platform 0.0 4 Pizza Place 0.0 -Kingston Vale- venue freq 0 Grocery Store 0.25 1 Bar 0.25 2 Sandwich Place 0.25 3 Soccer Field 0.25 4 Asian Restaurant 0.00 -Kingston upon Thames- venue freq 0 Coffee Shop 0.12 1 Café 0.08 2 Department Store 0.06 3 Thai Restaurant 0.04 4 Clothing Store 0.04 -Malden Rushett- venue freq 0 Convenience Store 0.25 1 Restaurant 0.25 2 Garden Center 0.25 3 Pub 0.25 4 Park 0.00 -Motspur Park- venue freq 0 Gym 0.25 1 Restaurant 0.25 2 Park 0.25 3 Soccer Field 0.25 4 Mexican Restaurant 0.00 -New Malden- venue freq 0 Gym 0.12 1 Indian Restaurant 0.12 2 Bar 0.12 3 Gastropub 0.12 4 Korean Restaurant 0.12 -Norbiton- venue freq 0 Indian Restaurant 0.11 1 Italian Restaurant 0.07 2 Food 0.07 3 Pub 0.07 4 Wine Shop 0.04 -Old Malden- venue freq 0 Pub 0.33 1 Food 0.33 2 Train Station 0.33 3 Platform 0.00 4 Pizza Place 0.00 -Surbiton- venue freq 0 Coffee Shop 0.18 1 Pub 0.12 2 Italian Restaurant 0.06 3 Pharmacy 0.06 4 Grocery Store 0.06 -Tolworth- venue freq 0 Grocery Store 0.16 1 Restaurant 0.11 2 Indian Restaurant 0.05 3 Bus Stop 0.05 4 Discount Store 0.05 . Create a dataframe of the venues. . First, create a function to sort the venues in descending order. . def return_most_common_venues(row, num_top_venues): row_categories = row.iloc[1:] row_categories_sorted = row_categories.sort_values(ascending=False) return row_categories_sorted.index.values[0:num_top_venues] . Create the new dataframe and display yhe top 10 venues for each neighborhood. . num_top_venues = 10 indicators = [&#39;st&#39;, &#39;nd&#39;, &#39;rd&#39;] # create columns according to tthe number of top venues columns = [&#39;Neighborhood&#39;] for ind in np.arange(num_top_venues): try: columns.append(&#39;{}{} Most Common Venue&#39;.format(ind+1, indicators[ind])) except: columns.append(&#39;{}th Most Common Venue&#39;.format(ind+1)) # create a new dataframe neighborhoods_venues_sorted = pd.DataFrame(columns=columns) neighborhoods_venues_sorted[&#39;Neighborhood&#39;] = kut_grouped[&#39;Neighborhood&#39;] for ind in np.arange(kut_grouped.shape[0]): neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(kut_grouped.iloc[ind, :], num_top_venues) neighborhoods_venues_sorted.head() . Neighborhood 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 Berrylands | Gym / Fitness Center | Park | Bus Stop | Wine Shop | Fast Food Restaurant | Deli / Bodega | Department Store | Discount Store | Electronics Store | Farmers Market | . 1 Canbury | Pub | Shop &amp; Service | Spa | Plaza | Café | Indian Restaurant | Hotel | Park | Supermarket | Gym / Fitness Center | . 2 Coombe | Tea Room | Wine Shop | Fast Food Restaurant | Cosmetics Shop | Deli / Bodega | Department Store | Discount Store | Electronics Store | Farmers Market | Fish &amp; Chips Shop | . 3 Kingston Vale | Grocery Store | Bar | Sandwich Place | Soccer Field | Furniture / Home Store | Garden Center | Fried Chicken Joint | French Restaurant | Food | Fish &amp; Chips Shop | . 4 Kingston upon Thames | Coffee Shop | Café | Department Store | Thai Restaurant | Sushi Restaurant | Burger Joint | Pub | Clothing Store | Italian Restaurant | Asian Restaurant | . Cluster similar neighborhoods together using k-means clustering . from sklearn.cluster import KMeans # set the number of clusters kclusters = 5 kut_grouped_clustering = kut_grouped.drop(&#39;Neighborhood&#39;, 1) # run k-means clustering kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(kut_grouped_clustering) # check cluster labels generated for each row in the dataframe kmeans.labels_[0:10] . array([3, 1, 0, 2, 1, 1, 2, 1, 1, 4]) . neighborhoods_venues_sorted.insert(0,&#39;Cluster Labels&#39;, kmeans.labels_) kut_merged = kut_neigh # merge kut_grouped with kut_neigh to add latitude/longitude for each neighborhood kut_merged = kut_merged.join(neighborhoods_venues_sorted.set_index(&#39;Neighborhood&#39;), on=&#39;Neighborhood&#39;) kut_merged.head() . Neighborhood Borough Latitude Longitude Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 Berrylands | Kingston upon Thames | 51.393781 | -0.284802 | 3.0 | Gym / Fitness Center | Park | Bus Stop | Wine Shop | Fast Food Restaurant | Deli / Bodega | Department Store | Discount Store | Electronics Store | Farmers Market | . 1 Canbury | Kingston upon Thames | 51.417499 | -0.305553 | 1.0 | Pub | Shop &amp; Service | Spa | Plaza | Café | Indian Restaurant | Hotel | Park | Supermarket | Gym / Fitness Center | . 2 Chessington | Kingston upon Thames | 51.358336 | -0.298622 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 3 Coombe | Kingston upon Thames | 51.419450 | -0.265398 | 0.0 | Tea Room | Wine Shop | Fast Food Restaurant | Cosmetics Shop | Deli / Bodega | Department Store | Discount Store | Electronics Store | Farmers Market | Fish &amp; Chips Shop | . 4 Kingston upon Thames | Kingston upon Thames | 51.409627 | -0.306262 | 1.0 | Coffee Shop | Café | Department Store | Thai Restaurant | Sushi Restaurant | Burger Joint | Pub | Clothing Store | Italian Restaurant | Asian Restaurant | . kut_merged.info() . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; RangeIndex: 13 entries, 0 to 12 Data columns (total 15 columns): # Column Non-Null Count Dtype -- -- 0 Neighborhood 13 non-null object 1 Borough 13 non-null object 2 Latitude 13 non-null float64 3 Longitude 13 non-null float64 4 Cluster Labels 12 non-null float64 5 1st Most Common Venue 12 non-null object 6 2nd Most Common Venue 12 non-null object 7 3rd Most Common Venue 12 non-null object 8 4th Most Common Venue 12 non-null object 9 5th Most Common Venue 12 non-null object 10 6th Most Common Venue 12 non-null object 11 7th Most Common Venue 12 non-null object 12 8th Most Common Venue 12 non-null object 13 9th Most Common Venue 12 non-null object 14 10th Most Common Venue 12 non-null object dtypes: float64(3), object(12) memory usage: 1.6+ KB . kut_merged.dropna(inplace=True) . kut_merged.shape . (12, 15) . kut_merged[&#39;Cluster Labels&#39;] = kut_merged[&#39;Cluster Labels&#39;].astype(int) kut_merged.info() . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Int64Index: 12 entries, 0 to 12 Data columns (total 15 columns): # Column Non-Null Count Dtype -- -- 0 Neighborhood 12 non-null object 1 Borough 12 non-null object 2 Latitude 12 non-null float64 3 Longitude 12 non-null float64 4 Cluster Labels 12 non-null int32 5 1st Most Common Venue 12 non-null object 6 2nd Most Common Venue 12 non-null object 7 3rd Most Common Venue 12 non-null object 8 4th Most Common Venue 12 non-null object 9 5th Most Common Venue 12 non-null object 10 6th Most Common Venue 12 non-null object 11 7th Most Common Venue 12 non-null object 12 8th Most Common Venue 12 non-null object 13 9th Most Common Venue 12 non-null object 14 10th Most Common Venue 12 non-null object dtypes: float64(2), int32(1), object(12) memory usage: 1.5+ KB . Visualize the clusters . map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11.5) # set color scheme for the clusters x = np.arange(kclusters) ys = [i + x + (i*x)**2 for i in range(kclusters)] colors_array = cm.rainbow(np.linspace(0, 1, len(ys))) rainbow = [colors.rgb2hex(i) for i in colors_array] # add markers to the map markers_colors = [] for lat, lon, poi, cluster in zip(kut_merged[&#39;Latitude&#39;], kut_merged[&#39;Longitude&#39;], kut_merged[&#39;Neighborhood&#39;], kut_merged[&#39;Cluster Labels&#39;]): label = folium.Popup(str(poi) + &#39; Cluster &#39; + str(cluster), parse_html=True) folium.CircleMarker( [lat, lon], radius=8, popup=label, color=rainbow[cluster-1], fill=True, fill_color=rainbow[cluster-1], fill_opacity=0.5).add_to(map_clusters) map_clusters . &lt;iframe src=&quot;about:blank&quot; style=&quot;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&quot; data-html= onload=&quot;this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute(&#39;data-html&#39;)));this.contentDocument.close();&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt; Each cluster is color coded for the ease of presentation. We can see that the majority of the neighborhoods fall in the purple cluster, which is Cluster 1. Three neighborhoods have their own cluster, which are Red, Green and Yellow, i.e. Cluster 0, 3 and 4 respectively. The Blue cluster, which is Cluster 2, consists of three neighborhoods. . Analysis . Analyze each of the clusters to identify the characteristics of each cluster and the neighborhoods in them. . Examine the first cluster. . kut_merged[kut_merged[&#39;Cluster Labels&#39;] == 0] . Neighborhood Borough Latitude Longitude Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 3 Coombe | Kingston upon Thames | 51.41945 | -0.265398 | 0 | Tea Room | Wine Shop | Fast Food Restaurant | Cosmetics Shop | Deli / Bodega | Department Store | Discount Store | Electronics Store | Farmers Market | Fish &amp; Chips Shop | . Cluster 0 has only one neighborhood in it. The most common venues are Tea Rooms, Wine Shops, and Fast Food Restaurants. . Examine the second cluster. . kut_merged[kut_merged[&#39;Cluster Labels&#39;] == 1] . Neighborhood Borough Latitude Longitude Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 1 Canbury | Kingston upon Thames | 51.417499 | -0.305553 | 1 | Pub | Shop &amp; Service | Spa | Plaza | Café | Indian Restaurant | Hotel | Park | Supermarket | Gym / Fitness Center | . 4 Kingston upon Thames | Kingston upon Thames | 51.409627 | -0.306262 | 1 | Coffee Shop | Café | Department Store | Thai Restaurant | Sushi Restaurant | Burger Joint | Pub | Clothing Store | Italian Restaurant | Asian Restaurant | . 6 Malden Rushett | Kingston upon Thames | 51.341052 | -0.319076 | 1 | Convenience Store | Pub | Garden Center | Restaurant | Farmers Market | Cosmetics Shop | Deli / Bodega | Department Store | Discount Store | Electronics Store | . 8 New Malden | Kingston upon Thames | 51.405335 | -0.263407 | 1 | Indian Restaurant | Korean Restaurant | Gastropub | Gym | Bar | Sushi Restaurant | Supermarket | Chinese Restaurant | Department Store | Discount Store | . 9 Norbiton | Kingston upon Thames | 51.409999 | -0.287396 | 1 | Indian Restaurant | Pub | Italian Restaurant | Food | Hardware Store | Pizza Place | Pharmacy | Japanese Restaurant | Hotel | Wine Shop | . 11 Surbiton | Kingston upon Thames | 51.393756 | -0.303310 | 1 | Coffee Shop | Pub | Grocery Store | Italian Restaurant | Pharmacy | Breakfast Spot | Gastropub | Fast Food Restaurant | Farmers Market | Gym / Fitness Center | . Cluster 1 has six neighborhods, the highest number of neighborhoods, in it. After examining these neighborhoods, we can see that the most common venues are Restaurants, Coffee shops, Cafes, Convenience Stores, Department Stores, Grocery Stores, Pubs, Shops &amp; Services, and Spas. There are also Gyms, Spas and other Stores around. This seems to be a great cluster to live in. . Examine the third cluster. . kut_merged[kut_merged[&#39;Cluster Labels&#39;] == 2] . Neighborhood Borough Latitude Longitude Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 5 Kingston Vale | Kingston upon Thames | 51.431850 | -0.258138 | 2 | Grocery Store | Bar | Sandwich Place | Soccer Field | Furniture / Home Store | Garden Center | Fried Chicken Joint | French Restaurant | Food | Fish &amp; Chips Shop | . 7 Motspur Park | Kingston upon Thames | 51.390985 | -0.248898 | 2 | Soccer Field | Gym | Park | Restaurant | Farmers Market | Cosmetics Shop | Deli / Bodega | Department Store | Discount Store | Electronics Store | . 12 Tolworth | Kingston upon Thames | 51.378876 | -0.282860 | 2 | Grocery Store | Restaurant | Discount Store | Pharmacy | Pizza Place | Furniture / Home Store | Italian Restaurant | Bus Stop | Indian Restaurant | Hotel | . Cluster 2 has three bneighborhoods in it. The most common venues are Grocery Stores, Soccer Fields, Bars, Restaurants, Gyms, and Parks. . Examine the fourth cluster. . kut_merged[kut_merged[&#39;Cluster Labels&#39;] == 3] . Neighborhood Borough Latitude Longitude Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 Berrylands | Kingston upon Thames | 51.393781 | -0.284802 | 3 | Gym / Fitness Center | Park | Bus Stop | Wine Shop | Fast Food Restaurant | Deli / Bodega | Department Store | Discount Store | Electronics Store | Farmers Market | . Cluster 3 has only one neighborhood in it. The most common venues are Gyms, Parks, and Bus stops. . Examine the fifth cluster. . kut_merged[kut_merged[&#39;Cluster Labels&#39;] == 4] . Neighborhood Borough Latitude Longitude Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 10 Old Malden | Kingston upon Thames | 51.382484 | -0.25909 | 4 | Train Station | Pub | Food | Wine Shop | Farmers Market | Cosmetics Shop | Deli / Bodega | Department Store | Discount Store | Electronics Store | . Cluster 4 has only one neighborhood in it. The most common venues are Train Stations, Pubs, and Food Joints. . . Results . The aim of this project is to help people who want to relocate to the safest borough in London. Expats can chose the neighborhoods to which they want to relocate based on the most common venues in it. For example, if a person is looking for a neighborhood with good connectivity and public transportation we can see that Clusters 3 and 4 have Bus Stops and Train Stations respectively, as the most common venues. If a person is looking for a neighborhood with stores and restaurants in a close proximity, then the neighborhoods in the Cluster 1 is suitable. For a family, I feel that the neighborhoods in Cluster 2 are more suitable due to the common venues such as Parks, Gym/Fitness centers, Bus Stops, Restaurants, Grocery Stores and Soccer Fields, which is ideal for a family. . . Conclusion . This project helps a person get a better understanding of the neighborhoods with respect to the most common venues in that neighborhood. It is always helpful to make use of technology to stay one step ahead i.e. finding out more about places before moving into a neighborhood. We have just taken safety as a primary concern to shortlist the borough of London. The future of this project includes taking other factors such as cost of living in the areas into consideration to shortlist the boroughs based on safety and a predefined budget. .",
            "url": "https://shirolepranav.github.io/blog/segmentation/k-means%20clustering/web%20scraping/2020/05/05/live-in-London.html",
            "relUrl": "/segmentation/k-means%20clustering/web%20scraping/2020/05/05/live-in-London.html",
            "date": " • May 5, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Predicting Wine Quality",
            "content": "In this blog post we will be analyzing the quality of red and white wines, and check which are the attributes that affect wine quality the most. . There are two datasets, related to red and white Vinho Verde wine samples, from the north of Portugal. The datasets can be downloaded here. The goal is to model wine quality based on physicochemical tests. Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.). . Attribute Information: . Input variables (based on physicochemical tests): . fixed acidity | volatile acidity | citric acid | residual sugar | chlorides | free sulfur dioxide | total sulfur dioxide | density | pH | sulphates | alcohol | Output variable (based on sensory data): . quality (score between 0 and 10) | . Red Wine . Let&#39;s first consider the red wine dataset. . Data Analysis . import numpy as np import pandas as pd import matplotlib.pyplot as plt %matplotlib inline import seaborn as sns . df_red = pd.read_csv(&#39;winequality-red.csv&#39;) df_red.head() . fixed acidity volatile acidity citric acid residual sugar chlorides free sulfur dioxide total sulfur dioxide density pH sulphates alcohol quality . 0 7.4 | 0.70 | 0.00 | 1.9 | 0.076 | 11.0 | 34.0 | 0.9978 | 3.51 | 0.56 | 9.4 | 5 | . 1 7.8 | 0.88 | 0.00 | 2.6 | 0.098 | 25.0 | 67.0 | 0.9968 | 3.20 | 0.68 | 9.8 | 5 | . 2 7.8 | 0.76 | 0.04 | 2.3 | 0.092 | 15.0 | 54.0 | 0.9970 | 3.26 | 0.65 | 9.8 | 5 | . 3 11.2 | 0.28 | 0.56 | 1.9 | 0.075 | 17.0 | 60.0 | 0.9980 | 3.16 | 0.58 | 9.8 | 6 | . 4 7.4 | 0.70 | 0.00 | 1.9 | 0.076 | 11.0 | 34.0 | 0.9978 | 3.51 | 0.56 | 9.4 | 5 | . df_red.shape . (1599, 12) . There are 1,599 samples and 12 features, including our target feature - the wine quality. . df_red.info() . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; RangeIndex: 1599 entries, 0 to 1598 Data columns (total 12 columns): # Column Non-Null Count Dtype -- -- 0 fixed acidity 1599 non-null float64 1 volatile acidity 1599 non-null float64 2 citric acid 1599 non-null float64 3 residual sugar 1599 non-null float64 4 chlorides 1599 non-null float64 5 free sulfur dioxide 1599 non-null float64 6 total sulfur dioxide 1599 non-null float64 7 density 1599 non-null float64 8 pH 1599 non-null float64 9 sulphates 1599 non-null float64 10 alcohol 1599 non-null float64 11 quality 1599 non-null int64 dtypes: float64(11), int64(1) memory usage: 150.0 KB . All of our dataset is numeric and there are no missing values. . df_red.describe() . fixed acidity volatile acidity citric acid residual sugar chlorides free sulfur dioxide total sulfur dioxide density pH sulphates alcohol quality . count 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | 1599.000000 | . mean 8.319637 | 0.527821 | 0.270976 | 2.538806 | 0.087467 | 15.874922 | 46.467792 | 0.996747 | 3.311113 | 0.658149 | 10.422983 | 5.636023 | . std 1.741096 | 0.179060 | 0.194801 | 1.409928 | 0.047065 | 10.460157 | 32.895324 | 0.001887 | 0.154386 | 0.169507 | 1.065668 | 0.807569 | . min 4.600000 | 0.120000 | 0.000000 | 0.900000 | 0.012000 | 1.000000 | 6.000000 | 0.990070 | 2.740000 | 0.330000 | 8.400000 | 3.000000 | . 25% 7.100000 | 0.390000 | 0.090000 | 1.900000 | 0.070000 | 7.000000 | 22.000000 | 0.995600 | 3.210000 | 0.550000 | 9.500000 | 5.000000 | . 50% 7.900000 | 0.520000 | 0.260000 | 2.200000 | 0.079000 | 14.000000 | 38.000000 | 0.996750 | 3.310000 | 0.620000 | 10.200000 | 6.000000 | . 75% 9.200000 | 0.640000 | 0.420000 | 2.600000 | 0.090000 | 21.000000 | 62.000000 | 0.997835 | 3.400000 | 0.730000 | 11.100000 | 6.000000 | . max 15.900000 | 1.580000 | 1.000000 | 15.500000 | 0.611000 | 72.000000 | 289.000000 | 1.003690 | 4.010000 | 2.000000 | 14.900000 | 8.000000 | . To understand how much each attribute correlates with the wine quality, we can compute the standard correlation coefficient or Pearson&#39;s r between every pair of attributes. . corr_matrix = df_red.corr() corr_matrix[&#39;quality&#39;].sort_values(ascending=False) . quality 1.000000 alcohol 0.476166 sulphates 0.251397 citric acid 0.226373 fixed acidity 0.124052 residual sugar 0.013732 free sulfur dioxide -0.050656 pH -0.057731 chlorides -0.128907 density -0.174919 total sulfur dioxide -0.185100 volatile acidity -0.390558 Name: quality, dtype: float64 . We now know the features that most affect the wine quality. Wine quality is directly proportional to the amount of alcohol, sulphates, citric acid. Wine quality is inversely proportional to the amount of volatile acidity, total sulfur dioxide, density. . . Data Visualization . Let&#39;s visualize the data by creating histograms and density plots. We can understand the distribution for separate attributes. . import matplotlib.pyplot as plt %matplotlib inline import seaborn as sns . df_red.hist(bins=10, figsize=(20, 15)) plt.show() . df_red.plot(kind=&#39;density&#39;, subplots=True, figsize=(20,15), layout=(4,3), sharex=False) plt.show() . sns.distplot(df_red[&#39;quality&#39;], hist=True, kde=True, bins=&#39;auto&#39;, color = &#39;darkblue&#39;, hist_kws={&#39;edgecolor&#39;:&#39;black&#39;}, kde_kws={&#39;linewidth&#39;: 4}) plt.show() . The data distribution for the alcohol, citric acid and sulfur dioxide content atrributes is positively skewed. The data distribution for the density and pH attributes is quite normally distributed. The wine quality data distribution is a bimodal distribution and there are more wines with an average quality than wines with good or bad quality. . from pandas.plotting import scatter_matrix sm = scatter_matrix(df_red, figsize=(12, 12), diagonal=&#39;kde&#39;) #Change label rotation [s.xaxis.label.set_rotation(40) for s in sm.reshape(-1)] [s.yaxis.label.set_rotation(0) for s in sm.reshape(-1)] #May need to offset label when rotating to prevent overlap of figure [s.get_yaxis().set_label_coords(-0.6,0.5) for s in sm.reshape(-1)] #Hide all ticks [s.set_xticks(()) for s in sm.reshape(-1)] [s.set_yticks(()) for s in sm.reshape(-1)] plt.show() . Let&#39;s create a pivot table that describes the median value of each feature for each quality score. . column_names = [&#39;fixed acidity&#39;, &#39;volatile acidity&#39;, &#39;citric acid&#39;, &#39;residual sugar&#39;, &#39;chlorides&#39;, &#39;free sulfur dioxide&#39;, &#39;total sulfur dioxide&#39;, &#39;density&#39;, &#39;pH&#39;, &#39;sulphates&#39;, &#39;alcohol&#39;] df_red_pivot_table = df_red.pivot_table(column_names, [&#39;quality&#39;], aggfunc=&#39;median&#39;) df_red_pivot_table . alcohol chlorides citric acid density fixed acidity free sulfur dioxide pH residual sugar sulphates total sulfur dioxide volatile acidity . quality . 3 9.925 | 0.0905 | 0.035 | 0.997565 | 7.50 | 6.0 | 3.39 | 2.1 | 0.545 | 15.0 | 0.845 | . 4 10.000 | 0.0800 | 0.090 | 0.996500 | 7.50 | 11.0 | 3.37 | 2.1 | 0.560 | 26.0 | 0.670 | . 5 9.700 | 0.0810 | 0.230 | 0.997000 | 7.80 | 15.0 | 3.30 | 2.2 | 0.580 | 47.0 | 0.580 | . 6 10.500 | 0.0780 | 0.260 | 0.996560 | 7.90 | 14.0 | 3.32 | 2.2 | 0.640 | 35.0 | 0.490 | . 7 11.500 | 0.0730 | 0.400 | 0.995770 | 8.80 | 11.0 | 3.28 | 2.3 | 0.740 | 27.0 | 0.370 | . 8 12.150 | 0.0705 | 0.420 | 0.994940 | 8.25 | 7.5 | 3.23 | 2.1 | 0.740 | 21.5 | 0.370 | . We can see just how much effect does the alcohol content and volatile acidity have on the quality of the wine. . We can plot a correlation matrix to see how two variables interact, both in direction and magnitude. . column_names = [&#39;fixed acidity&#39;, &#39;volatile acidity&#39;, &#39;citric acid&#39;, &#39;residual sugar&#39;, &#39;chlorides&#39;, &#39;free sulfur dioxide&#39;, &#39;total sulfur dioxide&#39;, &#39;density&#39;, &#39;pH&#39;, &#39;sulphates&#39;, &#39;alcohol&#39;, &#39;quality&#39;] # plot correlation matrix fig, ax = plt.subplots(figsize=(20, 20)) colormap = sns.diverging_palette(220, 10, as_cmap=True) sns.heatmap(corr_matrix, cmap=colormap, annot=True, fmt=&#39;.2f&#39;, annot_kws={&#39;size&#39;: 20}) ax.set_xticklabels(column_names, rotation=45, horizontalalignment=&#39;right&#39;, fontsize=20); ax.set_yticklabels(column_names, fontsize=20); plt.show() . . Data Cleaning . In our dataset, there aren&#39;t any missing values, outliers, or attributes that provide no useful information for the task. So, we could conclude than our dataset is quite clean. The wine preference scores vary from 3 to 8, so it&#39;s straightforward to categorize them into &#39;bad&#39; or &#39;good&#39; quality of wines. We will assign discrete values of 0 and 1 for the corresponding categories. . bins = (2, 6, 8) group_names = [&#39;bad&#39;, &#39;good&#39;] df_red[&#39;quality&#39;] = pd.cut(df_red[&#39;quality&#39;], bins = bins, labels = group_names) . from sklearn.preprocessing import LabelEncoder # let&#39;s assign labels to our quality variable label_quality = LabelEncoder() # Bad becomes 0 and good becomes 1 df_red[&#39;quality&#39;] = label_quality.fit_transform(df_red[&#39;quality&#39;]) print(df_red[&#39;quality&#39;].value_counts()) sns.countplot(df_red[&#39;quality&#39;]) plt.show() . 0 1382 1 217 Name: quality, dtype: int64 . As we can see, there are far more bad quality red wines (1,382) than good quality ones (217). . . Train/Test Split . Now we will split the dataset into a training set and a testing set. . X = df_red.drop(&#39;quality&#39;, axis=1) y = df_red[&#39;quality&#39;] . from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=42) . . Data Preprocessing . We will scale the features so as to get optimized results. . from sklearn.preprocessing import StandardScaler sc = StandardScaler() X_train = sc.fit_transform(X_train) X_test = sc.fit_transform(X_test) . . Modeling . We will be evaluating 8 different algorithms. . Support Vector Classifier | Stochastic Gradient Decent Classifier | Random Forest Classifier | Decision Tree Classifier | Gaussian Naive Bayes | K-Neighbors Classifier | Ada Boost Classifier | Logistic Regression | The key to a fair comparison of machine learning algorithms is ensuring that each algorithm is evaluated in the same way on the same data. K-fold Cross Validation provides a solution to this problem by dividing the data into folds and ensuring that each fold is used as a testing set at some point. . from sklearn.svm import SVC from sklearn.linear_model import SGDClassifier from sklearn.neighbors import KNeighborsClassifier from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier from sklearn.tree import DecisionTreeClassifier from sklearn.discriminant_analysis import LinearDiscriminantAnalysis from sklearn.naive_bayes import GaussianNB from sklearn.linear_model import LogisticRegression from sklearn import model_selection from sklearn.model_selection import GridSearchCV, cross_val_score . from warnings import simplefilter # ignore all future warnings simplefilter(action=&#39;ignore&#39;, category=FutureWarning) . seed = 7 # prepare models models = [] models.append((&#39;SupportVectorClassifier&#39;, SVC())) models.append((&#39;StochasticGradientDecentC&#39;, SGDClassifier())) models.append((&#39;RandomForestClassifier&#39;, RandomForestClassifier())) models.append((&#39;DecisionTreeClassifier&#39;, DecisionTreeClassifier())) models.append((&#39;GaussianNB&#39;, GaussianNB())) models.append((&#39;KNeighborsClassifier&#39;, KNeighborsClassifier())) models.append((&#39;AdaBoostClassifier&#39;, AdaBoostClassifier())) models.append((&#39;LogisticRegression&#39;, LogisticRegression()))# evaluate each model in turn results = [] names = [] scoring = &#39;accuracy&#39; for name, model in models: kfold = model_selection.KFold(n_splits=10, random_state=seed) cv_results = model_selection.cross_val_score(model, X_train, y_train, cv=kfold, scoring=scoring) results.append(cv_results) names.append(name) msg = &quot;%s: %f (%f)&quot; % (name, cv_results.mean(), cv_results.std()) print(msg) # boxplot algorithm comparison fig = plt.figure(figsize=(40, 20)) fig.suptitle(&#39;Algorithm Comparison&#39;, fontsize=40) ax = fig.add_subplot(111) plt.boxplot(results) ax.set_xticklabels(names, fontdict={&#39;fontsize&#39;: 20}) plt.show() . SupportVectorClassifier: 0.889782 (0.023210) StochasticGradientDecentC: 0.849151 (0.044240) RandomForestClassifier: 0.912457 (0.029968) DecisionTreeClassifier: 0.877264 (0.028120) GaussianNB: 0.836559 (0.022781) KNeighborsClassifier: 0.873364 (0.021081) AdaBoostClassifier: 0.885876 (0.019715) LogisticRegression: 0.883526 (0.031077) . The Box Plots of these algorithms&#39; accuracy distribution is quite symmetrical, with negligible outliers. The adjacent box plot values are close together, which correspond to the high density of accuracy scores. . . Hyperparameter Tuning . There are several factors that can help us determine which algorithm performs best. One such factor is the performance on the cross-validation set and another factor is the choice of parameters for an algorithm. . SVC . Let&#39;s fine-tune our algorithms. The first algorithm that we trained and evaluated was the Support Vector Classifier and the mean value for model prediction was 0.889. We will use GridSearchCV for the hyperparameter tuning. . svc = SVC() svc.fit(X_train, y_train) pred_svc = svc.predict(X_test) . def svc_param_selection(X, y, nfolds): param = { &#39;C&#39;: [0.1, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4], &#39;kernel&#39;: [&#39;linear&#39;, &#39;rbf&#39;], &#39;gamma&#39;: [0.1, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4] } grid_search = GridSearchCV(svc, param_grid=param, scoring=&#39;accuracy&#39;, cv=nfolds) grid_search.fit(X, y) return grid_search.best_params_ svc_param_selection(X_train, y_train, 10) . {&#39;C&#39;: 1.2, &#39;gamma&#39;: 0.9, &#39;kernel&#39;: &#39;rbf&#39;} . Hence, the best parameters for the SVC algorithm are {C= 1.2, gamma= 0.9 , kernel= rbf}. Let&#39;s run our SVC algorithm again with the best parameters. . from sklearn.metrics import confusion_matrix, classification_report, accuracy_score, mean_absolute_error svc2 = SVC(C= 1.2, gamma= 0.9, kernel= &#39;rbf&#39;) svc2.fit(X_train, y_train) pred_svc2 = svc2.predict(X_test) print(&#39;Confusion matrix&#39;) print(confusion_matrix(y_test, pred_svc2)) print(&#39;Classification report&#39;) print(classification_report(y_test, pred_svc2)) print(&#39;Accuracy score&#39;,accuracy_score(y_test, pred_svc2)) . Confusion matrix [[271 2] [ 31 16]] Classification report precision recall f1-score support 0 0.90 0.99 0.94 273 1 0.89 0.34 0.49 47 accuracy 0.90 320 macro avg 0.89 0.67 0.72 320 weighted avg 0.90 0.90 0.88 320 Accuracy score 0.896875 . The overall accuracy of the classifier is 89.69%, and f1-score of the weighted avg is 0.88, which is very good. . Stochastic Gradient Descent Classifier . sgd = SGDClassifier(loss=&#39;hinge&#39;, penalty=&#39;l2&#39;, max_iter=60) sgd.fit(X_train, y_train) pred_sgd = sgd.predict(X_test) . Random Forest Classifier . rfc = RandomForestClassifier(n_estimators=200, max_depth=20, random_state=0) rfc.fit(X_train, y_train) pred_rfc = rfc.predict(X_test) . KNeighbors Classifier . knn = KNeighborsClassifier() knn.fit(X_train, y_train) pred_knn = knn.predict(X_test) . def knn_param_selection(X, y, nfolds): param = { &#39;n_neighbors&#39;: [2, 3, 4, 5, 6], &#39;weights&#39;: [&#39;uniform&#39;, &#39;distance&#39;], &#39;algorithm&#39;: [&#39;auto&#39;, &#39;ball_tree&#39;, &#39;kd_tree&#39;, &#39;brute&#39;], &#39;p&#39;: [1, 2] } grid_search = GridSearchCV(knn, param_grid=param, scoring=&#39;accuracy&#39;, cv=nfolds) grid_search.fit(X, y) return grid_search.best_params_ knn_param_selection(X_train, y_train, 10) . {&#39;algorithm&#39;: &#39;auto&#39;, &#39;n_neighbors&#39;: 4, &#39;p&#39;: 2, &#39;weights&#39;: &#39;distance&#39;} . Hence, the best parameters for the KNeighborsClassifier algorithm are {algorithm= auto, n_neighbors= 4 , p= 2, weights= distance}. Let&#39;s run our knn algorithm again with the best parameters. . knn2 = KNeighborsClassifier(algorithm= &#39;auto&#39;, n_neighbors= 5, p=2, weights=&#39;distance&#39;) knn2.fit(X_train, y_train) pred_knn2 = knn2.predict(X_test) print(&#39;Confusion matrix&#39;) print(confusion_matrix(y_test, pred_knn2)) print(&#39;Classification report&#39;) print(classification_report(y_test, pred_knn2)) print(&#39;Accuracy score&#39;,accuracy_score(y_test, pred_knn2)) . Confusion matrix [[261 12] [ 19 28]] Classification report precision recall f1-score support 0 0.93 0.96 0.94 273 1 0.70 0.60 0.64 47 accuracy 0.90 320 macro avg 0.82 0.78 0.79 320 weighted avg 0.90 0.90 0.90 320 Accuracy score 0.903125 . The overall accuracy of the classifier is 90.3%, and f1-score of the weighted avg is 0.90, which is very good. . AdaBoost Classifier . ada_classifier = AdaBoostClassifier(n_estimators=100) ada_classifier.fit(X_train, y_train) pred_ada = ada_classifier.predict(X_test) . scores = cross_val_score(ada_classifier,X_test,y_test, cv=5) print(&#39;Accuracy score&#39;,scores.mean()) . Accuracy score 0.84375 . . Model Evaluation . We can compare the models by calculating their mean absolute error and accuracy. . def evaluate(model, test_features, test_labels): predictions = model.predict(test_features) print(&#39;Model Performance&#39;) print(&#39;Average Error: {:0.4f} degrees.&#39;.format( mean_absolute_error(test_labels, predictions))) print(&#39;Accuracy = {:0.2f}%.&#39;.format(accuracy_score( test_labels, predictions)*100)) . evaluate(svc,X_test,y_test) evaluate(svc2,X_test,y_test) evaluate(sgd,X_test,y_test) evaluate(rfc,X_test,y_test) evaluate(knn2, X_test, y_test) evaluate(ada_classifier,X_test,y_test) . Model Performance Average Error: 0.1250 degrees. Accuracy = 87.50%. Model Performance Average Error: 0.1031 degrees. Accuracy = 89.69%. Model Performance Average Error: 0.1688 degrees. Accuracy = 83.12%. Model Performance Average Error: 0.1125 degrees. Accuracy = 88.75%. Model Performance Average Error: 0.0969 degrees. Accuracy = 90.31%. Model Performance Average Error: 0.1594 degrees. Accuracy = 84.06%. . The KNeighborsClassifier model with hyperparameter tuning performs the best with an accuracy of 90.31%. . . Feature Importance . We could also analyze the feature importance for an algorithm. . importance = rfc.feature_importances_ std = np.std([tree.feature_importances_ for tree in rfc.estimators_], axis=0) indices = np.argsort(importance) # plot the feature importances of the forest plt.figure() plt.title(&quot;Feature importances&quot;) plt.barh(range(X.shape[1]), importance[indices], color=&quot;b&quot;, align=&quot;center&quot;) plt.yticks(range(X.shape[1]), column_names) plt.ylim([0, X.shape[1]]) plt.show() . . White Wine . Let us now consider the white wine dataset. . df_white = pd.read_csv(&#39;winequality-white.csv&#39;) df_white.head() . fixed acidity volatile acidity citric acid residual sugar chlorides free sulfur dioxide total sulfur dioxide density pH sulphates alcohol quality . 0 7.0 | 0.27 | 0.36 | 20.7 | 0.045 | 45.0 | 170.0 | 1.0010 | 3.00 | 0.45 | 8.8 | 6 | . 1 6.3 | 0.30 | 0.34 | 1.6 | 0.049 | 14.0 | 132.0 | 0.9940 | 3.30 | 0.49 | 9.5 | 6 | . 2 8.1 | 0.28 | 0.40 | 6.9 | 0.050 | 30.0 | 97.0 | 0.9951 | 3.26 | 0.44 | 10.1 | 6 | . 3 7.2 | 0.23 | 0.32 | 8.5 | 0.058 | 47.0 | 186.0 | 0.9956 | 3.19 | 0.40 | 9.9 | 6 | . 4 7.2 | 0.23 | 0.32 | 8.5 | 0.058 | 47.0 | 186.0 | 0.9956 | 3.19 | 0.40 | 9.9 | 6 | . df_white.shape . (4898, 12) . There are 4,898 samples and 12 features, including our target feature - the wine quality. . df_white.info() . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; RangeIndex: 4898 entries, 0 to 4897 Data columns (total 12 columns): # Column Non-Null Count Dtype -- -- 0 fixed acidity 4898 non-null float64 1 volatile acidity 4898 non-null float64 2 citric acid 4898 non-null float64 3 residual sugar 4898 non-null float64 4 chlorides 4898 non-null float64 5 free sulfur dioxide 4898 non-null float64 6 total sulfur dioxide 4898 non-null float64 7 density 4898 non-null float64 8 pH 4898 non-null float64 9 sulphates 4898 non-null float64 10 alcohol 4898 non-null float64 11 quality 4898 non-null int64 dtypes: float64(11), int64(1) memory usage: 459.3 KB . df_white.describe() . fixed acidity volatile acidity citric acid residual sugar chlorides free sulfur dioxide total sulfur dioxide density pH sulphates alcohol quality . count 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | 4898.000000 | . mean 6.854788 | 0.278241 | 0.334192 | 6.391415 | 0.045772 | 35.308085 | 138.360657 | 0.994027 | 3.188267 | 0.489847 | 10.514267 | 5.877909 | . std 0.843868 | 0.100795 | 0.121020 | 5.072058 | 0.021848 | 17.007137 | 42.498065 | 0.002991 | 0.151001 | 0.114126 | 1.230621 | 0.885639 | . min 3.800000 | 0.080000 | 0.000000 | 0.600000 | 0.009000 | 2.000000 | 9.000000 | 0.987110 | 2.720000 | 0.220000 | 8.000000 | 3.000000 | . 25% 6.300000 | 0.210000 | 0.270000 | 1.700000 | 0.036000 | 23.000000 | 108.000000 | 0.991723 | 3.090000 | 0.410000 | 9.500000 | 5.000000 | . 50% 6.800000 | 0.260000 | 0.320000 | 5.200000 | 0.043000 | 34.000000 | 134.000000 | 0.993740 | 3.180000 | 0.470000 | 10.400000 | 6.000000 | . 75% 7.300000 | 0.320000 | 0.390000 | 9.900000 | 0.050000 | 46.000000 | 167.000000 | 0.996100 | 3.280000 | 0.550000 | 11.400000 | 6.000000 | . max 14.200000 | 1.100000 | 1.660000 | 65.800000 | 0.346000 | 289.000000 | 440.000000 | 1.038980 | 3.820000 | 1.080000 | 14.200000 | 9.000000 | . corr_matrix2 = df_white.corr() corr_matrix2[&#39;quality&#39;].sort_values(ascending=False) . quality 1.000000 alcohol 0.435575 pH 0.099427 sulphates 0.053678 free sulfur dioxide 0.008158 citric acid -0.009209 residual sugar -0.097577 fixed acidity -0.113663 total sulfur dioxide -0.174737 volatile acidity -0.194723 chlorides -0.209934 density -0.307123 Name: quality, dtype: float64 . The features that have the biggest impact on wine quality are alcohol, pH, suplphates, chlorides, density, and volatile acidity. . . Data Visualization . df_white.hist(bins=10, figsize=(20, 15)) plt.show() . column_names = [&#39;fixed acidity&#39;, &#39;volatile acidity&#39;, &#39;citric acid&#39;, &#39;residual sugar&#39;, &#39;chlorides&#39;, &#39;free sulfur dioxide&#39;, &#39;total sulfur dioxide&#39;, &#39;density&#39;, &#39;pH&#39;, &#39;sulphates&#39;, &#39;alcohol&#39;] df_white_pivot_table = df_white.pivot_table(column_names, [&#39;quality&#39;], aggfunc=&#39;median&#39;) df_white_pivot_table . alcohol chlorides citric acid density fixed acidity free sulfur dioxide pH residual sugar sulphates total sulfur dioxide volatile acidity . quality . 3 10.45 | 0.041 | 0.345 | 0.994425 | 7.3 | 33.5 | 3.215 | 4.60 | 0.44 | 159.5 | 0.26 | . 4 10.10 | 0.046 | 0.290 | 0.994100 | 6.9 | 18.0 | 3.160 | 2.50 | 0.47 | 117.0 | 0.32 | . 5 9.50 | 0.047 | 0.320 | 0.995300 | 6.8 | 35.0 | 3.160 | 7.00 | 0.47 | 151.0 | 0.28 | . 6 10.50 | 0.043 | 0.320 | 0.993660 | 6.8 | 34.0 | 3.180 | 5.30 | 0.48 | 132.0 | 0.25 | . 7 11.40 | 0.037 | 0.310 | 0.991760 | 6.7 | 33.0 | 3.200 | 3.65 | 0.48 | 122.0 | 0.25 | . 8 12.00 | 0.036 | 0.320 | 0.991640 | 6.8 | 35.0 | 3.230 | 4.30 | 0.46 | 122.0 | 0.26 | . 9 12.50 | 0.031 | 0.360 | 0.990300 | 7.1 | 28.0 | 3.280 | 2.20 | 0.46 | 119.0 | 0.27 | . df_white.plot(kind=&#39;density&#39;, subplots=True, figsize=(20,15), layout=(4,3), sharex=False) plt.show() . sns.distplot(df_white[&#39;quality&#39;], hist=True, kde=True, bins=&#39;auto&#39;, color = &#39;darkblue&#39;, hist_kws={&#39;edgecolor&#39;:&#39;black&#39;}, kde_kws={&#39;linewidth&#39;: 4}) plt.show() . from pandas.plotting import scatter_matrix sm = scatter_matrix(df_white, figsize=(12, 12), diagonal=&#39;kde&#39;) #Change label rotation [s.xaxis.label.set_rotation(40) for s in sm.reshape(-1)] [s.yaxis.label.set_rotation(0) for s in sm.reshape(-1)] #May need to offset label when rotating to prevent overlap of figure [s.get_yaxis().set_label_coords(-0.6,0.5) for s in sm.reshape(-1)] #Hide all ticks [s.set_xticks(()) for s in sm.reshape(-1)] [s.set_yticks(()) for s in sm.reshape(-1)] plt.show() . column_names = [&#39;fixed acidity&#39;, &#39;volatile acidity&#39;, &#39;citric acid&#39;, &#39;residual sugar&#39;, &#39;chlorides&#39;, &#39;free sulfur dioxide&#39;, &#39;total sulfur dioxide&#39;, &#39;density&#39;, &#39;pH&#39;, &#39;sulphates&#39;, &#39;alcohol&#39;, &#39;quality&#39;] # plot correlation matrix fig, ax = plt.subplots(figsize=(20, 20)) colormap = sns.diverging_palette(220, 10, as_cmap=True) sns.heatmap(corr_matrix2, cmap=colormap, annot=True, fmt=&#39;.2f&#39;, annot_kws={&#39;size&#39;: 20}) ax.set_xticklabels(column_names, rotation=45, horizontalalignment=&#39;right&#39;, fontsize=20); ax.set_yticklabels(column_names, fontsize=20); plt.show() . bins = (2, 6, 9) group_names = [&#39;bad&#39;, &#39;good&#39;] df_white[&#39;quality&#39;] = pd.cut(df_white[&#39;quality&#39;], bins = bins, labels = group_names) . label_quality = LabelEncoder() # Bad becomes 0 and good becomes 1 df_white[&#39;quality&#39;] = label_quality.fit_transform(df_white[&#39;quality&#39;]) print(df_white[&#39;quality&#39;].value_counts()) sns.countplot(df_white[&#39;quality&#39;]) plt.show() . 0 3838 1 1060 Name: quality, dtype: int64 . There are 3,838 bad quality wines, and 1,060 good quality wines. . . Train/Test Split . X = df_white.drop(&#39;quality&#39;, axis=1) y = df_white[&#39;quality&#39;] . X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=42) . . Data Preprocessing . from sklearn.preprocessing import StandardScaler sc = StandardScaler() X_train = sc.fit_transform(X_train) X_test = sc.fit_transform(X_test) . . Modeling . seed = 7 # prepare models models = [] models.append((&#39;SupportVectorClassifier&#39;, SVC())) models.append((&#39;StochasticGradientDecentC&#39;, SGDClassifier())) models.append((&#39;RandomForestClassifier&#39;, RandomForestClassifier())) models.append((&#39;DecisionTreeClassifier&#39;, DecisionTreeClassifier())) models.append((&#39;GaussianNB&#39;, GaussianNB())) models.append((&#39;KNeighborsClassifier&#39;, KNeighborsClassifier())) models.append((&#39;AdaBoostClassifier&#39;, AdaBoostClassifier())) models.append((&#39;LogisticRegression&#39;, LogisticRegression()))# evaluate each model in turn results = [] names = [] scoring = &#39;accuracy&#39; for name, model in models: kfold = model_selection.KFold(n_splits=10, random_state=seed) cv_results = model_selection.cross_val_score(model, X_train, y_train, cv=kfold, scoring=scoring) results.append(cv_results) names.append(name) msg = &quot;%s: %f (%f)&quot; % (name, cv_results.mean(), cv_results.std()) print(msg) # boxplot algorithm comparison fig = plt.figure(figsize=(40, 20)) fig.suptitle(&#39;Algorithm Comparison&#39;, fontsize=40) ax = fig.add_subplot(111) plt.boxplot(results) ax.set_xticklabels(names, fontdict={&#39;fontsize&#39;: 20}) plt.show() . SupportVectorClassifier: 0.825930 (0.020147) StochasticGradientDecentC: 0.789953 (0.023700) RandomForestClassifier: 0.874421 (0.014710) DecisionTreeClassifier: 0.818526 (0.019489) GaussianNB: 0.729720 (0.029256) KNeighborsClassifier: 0.830781 (0.018867) AdaBoostClassifier: 0.818019 (0.017404) LogisticRegression: 0.804491 (0.017744) . . Hyperparameter Tuning . SVC . svc = SVC() svc.fit(X_train, y_train) pred_svc = svc.predict(X_test) . def svc_param_selection(X, y, nfolds): param = { &#39;C&#39;: [0.1, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4], &#39;kernel&#39;: [&#39;linear&#39;, &#39;rbf&#39;], &#39;gamma&#39;: [0.1, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4] } grid_search = GridSearchCV(svc, param_grid=param, scoring=&#39;accuracy&#39;, cv=nfolds) grid_search.fit(X, y) return grid_search.best_params_ svc_param_selection(X_train, y_train, 10) . {&#39;C&#39;: 1.4, &#39;gamma&#39;: 1.1, &#39;kernel&#39;: &#39;rbf&#39;} . from sklearn.metrics import confusion_matrix, classification_report, accuracy_score, mean_absolute_error svc2 = SVC(C= 1.4, gamma= 1.1, kernel= &#39;rbf&#39;) svc2.fit(X_train, y_train) pred_svc2 = svc2.predict(X_test) print(&#39;Confusion matrix&#39;) print(confusion_matrix(y_test, pred_svc2)) print(&#39;Classification report&#39;) print(classification_report(y_test, pred_svc2)) print(&#39;Accuracy score&#39;,accuracy_score(y_test, pred_svc2)) . Confusion matrix [[730 23] [103 124]] Classification report precision recall f1-score support 0 0.88 0.97 0.92 753 1 0.84 0.55 0.66 227 accuracy 0.87 980 macro avg 0.86 0.76 0.79 980 weighted avg 0.87 0.87 0.86 980 Accuracy score 0.8714285714285714 . SGD Classifier . sgd = SGDClassifier(loss=&#39;hinge&#39;, penalty=&#39;l2&#39;, max_iter=60) sgd.fit(X_train, y_train) pred_sgd = sgd.predict(X_test) . Random Forest Classifier . rfc = RandomForestClassifier(n_estimators=200, max_depth=20, random_state=0) rfc.fit(X_train, y_train) pred_rfc = rfc.predict(X_test) . KNeighbors Classifier . knn = KNeighborsClassifier() knn.fit(X_train, y_train) pred_knn = knn.predict(X_test) . def knn_param_selection(X, y, nfolds): param = { &#39;n_neighbors&#39;: [2, 3, 4, 5, 6], &#39;weights&#39;: [&#39;uniform&#39;, &#39;distance&#39;], &#39;algorithm&#39;: [&#39;auto&#39;, &#39;ball_tree&#39;, &#39;kd_tree&#39;, &#39;brute&#39;], &#39;p&#39;: [1, 2] } grid_search = GridSearchCV(knn, param_grid=param, scoring=&#39;accuracy&#39;, cv=nfolds) grid_search.fit(X, y) return grid_search.best_params_ knn_param_selection(X_train, y_train, 10) . {&#39;algorithm&#39;: &#39;auto&#39;, &#39;n_neighbors&#39;: 6, &#39;p&#39;: 1, &#39;weights&#39;: &#39;distance&#39;} . knn2 = KNeighborsClassifier(algorithm= &#39;auto&#39;, n_neighbors= 5, p=2, weights=&#39;distance&#39;) knn2.fit(X_train, y_train) pred_knn2 = knn2.predict(X_test) print(&#39;Confusion matrix&#39;) print(confusion_matrix(y_test, pred_knn2)) print(&#39;Classification report&#39;) print(classification_report(y_test, pred_knn2)) print(&#39;Accuracy score&#39;,accuracy_score(y_test, pred_knn2)) . Confusion matrix [[708 45] [ 75 152]] Classification report precision recall f1-score support 0 0.90 0.94 0.92 753 1 0.77 0.67 0.72 227 accuracy 0.88 980 macro avg 0.84 0.80 0.82 980 weighted avg 0.87 0.88 0.87 980 Accuracy score 0.8775510204081632 . AdaBoost Classifier . ada_classifier = AdaBoostClassifier(n_estimators=100) ada_classifier.fit(X_train, y_train) pred_ada = ada_classifier.predict(X_test) . scores = cross_val_score(ada_classifier,X_test,y_test, cv=5) print(&#39;Accuracy score&#39;,scores.mean()) . Accuracy score 0.7704081632653061 . . Model Evaluation . def evaluate(model, test_features, test_labels): predictions = model.predict(test_features) print(&#39;Model Performance&#39;) print(&#39;Average Error: {:0.4f} degrees.&#39;.format( mean_absolute_error(test_labels, predictions))) print(&#39;Accuracy = {:0.2f}%.&#39;.format(accuracy_score( test_labels, predictions)*100)) . evaluate(svc,X_test,y_test) evaluate(svc2,X_test,y_test) evaluate(sgd,X_test,y_test) evaluate(rfc,X_test,y_test) evaluate(knn2, X_test, y_test) evaluate(ada_classifier,X_test,y_test) . Model Performance Average Error: 0.1796 degrees. Accuracy = 82.04%. Model Performance Average Error: 0.1286 degrees. Accuracy = 87.14%. Model Performance Average Error: 0.2235 degrees. Accuracy = 77.65%. Model Performance Average Error: 0.1276 degrees. Accuracy = 87.24%. Model Performance Average Error: 0.1224 degrees. Accuracy = 87.76%. Model Performance Average Error: 0.2071 degrees. Accuracy = 79.29%. . . Feature Importance . importance = rfc.feature_importances_ std = np.std([tree.feature_importances_ for tree in rfc.estimators_], axis=0) indices = np.argsort(importance) # plot the feature importances of the forest plt.figure() plt.title(&quot;Feature importances&quot;) plt.barh(range(X.shape[1]), importance[indices], color=&quot;b&quot;, align=&quot;center&quot;) plt.yticks(range(X.shape[1]), column_names) plt.ylim([0, X.shape[1]]) plt.show() . .",
            "url": "https://shirolepranav.github.io/blog/classification/2020/05/02/wine-quality.html",
            "relUrl": "/classification/2020/05/02/wine-quality.html",
            "date": " • May 2, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Recommending Movies to a User",
            "content": "Recommendation systems are a collection of algorithms used to recommend items to users based on information taken from the user. These systems have become ubiquitous, and can commonly be seen in online stores, movie databases, and job finders. In this blog post, we will explore content-based and colaborative filtering recommendation systems. . The dataset we&#39;ll be working on has been acquired from GroupLens. It consists of 27 million ratings and 1.1 million tag applications applied to 58,000 movies by 280,000 users. . import pandas as pd from math import sqrt import numpy as np import matplotlib.pyplot as plt %matplotlib inline . movies_df = pd.read_csv(&#39;movies1.csv&#39;) # store the ratings information into a pandas dataframe ratings_df = pd.read_csv(&#39;ratings.csv&#39;) . movies_df.head() . movieId title genres . 0 1 | Toy Story (1995) | Adventure|Animation|Children|Comedy|Fantasy | . 1 2 | Jumanji (1995) | Adventure|Children|Fantasy | . 2 3 | Grumpier Old Men (1995) | Comedy|Romance | . 3 4 | Waiting to Exhale (1995) | Comedy|Drama|Romance | . 4 5 | Father of the Bride Part II (1995) | Comedy | . Each movie has a unique ID, a title with its release year along with it (which may contain unicode characters) and several different genres in the same field. . print(movies_df.shape) print(ratings_df.shape) . (58097, 3) (27753444, 4) . . Preprocessing the data . Let&#39;s remove the year from the &#39;title&#39; column and store it in a new &#39;year&#39; column. . # we specify the parantheses so we don&#39;t conflict with movies that have years in their titles movies_df[&#39;year&#39;] = movies_df.title.str.extract(&#39;( ( d d d d ))&#39;, expand=False) # remove the parentheses movies_df[&#39;year&#39;] = movies_df.year.str.extract(&#39;( d d d d)&#39;, expand=False) # remove the years from the &#39;title&#39; column movies_df[&#39;title&#39;] = movies_df.title.str.replace(&#39;( ( d d d d ))&#39;, &#39;&#39;) # apply the strip finction to get rid of any ending whitespace characters that may have appeared movies_df[&#39;title&#39;] = movies_df[&#39;title&#39;].apply(lambda x: x.strip()) movies_df.head() . movieId title genres year . 0 1 | Toy Story | Adventure|Animation|Children|Comedy|Fantasy | 1995 | . 1 2 | Jumanji | Adventure|Children|Fantasy | 1995 | . 2 3 | Grumpier Old Men | Comedy|Romance | 1995 | . 3 4 | Waiting to Exhale | Comedy|Drama|Romance | 1995 | . 4 5 | Father of the Bride Part II | Comedy | 1995 | . Let&#39;s also split the values in the &#39;genres&#39; column into a &#39;list of genres&#39; to simplify future use. Apply Python&#39;s split string function on the genres column. . movies_df[&#39;genres&#39;] = movies_df.genres.str.split(&#39;|&#39;) movies_df.head() . movieId title genres year . 0 1 | Toy Story | [Adventure, Animation, Children, Comedy, Fantasy] | 1995 | . 1 2 | Jumanji | [Adventure, Children, Fantasy] | 1995 | . 2 3 | Grumpier Old Men | [Comedy, Romance] | 1995 | . 3 4 | Waiting to Exhale | [Comedy, Drama, Romance] | 1995 | . 4 5 | Father of the Bride Part II | [Comedy] | 1995 | . Since keeping genres in a list format isn&#39;t optimal for the content-based recommendation system technique, we will use the One Hot Encoding technique to convert the list of genres to a vector where each column corresponds to one possible value of the feature. This encoding is needed for feeding categorical data. In this case, we store every differrent genre in columns that contain either 1 or 0. 1 shows that a movie has that genre and 0 shows that it doesn&#39;t. Let&#39;s also store this dataframe in another variable since genres won&#39;t be important for our first recommendation system. . moviesWithGenres_df = movies_df.copy() # for every row in the dataframe, iterate through the list of genres and place a 1 in the corresponding column for index, row in movies_df.iterrows(): for genre in row[&#39;genres&#39;]: moviesWithGenres_df.at[index, genre] = 1 # fill in the NaN values with 0 to show that a movie doesn&#39;t have that column&#39;s genre moviesWithGenres_df = moviesWithGenres_df.fillna(0) moviesWithGenres_df.head() . movieId title genres year Adventure Animation Children Comedy Fantasy Romance ... Horror Mystery Sci-Fi IMAX Documentary War Musical Western Film-Noir (no genres listed) . 0 1 | Toy Story | [Adventure, Animation, Children, Comedy, Fantasy] | 1995 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 1 2 | Jumanji | [Adventure, Children, Fantasy] | 1995 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 2 3 | Grumpier Old Men | [Comedy, Romance] | 1995 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 3 4 | Waiting to Exhale | [Comedy, Drama, Romance] | 1995 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 4 5 | Father of the Bride Part II | [Comedy] | 1995 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 5 rows × 24 columns . Now, let&#39;s focus on the ratings dataframe. . ratings_df.head() . userId movieId rating timestamp . 0 1 | 307 | 3.5 | 1256677221 | . 1 1 | 481 | 3.5 | 1256677456 | . 2 1 | 1091 | 1.5 | 1256677471 | . 3 1 | 1257 | 4.5 | 1256677460 | . 4 1 | 1449 | 4.5 | 1256677264 | . Every row in the ratings dataframe has a userId associated with at least one movie, a rating and a timestamp showing when they reviewed it. We won&#39;t be needing the timestamp column, so let&#39;s drop it. . ratings_df = ratings_df.drop(&#39;timestamp&#39;,1) ratings_df.head() . userId movieId rating . 0 1 | 307 | 3.5 | . 1 1 | 481 | 3.5 | . 2 1 | 1091 | 1.5 | . 3 1 | 1257 | 4.5 | . 4 1 | 1449 | 4.5 | . -- . Content-based recommendation system . This technique attempts to figure out what a user&#39;s favorite aspects of an item are, and then recommends items that present those aspects. In our case, we&#39;re going to try to figure out the input&#39;s favorite genres from the movies and ratings given. . Advantages of content-based filtering: . it learns the user&#39;s preferences. | it&#39;s highly personalized for the user. | . Disadvantages of content-based filtering: . it doesn&#39;t take into account what others think of the item, so low quality item recommendations might happen. | Extracting data is not always intuitive. | Determining what characteristics of the item the user dislikes or likes is not always obvious. | . Create an input to recommend movies to. . userInput = [ {&#39;title&#39;:&#39;Mission: Impossible - Fallout&#39;, &#39;rating&#39;:5}, {&#39;title&#39;:&#39;Top Gun&#39;, &#39;rating&#39;:4.5}, {&#39;title&#39;:&#39;Jerry Maguire&#39;, &#39;rating&#39;:3}, {&#39;title&#39;:&#39;Vanilla Sky&#39;, &#39;rating&#39;:2.5}, {&#39;title&#39;:&#39;Minority Report&#39;, &#39;rating&#39;:4}, ] inputMovies = pd.DataFrame(userInput) inputMovies . title rating . 0 Mission: Impossible - Fallout | 5.0 | . 1 Top Gun | 4.5 | . 2 Jerry Maguire | 3.0 | . 3 Vanilla Sky | 2.5 | . 4 Minority Report | 4.0 | . Add movieId to input user. Extract the input movie&#39;s ID from the movies dataframe and add it to the input. . inputId = movies_df[movies_df[&#39;title&#39;].isin(inputMovies[&#39;title&#39;].tolist())] # merge it to get the movieId inputMovies = pd.merge(inputId, inputMovies) # drop information we won&#39;t use from the input dataframe inputMovies = inputMovies.drop(&#39;genres&#39;, 1).drop(&#39;year&#39;, 1) # final input dataframe inputMovies . movieId title rating . 0 1101 | Top Gun | 4.5 | . 1 1393 | Jerry Maguire | 3.0 | . 2 4975 | Vanilla Sky | 2.5 | . 3 5445 | Minority Report | 4.0 | . 4 189333 | Mission: Impossible - Fallout | 5.0 | . We will learn the input&#39;s preferences. So let&#39;s get the subset of movies that the input has watched from the dataframe containing genres defined with binary values. . userMovies = moviesWithGenres_df[moviesWithGenres_df[&#39;movieId&#39;].isin(inputMovies[&#39;movieId&#39;].tolist())] userMovies . movieId title genres year Adventure Animation Children Comedy Fantasy Romance ... Horror Mystery Sci-Fi IMAX Documentary War Musical Western Film-Noir (no genres listed) . 1079 1101 | Top Gun | [Action, Romance] | 1986 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 1361 1393 | Jerry Maguire | [Drama, Romance] | 1996 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 4879 4975 | Vanilla Sky | [Mystery, Romance, Sci-Fi, Thriller] | 2001 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | ... | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 5348 5445 | Minority Report | [Action, Crime, Mystery, Sci-Fi, Thriller] | 2002 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | ... | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 56349 189333 | Mission: Impossible - Fallout | [Action, Adventure, Thriller] | 2018 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 5 rows × 24 columns . We only need the actual genre table. Reset the index and drop the unnecessary columns. . userMovies = userMovies.reset_index(drop=True) # drop unnecessary columns userGenreTable = userMovies.drop(&#39;movieId&#39;, 1).drop(&#39;title&#39;, 1).drop(&#39;genres&#39;, 1).drop(&#39;year&#39;, 1) userGenreTable . Adventure Animation Children Comedy Fantasy Romance Drama Action Crime Thriller Horror Mystery Sci-Fi IMAX Documentary War Musical Western Film-Noir (no genres listed) . 0 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 1 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 2 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 3 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 4 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . Now we learn the input preferences. We turn each genre into weights using the input&#39;s reviews and multiplying them into the input&#39;s genre table, and then summing up the resulting table by column. . inputMovies[&#39;rating&#39;] . 0 4.5 1 3.0 2 2.5 3 4.0 4 5.0 Name: rating, dtype: float64 . userProfile = userGenreTable.transpose().dot(inputMovies[&#39;rating&#39;]) # the user profile userProfile . Adventure 5.0 Animation 0.0 Children 0.0 Comedy 0.0 Fantasy 0.0 Romance 10.0 Drama 3.0 Action 13.5 Crime 4.0 Thriller 11.5 Horror 0.0 Mystery 6.5 Sci-Fi 6.5 IMAX 0.0 Documentary 0.0 War 0.0 Musical 0.0 Western 0.0 Film-Noir 0.0 (no genres listed) 0.0 dtype: float64 . Now we have the weights for each of the user&#39;s preferences. This is the User Profile. Using this, we can recommend movies that satisfy the user&#39;s preferences. Let&#39;s start by extracting the genre table from the original dataframe. . genreTable = moviesWithGenres_df.set_index(moviesWithGenres_df[&#39;movieId&#39;]) # drop unnecessary columns genreTable = genreTable.drop(&#39;movieId&#39;, 1).drop(&#39;title&#39;, 1).drop(&#39;genres&#39;, 1).drop(&#39;year&#39;, 1) genreTable.head() . Adventure Animation Children Comedy Fantasy Romance Drama Action Crime Thriller Horror Mystery Sci-Fi IMAX Documentary War Musical Western Film-Noir (no genres listed) . movieId . 1 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 2 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 3 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 4 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . 5 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | . genreTable.shape . (58097, 20) . With the input&#39;s profile and the complete list of movies and their genres in hand, we&#39;re going to take the weighted average of every movie based on the input profile and recommend the top twenty movies that most satisfy it. . recommendationTable_df = ((genreTable*userProfile).sum(axis=1)) / (userProfile.sum()) recommendationTable_df.head() . movieId 1 0.083333 2 0.083333 3 0.166667 4 0.216667 5 0.000000 dtype: float64 . Here is the recommendation table. . movies_df.loc[movies_df[&#39;movieId&#39;].isin(recommendationTable_df.head(20).keys())] . movieId title genres year . 0 1 | Toy Story | [Adventure, Animation, Children, Comedy, Fantasy] | 1995 | . 1 2 | Jumanji | [Adventure, Children, Fantasy] | 1995 | . 2 3 | Grumpier Old Men | [Comedy, Romance] | 1995 | . 3 4 | Waiting to Exhale | [Comedy, Drama, Romance] | 1995 | . 4 5 | Father of the Bride Part II | [Comedy] | 1995 | . 5 6 | Heat | [Action, Crime, Thriller] | 1995 | . 6 7 | Sabrina | [Comedy, Romance] | 1995 | . 7 8 | Tom and Huck | [Adventure, Children] | 1995 | . 8 9 | Sudden Death | [Action] | 1995 | . 9 10 | GoldenEye | [Action, Adventure, Thriller] | 1995 | . 10 11 | American President, The | [Comedy, Drama, Romance] | 1995 | . 11 12 | Dracula: Dead and Loving It | [Comedy, Horror] | 1995 | . 12 13 | Balto | [Adventure, Animation, Children] | 1995 | . 13 14 | Nixon | [Drama] | 1995 | . 14 15 | Cutthroat Island | [Action, Adventure, Romance] | 1995 | . 15 16 | Casino | [Crime, Drama] | 1995 | . 16 17 | Sense and Sensibility | [Drama, Romance] | 1995 | . 17 18 | Four Rooms | [Comedy] | 1995 | . 18 19 | Ace Ventura: When Nature Calls | [Comedy] | 1995 | . 19 20 | Money Train | [Action, Comedy, Crime, Drama, Thriller] | 1995 | . These are the top 20 movies to recommend to the user based on a content-based recommendation system. . . Collaborative Filtering . This technique uses other users to recommend items to the input user. It attempts to find users that have similar preferences and opinions as the input and then recommends items that they have liked to the input. there are several methods of finding similar users, and the one we will be using here is going to be based on the Pearson Correlation Function. . The process for creating a user-based recommendation system is as follows: . Select a user with the movies the user has watched. | Based on his ratings of movies, find the top X neighbours. | Get the watched movie record of the user for each neighbour. | Calculate a similarity score using some formula. | Recommend the items with the highest score. | . Advantages of collaborative filtering: . It takes other user&#39;s ratings into consideration | It doesn&#39;t need to study or extract information from the recommended item | It adapts to the user&#39;s interestes which might change over time | . Disadvantages of collaborative filtering: . The approximation function can be slow. | There might be a low amount of users to approximate | There might be privacy issues when trying to learn the user&#39;s experiences. | . Let&#39;s create an input user to recommend movies to. . userInput = [ {&#39;title&#39;:&#39;Mission: Impossible - Fallout&#39;, &#39;rating&#39;:5}, {&#39;title&#39;:&#39;Top Gun&#39;, &#39;rating&#39;:4.5}, {&#39;title&#39;:&#39;Jerry Maguire&#39;, &#39;rating&#39;:3}, {&#39;title&#39;:&#39;Vanilla Sky&#39;, &#39;rating&#39;:2.5}, {&#39;title&#39;:&#39;Minority Report&#39;, &#39;rating&#39;:4}, ] inputMovies = pd.DataFrame(userInput) inputMovies . title rating . 0 Mission: Impossible - Fallout | 5.0 | . 1 Top Gun | 4.5 | . 2 Jerry Maguire | 3.0 | . 3 Vanilla Sky | 2.5 | . 4 Minority Report | 4.0 | . inputId = movies_df[movies_df[&#39;title&#39;].isin(inputMovies[&#39;title&#39;].tolist())] # merge it to get the movieId inputMovies = pd.merge(inputId, inputMovies) # drop information we won&#39;t use from the input dataframe inputMovies = inputMovies.drop(&#39;genres&#39;, 1).drop(&#39;year&#39;, 1) # final input dataframe inputMovies . movieId title rating . 0 1101 | Top Gun | 4.5 | . 1 1393 | Jerry Maguire | 3.0 | . 2 4975 | Vanilla Sky | 2.5 | . 3 5445 | Minority Report | 4.0 | . 4 189333 | Mission: Impossible - Fallout | 5.0 | . The users who have seen the same movies . Now, with the movie IDs in our input, we can get the subset of users that have watched and reviewd the movies in our input. . userSubset = ratings_df[ratings_df[&#39;movieId&#39;].isin(inputMovies[&#39;movieId&#39;].tolist())] userSubset.head() . userId movieId rating . 214 4 | 1101 | 4.0 | . 248 4 | 1393 | 2.5 | . 586 4 | 4975 | 4.0 | . 610 4 | 5445 | 4.5 | . 935 8 | 1393 | 4.0 | . Group the rows by userId. . userSubsetGroup = userSubset.groupby([&#39;userId&#39;]) . Let&#39;s look at one of these users - userId = 4 . userSubsetGroup.get_group(4) . userId movieId rating . 214 4 | 1101 | 4.0 | . 248 4 | 1393 | 2.5 | . 586 4 | 4975 | 4.0 | . 610 4 | 5445 | 4.5 | . Let&#39;s sort these groups so the users that share the most movies in common with the input have higher priority. This provides a richer recommendation since we won&#39;t go through every single user. . userSubsetGroup = sorted(userSubsetGroup, key=lambda x: len(x[1]), reverse=True) . Now let&#39;s look at the first user. . userSubsetGroup[0:3] . [(214, userId movieId rating 20548 214 1101 2.0 20638 214 1393 3.0 21122 214 4975 2.0 21160 214 5445 4.0 21933 214 189333 3.0), (6264, userId movieId rating 616485 6264 1101 5.0 616574 6264 1393 4.0 617440 6264 4975 3.0 617480 6264 5445 3.0 618666 6264 189333 4.0), (19924, userId movieId rating 1945179 19924 1101 3.5 1945273 19924 1393 4.0 1946065 19924 4975 2.0 1946152 19924 5445 4.0 1948193 19924 189333 3.5)] . Next, we are going to compare users to our specified user and find the one that is most similar. We&#39;re going to find out how similar each user is to the input through the Pearson Correlation Coefficient. It is used to measure the strength of a linear association between two variables. . We will select a subset of users to iterate through. The limit is imposed because we don&#39;t want to waste too much time going through every single user. . userSubsetGroup = userSubsetGroup[0:100] . Calculate the Pearson Correlation between the input user and the subset group, and store it in a dictionary, where the key is the userId and the value is the coefficient. . pearsonCorrelationDict = {} #For every user group in our subset for name, group in userSubsetGroup: #Let&#39;s start by sorting the input and current user group so the values aren&#39;t mixed up later on group = group.sort_values(by=&#39;movieId&#39;) inputMovies = inputMovies.sort_values(by=&#39;movieId&#39;) #Get the N for the formula nRatings = len(group) #Get the review scores for the movies that they both have in common temp_df = inputMovies[inputMovies[&#39;movieId&#39;].isin(group[&#39;movieId&#39;].tolist())] #And then store them in a temporary buffer variable in a list format to facilitate future calculations tempRatingList = temp_df[&#39;rating&#39;].tolist() #Let&#39;s also put the current user group reviews in a list format tempGroupList = group[&#39;rating&#39;].tolist() #Now let&#39;s calculate the pearson correlation between two users, so called, x and y Sxx = sum([i**2 for i in tempRatingList]) - pow(sum(tempRatingList),2)/float(nRatings) Syy = sum([i**2 for i in tempGroupList]) - pow(sum(tempGroupList),2)/float(nRatings) Sxy = sum( i*j for i, j in zip(tempRatingList, tempGroupList)) - sum(tempRatingList)*sum(tempGroupList)/float(nRatings) #If the denominator is different than zero, then divide, else, 0 correlation. if Sxx != 0 and Syy != 0: pearsonCorrelationDict[name] = Sxy/sqrt(Sxx*Syy) else: pearsonCorrelationDict[name] = 0 . pearsonCorrelationDict.items() . dict_items([(214, 0.23055616708169335), (6264, 0.518751375933811), (19924, 0.48424799847909467), (21962, 0.7190233885442843), (22361, 0.6163156344279349), (24518, -0.48424799847909017), (28244, -0.22258705026211378), (30387, 0.8339502495593619), (31727, -0.6163156344279349), (32728, -0.26413527189768593), (33550, 0.3774147062120368), (36202, 0.9510441892119876), (38778, 0.5906244232186185), (43227, -0.1968748077395395), (43264, -0.9021937088963177), (48109, 0.0), (50016, 0.04402254531627891), (59611, 0.24946109012559378), (62705, 0.5187513759338097), (63353, -0.4799585206127619), (64733, -0.8524929243380921), (69860, 0.43133109281375515), (70271, -0.08524929243380922), (71857, 0.7781270639007126), (72194, 0.24112141108520613), (75629, 0.6016946526766817), (77609, 0.48224282217041226), (80398, 0.7776587696250218), (81924, -0.32283199898606263), (93997, 0.7771889263740438), (94749, 0.0), (98561, -0.5619806572616304), (99014, -0.23055616708169688), (102101, 0.2516098041413576), (104322, -0.43133109281375515), (105397, 0.8859366348279278), (112491, -0.6469966392206334), (116632, 0.20173664619648324), (117053, 0.5917813771642448), (124357, 0.7635511351031528), (125365, 0.7009130258223497), (128610, 0.45109685444815883), (131687, -0.22874785549890708), (133546, 0.6163156344279386), (148144, 0.10783277320344019), (153921, 0.12056070554260306), (161582, -0.3616821166278092), (167427, 0.10783277320343922), (167835, 0.10783277320343156), (171745, -0.6995593008237843), (173280, -0.2516098041413576), (175811, 0.616315634427937), (184822, 0.07421560439929334), (186859, -0.6163156344279386), (187056, 0.8439249387982215), (189464, 0.2017366461964786), (194365, -0.05547950410915026), (195892, 0.17049858486761843), (199011, 0.6340294594746541), (205765, 0.6163156344279422), (209798, 0.836059669922064), (210651, -0.057639041770424365), (220709, 0.8364283610093444), (221882, -0.18485618263446638), (233580, 0.7009130258223497), (240712, 0.700913025822351), (242708, 0.04876920665717847), (247867, -0.4528033232531783), (248019, 0.393749615479079), (261170, 0.518751375933811), (261224, 0.5114957546028552), (263973, -0.12888481555661682), (267699, 0.17049858486761843), (271364, 0.7043607250605002), (275841, -0.8364283610093444), (280868, 0.09843740386976975), (4, 0.4216370213557839), (56, 0.12909944487358055), (81, 0.2581988897471611), (147, 0.5502760564641688), (235, 0.0), (239, -0.7302967433402214), (313, -0.7302967433402214), (332, 0.848528137423857), (458, 0.0), (601, 0.6708203932499369), (605, 0.32071349029490925), (864, -0.31622776601683794), (930, -0.5163977794943222), (1073, -0.4242640687119285), (1153, -0.5262348115842176), (1191, 0.0), (1263, 0.0), (1312, 0.9621404708847278), (1367, -0.1414213562373095), (1419, -0.3651483716701107), (1440, 0.6708203932499369), (1513, 0.3651483716701107), (1519, -0.38138503569823695), (1523, -0.38138503569823695)]) . pearsonDF = pd.DataFrame.from_dict(pearsonCorrelationDict, orient=&#39;index&#39;) pearsonDF.columns = [&#39;similarityIndex&#39;] pearsonDF[&#39;userId&#39;] = pearsonDF.index pearsonDF.index = range(len(pearsonDF)) pearsonDF.head() . similarityIndex userId . 0 0.230556 | 214 | . 1 0.518751 | 6264 | . 2 0.484248 | 19924 | . 3 0.719023 | 21962 | . 4 0.616316 | 22361 | . The top x similar users to the input user . Let&#39;s get the top 50 users that are most similar to the input. . topUsers = pearsonDF.sort_values(by=&#39;similarityIndex&#39;, ascending=False)[0:50] topUsers.head() . similarityIndex userId . 93 0.962140 | 1312 | . 11 0.951044 | 36202 | . 35 0.885937 | 105397 | . 83 0.848528 | 332 | . 54 0.843925 | 187056 | . Now let&#39;s start recommending movies to the input user. . Rating of selected users to all movies . We&#39;re going to do this by taking the weighted average of the ratings of the movies using the Pearson Correlation as the weight. But to do this, we first need to get the movies watched by the users in our pearsonDF from the ratings dataframe, and then store their correlation in a new column called &#39;similarityIndex&#39;. . topUsersRating=topUsers.merge(ratings_df, left_on=&#39;userId&#39;, right_on=&#39;userId&#39;, how=&#39;inner&#39;) topUsersRating.head() . similarityIndex userId movieId rating . 0 0.96214 | 1312 | 6 | 3.0 | . 1 0.96214 | 1312 | 19 | 3.5 | . 2 0.96214 | 1312 | 32 | 2.5 | . 3 0.96214 | 1312 | 110 | 2.5 | . 4 0.96214 | 1312 | 150 | 3.0 | . Now we multiply the movie rating by its weight (the similarity index), then sum up the new ratings and divide it by the sum of the weights. We can easily do this by simply multiplying two columns, then grouping up the dataframe by movieId and then dividing two columns. It shows the idea of all similar users to candidate movies for the input user. . topUsersRating[&#39;weightedRating&#39;] = topUsersRating[&#39;similarityIndex&#39;]*topUsersRating[&#39;rating&#39;] topUsersRating.head() . similarityIndex userId movieId rating weightedRating . 0 0.96214 | 1312 | 6 | 3.0 | 2.886421 | . 1 0.96214 | 1312 | 19 | 3.5 | 3.367492 | . 2 0.96214 | 1312 | 32 | 2.5 | 2.405351 | . 3 0.96214 | 1312 | 110 | 2.5 | 2.405351 | . 4 0.96214 | 1312 | 150 | 3.0 | 2.886421 | . tempTopUsersRating = topUsersRating.groupby(&#39;movieId&#39;).sum()[[&#39;similarityIndex&#39;,&#39;weightedRating&#39;]] tempTopUsersRating.columns = [&#39;sum_similarityIndex&#39;,&#39;sum_weightedRating&#39;] tempTopUsersRating.head() . sum_similarityIndex sum_weightedRating . movieId . 1 24.947499 | 100.721637 | . 2 22.262128 | 70.826453 | . 3 8.242517 | 25.223362 | . 4 2.427828 | 6.840441 | . 5 12.595882 | 33.904291 | . recommendation_df = pd.DataFrame() # take the weighted average recommendation_df[&#39;weighted average recommendation score&#39;] = tempTopUsersRating[&#39;sum_weightedRating&#39;]/tempTopUsersRating[&#39;sum_similarityIndex&#39;] recommendation_df[&#39;movieId&#39;] = tempTopUsersRating.index recommendation_df.head() . weighted average recommendation score movieId . movieId . 1 4.037344 | 1 | . 2 3.181477 | 2 | . 3 3.060153 | 3 | . 4 2.817515 | 4 | . 5 2.691696 | 5 | . Let&#39;s sort this and see the top 20 movies that the algorithm recommended. . recommendation_df = recommendation_df.sort_values(by=&#39;weighted average recommendation score&#39;, ascending=False) recommendation_df.head() . weighted average recommendation score movieId . movieId . 4863 5.0 | 4863 | . 5641 5.0 | 5641 | . 3777 5.0 | 3777 | . 3205 5.0 | 3205 | . 3847 5.0 | 3847 | . movies_df.loc[movies_df[&#39;movieId&#39;].isin(recommendation_df.head(20)[&#39;movieId&#39;].tolist())] . movieId title genres year . 3118 3205 | Black Sunday (La maschera del demonio) | [Horror] | 1960 | . 3686 3777 | Nekromantik | [Comedy, Horror] | 1987 | . 3754 3847 | Ilsa, She Wolf of the SS | [Horror] | 1974 | . 3876 3970 | Beyond, The (E tu vivrai nel terrore - L&#39;aldilà) | [Horror] | 1981 | . 4767 4863 | Female Trouble | [Comedy, Crime] | 1975 | . 5542 5641 | Moderns, The | [Drama] | 1988 | . 5681 5780 | Polyester | [Comedy] | 1981 | . 5810 5909 | Visitor Q (Bizita Q) | [Comedy, Drama, Horror] | 2001 | . 8549 26007 | Unknown Soldier, The (Tuntematon sotilas) | [Drama, War] | 1955 | . 12542 58425 | Heima | [Documentary] | 2007 | . 12713 59684 | Lake of Fire | [Documentary] | 2006 | . 16931 85181 | Pooh&#39;s Grand Adventure: The Search for Christo... | [Adventure, Animation, Children, Musical] | 1997 | . 20049 98198 | OMG Oh My God! | [Comedy, Drama] | 2012 | . 21237 102666 | Ivan Vasilievich: Back to the Future (Ivan Vas... | [Adventure, Comedy] | 1973 | . 22406 106561 | Krrish 3 | [Action, Adventure, Fantasy, Sci-Fi] | 2013 | . 46195 167248 | Kedi | [(no genres listed)] | 2016 | . 50636 176753 | Bingo - The King of the Mornings | [Comedy, Drama] | 2017 | . 51187 177951 | Happy! | [Fantasy] | 2017 | . 53314 182723 | Cosmos: A Spacetime Odissey | [(no genres listed)] | NaN | . 54462 185227 | Brief History of Disbelief | [Documentary] | 2004 | . These are the top 20 movies to recommend to the user based on a collaborative filtering recommendation system. . .",
            "url": "https://shirolepranav.github.io/blog/recommender%20sytems/2020/03/15/recommending-movies.html",
            "relUrl": "/recommender%20sytems/2020/03/15/recommending-movies.html",
            "date": " • Mar 15, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "Using SVM to detect Cancerous Cells",
            "content": "In this blog post, we will use Support Vector Machines (SVM) to build and train a model using human cell records, and classify cells so as to realize whether the samples are benign or malignant. The dataset (download here) we will be working with consists of several hundred human cell sample records, each of which contains the values of a set of cell characteristics. The fields in each record are: . ID: Patient ID | Clump - Clump thickness | UnifSize - Uniformity of cell size | UnifShape - Uniformity of cell shape | MargAdh - Marginal adhesion | SingEpiSize - Single epithetical cell size | BareNuc - Bare nuclei | BlandChrom - Bland chromatin | NormNucl - Normal nucleoli | Mit - Mitoses | Class - Benign or malignant | . SVM works by mapping data to a high-dimensional feature space so that data points can be categorized even when the data is not otherwise linearly separable. A separator between the categories is found, then the data is transformed in such a way that the separator could be drawn as a hyperplane. Following this, characteristics of new data can be used to predict the droup to which a new record should belong. . import pandas as pd import pylab as pl import numpy as np import scipy.optimize as opt from sklearn.model_selection import train_test_split %matplotlib inline import matplotlib.pyplot as plt . df = pd.read_csv(&#39;cell_samples.csv&#39;) df.head() . ID Clump UnifSize UnifShape MargAdh SingEpiSize BareNuc BlandChrom NormNucl Mit Class . 0 1000025 | 5 | 1 | 1 | 1 | 2 | 1 | 3 | 1 | 1 | 2 | . 1 1002945 | 5 | 4 | 4 | 5 | 7 | 10 | 3 | 2 | 1 | 2 | . 2 1015425 | 3 | 1 | 1 | 1 | 2 | 2 | 3 | 1 | 1 | 2 | . 3 1016277 | 6 | 8 | 8 | 1 | 3 | 4 | 3 | 7 | 1 | 2 | . 4 1017023 | 4 | 1 | 1 | 3 | 2 | 1 | 3 | 1 | 1 | 2 | . df.shape . (699, 11) . The ID field contains the patient identifiers. The characteristics of the cell samples from each patient are contained in fields Clump to Mit. The values are graded from 1 to 10, with 1 being the closest to benign. The Class field contains the diagnosis, as confirmed by separate medical procedures, as to whether the samples are benign (value = 2) or malignant (value = 4) . Let&#39;s look at the distribution of the classes based on Clump thickness and Uniformity of cell size. . ax = df[df[&#39;Class&#39;] == 4][0:50].plot(kind=&#39;scatter&#39;, x=&#39;Clump&#39;, y=&#39;UnifSize&#39;, color=&#39;Red&#39;, label=&#39;malignant&#39;) df[df[&#39;Class&#39;] == 2][0:50].plot(figsize=(8,6), fontsize=14, kind=&#39;scatter&#39;, x=&#39;Clump&#39;, y=&#39;UnifSize&#39;, color=&#39;DarkBlue&#39;, label=&#39;benign&#39;, ax=ax) plt.ylabel(&#39;UnifSize&#39;, fontsize=14) plt.xlabel(&#39;Clump&#39;, fontsize=14) plt.show() . . Preprocessing the data . df.dtypes . ID int64 Clump int64 UnifSize int64 UnifShape int64 MargAdh int64 SingEpiSize int64 BareNuc object BlandChrom int64 NormNucl int64 Mit int64 Class int64 dtype: object . Let&#39;s drop the rows that have non numerical values in the BareNuc column. Then we will convert the data type into int . df = df[pd.to_numeric(df[&#39;BareNuc&#39;], errors=&#39;coerce&#39;).notnull()] df[&#39;BareNuc&#39;] = df[&#39;BareNuc&#39;].astype(&#39;int&#39;) df.dtypes . ID int64 Clump int64 UnifSize int64 UnifShape int64 MargAdh int64 SingEpiSize int64 BareNuc int32 BlandChrom int64 NormNucl int64 Mit int64 Class int64 dtype: object . Create the feature set. . feature_df = df[[&#39;Clump&#39;, &#39;UnifSize&#39;, &#39;UnifShape&#39;, &#39;MargAdh&#39;, &#39;SingEpiSize&#39;, &#39;BareNuc&#39;, &#39;BlandChrom&#39;, &#39;NormNucl&#39;, &#39;Mit&#39;]] X = np.asarray(feature_df) X[0:5] . array([[ 5, 1, 1, 1, 2, 1, 3, 1, 1], [ 5, 4, 4, 5, 7, 10, 3, 2, 1], [ 3, 1, 1, 1, 2, 2, 3, 1, 1], [ 6, 8, 8, 1, 3, 4, 3, 7, 1], [ 4, 1, 1, 3, 2, 1, 3, 1, 1]], dtype=int64) . We need the model to predict the value of Class (i.e. benign=2 or malignant=4). As this target can have one of only two possible values, we need to change its measurement to reflect this. . df[&#39;Class&#39;] = df[&#39;Class&#39;].astype(&#39;int&#39;) y = np.asarray(df[&#39;Class&#39;]) y[0:5] . array([2, 2, 2, 2, 2]) . . Train/Test split . X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=4) print(&#39;Train set: &#39;, X_train.shape, y_train.shape) print(&#39;Test set: &#39;, X_test.shape, y_test.shape) . Train set: (546, 9) (546,) Test set: (137, 9) (137,) . . Modeling . The SVM algorithm offers a choice of kernel functions for performing its processing. Basically, mapping data into a higher dimensional spaceis called kerneling. The mathrmatical function used for the transformation is known as the kernel function, and can be of different types, such as: . Linear | Polynomial | Radial Basis Function (RBF) | Sigmoid Each of these functions has its characteristics, its pros and cons, and its equation, but as there&#39;s no easy way of knowing which function performs best with any given dataset, we usually choose different function in turn and compare the results. Let&#39;s use the Radial Basis Function for now. | from sklearn import svm clf = svm.SVC(kernel=&#39;rbf&#39;) clf.fit(X_train, y_train) . SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0, decision_function_shape=&#39;ovr&#39;, degree=3, gamma=&#39;scale&#39;, kernel=&#39;rbf&#39;, max_iter=-1, probability=False, random_state=None, shrinking=True, tol=0.001, verbose=False) . After being fitted, the model can then be used to predict new values. . yhat = clf.predict(X_test) yhat[0:5] . array([2, 4, 2, 4, 2]) . . Evaluation . from sklearn.metrics import classification_report, confusion_matrix import itertools . def plot_confusion_matrix(cm, classes, normalize=False, title=&#39;Confusion matrix&#39;, cmap=plt.cm.Blues): &#39;&#39;&#39; This function prints and plots the confusion matrix. Normalization can be applied by setting `normalize=True` &#39;&#39;&#39; if normalize: cm = cm.astype(&#39;float&#39;) / cm.sum(axis=1)[:, np.newaxis] print(&#39;Normalized confusion matrix&#39;) else: print(&#39;Confusion matrix, without normalization&#39;) print(cm) plt.imshow(cm, interpolation=&#39;nearest&#39;, cmap=cmap) plt.title(title) plt.colorbar() tick_marks = np.arange(len(classes)) plt.xticks(tick_marks, classes, rotation=45) plt.yticks(tick_marks, classes) fmt = &#39;.2f&#39; if normalize else &#39;d&#39; thresh = cm.max() / 2. for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])): plt.text(j, i, format(cm[i, j], fmt), horizontalalignment=&quot;center&quot;, color=&quot;white&quot; if cm[i, j] &gt; thresh else &quot;black&quot;) plt.tight_layout() plt.ylabel(&#39;True label&#39;, fontsize=14) plt.xlabel(&#39;Predicted label&#39;, fontsize=14) . cnf_matrix = confusion_matrix(y_test, yhat, labels=[2,4]) np.set_printoptions(precision=2) print(classification_report(y_test, yhat)) # plot non-normalized confusion martix plt.figure(figsize=(8,6)) plot_confusion_matrix(cnf_matrix, classes=[&#39;Benign(2)&#39;,&#39;Malignant(4)&#39;], normalize=False) . precision recall f1-score support 2 1.00 0.94 0.97 90 4 0.90 1.00 0.95 47 accuracy 0.96 137 macro avg 0.95 0.97 0.96 137 weighted avg 0.97 0.96 0.96 137 Confusion matrix, without normalization [[85 5] [ 0 47]] . from sklearn.metrics import f1_score f1_score(y_test, yhat, average=&#39;weighted&#39;) . 0.9639038982104676 . from sklearn.metrics import jaccard_similarity_score jaccard_similarity_score(y_test, yhat) . C: Users prana Anaconda3 lib site-packages sklearn metrics _classification.py:664: FutureWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks. FutureWarning) . 0.9635036496350365 . Let&#39;s try to rebuild the model with other kernel function and check the accuracy. . Accracy using the linear kernel. . clf2 = svm.SVC(kernel=&#39;linear&#39;) clf2.fit(X_train, y_train) yhat2 = clf2.predict(X_test) print(&quot;Avg F1-score: %.4f&quot; % f1_score(y_test, yhat2, average=&#39;weighted&#39;)) print(&quot;Jaccard score: %.4f&quot; % jaccard_similarity_score(y_test, yhat2)) . Avg F1-score: 0.9639 Jaccard score: 0.9635 . C: Users prana Anaconda3 lib site-packages sklearn metrics _classification.py:664: FutureWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks. FutureWarning) . Accracy using the polynomial kernel. . clf3 = svm.SVC(kernel=&#39;poly&#39;) clf3.fit(X_train, y_train) yhat3 = clf3.predict(X_test) print(&quot;Avg F1-score: %.4f&quot; % f1_score(y_test, yhat3, average=&#39;weighted&#39;)) print(&quot;Jaccard score: %.4f&quot; % jaccard_similarity_score(y_test, yhat3)) . Avg F1-score: 0.9711 Jaccard score: 0.9708 . C: Users prana Anaconda3 lib site-packages sklearn metrics _classification.py:664: FutureWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks. FutureWarning) . Accracy using the sigmoid kernel. . clf4 = svm.SVC(kernel=&#39;sigmoid&#39;) clf4.fit(X_train, y_train) yhat4 = clf4.predict(X_test) print(&quot;Avg F1-score: %.4f&quot; % f1_score(y_test, yhat4, average=&#39;weighted&#39;)) print(&quot;Jaccard score: %.4f&quot; % jaccard_similarity_score(y_test, yhat4)) . Avg F1-score: 0.3715 Jaccard score: 0.3942 . C: Users prana Anaconda3 lib site-packages sklearn metrics _classification.py:664: FutureWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks. FutureWarning) . As we can see, the polynomial function results in the most accurate model. . cnf_matrix = confusion_matrix(y_test, yhat3, labels=[2,4]) np.set_printoptions(precision=2) print(classification_report(y_test, yhat3)) # plot non-normalized confusion martix plt.figure(figsize=(8,6)) plot_confusion_matrix(cnf_matrix, classes=[&#39;Benign(2)&#39;,&#39;Malignant(4)&#39;], normalize=False) . precision recall f1-score support 2 1.00 0.96 0.98 90 4 0.92 1.00 0.96 47 accuracy 0.97 137 macro avg 0.96 0.98 0.97 137 weighted avg 0.97 0.97 0.97 137 Confusion matrix, without normalization [[86 4] [ 0 47]] . . Result . The first row is for the cells that are benign in the test set. Out of 137 cells, 90 are benign, and the model correctly predicted 86 of them. Hence, this is an accurate model. The second row is for the cells that are malignant. There are 47 malignant cells in the test set and the model predicted all of them accurately. That is a perfect result. .",
            "url": "https://shirolepranav.github.io/blog/svm/modeling/2020/03/07/svm-cancer-cells.html",
            "relUrl": "/svm/modeling/2020/03/07/svm-cancer-cells.html",
            "date": " • Mar 7, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "Segmenting and Clustering Neighborhoods in Toronto",
            "content": "In this blog post, we will explore neighborhoods in Toronto, Canada. . First, we will build the code to scrape an HTML table from this Wikipedia page (https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M) that lists postal codes in Canada. . We will need requests for getting the HTML contents of the website and lxml.html for parsing the relevant fields. We will then store this data on a pandas dataframe. . import requests import lxml.html as lh import pandas as pd import numpy as np . . Scrape the HTML table cells. . url = &#39;https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M&#39; # create a handle page to handle the contents of the website page = requests.get(url) # store the contents of the website under doc doc = lh.fromstring(page.content) # parse data that are stored between &lt;tr&gt;...&lt;/tr&gt; of HTML tr_elements = doc.xpath(&#39;//tr&#39;) . Ensure that all the rows have the same width. If not, we probably got something more that just the table. . [len(T) for T in tr_elements[:10]] . [3, 3, 3, 3, 3, 3, 3, 3, 3, 3] . This means that there are 3 columns per row. Now parse the table header. . tr_elements = doc.xpath(&#39;//tr&#39;) # create an empty list col = [] i = 0 # for each row, store each first element (header) and an empty list for t in tr_elements[0]: i+=1 name = t.text_content() print(&#39;%d:&quot;%s&quot;&#39;%(i,name)) col.append((name,[])) . 1:&#34;Postcode&#34; 2:&#34;Borough&#34; 3:&#34;Neighbourhood &#34; . . Create pandas dataframe . Each header is appended to a tuple along with an empty list . for j in range(1, len(tr_elements)): #T is our j&#39;th row T = tr_elements[j] # if row is not of size 3, the //tr data is not from our table if len(T)!= 3: break # i is the index of our column i = 0 # iterate through each element of the row for t in T.iterchildren(): data = t.text_content() # check if row is empty if i &gt; 0: # convert any numerical value to integers try: data = int(data) except: pass # append the data to the empty list of the i&#39;th column col[i][1].append(data) # increment i for the next column i+=1 . Check the length of each column. Ideally, there should all be the same. . [len(C) for (title, C) in col] . [287, 287, 287] . This shows that each of the columns has exactly 287 rows. . Create the dataframe. . Dict = {title:column for (title, column) in col} df = pd.DataFrame(Dict) df.head() . Postcode Borough Neighbourhood n . 0 M1A | Not assigned | Not assigned n | . 1 M2A | Not assigned | Not assigned n | . 2 M3A | North York | Parkwoods n | . 3 M4A | North York | Victoria Village n | . 4 M5A | Downtown Toronto | Harbourfront n | . df.columns = [&#39;Postcode&#39;, &#39;Borough&#39;, &#39;Neighborhood&#39;] cols = df.columns.tolist() cols . [&#39;Postcode&#39;, &#39;Borough&#39;, &#39;Neighborhood&#39;] . Clean the messy string in the Neighborhood column. . df = df.replace(&#39; n&#39;, &#39; &#39;, regex=True) df.head() . Postcode Borough Neighborhood . 0 M1A | Not assigned | Not assigned | . 1 M2A | Not assigned | Not assigned | . 2 M3A | North York | Parkwoods | . 3 M4A | North York | Victoria Village | . 4 M5A | Downtown Toronto | Harbourfront | . Drop all cells with a Borough that is &quot;Not assigned&quot;. . df.drop(df.index[df[&#39;Borough&#39;] == &#39;Not assigned&#39;], inplace=True) # reset the index and drop the previous index df = df.reset_index(drop=True) df.head(10) . Postcode Borough Neighborhood . 0 M3A | North York | Parkwoods | . 1 M4A | North York | Victoria Village | . 2 M5A | Downtown Toronto | Harbourfront | . 3 M6A | North York | Lawrence Heights | . 4 M6A | North York | Lawrence Manor | . 5 M7A | Downtown Toronto | Queen&#39;s Park | . 6 M9A | Etobicoke | Islington Avenue | . 7 M1B | Scarborough | Rouge | . 8 M1B | Scarborough | Malvern | . 9 M3B | North York | Don Mills North | . Combine neighborhoods based on similar Postcode and Borough. . df = df.groupby([&#39;Postcode&#39;, &#39;Borough&#39;])[&#39;Neighborhood&#39;].apply(&#39;,&#39;.join).reset_index() df.columns = [&#39;Postcode&#39;, &#39;Borough&#39;, &#39;Neighborhood&#39;] df.head(10) . Postcode Borough Neighborhood . 0 M1B | Scarborough | Rouge ,Malvern | . 1 M1C | Scarborough | Highland Creek ,Rouge Hill ,Port Union | . 2 M1E | Scarborough | Guildwood ,Morningside ,West Hill | . 3 M1G | Scarborough | Woburn | . 4 M1H | Scarborough | Cedarbrae | . 5 M1J | Scarborough | Scarborough Village | . 6 M1K | Scarborough | East Birchmount Park ,Ionview ,Kennedy Park | . 7 M1L | Scarborough | Clairlea ,Golden Mile ,Oakridge | . 8 M1M | Scarborough | Cliffcrest ,Cliffside ,Scarborough Village West | . 9 M1N | Scarborough | Birch Cliff ,Cliffside West | . Remove any spacing at the start of the string. . df[&#39;Neighborhood&#39;] = df[&#39;Neighborhood&#39;].str.strip() . Assign Borough values to the Neighborhood where value is &quot;Not assigned&quot;. . df.loc[df[&#39;Neighborhood&#39;] == &#39;Not assigned&#39;, &#39;Neighborhood&#39;] = df[&#39;Borough&#39;] . df.shape . (103, 3) . df.to_csv(r&#39;df_can.csv&#39;) . . Get the coordinates of each neighborhood . Read the geospatial data into a pandas dataframe. . link = &#39;http://cocl.us/Geospatial_data&#39; df1 = pd.read_csv(link) df1.head() . Postal Code Latitude Longitude . 0 M1B | 43.806686 | -79.194353 | . 1 M1C | 43.784535 | -79.160497 | . 2 M1E | 43.763573 | -79.188711 | . 3 M1G | 43.770992 | -79.216917 | . 4 M1H | 43.773136 | -79.239476 | . df1.shape . (103, 3) . Change the column name &#39;Postal code&#39; to &#39;Postcode&#39; to merge the two data frames together. . df1.columns = [&#39;Postcode&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;] cols = df1.columns.tolist() cols . [&#39;Postcode&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;] . Read the csv file saved in the previous assignment. . df = pd.read_csv(&#39;df_can.csv&#39;, index_col=0) df.head() . Postcode Borough Neighborhood . 0 M1B | Scarborough | Rouge ,Malvern | . 1 M1C | Scarborough | Highland Creek ,Rouge Hill ,Port Union | . 2 M1E | Scarborough | Guildwood ,Morningside ,West Hill | . 3 M1G | Scarborough | Woburn | . 4 M1H | Scarborough | Cedarbrae | . Merge the two dataframes togehter based on their Postcode. . df_new = pd.merge(df, df1, on=&#39;Postcode&#39;) df_new.head() . Postcode Borough Neighborhood Latitude Longitude . 0 M1B | Scarborough | Rouge ,Malvern | 43.806686 | -79.194353 | . 1 M1C | Scarborough | Highland Creek ,Rouge Hill ,Port Union | 43.784535 | -79.160497 | . 2 M1E | Scarborough | Guildwood ,Morningside ,West Hill | 43.763573 | -79.188711 | . 3 M1G | Scarborough | Woburn | 43.770992 | -79.216917 | . 4 M1H | Scarborough | Cedarbrae | 43.773136 | -79.239476 | . df_new.to_csv(r&#39;df_final.csv&#39;) . . Segmentation and Clustering . import numpy as np # library to handle data in a vectorized manner import pandas as pd # library for data analsysis pd.set_option(&#39;display.max_columns&#39;, None) pd.set_option(&#39;display.max_rows&#39;, None) import json # library to handle JSON files #!conda install -c conda-forge geopy --yes # uncomment this line if you haven&#39;t completed the Foursquare API lab from geopy.geocoders import Nominatim # convert an address into latitude and longitude values import requests # library to handle requests from pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe # Matplotlib and associated plotting modules import matplotlib.cm as cm import matplotlib.colors as colors # import k-means from clustering stage from sklearn.cluster import KMeans #!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven&#39;t completed the Foursquare API lab import folium # map rendering library print(&#39;Libraries imported.&#39;) . Libraries imported. . neighborhoods = pd.read_csv(&#39;df_final.csv&#39;, index_col=0) neighborhoods.head() . Postcode Borough Neighborhood Latitude Longitude . 0 M1B | Scarborough | Rouge ,Malvern | 43.806686 | -79.194353 | . 1 M1C | Scarborough | Highland Creek ,Rouge Hill ,Port Union | 43.784535 | -79.160497 | . 2 M1E | Scarborough | Guildwood ,Morningside ,West Hill | 43.763573 | -79.188711 | . 3 M1G | Scarborough | Woburn | 43.770992 | -79.216917 | . 4 M1H | Scarborough | Cedarbrae | 43.773136 | -79.239476 | . Find out how many boroughs and neighborhoods are in the dataset. . print(&#39;The dataframe has {} boroughs and {} neighborhoods&#39;.format( len(neighborhoods[&#39;Borough&#39;].unique()), neighborhoods.shape[0] )) . The dataframe has 10 boroughs and 103 neighborhoods . Use the geopy library to get the latitude and longitude values of Toronto, Canada. . address = &#39;Toronto, Canada&#39; geolocator = Nominatim(user_agent=&#39;can_explorer&#39;) location = geolocator.geocode(address) latitude = location.latitude longitude = location.longitude print(&#39;The geographical coordinates of Toronto are {}, {}&#39;.format(latitude, longitude)) . The geographical coordinates of Toronto are 43.653963, -79.387207 . . Visualize the neighborhoods. . map_toronto = folium.Map(location=[latitude, longitude], zoom_start=10) # add markers to map for lat, lng, borough, neighborhood in zip(neighborhoods[&#39;Latitude&#39;], neighborhoods[&#39;Longitude&#39;], neighborhoods[&#39;Borough&#39;], neighborhoods[&#39;Neighborhood&#39;]): label = &#39;{}, {}&#39;.format(neighborhood, borough) label = folium.Popup(label, parse_html=True) folium.CircleMarker( [lat, lng], radius=5, popup=label, color=&#39;blue&#39;, fill=True, fill_color=&#39;#3186cc&#39;, fill_opacity=0.7, parse_html=False).add_to(map_toronto) map_toronto . &lt;iframe src=&quot;about:blank&quot; style=&quot;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&quot; data-html= onload=&quot;this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute(&#39;data-html&#39;)));this.contentDocument.close();&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt; Utilize the Foursquare API to explore the neighborhoods and segment them. . LIMIT = 100 # define Foursquare Credentials CLIENT_ID = &#39;XXXX&#39; CLIENT_SECRET = &#39;XXXX&#39; VERSION = &#39;20191219&#39; . . Explore neighborhoods in Toronto . Let&#39;s create a function to repeat the same process to all the neighborhoods in Toronto. . def getNearbyVenues(names, latitudes, longitudes, radius=500): venues_list=[] for name, lat, lng in zip(names, latitudes, longitudes): print(name) # create the API request URL url = &#39;https://api.foursquare.com/v2/venues/explore?&amp;client_id={}&amp;client_secret={}&amp;v={}&amp;ll={},{}&amp;radius={}&amp;limit={}&#39;.format( CLIENT_ID, CLIENT_SECRET, VERSION, lat, lng, radius, LIMIT) # make the GET request results = requests.get(url).json()[&quot;response&quot;][&#39;groups&#39;][0][&#39;items&#39;] # return only relevant information for each nearby venue venues_list.append([( name, lat, lng, v[&#39;venue&#39;][&#39;name&#39;], v[&#39;venue&#39;][&#39;location&#39;][&#39;lat&#39;], v[&#39;venue&#39;][&#39;location&#39;][&#39;lng&#39;], v[&#39;venue&#39;][&#39;categories&#39;][0][&#39;name&#39;]) for v in results]) nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list]) nearby_venues.columns = [&#39;Neighborhood&#39;, &#39;Neighborhood Latitude&#39;, &#39;Neighborhood Longitude&#39;, &#39;Venue&#39;, &#39;Venue Latitude&#39;, &#39;Venue Longitude&#39;, &#39;Venue Category&#39;] return(nearby_venues) . Run the above function on each neighborhood and create a new dataframe called toronto_venues. . toronto_venues = getNearbyVenues(names=neighborhoods[&#39;Neighborhood&#39;], latitudes=neighborhoods[&#39;Latitude&#39;], longitudes=neighborhoods[&#39;Longitude&#39;]) . Rouge ,Malvern Highland Creek ,Rouge Hill ,Port Union Guildwood ,Morningside ,West Hill Woburn Cedarbrae Scarborough Village East Birchmount Park ,Ionview ,Kennedy Park Clairlea ,Golden Mile ,Oakridge Cliffcrest ,Cliffside ,Scarborough Village West Birch Cliff ,Cliffside West Dorset Park ,Scarborough Town Centre ,Wexford Heights Maryvale ,Wexford Agincourt Clarks Corners ,Sullivan ,Tam O&#39;Shanter Agincourt North ,L&#39;Amoreaux East ,Milliken ,Steeles East L&#39;Amoreaux West Upper Rouge Hillcrest Village Fairview ,Henry Farm ,Oriole Bayview Village Silver Hills ,York Mills Newtonbrook ,Willowdale Willowdale South York Mills West Willowdale West Parkwoods Don Mills North Flemingdon Park ,Don Mills South Bathurst Manor ,Downsview North ,Wilson Heights Northwood Park ,York University CFB Toronto ,Downsview East Downsview West Downsview Central Downsview Northwest Victoria Village Woodbine Gardens ,Parkview Hill Woodbine Heights The Beaches Leaside Thorncliffe Park East Toronto The Danforth West ,Riverdale The Beaches West ,India Bazaar Studio District Lawrence Park Davisville North North Toronto West Davisville Moore Park ,Summerhill East Deer Park ,Forest Hill SE ,Rathnelly ,South Hill ,Summerhill West Rosedale Cabbagetown ,St. James Town Church and Wellesley Harbourfront Ryerson ,Garden District St. James Town Berczy Park Central Bay Street Adelaide ,King ,Richmond Harbourfront East ,Toronto Islands ,Union Station Design Exchange ,Toronto Dominion Centre Commerce Court ,Victoria Hotel Bedford Park ,Lawrence Manor East Roselawn Forest Hill North ,Forest Hill West The Annex ,North Midtown ,Yorkville Harbord ,University of Toronto Chinatown ,Grange Park ,Kensington Market CN Tower ,Bathurst Quay ,Island airport ,Harbourfront West ,King and Spadina ,Railway Lands ,South Niagara Stn A PO Boxes 25 The Esplanade First Canadian Place ,Underground city Lawrence Heights ,Lawrence Manor Glencairn Humewood-Cedarvale Caledonia-Fairbanks Christie Dovercourt Village ,Dufferin Little Portugal ,Trinity Brockton ,Exhibition Place ,Parkdale Village Downsview ,North Park ,Upwood Park Del Ray ,Keelesdale ,Mount Dennis ,Silverthorn The Junction North ,Runnymede High Park ,The Junction South Parkdale ,Roncesvalles Runnymede ,Swansea Queen&#39;s Park Canada Post Gateway Processing Centre Business Reply Mail Processing Centre 969 Eastern Humber Bay Shores ,Mimico South ,New Toronto Alderwood ,Long Branch The Kingsway ,Montgomery Road ,Old Mill North Humber Bay ,King&#39;s Mill Park ,Kingsway Park South East ,Mimico NE ,Old Mill South ,The Queensway East ,Royal York South East ,Sunnylea Kingsway Park South West ,Mimico NW ,The Queensway West ,Royal York South West ,South of Bloor Islington Avenue Cloverdale ,Islington ,Martin Grove ,Princess Gardens ,West Deane Park Bloordale Gardens ,Eringate ,Markland Wood ,Old Burnhamthorpe Humber Summit Emery ,Humberlea Weston Westmount Kingsview Village ,Martin Grove Gardens ,Richview Gardens ,St. Phillips Albion Gardens ,Beaumond Heights ,Humbergate ,Jamestown ,Mount Olive ,Silverstone ,South Steeles ,Thistletown Northwest . . toronto_venues.head() . Neighborhood Neighborhood Latitude Neighborhood Longitude Venue Venue Latitude Venue Longitude Venue Category . 0 Rouge ,Malvern | 43.806686 | -79.194353 | Wendy&#39;s | 43.807448 | -79.199056 | Fast Food Restaurant | . 1 Rouge ,Malvern | 43.806686 | -79.194353 | Interprovincial Group | 43.805630 | -79.200378 | Print Shop | . 2 Highland Creek ,Rouge Hill ,Port Union | 43.784535 | -79.160497 | Royal Canadian Legion | 43.782533 | -79.163085 | Bar | . 3 Guildwood ,Morningside ,West Hill | 43.763573 | -79.188711 | G &amp; G Electronics | 43.765309 | -79.191537 | Electronics Store | . 4 Guildwood ,Morningside ,West Hill | 43.763573 | -79.188711 | Marina Spa | 43.766000 | -79.191000 | Spa | . toronto_venues.shape . (2214, 7) . Let&#39;s check how many venues were returned for each neighborhood. . toronto_venues.groupby(&#39;Neighborhood&#39;).count() . Neighborhood Latitude Neighborhood Longitude Venue Venue Latitude Venue Longitude Venue Category . Neighborhood . Adelaide ,King ,Richmond 100 | 100 | 100 | 100 | 100 | 100 | . Agincourt 4 | 4 | 4 | 4 | 4 | 4 | . Agincourt North ,L&#39;Amoreaux East ,Milliken ,Steeles East 3 | 3 | 3 | 3 | 3 | 3 | . Albion Gardens ,Beaumond Heights ,Humbergate ,Jamestown ,Mount Olive ,Silverstone ,South Steeles ,Thistletown 12 | 12 | 12 | 12 | 12 | 12 | . Alderwood ,Long Branch 10 | 10 | 10 | 10 | 10 | 10 | . Bathurst Manor ,Downsview North ,Wilson Heights 19 | 19 | 19 | 19 | 19 | 19 | . Bayview Village 4 | 4 | 4 | 4 | 4 | 4 | . Bedford Park ,Lawrence Manor East 25 | 25 | 25 | 25 | 25 | 25 | . Berczy Park 55 | 55 | 55 | 55 | 55 | 55 | . Birch Cliff ,Cliffside West 4 | 4 | 4 | 4 | 4 | 4 | . Bloordale Gardens ,Eringate ,Markland Wood ,Old Burnhamthorpe 8 | 8 | 8 | 8 | 8 | 8 | . Brockton ,Exhibition Place ,Parkdale Village 22 | 22 | 22 | 22 | 22 | 22 | . Business Reply Mail Processing Centre 969 Eastern 15 | 15 | 15 | 15 | 15 | 15 | . CFB Toronto ,Downsview East 2 | 2 | 2 | 2 | 2 | 2 | . CN Tower ,Bathurst Quay ,Island airport ,Harbourfront West ,King and Spadina ,Railway Lands ,South Niagara 17 | 17 | 17 | 17 | 17 | 17 | . Cabbagetown ,St. James Town 42 | 42 | 42 | 42 | 42 | 42 | . Caledonia-Fairbanks 4 | 4 | 4 | 4 | 4 | 4 | . Canada Post Gateway Processing Centre 12 | 12 | 12 | 12 | 12 | 12 | . Cedarbrae 8 | 8 | 8 | 8 | 8 | 8 | . Central Bay Street 79 | 79 | 79 | 79 | 79 | 79 | . Chinatown ,Grange Park ,Kensington Market 88 | 88 | 88 | 88 | 88 | 88 | . Christie 18 | 18 | 18 | 18 | 18 | 18 | . Church and Wellesley 86 | 86 | 86 | 86 | 86 | 86 | . Clairlea ,Golden Mile ,Oakridge 10 | 10 | 10 | 10 | 10 | 10 | . Clarks Corners ,Sullivan ,Tam O&#39;Shanter 12 | 12 | 12 | 12 | 12 | 12 | . Cliffcrest ,Cliffside ,Scarborough Village West 4 | 4 | 4 | 4 | 4 | 4 | . Cloverdale ,Islington ,Martin Grove ,Princess Gardens ,West Deane Park 1 | 1 | 1 | 1 | 1 | 1 | . Commerce Court ,Victoria Hotel 100 | 100 | 100 | 100 | 100 | 100 | . Davisville 33 | 33 | 33 | 33 | 33 | 33 | . Davisville North 9 | 9 | 9 | 9 | 9 | 9 | . Deer Park ,Forest Hill SE ,Rathnelly ,South Hill ,Summerhill West 14 | 14 | 14 | 14 | 14 | 14 | . Del Ray ,Keelesdale ,Mount Dennis ,Silverthorn 4 | 4 | 4 | 4 | 4 | 4 | . Design Exchange ,Toronto Dominion Centre 100 | 100 | 100 | 100 | 100 | 100 | . Don Mills North 4 | 4 | 4 | 4 | 4 | 4 | . Dorset Park ,Scarborough Town Centre ,Wexford Heights 7 | 7 | 7 | 7 | 7 | 7 | . Dovercourt Village ,Dufferin 15 | 15 | 15 | 15 | 15 | 15 | . Downsview ,North Park ,Upwood Park 4 | 4 | 4 | 4 | 4 | 4 | . Downsview Central 4 | 4 | 4 | 4 | 4 | 4 | . Downsview Northwest 4 | 4 | 4 | 4 | 4 | 4 | . Downsview West 6 | 6 | 6 | 6 | 6 | 6 | . East Birchmount Park ,Ionview ,Kennedy Park 4 | 4 | 4 | 4 | 4 | 4 | . East Toronto 4 | 4 | 4 | 4 | 4 | 4 | . Emery ,Humberlea 3 | 3 | 3 | 3 | 3 | 3 | . Fairview ,Henry Farm ,Oriole 63 | 63 | 63 | 63 | 63 | 63 | . First Canadian Place ,Underground city 100 | 100 | 100 | 100 | 100 | 100 | . Flemingdon Park ,Don Mills South 22 | 22 | 22 | 22 | 22 | 22 | . Forest Hill North ,Forest Hill West 4 | 4 | 4 | 4 | 4 | 4 | . Glencairn 6 | 6 | 6 | 6 | 6 | 6 | . Guildwood ,Morningside ,West Hill 7 | 7 | 7 | 7 | 7 | 7 | . Harbord ,University of Toronto 35 | 35 | 35 | 35 | 35 | 35 | . Harbourfront 47 | 47 | 47 | 47 | 47 | 47 | . Harbourfront East ,Toronto Islands ,Union Station 100 | 100 | 100 | 100 | 100 | 100 | . High Park ,The Junction South 23 | 23 | 23 | 23 | 23 | 23 | . Highland Creek ,Rouge Hill ,Port Union 1 | 1 | 1 | 1 | 1 | 1 | . Hillcrest Village 4 | 4 | 4 | 4 | 4 | 4 | . Humber Bay ,King&#39;s Mill Park ,Kingsway Park South East ,Mimico NE ,Old Mill South ,The Queensway East ,Royal York South East ,Sunnylea 1 | 1 | 1 | 1 | 1 | 1 | . Humber Bay Shores ,Mimico South ,New Toronto 12 | 12 | 12 | 12 | 12 | 12 | . Humber Summit 1 | 1 | 1 | 1 | 1 | 1 | . Humewood-Cedarvale 3 | 3 | 3 | 3 | 3 | 3 | . Kingsview Village ,Martin Grove Gardens ,Richview Gardens ,St. Phillips 4 | 4 | 4 | 4 | 4 | 4 | . Kingsway Park South West ,Mimico NW ,The Queensway West ,Royal York South West ,South of Bloor 13 | 13 | 13 | 13 | 13 | 13 | . L&#39;Amoreaux West 15 | 15 | 15 | 15 | 15 | 15 | . Lawrence Heights ,Lawrence Manor 13 | 13 | 13 | 13 | 13 | 13 | . Lawrence Park 3 | 3 | 3 | 3 | 3 | 3 | . Leaside 32 | 32 | 32 | 32 | 32 | 32 | . Little Portugal ,Trinity 55 | 55 | 55 | 55 | 55 | 55 | . Maryvale ,Wexford 4 | 4 | 4 | 4 | 4 | 4 | . Moore Park ,Summerhill East 3 | 3 | 3 | 3 | 3 | 3 | . Newtonbrook ,Willowdale 1 | 1 | 1 | 1 | 1 | 1 | . North Toronto West 20 | 20 | 20 | 20 | 20 | 20 | . Northwest 3 | 3 | 3 | 3 | 3 | 3 | . Northwood Park ,York University 6 | 6 | 6 | 6 | 6 | 6 | . Parkdale ,Roncesvalles 13 | 13 | 13 | 13 | 13 | 13 | . Parkwoods 3 | 3 | 3 | 3 | 3 | 3 | . Queen&#39;s Park 39 | 39 | 39 | 39 | 39 | 39 | . Rosedale 4 | 4 | 4 | 4 | 4 | 4 | . Roselawn 2 | 2 | 2 | 2 | 2 | 2 | . Rouge ,Malvern 2 | 2 | 2 | 2 | 2 | 2 | . Runnymede ,Swansea 38 | 38 | 38 | 38 | 38 | 38 | . Ryerson ,Garden District 100 | 100 | 100 | 100 | 100 | 100 | . Scarborough Village 2 | 2 | 2 | 2 | 2 | 2 | . Silver Hills ,York Mills 2 | 2 | 2 | 2 | 2 | 2 | . St. James Town 100 | 100 | 100 | 100 | 100 | 100 | . Stn A PO Boxes 25 The Esplanade 94 | 94 | 94 | 94 | 94 | 94 | . Studio District 41 | 41 | 41 | 41 | 41 | 41 | . The Annex ,North Midtown ,Yorkville 23 | 23 | 23 | 23 | 23 | 23 | . The Beaches 5 | 5 | 5 | 5 | 5 | 5 | . The Beaches West ,India Bazaar 19 | 19 | 19 | 19 | 19 | 19 | . The Danforth West ,Riverdale 41 | 41 | 41 | 41 | 41 | 41 | . The Junction North ,Runnymede 4 | 4 | 4 | 4 | 4 | 4 | . The Kingsway ,Montgomery Road ,Old Mill North 2 | 2 | 2 | 2 | 2 | 2 | . Thorncliffe Park 19 | 19 | 19 | 19 | 19 | 19 | . Victoria Village 4 | 4 | 4 | 4 | 4 | 4 | . Westmount 8 | 8 | 8 | 8 | 8 | 8 | . Weston 2 | 2 | 2 | 2 | 2 | 2 | . Willowdale South 34 | 34 | 34 | 34 | 34 | 34 | . Willowdale West 6 | 6 | 6 | 6 | 6 | 6 | . Woburn 4 | 4 | 4 | 4 | 4 | 4 | . Woodbine Gardens ,Parkview Hill 11 | 11 | 11 | 11 | 11 | 11 | . Woodbine Heights 8 | 8 | 8 | 8 | 8 | 8 | . York Mills West 4 | 4 | 4 | 4 | 4 | 4 | . . Let&#39;s find out how many unique categories can be curated from all the returned venues. . toronto_onehot = pd.get_dummies(toronto_venues[[&#39;Venue Category&#39;]], prefix=&#39;&#39;, prefix_sep=&#39;&#39;) # add neighborhood column back to the dataframe toronto_onehot[&#39;Neighborhood&#39;] = toronto_venues[&#39;Neighborhood&#39;] # move neighborhood column to the first column fixed_columns = [toronto_onehot.columns[-1]] + list(toronto_onehot.columns[:-1]) toronto_onehot = toronto_onehot[fixed_columns] toronto_onehot.head() . Yoga Studio Accessories Store Afghan Restaurant Airport Airport Food Court Airport Gate Airport Lounge Airport Service Airport Terminal American Restaurant Antique Shop Aquarium Art Gallery Arts &amp; Crafts Store Asian Restaurant Athletics &amp; Sports Auto Workshop BBQ Joint Baby Store Bagel Shop Bakery Bank Bar Baseball Field Baseball Stadium Basketball Court Basketball Stadium Beach Bed &amp; Breakfast Beer Bar Beer Store Belgian Restaurant Bike Shop Bistro Boat or Ferry Bookstore Boutique Brazilian Restaurant Breakfast Spot Brewery Bridal Shop Bubble Tea Shop Building Burger Joint Burrito Place Bus Line Bus Station Bus Stop Business Service Butcher Cafeteria Café Cajun / Creole Restaurant Camera Store Candy Store Caribbean Restaurant Cheese Shop Chinese Restaurant Chocolate Shop Church Climbing Gym Clothing Store Cocktail Bar Coffee Shop College Arts Building College Auditorium College Gym College Rec Center College Stadium Colombian Restaurant Comfort Food Restaurant Comic Shop Concert Hall Construction &amp; Landscaping Convenience Store Cosmetics Shop Coworking Space Creperie Cuban Restaurant Cupcake Shop Curling Ice Dance Studio Deli / Bodega Department Store Dessert Shop Dim Sum Restaurant Diner Discount Store Distribution Center Dog Run Doner Restaurant Donut Shop Drugstore Dumpling Restaurant Eastern European Restaurant Electronics Store Empanada Restaurant Ethiopian Restaurant Event Space Fabric Shop Falafel Restaurant Farmers Market Fast Food Restaurant Field Filipino Restaurant Fish &amp; Chips Shop Fish Market Flea Market Flower Shop Food Food &amp; Drink Shop Food Court Food Truck Fountain French Restaurant Fried Chicken Joint Frozen Yogurt Shop Fruit &amp; Vegetable Store Furniture / Home Store Gaming Cafe Garden Garden Center Gas Station Gastropub Gay Bar General Entertainment General Travel German Restaurant Gift Shop Gluten-free Restaurant Golf Course Gourmet Shop Greek Restaurant Grocery Store Gym Gym / Fitness Center Hakka Restaurant Harbor / Marina Hardware Store Health &amp; Beauty Service Health Food Store Historic Site History Museum Hobby Shop Hockey Arena Home Service Hospital Hostel Hotel Hotel Bar Hotpot Restaurant IT Services Ice Cream Shop Indian Restaurant Indie Movie Theater Indonesian Restaurant Intersection Irish Pub Italian Restaurant Japanese Restaurant Jazz Club Jewelry Store Juice Bar Korean Restaurant Lake Latin American Restaurant Light Rail Station Lingerie Store Liquor Store Lounge Luggage Store Mac &amp; Cheese Joint Market Massage Studio Medical Center Mediterranean Restaurant Men&#39;s Store Metro Station Mexican Restaurant Middle Eastern Restaurant Miscellaneous Shop Mobile Phone Shop Modern European Restaurant Molecular Gastronomy Restaurant Monument / Landmark Motel Movie Theater Museum Music Venue Neighborhood New American Restaurant Nightclub Noodle House Office Opera House Optical Shop Organic Grocery Other Great Outdoors Park Performing Arts Venue Pet Store Pharmacy Piano Bar Pizza Place Playground Plaza Poke Place Pool Portuguese Restaurant Poutine Place Print Shop Pub Ramen Restaurant Record Shop Recording Studio Rental Car Location Restaurant River Roof Deck Sake Bar Salad Place Salon / Barbershop Sandwich Place Scenic Lookout Sculpture Garden Seafood Restaurant Shoe Store Shopping Mall Shopping Plaza Skate Park Skating Rink Smoke Shop Snack Place Soccer Field Spa Speakeasy Sporting Goods Shop Sports Bar Stadium Stationery Store Steakhouse Strip Club Supermarket Supplement Shop Sushi Restaurant Swim School Tailor Shop Taiwanese Restaurant Tanning Salon Tea Room Tennis Court Thai Restaurant Theater Theme Restaurant Thrift / Vintage Store Toy / Game Store Trail Train Station Vegetarian / Vegan Restaurant Video Game Store Video Store Vietnamese Restaurant Warehouse Store Wine Bar Wine Shop Wings Joint Women&#39;s Store . 0 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | Rouge ,Malvern | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 1 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | Rouge ,Malvern | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 2 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | Highland Creek ,Rouge Hill ,Port Union | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 3 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | Guildwood ,Morningside ,West Hill | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 4 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | Guildwood ,Morningside ,West Hill | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . toronto_onehot.shape . (2214, 267) . Let&#39;s group rows by neighborhood by taking the mean of the frequency of occurence of each category. . toronto_grouped = toronto_onehot.groupby(&#39;Neighborhood&#39;).mean().reset_index() toronto_grouped . Neighborhood Yoga Studio Accessories Store Afghan Restaurant Airport Airport Food Court Airport Gate Airport Lounge Airport Service Airport Terminal American Restaurant Antique Shop Aquarium Art Gallery Arts &amp; Crafts Store Asian Restaurant Athletics &amp; Sports Auto Workshop BBQ Joint Baby Store Bagel Shop Bakery Bank Bar Baseball Field Baseball Stadium Basketball Court Basketball Stadium Beach Bed &amp; Breakfast Beer Bar Beer Store Belgian Restaurant Bike Shop Bistro Boat or Ferry Bookstore Boutique Brazilian Restaurant Breakfast Spot Brewery Bridal Shop Bubble Tea Shop Building Burger Joint Burrito Place Bus Line Bus Station Bus Stop Business Service Butcher Cafeteria Café Cajun / Creole Restaurant Camera Store Candy Store Caribbean Restaurant Cheese Shop Chinese Restaurant Chocolate Shop Church Climbing Gym Clothing Store Cocktail Bar Coffee Shop College Arts Building College Auditorium College Gym College Rec Center College Stadium Colombian Restaurant Comfort Food Restaurant Comic Shop Concert Hall Construction &amp; Landscaping Convenience Store Cosmetics Shop Coworking Space Creperie Cuban Restaurant Cupcake Shop Curling Ice Dance Studio Deli / Bodega Department Store Dessert Shop Dim Sum Restaurant Diner Discount Store Distribution Center Dog Run Doner Restaurant Donut Shop Drugstore Dumpling Restaurant Eastern European Restaurant Electronics Store Empanada Restaurant Ethiopian Restaurant Event Space Fabric Shop Falafel Restaurant Farmers Market Fast Food Restaurant Field Filipino Restaurant Fish &amp; Chips Shop Fish Market Flea Market Flower Shop Food Food &amp; Drink Shop Food Court Food Truck Fountain French Restaurant Fried Chicken Joint Frozen Yogurt Shop Fruit &amp; Vegetable Store Furniture / Home Store Gaming Cafe Garden Garden Center Gas Station Gastropub Gay Bar General Entertainment General Travel German Restaurant Gift Shop Gluten-free Restaurant Golf Course Gourmet Shop Greek Restaurant Grocery Store Gym Gym / Fitness Center Hakka Restaurant Harbor / Marina Hardware Store Health &amp; Beauty Service Health Food Store Historic Site History Museum Hobby Shop Hockey Arena Home Service Hospital Hostel Hotel Hotel Bar Hotpot Restaurant IT Services Ice Cream Shop Indian Restaurant Indie Movie Theater Indonesian Restaurant Intersection Irish Pub Italian Restaurant Japanese Restaurant Jazz Club Jewelry Store Juice Bar Korean Restaurant Lake Latin American Restaurant Light Rail Station Lingerie Store Liquor Store Lounge Luggage Store Mac &amp; Cheese Joint Market Massage Studio Medical Center Mediterranean Restaurant Men&#39;s Store Metro Station Mexican Restaurant Middle Eastern Restaurant Miscellaneous Shop Mobile Phone Shop Modern European Restaurant Molecular Gastronomy Restaurant Monument / Landmark Motel Movie Theater Museum Music Venue New American Restaurant Nightclub Noodle House Office Opera House Optical Shop Organic Grocery Other Great Outdoors Park Performing Arts Venue Pet Store Pharmacy Piano Bar Pizza Place Playground Plaza Poke Place Pool Portuguese Restaurant Poutine Place Print Shop Pub Ramen Restaurant Record Shop Recording Studio Rental Car Location Restaurant River Roof Deck Sake Bar Salad Place Salon / Barbershop Sandwich Place Scenic Lookout Sculpture Garden Seafood Restaurant Shoe Store Shopping Mall Shopping Plaza Skate Park Skating Rink Smoke Shop Snack Place Soccer Field Spa Speakeasy Sporting Goods Shop Sports Bar Stadium Stationery Store Steakhouse Strip Club Supermarket Supplement Shop Sushi Restaurant Swim School Tailor Shop Taiwanese Restaurant Tanning Salon Tea Room Tennis Court Thai Restaurant Theater Theme Restaurant Thrift / Vintage Store Toy / Game Store Trail Train Station Vegetarian / Vegan Restaurant Video Game Store Video Store Vietnamese Restaurant Warehouse Store Wine Bar Wine Shop Wings Joint Women&#39;s Store . 0 Adelaide ,King ,Richmond | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.030000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.01 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.040000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.070000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.020000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.010000 | 0.01 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.020000 | 0.010000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.00000 | 0.010000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.01 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.01 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.010000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.020000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.050000 | 0.0 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.010000 | 0.00000 | 0.0 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.040000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | . 1 Agincourt | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.00 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 2 Agincourt North ,L&#39;Amoreaux East ,Milliken ,St... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 3 Albion Gardens ,Beaumond Heights ,Humbergate ,... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.0 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 4 Alderwood ,Long Branch | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.100000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.100000 | 0.0 | 0.200000 | 0.000000 | 0.000000 | 0.000000 | 0.100000 | 0.000000 | 0.000000 | 0.0 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.100000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.100 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 5 Bathurst Manor ,Downsview North ,Wilson Heights | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.105263 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.052632 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.0 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 6 Bayview Village | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.250000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 7 Bedford Park ,Lawrence Manor East | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.0 | 0.040000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.080000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.040000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.040000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.040000 | 0.040000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.080000 | 0.000000 | 0.000000 | 0.00000 | 0.040000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.0 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.080000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.080000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 8 Berczy Park | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.018182 | 0.036364 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.018182 | 0.018182 | 0.000000 | 0.036364 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.0 | 0.036364 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.036364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.054545 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.018182 | 0.000000 | 0.018182 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.018182 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.036364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.018182 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.018182 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.018182 | 0.018182 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.036364 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.036364 | 0.000000 | 0.018182 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.00000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 9 Birch Cliff ,Cliffside West | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.250000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.25 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.250 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 10 Bloordale Gardens ,Eringate ,Markland Wood ,Ol... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.125000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.125000 | 0.125000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 11 Brockton ,Exhibition Place ,Parkdale Village | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.045455 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.045455 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.136364 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.045455 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.045455 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.045455 | 0.045455 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.045455 | 0.045455 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.045455 | 0.045455 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 12 Business Reply Mail Processing Centre 969 Eastern | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.066667 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.066667 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.066667 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.066667 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.066667 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 13 CFB Toronto ,Downsview East | 0.000000 | 0.000000 | 0.000000 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 14 CN Tower ,Bathurst Quay ,Island airport ,Harbo... | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.058824 | 0.058824 | 0.117647 | 0.176471 | 0.117647 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.000000 | 0.058824 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.058824 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.058824 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 15 Cabbagetown ,St. James Town | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.047619 | 0.023810 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.0 | 0.047619 | 0.000000 | 0.00 | 0.000000 | 0.023810 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.071429 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.023810 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.047619 | 0.023810 | 0.000000 | 0.02381 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.02381 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.000000 | 0.023810 | 0.023810 | 0.0 | 0.047619 | 0.023810 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.047619 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.047619 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.02381 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.02381 | 0.00 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 16 Caledonia-Fairbanks | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.25000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | . 17 Canada Post Gateway Processing Centre | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 18 Cedarbrae | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.125000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 19 Central Bay Street | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.025316 | 0.00 | 0.037975 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.037975 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.037975 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.164557 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.012658 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.025316 | 0.012658 | 0.000000 | 0.012658 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.012658 | 0.000000 | 0.00000 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.00 | 0.037975 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.050633 | 0.037975 | 0.000000 | 0.00000 | 0.037975 | 0.012658 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.012658 | 0.012658 | 0.000000 | 0.012658 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.012658 | 0.000000 | 0.0 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.0 | 0.00 | 0.000000 | 0.025316 | 0.000000 | 0.037975 | 0.00 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.025316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | . 20 Chinatown ,Grange Park ,Kensington Market | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.068182 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.011364 | 0.011364 | 0.000000 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.011364 | 0.011364 | 0.000000 | 0.011364 | 0.00 | 0.022727 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.056818 | 0.000000 | 0.00 | 0.000000 | 0.011364 | 0.011364 | 0.045455 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.022727 | 0.045455 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.022727 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.022727 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011364 | 0.011364 | 0.000000 | 0.034091 | 0.000000 | 0.000000 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.022727 | 0.000000 | 0.000000 | 0.011364 | 0.000000 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.011364 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.011364 | 0.000000 | 0.022727 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.011364 | 0.000000 | 0.000000 | 0.011364 | 0.011364 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011364 | 0.000000 | 0.00000 | 0.011364 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.034091 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011364 | 0.000000 | 0.00 | 0.000000 | 0.011364 | 0.00 | 0.022727 | 0.000000 | 0.000000 | 0.011364 | 0.0 | 0.022727 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011364 | 0.0 | 0.000000 | 0.011364 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.034091 | 0.000000 | 0.000000 | 0.056818 | 0.000000 | 0.011364 | 0.000000 | 0.000000 | 0.000000 | . 21 Christie | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.055556 | 0.000000 | 0.000000 | 0.055556 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.166667 | 0.000000 | 0.00 | 0.055556 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.055556 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.055556 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.055556 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.222222 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.055556 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.055556 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.111111 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.055556 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 22 Church and Wellesley | 0.011628 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.00 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.00 | 0.011628 | 0.000000 | 0.000000 | 0.023256 | 0.00 | 0.023256 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.023256 | 0.000000 | 0.00 | 0.000000 | 0.011628 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.081395 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.011628 | 0.000000 | 0.000000 | 0.000 | 0.023256 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.011628 | 0.000000 | 0.011628 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023256 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023256 | 0.034884 | 0.011628 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023256 | 0.000000 | 0.000000 | 0.00 | 0.011628 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.069767 | 0.000000 | 0.00000 | 0.011628 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.023256 | 0.023256 | 0.0 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.023256 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.034884 | 0.0 | 0.00 | 0.011628 | 0.000000 | 0.011628 | 0.000000 | 0.00 | 0.011628 | 0.011628 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.011628 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.00000 | 0.011628 | 0.011628 | 0.000000 | 0.000000 | 0.034884 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.011628 | 0.011628 | 0.011628 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.011628 | 0.000000 | 0.000000 | 0.011628 | 0.011628 | 0.000000 | . 23 Clairlea ,Golden Mile ,Oakridge | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.200000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.200000 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.1 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.1 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 24 Clarks Corners ,Sullivan ,Tam O&#39;Shanter | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.083333 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.0 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 25 Cliffcrest ,Cliffside ,Scarborough Village West | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.5 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 26 Cloverdale ,Islington ,Martin Grove ,Princess ... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 27 Commerce Court ,Victoria Hotel | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.070000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.030000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.010000 | 0.010000 | 0.010000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.010000 | 0.01 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.040000 | 0.010000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.060000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.030000 | 0.030000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.0 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.070000 | 0.0 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | . 28 Davisville | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.030303 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.060606 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.060606 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.030303 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030303 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030303 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.030303 | 0.030303 | 0.000000 | 0.060606 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.030303 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.060606 | 0.030303 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030303 | 0.000000 | 0.000000 | 0.030303 | 0.0 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030303 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.00 | 0.000000 | 0.030303 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.060606 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.030303 | 0.000000 | 0.000000 | 0.000000 | 0.030303 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 29 Davisville North | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.111111 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.111111 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.111111 | 0.000000 | 0.111111 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.111111 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.111111 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.111111 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.111111 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.111111 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 30 Deer Park ,Forest Hill SE ,Rathnelly ,South Hi... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.071429 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.071429 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.071429 | 0.00 | 0.071429 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.071429 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.071429 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.071429 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.071429 | 0.000000 | 0.071429 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.071429 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 31 Del Ray ,Keelesdale ,Mount Dennis ,Silverthorn | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 32 Design Exchange ,Toronto Dominion Centre | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.030000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.080000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.130000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.010000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.030000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.020000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.060000 | 0.0 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.010000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.00000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | . 33 Don Mills North | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.250000 | 0.000000 | 0.00 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 34 Dorset Park ,Scarborough Town Centre ,Wexford ... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.142857 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.285714 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.142857 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.142857 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 35 Dovercourt Village ,Dufferin | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.133333 | 0.066667 | 0.066667 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.066667 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.066667 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.066667 | 0.000000 | 0.000000 | 0.133333 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 36 Downsview ,North Park ,Upwood Park | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.25 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.25 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 37 Downsview Central | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.250000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 38 Downsview Northwest | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.250000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 39 Downsview West | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 40 East Birchmount Park ,Ionview ,Kennedy Park | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.25 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 41 East Toronto | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 42 Emery ,Humberlea | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 43 Fairview ,Henry Farm ,Oriole | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.031746 | 0.015873 | 0.015873 | 0.015873 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.015873 | 0.015873 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.142857 | 0.000000 | 0.079365 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.031746 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.015873 | 0.015873 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.063492 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.015873 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.047619 | 0.000000 | 0.00000 | 0.031746 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.015873 | 0.000000 | 0.015873 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.015873 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.015873 | 0.015873 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.015873 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.031746 | 0.000000 | 0.015873 | 0.015873 | 0.000000 | 0.000000 | 0.015873 | 0.000000 | 0.00 | 0.000000 | 0.015873 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.031746 | . 44 First Canadian Place ,Underground city | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.070000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.120000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.020000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.010000 | 0.01 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.030000 | 0.010000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.030000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.0 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.020000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.060000 | 0.0 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.020000 | 0.000000 | 0.020000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | . 45 Flemingdon Park ,Don Mills South | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.045455 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.045455 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.045455 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.045455 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.045455 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.045455 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.045455 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 46 Forest Hill North ,Forest Hill West | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.25000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 47 Glencairn | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 48 Guildwood ,Morningside ,West Hill | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.142857 | 0.000000 | 0.000000 | 0.0 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.142857 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.142857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 49 Harbord ,University of Toronto | 0.028571 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.057143 | 0.000000 | 0.057143 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.028571 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.057143 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.142857 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.028571 | 0.000000 | 0.028571 | 0.00 | 0.00 | 0.00 | 0.028571 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.057143 | 0.057143 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.028571 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.028571 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.057143 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.028571 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.028571 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 50 Harbourfront | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.00 | 0.021277 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.063830 | 0.021277 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.042553 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.063830 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.148936 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.021277 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.021277 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.00 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.042553 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.063830 | 0.021277 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.063830 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.042553 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.042553 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 51 Harbourfront East ,Toronto Islands ,Union Station | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.05 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.020000 | 0.000000 | 0.02 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.040000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.120000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.010000 | 0.010000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.010000 | 0.000000 | 0.01 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.010000 | 0.000000 | 0.00000 | 0.010000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.0 | 0.000000 | 0.000000 | 0.020000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.010000 | 0.000000 | 0.000000 | 0.0 | 0.020000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.0 | 0.01 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.03 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.010 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.030000 | 0.020000 | 0.000000 | 0.00000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | . 52 High Park ,The Junction South | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.086957 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.086957 | 0.043478 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.00000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.086957 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.086957 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 53 Highland Creek ,Rouge Hill ,Port Union | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 54 Hillcrest Village | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.25 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 55 Humber Bay ,King&#39;s Mill Park ,Kingsway Park So... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 56 Humber Bay Shores ,Mimico South ,New Toronto | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.0 | 0.166667 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.0 | 0.083333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 57 Humber Summit | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 58 Humewood-Cedarvale | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 59 Kingsview Village ,Martin Grove Gardens ,Richv... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 60 Kingsway Park South West ,Mimico NW ,The Queen... | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.076923 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.076923 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.076923 | 0.076923 | 0.000000 | 0.000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | . 61 L&#39;Amoreaux West | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.066667 | 0.000000 | 0.000000 | 0.066667 | 0.00 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.133333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.200000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.0 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.066667 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.066667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 62 Lawrence Heights ,Lawrence Manor | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.153846 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.153846 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.076923 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.153846 | . 63 Lawrence Park | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 64 Leaside | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.031250 | 0.000000 | 0.031250 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.031250 | 0.000000 | 0.031250 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.031250 | 0.031250 | 0.000000 | 0.000000 | 0.00 | 0.062500 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.093750 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.031250 | 0.031250 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.031250 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.031250 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.062500 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.031250 | 0.031250 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.031250 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.031250 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.031250 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.031250 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.031250 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.031250 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.031250 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.093750 | 0.031250 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.031250 | 0.000000 | 0.031250 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 65 Little Portugal ,Trinity | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.054545 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.036364 | 0.000000 | 0.127273 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.036364 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.072727 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.018182 | 0.018182 | 0.000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.018182 | 0.00 | 0.00 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.00000 | 0.018182 | 0.018182 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.036364 | 0.0 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.018182 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.036364 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.054545 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.018182 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.018182 | 0.000000 | 0.000000 | 0.036364 | 0.000000 | 0.036364 | 0.000000 | 0.000000 | 0.000000 | . 66 Maryvale ,Wexford | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.250000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 67 Moore Park ,Summerhill East | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 68 Newtonbrook ,Willowdale | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 69 North Toronto West | 0.050000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.050000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.000000 | 0.000000 | 0.000000 | 0.150000 | 0.000000 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.000000 | 0.050000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.050000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.050000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.050000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.050000 | 0.000000 | 0.00 | 0.000000 | 0.050000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.050000 | 0.000000 | 0.050000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 70 Northwest | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 71 Northwood Park ,York University | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 72 Parkdale ,Roncesvalles | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.00 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.076923 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.153846 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.076923 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.076923 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 73 Parkwoods | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.333333 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 74 Queen&#39;s Park | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.025641 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.025641 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.230769 | 0.000000 | 0.025641 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.025641 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.025641 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.025641 | 0.000000 | 0.00000 | 0.025641 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.051282 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.00 | 0.000000 | 0.025641 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.025641 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.025641 | 0.000000 | . 75 Rosedale | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 76 Roselawn | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 77 Rouge ,Malvern | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.5 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 78 Runnymede ,Swansea | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.078947 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.078947 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.026316 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.026316 | 0.000000 | 0.026316 | 0.026316 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.00000 | 0.026316 | 0.000000 | 0.00 | 0.026316 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.026316 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.026316 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.026316 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 79 Ryerson ,Garden District | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.020000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.030000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.080000 | 0.000000 | 0.100000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.020000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.030000 | 0.000000 | 0.00000 | 0.010000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.02 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.010000 | 0.030000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.0 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.020000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.0 | 0.010000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.010000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.01 | 0.010000 | 0.000000 | 0.010000 | 0.020000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | . 80 Scarborough Village | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 81 Silver Hills ,York Mills | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.5 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 82 St. James Town | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.010000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.0 | 0.060000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.030000 | 0.020000 | 0.070000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.00000 | 0.020000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.020000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.040000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.020000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.02 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.010000 | 0.000000 | 0.010000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | . 83 Stn A PO Boxes 25 The Esplanade | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.010638 | 0.00 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.010638 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010638 | 0.000000 | 0.000000 | 0.031915 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.010638 | 0.000000 | 0.00 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.0 | 0.042553 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.000000 | 0.031915 | 0.117021 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010638 | 0.000000 | 0.010638 | 0.00 | 0.000000 | 0.010638 | 0.00000 | 0.021277 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.010638 | 0.010638 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.010638 | 0.010638 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010638 | 0.000000 | 0.000000 | 0.021277 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.031915 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.021277 | 0.031915 | 0.010638 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010638 | 0.021277 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.00 | 0.0 | 0.010638 | 0.010638 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010638 | 0.000000 | 0.00 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.021277 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.042553 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.00 | 0.000000 | 0.031915 | 0.000000 | 0.010638 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.010638 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010638 | 0.00000 | 0.00 | 0.010638 | 0.000000 | 0.010638 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010638 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 84 Studio District | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.048780 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.048780 | 0.024390 | 0.024390 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.048780 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.097561 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.073171 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.024390 | 0.000000 | 0.000000 | 0.00 | 0.024390 | 0.000000 | 0.02439 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.024390 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.048780 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.024390 | 0.000000 | 0.024390 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.00 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.02439 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | . 85 The Annex ,North Midtown ,Yorkville | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.130435 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.086957 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.043478 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.043478 | 0.000000 | 0.000000 | 0.043478 | 0.0 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.130435 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 86 The Beaches | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.200000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.200000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.200000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.200000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 87 The Beaches West ,India Bazaar | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.105263 | 0.000000 | 0.052632 | 0.000000 | 0.0 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.105263 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 88 The Danforth West ,Riverdale | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.024390 | 0.000000 | 0.024390 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.097561 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.024390 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.02439 | 0.048780 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.195122 | 0.024390 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.048780 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.073171 | 0.000000 | 0.000000 | 0.00000 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.024390 | 0.024390 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.024390 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 89 The Junction North ,Runnymede | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 90 The Kingsway ,Montgomery Road ,Old Mill North | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.5 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 91 Thorncliffe Park | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.052632 | 0.052632 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.105263 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.052632 | 0.000000 | 0.000000 | 0.052632 | 0.0 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.052632 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 92 Victoria Village | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 93 Westmount | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 94 Weston | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 95 Willowdale South | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.029412 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.058824 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.00 | 0.029412 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.00000 | 0.029412 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.0 | 0.058824 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.088235 | 0.000000 | 0.000000 | 0.000000 | 0.029412 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.058824 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.029412 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 96 Willowdale West | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.166667 | 0.0 | 0.166667 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 97 Woburn | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.250000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 98 Woodbine Gardens ,Parkview Hill | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.090909 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.090909 | 0.090909 | 0.0 | 0.181818 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 99 Woodbine Heights | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.125000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.125 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.125000 | 0.000000 | 0.000000 | 0.125000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.125 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.125000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 100 York Mills West | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.250000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.250000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.500000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000 | 0.000000 | 0.000 | 0.000000 | 0.00000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . . toronto_grouped.shape . (101, 267) . Let&#39;s print the top 5 most common venues for each neighborhood. . num_top_venues = 5 for hood in toronto_grouped[&#39;Neighborhood&#39;]: print(&quot;-&quot;+hood+&quot;-&quot;) temp = toronto_grouped[toronto_grouped[&#39;Neighborhood&#39;] == hood].T.reset_index() temp.columns = [&#39;venue&#39;,&#39;freq&#39;] temp = temp.iloc[1:] temp[&#39;freq&#39;] = temp[&#39;freq&#39;].astype(float) temp = temp.round({&#39;freq&#39;: 2}) print(temp.sort_values(&#39;freq&#39;, ascending=False).reset_index(drop=True).head(num_top_venues)) print(&#39; n&#39;) . -Adelaide ,King ,Richmond- venue freq 0 Coffee Shop 0.07 1 Restaurant 0.05 2 Café 0.04 3 Thai Restaurant 0.04 4 Sushi Restaurant 0.03 -Agincourt- venue freq 0 Lounge 0.25 1 Latin American Restaurant 0.25 2 Breakfast Spot 0.25 3 Clothing Store 0.25 4 Metro Station 0.00 -Agincourt North ,L&#39;Amoreaux East ,Milliken ,Steeles East- venue freq 0 Park 0.33 1 Playground 0.33 2 Coffee Shop 0.33 3 Yoga Studio 0.00 4 Men&#39;s Store 0.00 -Albion Gardens ,Beaumond Heights ,Humbergate ,Jamestown ,Mount Olive ,Silverstone ,South Steeles ,Thistletown- venue freq 0 Grocery Store 0.17 1 Pizza Place 0.17 2 Beer Store 0.08 3 Fried Chicken Joint 0.08 4 Japanese Restaurant 0.08 -Alderwood ,Long Branch- venue freq 0 Pizza Place 0.2 1 Pharmacy 0.1 2 Coffee Shop 0.1 3 Sandwich Place 0.1 4 Dance Studio 0.1 -Bathurst Manor ,Downsview North ,Wilson Heights- venue freq 0 Coffee Shop 0.11 1 Bridal Shop 0.05 2 Fried Chicken Joint 0.05 3 Sushi Restaurant 0.05 4 Frozen Yogurt Shop 0.05 -Bayview Village- venue freq 0 Café 0.25 1 Bank 0.25 2 Chinese Restaurant 0.25 3 Japanese Restaurant 0.25 4 Monument / Landmark 0.00 -Bedford Park ,Lawrence Manor East- venue freq 0 Sandwich Place 0.08 1 Italian Restaurant 0.08 2 Restaurant 0.08 3 Coffee Shop 0.08 4 Grocery Store 0.04 -Berczy Park- venue freq 0 Coffee Shop 0.09 1 Cocktail Bar 0.05 2 Cheese Shop 0.04 3 Beer Bar 0.04 4 Bakery 0.04 -Birch Cliff ,Cliffside West- venue freq 0 College Stadium 0.25 1 Skating Rink 0.25 2 Café 0.25 3 General Entertainment 0.25 4 Mac &amp; Cheese Joint 0.00 -Bloordale Gardens ,Eringate ,Markland Wood ,Old Burnhamthorpe- venue freq 0 Pizza Place 0.12 1 Cosmetics Shop 0.12 2 Beer Store 0.12 3 Coffee Shop 0.12 4 Shopping Plaza 0.12 -Brockton ,Exhibition Place ,Parkdale Village- venue freq 0 Café 0.14 1 Coffee Shop 0.09 2 Breakfast Spot 0.09 3 Grocery Store 0.05 4 Intersection 0.05 -Business Reply Mail Processing Centre 969 Eastern- venue freq 0 Fast Food Restaurant 0.07 1 Auto Workshop 0.07 2 Pizza Place 0.07 3 Recording Studio 0.07 4 Restaurant 0.07 -CFB Toronto ,Downsview East- venue freq 0 Airport 0.5 1 Park 0.5 2 Yoga Studio 0.0 3 Mediterranean Restaurant 0.0 4 Mobile Phone Shop 0.0 -CN Tower ,Bathurst Quay ,Island airport ,Harbourfront West ,King and Spadina ,Railway Lands ,South Niagara- venue freq 0 Airport Service 0.18 1 Airport Lounge 0.12 2 Airport Terminal 0.12 3 Harbor / Marina 0.06 4 Boat or Ferry 0.06 -Cabbagetown ,St. James Town- venue freq 0 Coffee Shop 0.07 1 Italian Restaurant 0.05 2 Pizza Place 0.05 3 Bakery 0.05 4 Pub 0.05 -Caledonia-Fairbanks- venue freq 0 Park 0.50 1 Women&#39;s Store 0.25 2 Market 0.25 3 Mediterranean Restaurant 0.00 4 Miscellaneous Shop 0.00 -Canada Post Gateway Processing Centre- venue freq 0 Coffee Shop 0.17 1 Intersection 0.17 2 Hotel 0.17 3 Gym 0.08 4 Sandwich Place 0.08 -Cedarbrae- venue freq 0 Caribbean Restaurant 0.12 1 Gas Station 0.12 2 Bakery 0.12 3 Thai Restaurant 0.12 4 Fried Chicken Joint 0.12 -Central Bay Street- venue freq 0 Coffee Shop 0.16 1 Italian Restaurant 0.05 2 Burger Joint 0.04 3 Juice Bar 0.04 4 Japanese Restaurant 0.04 -Chinatown ,Grange Park ,Kensington Market- venue freq 0 Bar 0.07 1 Café 0.06 2 Vietnamese Restaurant 0.06 3 Chinese Restaurant 0.05 4 Coffee Shop 0.05 -Christie- venue freq 0 Grocery Store 0.22 1 Café 0.17 2 Park 0.11 3 Nightclub 0.06 4 Italian Restaurant 0.06 -Church and Wellesley- venue freq 0 Coffee Shop 0.08 1 Japanese Restaurant 0.07 2 Restaurant 0.03 3 Sushi Restaurant 0.03 4 Gay Bar 0.03 -Clairlea ,Golden Mile ,Oakridge- venue freq 0 Bakery 0.2 1 Bus Line 0.2 2 Ice Cream Shop 0.1 3 Intersection 0.1 4 Bus Station 0.1 -Clarks Corners ,Sullivan ,Tam O&#39;Shanter- venue freq 0 Pizza Place 0.17 1 Pharmacy 0.08 2 Noodle House 0.08 3 Italian Restaurant 0.08 4 Thai Restaurant 0.08 -Cliffcrest ,Cliffside ,Scarborough Village West- venue freq 0 Motel 0.50 1 American Restaurant 0.25 2 Movie Theater 0.25 3 Modern European Restaurant 0.00 4 Miscellaneous Shop 0.00 -Cloverdale ,Islington ,Martin Grove ,Princess Gardens ,West Deane Park- venue freq 0 Home Service 1.0 1 Yoga Studio 0.0 2 Men&#39;s Store 0.0 3 Mobile Phone Shop 0.0 4 Miscellaneous Shop 0.0 -Commerce Court ,Victoria Hotel- venue freq 0 Coffee Shop 0.10 1 Restaurant 0.07 2 Café 0.07 3 Hotel 0.06 4 American Restaurant 0.04 -Davisville- venue freq 0 Dessert Shop 0.09 1 Sandwich Place 0.09 2 Pizza Place 0.09 3 Gym 0.06 4 Café 0.06 -Davisville North- venue freq 0 Park 0.11 1 Food &amp; Drink Shop 0.11 2 Gym 0.11 3 Breakfast Spot 0.11 4 Convenience Store 0.11 -Deer Park ,Forest Hill SE ,Rathnelly ,South Hill ,Summerhill West- venue freq 0 Coffee Shop 0.14 1 Pub 0.14 2 Restaurant 0.07 3 Light Rail Station 0.07 4 Fried Chicken Joint 0.07 -Del Ray ,Keelesdale ,Mount Dennis ,Silverthorn- venue freq 0 Restaurant 0.25 1 Discount Store 0.25 2 Sandwich Place 0.25 3 Convenience Store 0.25 4 Men&#39;s Store 0.00 -Design Exchange ,Toronto Dominion Centre- venue freq 0 Coffee Shop 0.13 1 Café 0.08 2 Restaurant 0.06 3 Hotel 0.05 4 Italian Restaurant 0.04 -Don Mills North- venue freq 0 Gym / Fitness Center 0.25 1 Caribbean Restaurant 0.25 2 Japanese Restaurant 0.25 3 Café 0.25 4 Other Great Outdoors 0.00 -Dorset Park ,Scarborough Town Centre ,Wexford Heights- venue freq 0 Indian Restaurant 0.29 1 Chinese Restaurant 0.14 2 Pet Store 0.14 3 Light Rail Station 0.14 4 Brewery 0.14 -Dovercourt Village ,Dufferin- venue freq 0 Bakery 0.13 1 Pharmacy 0.13 2 Grocery Store 0.07 3 Middle Eastern Restaurant 0.07 4 Music Venue 0.07 -Downsview ,North Park ,Upwood Park- venue freq 0 Bakery 0.25 1 Park 0.25 2 Construction &amp; Landscaping 0.25 3 Basketball Court 0.25 4 Men&#39;s Store 0.00 -Downsview Central- venue freq 0 Business Service 0.25 1 Korean Restaurant 0.25 2 Baseball Field 0.25 3 Home Service 0.25 4 Yoga Studio 0.00 -Downsview Northwest- venue freq 0 Grocery Store 0.25 1 Athletics &amp; Sports 0.25 2 Liquor Store 0.25 3 Gym / Fitness Center 0.25 4 Wine Bar 0.00 -Downsview West- venue freq 0 Grocery Store 0.33 1 Park 0.17 2 Bank 0.17 3 Hotel 0.17 4 Shopping Mall 0.17 -East Birchmount Park ,Ionview ,Kennedy Park- venue freq 0 Department Store 0.25 1 Discount Store 0.25 2 Coffee Shop 0.25 3 Hobby Shop 0.25 4 Metro Station 0.00 -East Toronto- venue freq 0 Park 0.50 1 Coffee Shop 0.25 2 Convenience Store 0.25 3 Yoga Studio 0.00 4 Men&#39;s Store 0.00 -Emery ,Humberlea- venue freq 0 Fabric Shop 0.33 1 Baseball Field 0.33 2 Furniture / Home Store 0.33 3 Luggage Store 0.00 4 Mac &amp; Cheese Joint 0.00 -Fairview ,Henry Farm ,Oriole- venue freq 0 Clothing Store 0.14 1 Coffee Shop 0.08 2 Fast Food Restaurant 0.06 3 Japanese Restaurant 0.05 4 Women&#39;s Store 0.03 -First Canadian Place ,Underground city- venue freq 0 Coffee Shop 0.12 1 Café 0.07 2 Restaurant 0.06 3 Hotel 0.03 4 Steakhouse 0.03 -Flemingdon Park ,Don Mills South- venue freq 0 Restaurant 0.09 1 Gym 0.09 2 Beer Store 0.09 3 Asian Restaurant 0.09 4 Coffee Shop 0.09 -Forest Hill North ,Forest Hill West- venue freq 0 Park 0.25 1 Jewelry Store 0.25 2 Sushi Restaurant 0.25 3 Trail 0.25 4 Mediterranean Restaurant 0.00 -Glencairn- venue freq 0 Pizza Place 0.33 1 Park 0.17 2 Sushi Restaurant 0.17 3 Pub 0.17 4 Japanese Restaurant 0.17 -Guildwood ,Morningside ,West Hill- venue freq 0 Medical Center 0.14 1 Spa 0.14 2 Breakfast Spot 0.14 3 Rental Car Location 0.14 4 Mexican Restaurant 0.14 -Harbord ,University of Toronto- venue freq 0 Café 0.14 1 Restaurant 0.06 2 Bakery 0.06 3 Italian Restaurant 0.06 4 Japanese Restaurant 0.06 -Harbourfront- venue freq 0 Coffee Shop 0.15 1 Park 0.06 2 Pub 0.06 3 Café 0.06 4 Bakery 0.06 -Harbourfront East ,Toronto Islands ,Union Station- venue freq 0 Coffee Shop 0.12 1 Aquarium 0.05 2 Hotel 0.04 3 Italian Restaurant 0.04 4 Café 0.04 -High Park ,The Junction South- venue freq 0 Thai Restaurant 0.09 1 Café 0.09 2 Mexican Restaurant 0.09 3 Bar 0.09 4 Grocery Store 0.04 -Highland Creek ,Rouge Hill ,Port Union- venue freq 0 Bar 1.0 1 Yoga Studio 0.0 2 Men&#39;s Store 0.0 3 Mobile Phone Shop 0.0 4 Miscellaneous Shop 0.0 -Hillcrest Village- venue freq 0 Mediterranean Restaurant 0.25 1 Golf Course 0.25 2 Dog Run 0.25 3 Pool 0.25 4 Yoga Studio 0.00 -Humber Bay ,King&#39;s Mill Park ,Kingsway Park South East ,Mimico NE ,Old Mill South ,The Queensway East ,Royal York South East ,Sunnylea- venue freq 0 Baseball Field 1.0 1 Yoga Studio 0.0 2 Men&#39;s Store 0.0 3 Mobile Phone Shop 0.0 4 Miscellaneous Shop 0.0 -Humber Bay Shores ,Mimico South ,New Toronto- venue freq 0 Café 0.17 1 Pizza Place 0.08 2 Bakery 0.08 3 Coffee Shop 0.08 4 Restaurant 0.08 -Humber Summit- venue freq 0 Pizza Place 1.0 1 Yoga Studio 0.0 2 Mediterranean Restaurant 0.0 3 Mobile Phone Shop 0.0 4 Miscellaneous Shop 0.0 -Humewood-Cedarvale- venue freq 0 Hockey Arena 0.33 1 Field 0.33 2 Trail 0.33 3 Yoga Studio 0.00 4 Miscellaneous Shop 0.00 -Kingsview Village ,Martin Grove Gardens ,Richview Gardens ,St. Phillips- venue freq 0 Mobile Phone Shop 0.25 1 Pizza Place 0.25 2 Sandwich Place 0.25 3 Bus Line 0.25 4 Men&#39;s Store 0.00 -Kingsway Park South West ,Mimico NW ,The Queensway West ,Royal York South West ,South of Bloor- venue freq 0 Grocery Store 0.08 1 Thrift / Vintage Store 0.08 2 Gym 0.08 3 Fast Food Restaurant 0.08 4 Discount Store 0.08 -L&#39;Amoreaux West- venue freq 0 Fast Food Restaurant 0.20 1 Chinese Restaurant 0.13 2 Grocery Store 0.07 3 Supermarket 0.07 4 Pizza Place 0.07 -Lawrence Heights ,Lawrence Manor- venue freq 0 Women&#39;s Store 0.15 1 Furniture / Home Store 0.15 2 Clothing Store 0.15 3 Gift Shop 0.08 4 Event Space 0.08 -Lawrence Park- venue freq 0 Park 0.33 1 Swim School 0.33 2 Bus Line 0.33 3 Yoga Studio 0.00 4 Mediterranean Restaurant 0.00 -Leaside- venue freq 0 Coffee Shop 0.09 1 Sporting Goods Shop 0.09 2 Burger Joint 0.06 3 Furniture / Home Store 0.06 4 Grocery Store 0.03 -Little Portugal ,Trinity- venue freq 0 Bar 0.13 1 Coffee Shop 0.07 2 Asian Restaurant 0.05 3 Restaurant 0.05 4 Men&#39;s Store 0.04 -Maryvale ,Wexford- venue freq 0 Smoke Shop 0.25 1 Breakfast Spot 0.25 2 Bakery 0.25 3 Middle Eastern Restaurant 0.25 4 Yoga Studio 0.00 -Moore Park ,Summerhill East- venue freq 0 Park 0.33 1 Playground 0.33 2 Tennis Court 0.33 3 Organic Grocery 0.00 4 Mobile Phone Shop 0.00 -Newtonbrook ,Willowdale- venue freq 0 Piano Bar 1.0 1 Yoga Studio 0.0 2 Mediterranean Restaurant 0.0 3 Mobile Phone Shop 0.0 4 Miscellaneous Shop 0.0 -North Toronto West- venue freq 0 Clothing Store 0.15 1 Coffee Shop 0.10 2 Yoga Studio 0.05 3 Sporting Goods Shop 0.05 4 Dessert Shop 0.05 -Northwest- venue freq 0 Drugstore 0.33 1 Rental Car Location 0.33 2 Bar 0.33 3 Men&#39;s Store 0.00 4 Miscellaneous Shop 0.00 -Northwood Park ,York University- venue freq 0 Falafel Restaurant 0.17 1 Bar 0.17 2 Caribbean Restaurant 0.17 3 Massage Studio 0.17 4 Coffee Shop 0.17 -Parkdale ,Roncesvalles- venue freq 0 Gift Shop 0.15 1 Bookstore 0.08 2 Eastern European Restaurant 0.08 3 Dog Run 0.08 4 Bar 0.08 -Parkwoods- venue freq 0 Park 0.33 1 Bus Stop 0.33 2 Food &amp; Drink Shop 0.33 3 Yoga Studio 0.00 4 Mediterranean Restaurant 0.00 -Queen&#39;s Park- venue freq 0 Coffee Shop 0.23 1 Park 0.05 2 Fried Chicken Joint 0.03 3 Bar 0.03 4 Seafood Restaurant 0.03 -Rosedale- venue freq 0 Park 0.50 1 Playground 0.25 2 Trail 0.25 3 Mediterranean Restaurant 0.00 4 Miscellaneous Shop 0.00 -Roselawn- venue freq 0 Ice Cream Shop 0.5 1 Garden 0.5 2 Men&#39;s Store 0.0 3 Mobile Phone Shop 0.0 4 Miscellaneous Shop 0.0 -Rouge ,Malvern- venue freq 0 Fast Food Restaurant 0.5 1 Print Shop 0.5 2 Yoga Studio 0.0 3 Mediterranean Restaurant 0.0 4 Miscellaneous Shop 0.0 -Runnymede ,Swansea- venue freq 0 Café 0.08 1 Coffee Shop 0.08 2 Sushi Restaurant 0.05 3 Pizza Place 0.05 4 Italian Restaurant 0.05 -Ryerson ,Garden District- venue freq 0 Coffee Shop 0.10 1 Clothing Store 0.08 2 Café 0.03 3 Japanese Restaurant 0.03 4 Middle Eastern Restaurant 0.03 -Scarborough Village- venue freq 0 Convenience Store 0.5 1 Playground 0.5 2 Mediterranean Restaurant 0.0 3 Mobile Phone Shop 0.0 4 Miscellaneous Shop 0.0 -Silver Hills ,York Mills- venue freq 0 Park 0.5 1 Cafeteria 0.5 2 Yoga Studio 0.0 3 Metro Station 0.0 4 Modern European Restaurant 0.0 -St. James Town- venue freq 0 Coffee Shop 0.07 1 Café 0.06 2 Restaurant 0.05 3 Italian Restaurant 0.04 4 Hotel 0.04 -Stn A PO Boxes 25 The Esplanade- venue freq 0 Coffee Shop 0.12 1 Café 0.04 2 Restaurant 0.04 3 Japanese Restaurant 0.03 4 Hotel 0.03 -Studio District- venue freq 0 Café 0.10 1 Coffee Shop 0.07 2 Bakery 0.05 3 Brewery 0.05 4 American Restaurant 0.05 -The Annex ,North Midtown ,Yorkville- venue freq 0 Café 0.13 1 Sandwich Place 0.13 2 Coffee Shop 0.09 3 Cosmetics Shop 0.04 4 Vegetarian / Vegan Restaurant 0.04 -The Beaches- venue freq 0 Trail 0.2 1 Coffee Shop 0.2 2 Health Food Store 0.2 3 Pub 0.2 4 Yoga Studio 0.0 -The Beaches West ,India Bazaar- venue freq 0 Park 0.11 1 Sandwich Place 0.11 2 Ice Cream Shop 0.05 3 Pet Store 0.05 4 Pizza Place 0.05 -The Danforth West ,Riverdale- venue freq 0 Greek Restaurant 0.20 1 Coffee Shop 0.10 2 Italian Restaurant 0.07 3 Furniture / Home Store 0.05 4 Ice Cream Shop 0.05 -The Junction North ,Runnymede- venue freq 0 Grocery Store 0.25 1 Pizza Place 0.25 2 Brewery 0.25 3 Bus Line 0.25 4 Men&#39;s Store 0.00 -The Kingsway ,Montgomery Road ,Old Mill North- venue freq 0 Park 0.5 1 River 0.5 2 Yoga Studio 0.0 3 Men&#39;s Store 0.0 4 Mobile Phone Shop 0.0 -Thorncliffe Park- venue freq 0 Indian Restaurant 0.11 1 Yoga Studio 0.05 2 Liquor Store 0.05 3 Coffee Shop 0.05 4 Fast Food Restaurant 0.05 -Victoria Village- venue freq 0 Hockey Arena 0.25 1 Intersection 0.25 2 Coffee Shop 0.25 3 Portuguese Restaurant 0.25 4 Yoga Studio 0.00 -Westmount- venue freq 0 Pizza Place 0.25 1 Middle Eastern Restaurant 0.12 2 Intersection 0.12 3 Discount Store 0.12 4 Coffee Shop 0.12 -Weston- venue freq 0 Park 1.0 1 Yoga Studio 0.0 2 Medical Center 0.0 3 Miscellaneous Shop 0.0 4 Middle Eastern Restaurant 0.0 -Willowdale South- venue freq 0 Ramen Restaurant 0.09 1 Pizza Place 0.06 2 Shopping Mall 0.06 3 Sandwich Place 0.06 4 Café 0.06 -Willowdale West- venue freq 0 Grocery Store 0.17 1 Coffee Shop 0.17 2 Home Service 0.17 3 Discount Store 0.17 4 Pizza Place 0.17 -Woburn- venue freq 0 Coffee Shop 0.50 1 Indian Restaurant 0.25 2 Korean Restaurant 0.25 3 Metro Station 0.00 4 Modern European Restaurant 0.00 -Woodbine Gardens ,Parkview Hill- venue freq 0 Pizza Place 0.18 1 Gym / Fitness Center 0.09 2 Gastropub 0.09 3 Pharmacy 0.09 4 Bus Line 0.09 -Woodbine Heights- venue freq 0 Park 0.12 1 Pharmacy 0.12 2 Skating Rink 0.12 3 Cosmetics Shop 0.12 4 Video Store 0.12 -York Mills West- venue freq 0 Park 0.50 1 Bank 0.25 2 Convenience Store 0.25 3 Yoga Studio 0.00 4 Mediterranean Restaurant 0.00 . . Let&#39;s put this data into a pandas dataframe. First, write a function to sort the venues in descending order. . def return_most_common_venues(row, num_top_venues): row_categories = row.iloc[1:] row_categories_sorted = row_categories.sort_values(ascending=False) return row_categories_sorted.index.values[0:num_top_venues] . Let&#39;s create the new dataframe and display the top 10 venues for each neighborhood. . num_top_venues = 10 indicators = [&#39;st&#39;, &#39;nd&#39;, &#39;rd&#39;] # create columns according to the number of top venues columns = [&#39;Neighborhood&#39;] for ind in np.arange(num_top_venues): try: columns.append(&#39;{}{} Most Common Venue&#39;.format(ind+1, indicators[ind])) except: columns.append(&#39;{}th Most Common Venue&#39;.format(ind+1)) # create a new dataframe neighborhoods_venues_sorted = pd.DataFrame(columns=columns) neighborhoods_venues_sorted[&#39;Neighborhood&#39;] = toronto_grouped[&#39;Neighborhood&#39;] for ind in np.arange(toronto_grouped.shape[0]): neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(toronto_grouped.iloc[ind, :], num_top_venues) neighborhoods_venues_sorted.head() . Neighborhood 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 Adelaide ,King ,Richmond | Coffee Shop | Restaurant | Café | Thai Restaurant | Steakhouse | Sushi Restaurant | Bar | Seafood Restaurant | Lounge | Cosmetics Shop | . 1 Agincourt | Latin American Restaurant | Lounge | Breakfast Spot | Clothing Store | Donut Shop | Diner | Discount Store | Distribution Center | Dog Run | Doner Restaurant | . 2 Agincourt North ,L&#39;Amoreaux East ,Milliken ,St... | Park | Coffee Shop | Playground | Dog Run | Department Store | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | . 3 Albion Gardens ,Beaumond Heights ,Humbergate ,... | Grocery Store | Pizza Place | Japanese Restaurant | Liquor Store | Pharmacy | Discount Store | Beer Store | Fried Chicken Joint | Sandwich Place | Fast Food Restaurant | . 4 Alderwood ,Long Branch | Pizza Place | Coffee Shop | Pharmacy | Skating Rink | Pub | Pool | Sandwich Place | Dance Studio | Gym | Distribution Center | . . Cluster the neighborhoods . Run the k-means algorithm to cluster the neighborhood into 5 clusters. . kclusters = 5 toronto_grouped_clustering = toronto_grouped.drop(&#39;Neighborhood&#39;, 1) # rin k-means clustering kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(toronto_grouped_clustering) # check cluster labels generated for each row in the dataframe kmeans.labels_[0:10] . array([0, 0, 1, 2, 0, 0, 0, 0, 0, 0]) . Let&#39;s create a new dataframe that includes the cluster as well as the top 10 venues for each neighborhood. . neighborhoods_venues_sorted.insert(0, &#39;Cluster Labels&#39;, kmeans.labels_) toronto_merged = neighborhoods # merge toronto_grouped with toronto_data to add latitude/longitude for each neighborhood toronto_merged = toronto_merged.join(neighborhoods_venues_sorted.set_index(&#39;Neighborhood&#39;), on=&#39;Neighborhood&#39;) toronto_merged.head() . Postcode Borough Neighborhood Latitude Longitude Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 M1B | Scarborough | Rouge ,Malvern | 43.806686 | -79.194353 | 0.0 | Fast Food Restaurant | Print Shop | Women&#39;s Store | Dog Run | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | . 1 M1C | Scarborough | Highland Creek ,Rouge Hill ,Port Union | 43.784535 | -79.160497 | 2.0 | Bar | Women&#39;s Store | Doner Restaurant | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Donut Shop | Fabric Shop | . 2 M1E | Scarborough | Guildwood ,Morningside ,West Hill | 43.763573 | -79.188711 | 0.0 | Intersection | Breakfast Spot | Mexican Restaurant | Medical Center | Rental Car Location | Electronics Store | Spa | Donut Shop | Doner Restaurant | Dog Run | . 3 M1G | Scarborough | Woburn | 43.770992 | -79.216917 | 0.0 | Coffee Shop | Korean Restaurant | Indian Restaurant | Women&#39;s Store | Doner Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Drugstore | . 4 M1H | Scarborough | Cedarbrae | 43.773136 | -79.239476 | 2.0 | Fried Chicken Joint | Bakery | Athletics &amp; Sports | Thai Restaurant | Caribbean Restaurant | Gas Station | Hakka Restaurant | Bank | Dumpling Restaurant | Drugstore | . Let&#39;s visualize the clusters. . map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11) # set color scheme for the clusters x = np.arange(kclusters) ys = [i + x + (i*x)**2 for i in range(kclusters)] colors_array = cm.rainbow(np.linspace(0, 1, len(ys))) rainbow = [colors.rgb2hex(i) for i in colors_array] # add markers to the map markers_colors = [] for lat, lon, poi, cluster in zip(toronto_merged[&#39;Latitude&#39;], toronto_merged[&#39;Longitude&#39;], toronto_merged[&#39;Neighborhood&#39;], toronto_merged[&#39;Cluster Labels&#39;]): label = folium.Popup(str(poi) + &#39; Cluster &#39; + str(cluster), parse_html=True) folium.CircleMarker( [lat, lon], radius=5, popup=label, fill=True, fill_opacity=0.7).add_to(map_clusters) map_clusters . &lt;iframe src=&quot;about:blank&quot; style=&quot;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&quot; data-html= onload=&quot;this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute(&#39;data-html&#39;)));this.contentDocument.close();&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt; . Examine the clusters . You can examine and determine the discriminating venue categories that distinguish each cluster. Based on the defining categories, you can assign a name to each cluster. . Cluster 1 . toronto_merged.loc[toronto_merged[&#39;Cluster Labels&#39;] == 0, toronto_merged.columns[[1] + list(range(5, toronto_merged.shape[1]))]] . Borough Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 Scarborough | 0.0 | Fast Food Restaurant | Print Shop | Women&#39;s Store | Dog Run | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | . 2 Scarborough | 0.0 | Intersection | Breakfast Spot | Mexican Restaurant | Medical Center | Rental Car Location | Electronics Store | Spa | Donut Shop | Doner Restaurant | Dog Run | . 3 Scarborough | 0.0 | Coffee Shop | Korean Restaurant | Indian Restaurant | Women&#39;s Store | Doner Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Drugstore | . 5 Scarborough | 0.0 | Playground | Convenience Store | Women&#39;s Store | Dog Run | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | . 6 Scarborough | 0.0 | Department Store | Coffee Shop | Discount Store | Hobby Shop | Dog Run | Dessert Shop | Dim Sum Restaurant | Diner | Distribution Center | Women&#39;s Store | . 8 Scarborough | 0.0 | Motel | Movie Theater | American Restaurant | Women&#39;s Store | Department Store | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | . 9 Scarborough | 0.0 | College Stadium | Skating Rink | Café | General Entertainment | Women&#39;s Store | Dog Run | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | . 10 Scarborough | 0.0 | Indian Restaurant | Light Rail Station | Chinese Restaurant | Pet Store | Vietnamese Restaurant | Brewery | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | . 12 Scarborough | 0.0 | Latin American Restaurant | Lounge | Breakfast Spot | Clothing Store | Donut Shop | Diner | Discount Store | Distribution Center | Dog Run | Doner Restaurant | . 13 Scarborough | 0.0 | Pizza Place | Italian Restaurant | Noodle House | Pharmacy | Gas Station | Fast Food Restaurant | Bank | Chinese Restaurant | Convenience Store | Fried Chicken Joint | . 15 Scarborough | 0.0 | Fast Food Restaurant | Chinese Restaurant | Electronics Store | Pharmacy | Supermarket | Burger Joint | Sandwich Place | Pizza Place | Bubble Tea Shop | Coffee Shop | . 18 North York | 0.0 | Clothing Store | Coffee Shop | Fast Food Restaurant | Japanese Restaurant | Women&#39;s Store | Juice Bar | Tea Room | Cosmetics Shop | Bakery | Movie Theater | . 19 North York | 0.0 | Chinese Restaurant | Café | Bank | Japanese Restaurant | Women&#39;s Store | Diner | Discount Store | Distribution Center | Dog Run | Doner Restaurant | . 21 North York | 0.0 | Piano Bar | Women&#39;s Store | Dog Run | Department Store | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | . 22 North York | 0.0 | Ramen Restaurant | Shopping Mall | Sandwich Place | Coffee Shop | Pizza Place | Café | Sushi Restaurant | Steakhouse | Hotel | Ice Cream Shop | . 24 North York | 0.0 | Grocery Store | Coffee Shop | Pharmacy | Pizza Place | Home Service | Discount Store | Women&#39;s Store | Distribution Center | Department Store | Dessert Shop | . 27 North York | 0.0 | Coffee Shop | Beer Store | Restaurant | Gym | Asian Restaurant | Discount Store | Café | Sporting Goods Shop | Chinese Restaurant | Supermarket | . 28 North York | 0.0 | Coffee Shop | Fried Chicken Joint | Frozen Yogurt Shop | Supermarket | Deli / Bodega | Sushi Restaurant | Ice Cream Shop | Middle Eastern Restaurant | Restaurant | Pizza Place | . 29 North York | 0.0 | Miscellaneous Shop | Falafel Restaurant | Coffee Shop | Bar | Caribbean Restaurant | Massage Studio | Dog Run | Dim Sum Restaurant | Diner | Discount Store | . 32 North York | 0.0 | Korean Restaurant | Business Service | Home Service | Baseball Field | Women&#39;s Store | Dog Run | Diner | Discount Store | Distribution Center | Doner Restaurant | . 34 North York | 0.0 | Portuguese Restaurant | Coffee Shop | Hockey Arena | Intersection | Women&#39;s Store | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | . 36 East York | 0.0 | Park | Skating Rink | Pharmacy | Video Store | Beer Store | Curling Ice | Bus Stop | Cosmetics Shop | Women&#39;s Store | Distribution Center | . 37 East Toronto | 0.0 | Health Food Store | Trail | Coffee Shop | Pub | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | . 38 East York | 0.0 | Coffee Shop | Sporting Goods Shop | Burger Joint | Furniture / Home Store | Bike Shop | Supermarket | Dessert Shop | Fish &amp; Chips Shop | Sports Bar | Liquor Store | . 39 East York | 0.0 | Indian Restaurant | Yoga Studio | Park | Bank | Fast Food Restaurant | Restaurant | Intersection | Pizza Place | Pharmacy | Burger Joint | . 41 East Toronto | 0.0 | Greek Restaurant | Coffee Shop | Italian Restaurant | Ice Cream Shop | Furniture / Home Store | Frozen Yogurt Shop | Pub | Pizza Place | Lounge | Liquor Store | . 42 East Toronto | 0.0 | Sandwich Place | Park | Brewery | Italian Restaurant | Fish &amp; Chips Shop | Sushi Restaurant | Pub | Fast Food Restaurant | Ice Cream Shop | Food &amp; Drink Shop | . 43 East Toronto | 0.0 | Café | Coffee Shop | Bakery | Italian Restaurant | Brewery | American Restaurant | Yoga Studio | Bookstore | Seafood Restaurant | Sandwich Place | . 45 Central Toronto | 0.0 | Park | Convenience Store | Breakfast Spot | Sandwich Place | Food &amp; Drink Shop | Department Store | Dance Studio | Hotel | Gym | Construction &amp; Landscaping | . 46 Central Toronto | 0.0 | Clothing Store | Coffee Shop | Yoga Studio | Sporting Goods Shop | Gym / Fitness Center | Fast Food Restaurant | Diner | Dessert Shop | Mexican Restaurant | Chinese Restaurant | . 47 Central Toronto | 0.0 | Dessert Shop | Sandwich Place | Pizza Place | Coffee Shop | Italian Restaurant | Gym | Café | Sushi Restaurant | Greek Restaurant | Pharmacy | . 49 Central Toronto | 0.0 | Coffee Shop | Pub | American Restaurant | Pizza Place | Supermarket | Restaurant | Sports Bar | Fried Chicken Joint | Sushi Restaurant | Liquor Store | . 51 Downtown Toronto | 0.0 | Coffee Shop | Café | Pub | Pizza Place | Bakery | Restaurant | Italian Restaurant | Breakfast Spot | Diner | Indian Restaurant | . 52 Downtown Toronto | 0.0 | Coffee Shop | Japanese Restaurant | Restaurant | Gay Bar | Sushi Restaurant | Hotel | Burger Joint | Mediterranean Restaurant | Dance Studio | Café | . 53 Downtown Toronto | 0.0 | Coffee Shop | Pub | Bakery | Café | Park | Theater | Breakfast Spot | Mexican Restaurant | Restaurant | Hotel | . 54 Downtown Toronto | 0.0 | Coffee Shop | Clothing Store | Café | Middle Eastern Restaurant | Japanese Restaurant | Electronics Store | Italian Restaurant | Cosmetics Shop | Burger Joint | Bubble Tea Shop | . 55 Downtown Toronto | 0.0 | Coffee Shop | Café | Restaurant | Italian Restaurant | Hotel | Cosmetics Shop | Bakery | Breakfast Spot | Clothing Store | Beer Bar | . 56 Downtown Toronto | 0.0 | Coffee Shop | Cocktail Bar | Seafood Restaurant | Beer Bar | Café | Bakery | Cheese Shop | Farmers Market | Restaurant | Irish Pub | . 57 Downtown Toronto | 0.0 | Coffee Shop | Italian Restaurant | Café | Japanese Restaurant | Sandwich Place | Burger Joint | Juice Bar | Ice Cream Shop | Chinese Restaurant | Salad Place | . 58 Downtown Toronto | 0.0 | Coffee Shop | Restaurant | Café | Thai Restaurant | Steakhouse | Sushi Restaurant | Bar | Seafood Restaurant | Lounge | Cosmetics Shop | . 59 Downtown Toronto | 0.0 | Coffee Shop | Aquarium | Italian Restaurant | Hotel | Café | Fried Chicken Joint | Restaurant | Sporting Goods Shop | Brewery | Scenic Lookout | . 60 Downtown Toronto | 0.0 | Coffee Shop | Café | Restaurant | Hotel | Italian Restaurant | Bar | Japanese Restaurant | American Restaurant | Seafood Restaurant | Gastropub | . 61 Downtown Toronto | 0.0 | Coffee Shop | Café | Restaurant | Hotel | Gym | American Restaurant | Italian Restaurant | Seafood Restaurant | Gastropub | Deli / Bodega | . 62 North York | 0.0 | Coffee Shop | Restaurant | Sandwich Place | Italian Restaurant | Greek Restaurant | Fast Food Restaurant | Café | Cupcake Shop | Spa | Butcher | . 63 Central Toronto | 0.0 | Ice Cream Shop | Garden | Women&#39;s Store | Dog Run | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | Department Store | . 65 Central Toronto | 0.0 | Café | Sandwich Place | Coffee Shop | American Restaurant | Pub | Flower Shop | Indian Restaurant | BBQ Joint | Middle Eastern Restaurant | History Museum | . 66 Downtown Toronto | 0.0 | Café | Bookstore | Bar | Italian Restaurant | Japanese Restaurant | Restaurant | Bakery | Chinese Restaurant | Coffee Shop | Sushi Restaurant | . 67 Downtown Toronto | 0.0 | Bar | Café | Vietnamese Restaurant | Bakery | Chinese Restaurant | Coffee Shop | Dumpling Restaurant | Mexican Restaurant | Vegetarian / Vegan Restaurant | Park | . 68 Downtown Toronto | 0.0 | Airport Service | Airport Terminal | Airport Lounge | Rental Car Location | Coffee Shop | Boat or Ferry | Sculpture Garden | Boutique | Harbor / Marina | Airport Gate | . 69 Downtown Toronto | 0.0 | Coffee Shop | Café | Restaurant | Japanese Restaurant | Hotel | Seafood Restaurant | Beer Bar | Cocktail Bar | Italian Restaurant | Pub | . 70 Downtown Toronto | 0.0 | Coffee Shop | Café | Restaurant | Hotel | Gastropub | Steakhouse | Seafood Restaurant | Japanese Restaurant | Gym | Asian Restaurant | . 71 North York | 0.0 | Women&#39;s Store | Furniture / Home Store | Clothing Store | Coffee Shop | Event Space | Miscellaneous Shop | Boutique | Vietnamese Restaurant | Accessories Store | Gift Shop | . 72 North York | 0.0 | Pizza Place | Park | Sushi Restaurant | Pub | Japanese Restaurant | Discount Store | Department Store | Dessert Shop | Dim Sum Restaurant | Diner | . 73 York | 0.0 | Trail | Hockey Arena | Field | Women&#39;s Store | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Doner Restaurant | . 75 Downtown Toronto | 0.0 | Grocery Store | Café | Park | Italian Restaurant | Restaurant | Candy Store | Athletics &amp; Sports | Diner | Baby Store | Gas Station | . 77 West Toronto | 0.0 | Bar | Coffee Shop | Asian Restaurant | Restaurant | Men&#39;s Store | Pizza Place | Wine Bar | Vietnamese Restaurant | Bakery | Café | . 78 West Toronto | 0.0 | Café | Coffee Shop | Breakfast Spot | Stadium | Intersection | Grocery Store | Gym | Convenience Store | Performing Arts Venue | Pet Store | . 80 York | 0.0 | Convenience Store | Discount Store | Sandwich Place | Restaurant | Women&#39;s Store | Dessert Shop | Dim Sum Restaurant | Diner | Distribution Center | Dog Run | . 82 West Toronto | 0.0 | Mexican Restaurant | Café | Bar | Thai Restaurant | Arts &amp; Crafts Store | Bookstore | Italian Restaurant | Diner | Fast Food Restaurant | Speakeasy | . 83 West Toronto | 0.0 | Gift Shop | Italian Restaurant | Movie Theater | Dessert Shop | Bookstore | Bar | Dog Run | Cuban Restaurant | Restaurant | Eastern European Restaurant | . 84 West Toronto | 0.0 | Coffee Shop | Café | Sushi Restaurant | Pizza Place | Italian Restaurant | Dessert Shop | Latin American Restaurant | Fish &amp; Chips Shop | Bar | Spa | . 85 Downtown Toronto | 0.0 | Coffee Shop | Park | Yoga Studio | Discount Store | Beer Bar | Japanese Restaurant | Seafood Restaurant | Sandwich Place | Juice Bar | Burger Joint | . 86 Mississauga | 0.0 | Hotel | Coffee Shop | Intersection | American Restaurant | Burrito Place | Gym | Fried Chicken Joint | Mediterranean Restaurant | Sandwich Place | Diner | . 87 East Toronto | 0.0 | Park | Garden | Restaurant | Light Rail Station | Auto Workshop | Fast Food Restaurant | Farmers Market | Burrito Place | Recording Studio | Pizza Place | . 88 Etobicoke | 0.0 | Café | Coffee Shop | Liquor Store | Gym | Restaurant | Pharmacy | Business Service | Pizza Place | Bakery | Fast Food Restaurant | . 89 Etobicoke | 0.0 | Pizza Place | Coffee Shop | Pharmacy | Skating Rink | Pub | Pool | Sandwich Place | Dance Studio | Gym | Distribution Center | . 91 Etobicoke | 0.0 | Baseball Field | Women&#39;s Store | Doner Restaurant | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Donut Shop | Fabric Shop | . 92 Etobicoke | 0.0 | Convenience Store | Hardware Store | Discount Store | Burrito Place | Burger Joint | Thrift / Vintage Store | Supplement Shop | Fast Food Restaurant | Bakery | Sandwich Place | . 95 Etobicoke | 0.0 | Cosmetics Shop | Coffee Shop | Shopping Plaza | Beer Store | Pizza Place | Liquor Store | Convenience Store | Café | Doner Restaurant | Diner | . 97 North York | 0.0 | Fabric Shop | Furniture / Home Store | Baseball Field | Department Store | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Doner Restaurant | . 99 Etobicoke | 0.0 | Pizza Place | Intersection | Coffee Shop | Discount Store | Sandwich Place | Middle Eastern Restaurant | Chinese Restaurant | Women&#39;s Store | Dessert Shop | Dim Sum Restaurant | . 100 Etobicoke | 0.0 | Mobile Phone Shop | Bus Line | Pizza Place | Sandwich Place | Women&#39;s Store | Discount Store | Dessert Shop | Dim Sum Restaurant | Diner | Distribution Center | . Cluster 2 . toronto_merged.loc[toronto_merged[&#39;Cluster Labels&#39;] == 1, toronto_merged.columns[[1] + list(range(5, toronto_merged.shape[1]))]] . Borough Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 14 Scarborough | 1.0 | Park | Coffee Shop | Playground | Dog Run | Department Store | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | . 20 North York | 1.0 | Park | Cafeteria | College Rec Center | Deli / Bodega | Electronics Store | Eastern European Restaurant | Dumpling Restaurant | Drugstore | Donut Shop | Doner Restaurant | . 23 North York | 1.0 | Park | Convenience Store | Bank | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Doner Restaurant | Department Store | . 25 North York | 1.0 | Park | Bus Stop | Food &amp; Drink Shop | Distribution Center | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Dog Run | Ethiopian Restaurant | . 30 North York | 1.0 | Park | Airport | Doner Restaurant | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Donut Shop | . 40 East York | 1.0 | Park | Coffee Shop | Convenience Store | Dog Run | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | . 44 Central Toronto | 1.0 | Park | Swim School | Bus Line | Dog Run | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | Department Store | . 48 Central Toronto | 1.0 | Park | Tennis Court | Playground | Distribution Center | Department Store | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Dog Run | . 50 Downtown Toronto | 1.0 | Park | Trail | Playground | Department Store | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | . 64 Central Toronto | 1.0 | Park | Trail | Jewelry Store | Sushi Restaurant | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | . 74 York | 1.0 | Park | Market | Women&#39;s Store | Gift Shop | German Restaurant | Eastern European Restaurant | Dumpling Restaurant | Drugstore | Donut Shop | Gluten-free Restaurant | . 90 Etobicoke | 1.0 | Park | River | Empanada Restaurant | Electronics Store | Eastern European Restaurant | Dumpling Restaurant | Drugstore | Donut Shop | Ethiopian Restaurant | Dog Run | . 98 York | 1.0 | Park | Deli / Bodega | Empanada Restaurant | Electronics Store | Eastern European Restaurant | Dumpling Restaurant | Drugstore | Donut Shop | Doner Restaurant | Dog Run | . Cluster 3 . toronto_merged.loc[toronto_merged[&#39;Cluster Labels&#39;] == 2, toronto_merged.columns[[1] + list(range(5, toronto_merged.shape[1]))]] . Borough Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 1 Scarborough | 2.0 | Bar | Women&#39;s Store | Doner Restaurant | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | Donut Shop | Fabric Shop | . 4 Scarborough | 2.0 | Fried Chicken Joint | Bakery | Athletics &amp; Sports | Thai Restaurant | Caribbean Restaurant | Gas Station | Hakka Restaurant | Bank | Dumpling Restaurant | Drugstore | . 7 Scarborough | 2.0 | Bakery | Bus Line | Intersection | Park | Soccer Field | Ice Cream Shop | Bus Station | Metro Station | Women&#39;s Store | Diner | . 11 Scarborough | 2.0 | Middle Eastern Restaurant | Bakery | Breakfast Spot | Smoke Shop | Dog Run | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Donut Shop | . 17 North York | 2.0 | Golf Course | Dog Run | Mediterranean Restaurant | Pool | Dumpling Restaurant | Drugstore | Donut Shop | Doner Restaurant | Deli / Bodega | Eastern European Restaurant | . 26 North York | 2.0 | Café | Gym / Fitness Center | Caribbean Restaurant | Japanese Restaurant | Doner Restaurant | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Dog Run | . 31 North York | 2.0 | Grocery Store | Park | Bank | Shopping Mall | Hotel | Colombian Restaurant | Dessert Shop | Electronics Store | College Rec Center | Eastern European Restaurant | . 33 North York | 2.0 | Grocery Store | Gym / Fitness Center | Liquor Store | Athletics &amp; Sports | Women&#39;s Store | Doner Restaurant | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | . 35 East York | 2.0 | Pizza Place | Intersection | Pet Store | Gym / Fitness Center | Pharmacy | Gastropub | Bank | Fast Food Restaurant | Athletics &amp; Sports | Bus Line | . 76 West Toronto | 2.0 | Pharmacy | Bakery | Park | Bank | Café | Middle Eastern Restaurant | Pool | Supermarket | Bar | Gym / Fitness Center | . 79 North York | 2.0 | Basketball Court | Park | Bakery | Construction &amp; Landscaping | Women&#39;s Store | Diner | Discount Store | Distribution Center | Dog Run | Doner Restaurant | . 81 York | 2.0 | Grocery Store | Pizza Place | Brewery | Bus Line | Women&#39;s Store | Dog Run | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | . 101 Etobicoke | 2.0 | Grocery Store | Pizza Place | Japanese Restaurant | Liquor Store | Pharmacy | Discount Store | Beer Store | Fried Chicken Joint | Sandwich Place | Fast Food Restaurant | . 102 Etobicoke | 2.0 | Rental Car Location | Drugstore | Bar | Dog Run | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Women&#39;s Store | . Cluster 4 . toronto_merged.loc[toronto_merged[&#39;Cluster Labels&#39;] == 3, toronto_merged.columns[[1] + list(range(5, toronto_merged.shape[1]))]] . Borough Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 94 Etobicoke | 3.0 | Home Service | Women&#39;s Store | Dog Run | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | Deli / Bodega | . Cluster 5 . toronto_merged.loc[toronto_merged[&#39;Cluster Labels&#39;] == 4, toronto_merged.columns[[1] + list(range(5, toronto_merged.shape[1]))]] . Borough Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 96 North York | 4.0 | Pizza Place | Women&#39;s Store | Dog Run | Department Store | Dessert Shop | Dim Sum Restaurant | Diner | Discount Store | Distribution Center | Doner Restaurant | . Cluster 1 is the biggest. Clusters 4 and 5 have just one neighborhood each. .",
            "url": "https://shirolepranav.github.io/blog/segmentation/k-means%20clustering/web%20scraping/2020/03/01/clustering-toronto.html",
            "relUrl": "/segmentation/k-means%20clustering/web%20scraping/2020/03/01/clustering-toronto.html",
            "date": " • Mar 1, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://shirolepranav.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "Comparing Vehicles using Hierarchical Clustering",
            "content": "Imagine that an automobile manufacturer has developed prototypes for a new vehicle. Before introducing the new model into its range, the manufacturer wants to determine which existing vehicles on the market are most like the prototypes, i.e. how vehicles can be grouped, which group is the most similar with the model, and therefore which models they will be competing against. . In this blog post, we will use the heirarchical clustering to find the most distinctive clusters of vehicles. It will summarize the existing vehicles and help manufacturers to make a decision about the supply of new models. . import numpy as np import pandas as pd from matplotlib import pyplot as plt from sklearn.cluster import AgglomerativeClustering %matplotlib inline . filename = &#39;cars_clus.csv&#39; df = pd.read_csv(filename) print(&#39;Shape of the dataframe: &#39;, df.shape) df.head() . Shape of the dataframe: (159, 16) . manufact model sales resale type price engine_s horsepow wheelbas width length curb_wgt fuel_cap mpg lnsales partition . 0 Acura | Integra | 16.919 | 16.360 | 0.000 | 21.500 | 1.800 | 140.000 | 101.200 | 67.300 | 172.400 | 2.639 | 13.200 | 28.000 | 2.828 | 0.0 | . 1 Acura | TL | 39.384 | 19.875 | 0.000 | 28.400 | 3.200 | 225.000 | 108.100 | 70.300 | 192.900 | 3.517 | 17.200 | 25.000 | 3.673 | 0.0 | . 2 Acura | CL | 14.114 | 18.225 | 0.000 | $null$ | 3.200 | 225.000 | 106.900 | 70.600 | 192.000 | 3.470 | 17.200 | 26.000 | 2.647 | 0.0 | . 3 Acura | RL | 8.588 | 29.725 | 0.000 | 42.000 | 3.500 | 210.000 | 114.600 | 71.400 | 196.600 | 3.850 | 18.000 | 22.000 | 2.150 | 0.0 | . 4 Audi | A4 | 20.397 | 22.255 | 0.000 | 23.990 | 1.800 | 150.000 | 102.600 | 68.200 | 178.000 | 2.998 | 16.400 | 27.000 | 3.015 | 0.0 | . The feature sets include price in thousands (price), engine size (engine_s), horsepower (horsepow), wheelbase (wheelbas), width (width), length (length), curb weight (curb_wgt), fuel capacity (fuel_cap) and fuel efficiency (mpg). . . Data cleaning . Drop all the rows that have a null value. . print (&quot;Size of dataset before cleaning: &quot;, df.size) df[[ &#39;sales&#39;, &#39;resale&#39;, &#39;type&#39;, &#39;price&#39;, &#39;engine_s&#39;, &#39;horsepow&#39;, &#39;wheelbas&#39;, &#39;width&#39;, &#39;length&#39;, &#39;curb_wgt&#39;, &#39;fuel_cap&#39;, &#39;mpg&#39;, &#39;lnsales&#39;]] = df[[&#39;sales&#39;, &#39;resale&#39;, &#39;type&#39;, &#39;price&#39;, &#39;engine_s&#39;, &#39;horsepow&#39;, &#39;wheelbas&#39;, &#39;width&#39;, &#39;length&#39;, &#39;curb_wgt&#39;, &#39;fuel_cap&#39;, &#39;mpg&#39;, &#39;lnsales&#39;]].apply(pd.to_numeric, errors=&#39;coerce&#39;) df = df.dropna() df = df.reset_index(drop=True) print (&quot;Size of dataset after cleaning: &quot;, df.size) df.head(5) . Size of dataset before cleaning: 2544 Size of dataset after cleaning: 1872 . manufact model sales resale type price engine_s horsepow wheelbas width length curb_wgt fuel_cap mpg lnsales partition . 0 Acura | Integra | 16.919 | 16.360 | 0.0 | 21.50 | 1.8 | 140.0 | 101.2 | 67.3 | 172.4 | 2.639 | 13.2 | 28.0 | 2.828 | 0.0 | . 1 Acura | TL | 39.384 | 19.875 | 0.0 | 28.40 | 3.2 | 225.0 | 108.1 | 70.3 | 192.9 | 3.517 | 17.2 | 25.0 | 3.673 | 0.0 | . 2 Acura | RL | 8.588 | 29.725 | 0.0 | 42.00 | 3.5 | 210.0 | 114.6 | 71.4 | 196.6 | 3.850 | 18.0 | 22.0 | 2.150 | 0.0 | . 3 Audi | A4 | 20.397 | 22.255 | 0.0 | 23.99 | 1.8 | 150.0 | 102.6 | 68.2 | 178.0 | 2.998 | 16.4 | 27.0 | 3.015 | 0.0 | . 4 Audi | A6 | 18.780 | 23.555 | 0.0 | 33.95 | 2.8 | 200.0 | 108.7 | 76.1 | 192.0 | 3.561 | 18.5 | 22.0 | 2.933 | 0.0 | . Let&#39;s select our feature set. . featureset = df[[&#39;engine_s&#39;, &#39;horsepow&#39;, &#39;wheelbas&#39;, &#39;width&#39;, &#39;length&#39;, &#39;curb_wgt&#39;, &#39;fuel_cap&#39;, &#39;mpg&#39;]] . Normalize the feature set.MinMaxScalar transforms features by scaling each feature to a given range. It is by default (0, 1). That is, the estimator scales and translates each feature individually such that is is betweeen 0 and 1. . from sklearn.preprocessing import MinMaxScaler x = featureset.values #returns a numpy array min_max_scaler = MinMaxScaler() feature_mtx = min_max_scaler.fit_transform(x) feature_mtx [0:5] . array([[0.11428571, 0.21518987, 0.18655098, 0.28143713, 0.30625832, 0.2310559 , 0.13364055, 0.43333333], [0.31428571, 0.43037975, 0.3362256 , 0.46107784, 0.5792277 , 0.50372671, 0.31797235, 0.33333333], [0.35714286, 0.39240506, 0.47722343, 0.52694611, 0.62849534, 0.60714286, 0.35483871, 0.23333333], [0.11428571, 0.24050633, 0.21691974, 0.33532934, 0.38082557, 0.34254658, 0.28110599, 0.4 ], [0.25714286, 0.36708861, 0.34924078, 0.80838323, 0.56724368, 0.5173913 , 0.37788018, 0.23333333]]) . . Clustering using Scipy . First, calculate the distance matrix. . import scipy leng = feature_mtx.shape[0] D = scipy.zeros([leng, leng]) for i in range(leng): for j in range(leng): D[i,j] = scipy.spatial.distance.euclidean(feature_mtx[i], feature_mtx[j]) . C: Users prana Anaconda3 lib site-packages ipykernel_launcher.py:3: DeprecationWarning: scipy.zeros is deprecated and will be removed in SciPy 2.0.0, use numpy.zeros instead This is separate from the ipykernel package so we can avoid doing imports until . . In agglomerative clustering, at each iteration, the algorithm must update the distance matrix to reflect the distance of the newly formed cluster with the remaining clusters in the forest. . import pylab import scipy.cluster.hierarchy Z = hierarchy.linkage(D, &#39;complete&#39;) . C: Users prana Anaconda3 lib site-packages ipykernel_launcher.py:3: ClusterWarning: scipy.cluster: The symmetric non-negative hollow observation matrix looks suspiciously like an uncondensed distance matrix This is separate from the ipykernel package so we can avoid doing imports until . . Essentially, hierarchical clustering does not require a pre-specified number of clusters. However, in some application we might want a partition of disjoint clusters just as in flat clustering. So we can use a cutting line. . from scipy.cluster.hierarchy import fcluster max_d = 3 clusters = fcluster(Z, max_d, criterion=&#39;distance&#39;) clusters . array([ 1, 5, 5, 6, 5, 4, 6, 5, 5, 5, 5, 5, 4, 4, 5, 1, 6, 5, 5, 5, 4, 2, 11, 6, 6, 5, 6, 5, 1, 6, 6, 10, 9, 8, 9, 3, 5, 1, 7, 6, 5, 3, 5, 3, 8, 7, 9, 2, 6, 6, 5, 4, 2, 1, 6, 5, 2, 7, 5, 5, 5, 4, 4, 3, 2, 6, 6, 5, 7, 4, 7, 6, 6, 5, 3, 5, 5, 6, 5, 4, 4, 1, 6, 5, 5, 5, 6, 4, 5, 4, 1, 6, 5, 6, 6, 5, 5, 5, 7, 7, 7, 2, 2, 1, 2, 6, 5, 1, 1, 1, 7, 8, 1, 1, 6, 1, 1], dtype=int32) . You can determine the number of clusters directly. . from scipy.cluster.hierarchy import fcluster k = 5 clusters = fcluster(Z,k, criterion=&#39;maxclust&#39;) clusters . array([1, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 1, 3, 3, 3, 3, 2, 1, 5, 3, 3, 3, 3, 3, 1, 3, 3, 4, 4, 4, 4, 2, 3, 1, 3, 3, 3, 2, 3, 2, 4, 3, 4, 1, 3, 3, 3, 2, 1, 1, 3, 3, 1, 3, 3, 3, 3, 2, 2, 2, 1, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 1, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 3, 3, 1, 1, 1, 3, 4, 1, 1, 3, 1, 1], dtype=int32) . Plot the dendrogram. . fig = pylab.figure(figsize=(18,50)) def llf(id): return &#39;[%s %s %s]&#39; % (df[&#39;manufact&#39;][id], df[&#39;model&#39;][id], int(float(df[&#39;type&#39;][id])) ) dendro = hierarchy.dendrogram(Z, leaf_label_func=llf, leaf_rotation=0, leaf_font_size =12, orientation = &#39;right&#39;) . . Clustering using scikit-learn . Let&#39;s redo the above process using scikit-learn this time. . dist_matrix = distance_matrix(feature_mtx, feature_mtx) print(dist_matrix) . [[0. 0.57777143 0.75455727 ... 0.28530295 0.24917241 0.18879995] [0.57777143 0. 0.22798938 ... 0.36087756 0.66346677 0.62201282] [0.75455727 0.22798938 0. ... 0.51727787 0.81786095 0.77930119] ... [0.28530295 0.36087756 0.51727787 ... 0. 0.41797928 0.35720492] [0.24917241 0.66346677 0.81786095 ... 0.41797928 0. 0.15212198] [0.18879995 0.62201282 0.77930119 ... 0.35720492 0.15212198 0. ]] . agglom = AgglomerativeClustering(n_clusters=6, linkage=&#39;complete&#39;) agglom.fit(feature_mtx) agglom.labels_ . array([1, 2, 2, 1, 2, 3, 1, 2, 2, 2, 2, 2, 3, 3, 2, 1, 1, 2, 2, 2, 5, 1, 4, 1, 1, 2, 1, 2, 1, 1, 1, 5, 0, 0, 0, 3, 2, 1, 2, 1, 2, 3, 2, 3, 0, 3, 0, 1, 1, 1, 2, 3, 1, 1, 1, 2, 1, 1, 2, 2, 2, 3, 3, 3, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 3, 2, 3, 1, 2, 3, 5, 1, 1, 2, 3, 2, 1, 3, 2, 3, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1], dtype=int64) . We can add a new field to our dataframe to show the cluster of each row. . df[&#39;cluster_&#39;] = agglom.labels_ df.head() . manufact model sales resale type price engine_s horsepow wheelbas width length curb_wgt fuel_cap mpg lnsales partition cluster_ . 0 Acura | Integra | 16.919 | 16.360 | 0.0 | 21.50 | 1.8 | 140.0 | 101.2 | 67.3 | 172.4 | 2.639 | 13.2 | 28.0 | 2.828 | 0.0 | 1 | . 1 Acura | TL | 39.384 | 19.875 | 0.0 | 28.40 | 3.2 | 225.0 | 108.1 | 70.3 | 192.9 | 3.517 | 17.2 | 25.0 | 3.673 | 0.0 | 2 | . 2 Acura | RL | 8.588 | 29.725 | 0.0 | 42.00 | 3.5 | 210.0 | 114.6 | 71.4 | 196.6 | 3.850 | 18.0 | 22.0 | 2.150 | 0.0 | 2 | . 3 Audi | A4 | 20.397 | 22.255 | 0.0 | 23.99 | 1.8 | 150.0 | 102.6 | 68.2 | 178.0 | 2.998 | 16.4 | 27.0 | 3.015 | 0.0 | 1 | . 4 Audi | A6 | 18.780 | 23.555 | 0.0 | 33.95 | 2.8 | 200.0 | 108.7 | 76.1 | 192.0 | 3.561 | 18.5 | 22.0 | 2.933 | 0.0 | 2 | . import matplotlib.cm as cm n_clusters = max(agglom.labels_)+1 colors = cm.rainbow(np.linspace(0, 1, n_clusters)) cluster_labels = list(range(0, n_clusters)) plt.figure(figsize=(12,10)) for color, label in zip(colors, cluster_labels): subset = df[df.cluster_ == label] for i in subset.index: plt.text(subset.horsepow[i], subset.mpg[i],str(subset[&#39;model&#39;][i]), rotation=25) plt.scatter(subset.horsepow, subset.mpg, s= subset.price*10, c=color, label=&#39;cluster&#39;+str(label),alpha=0.5) plt.legend() plt.title(&#39;Clusters&#39;) plt.xlabel(&#39;horsepow&#39;) plt.ylabel(&#39;mpg&#39;) . &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. . Text(0, 0.5, &#39;mpg&#39;) . As you can see, we are seeing the distribution of each cluster using the scatter plot, but it is not very clear where is the centroid of each cluster. Moreover, there are 2 types of vehicles in our dataset, &quot;truck&quot; (value of 1 in the type column) and &quot;car&quot; (value of 0 in the type column). So, we use them to distinguish the classes, and summarize the cluster. First we count the number of cases in each group. . df.groupby([&#39;cluster_&#39;,&#39;type&#39;])[&#39;cluster_&#39;].count() . cluster_ type 0 1.0 6 1 0.0 47 1.0 5 2 0.0 27 1.0 11 3 0.0 10 1.0 7 4 0.0 1 5 0.0 3 Name: cluster_, dtype: int64 . Now we can look at the characteristics of each cluster. . agg_cars = df.groupby([&#39;cluster_&#39;,&#39;type&#39;])[&#39;horsepow&#39;,&#39;engine_s&#39;,&#39;mpg&#39;,&#39;price&#39;].mean() agg_cars . C: Users prana Anaconda3 lib site-packages ipykernel_launcher.py:1: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead. &#34;&#34;&#34;Entry point for launching an IPython kernel. . horsepow engine_s mpg price . cluster_ type . 0 1.0 211.666667 | 4.483333 | 16.166667 | 29.024667 | . 1 0.0 146.531915 | 2.246809 | 27.021277 | 20.306128 | . 1.0 145.000000 | 2.580000 | 22.200000 | 17.009200 | . 2 0.0 203.111111 | 3.303704 | 24.214815 | 27.750593 | . 1.0 182.090909 | 3.345455 | 20.181818 | 26.265364 | . 3 0.0 256.500000 | 4.410000 | 21.500000 | 42.870400 | . 1.0 160.571429 | 3.071429 | 21.428571 | 21.527714 | . 4 0.0 55.000000 | 1.000000 | 45.000000 | 9.235000 | . 5 0.0 365.666667 | 6.233333 | 19.333333 | 66.010000 | . Cars: . Cluster 1: low horsepower, high mileage, and low price | Cluster 2: medium horsepower, medium mileage, and medium price | Cluster 3: high horsepower, low mileage, and high price | Cluster 4: very low horsepower, very high mileage, and very low price | Cluster 5: very high horsepower, very low mileage, and very high price | . Trucks: . Cluster 0: high horsepower, low mileage, and high price | Cluster 1: low horsepower, medium mileage, and low price | Cluster 2: high horsepower, low mileage, and high price | Cluster 3: low horsepower, low mileage, and medium price | . plt.figure(figsize=(12,8)) for color, label in zip(colors, cluster_labels): subset = agg_cars.loc[(label,),] for i in subset.index: plt.text(subset.loc[i][0]+5, subset.loc[i][2], &#39;type=&#39;+str(int(i)) + &#39;, price=&#39;+str(int(subset.loc[i][3]))+&#39;k&#39;) plt.scatter(subset.horsepow, subset.mpg, s=subset.price*20, c=color, label=&#39;cluster&#39;+str(label)) plt.legend() plt.title(&#39;Clusters&#39;) plt.xlabel(&#39;horsepow&#39;) plt.ylabel(&#39;mpg&#39;) . &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. &#39;c&#39; argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with &#39;x&#39; &amp; &#39;y&#39;. Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points. . Text(0, 0.5, &#39;mpg&#39;) .",
            "url": "https://shirolepranav.github.io/blog/clustering/2020/02/19/comparing-vehicles-heirarchical-clustering.html",
            "relUrl": "/clustering/2020/02/19/comparing-vehicles-heirarchical-clustering.html",
            "date": " • Feb 19, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "Understanding Hierarchical Clustering",
            "content": "In this blog post, we will be looking at Agglomerative Hierarchical Clustering. This is a bottom up approach of hierarchical clustering. . import numpy as np import pandas as pd from scipy import ndimage from scipy.cluster import hierarchy from scipy.spatial import distance_matrix from matplotlib import pyplot as plt from sklearn import manifold, datasets from sklearn.cluster import AgglomerativeClustering from sklearn.datasets.samples_generator import make_blobs %matplotlib inline . . Generate random data . We will be generating a set of data using the make_blobs class. The input parameters for this class are: . n_samples: The total number of points qually divided among clusters. | centers: The number of centers to generate, or the fixed center locations. | cluster_std: The standard deviation of the clusters. The larger the number, the further apart the clusters. | . We will save the result to X1 and y1. . X1, y1 = make_blobs(n_samples=50, centers=[[4,4], [-2,-1], [1,1], [10,4]], cluster_std=0.9) . Plot the scatter plot of the randomly generated data. . plt.scatter(X1[:, 0], X1[:, 1], marker=&#39;o&#39;) . &lt;matplotlib.collections.PathCollection at 0x1e595219198&gt; . . Agglomerative clustering . Cluster the random data points we just created. The AgglomerativeClustering class requires two inputs: . n_clusters: The number of clusters to form as well as the number of centroids to generate. | linkage: Which linkage criterion to use. This determines which distance to use between sets of observations. The algorithm will merge the pairs of clusters that minimize this criterion. | . agglom = AgglomerativeClustering(n_clusters=4, linkage=&#39;average&#39;) . Fit the model with X2 and y2 from the generated data above. . agglom.fit(X1, y1) . AgglomerativeClustering(affinity=&#39;euclidean&#39;, compute_full_tree=&#39;auto&#39;, connectivity=None, distance_threshold=None, linkage=&#39;average&#39;, memory=None, n_clusters=4) . Plot the clustering. . plt.figure(figsize=(12,8)) # scale down the data points to prevent scattering # create a minimum and maximum range of X1 x_min, x_max = np.min(X1, axis=0), np.max(X1, axis=0) # get the average distance for X1 X1 = (X1 - x_min) / (x_max - x_min) # loop to display all of the datapoints for i in range(X1.shape[0]): # Replace the data points with their respective cluster value # (ex. 0) and is color coded with a colormap (plt.cm.spectral) plt.text(X1[i, 0], X1[i, 1], str(y1[i]), color=plt.cm.nipy_spectral(agglom.labels_[i] / 10.), fontdict={&#39;weight&#39;: &#39;bold&#39;, &#39;size&#39;: 9}) # remove the x ticks, y ticks, x and y axis plt.xticks([]) plt.yticks([]) # display the plot of the original data before clustering plt.scatter(X1[:, 0], X1[:, 1], marker=&#39;.&#39;) # display the plot plt.show() . . Dendrogram . A distance matrix contains the distance from each point to every other point of a dataset. Use the function distance_matrix, which requires two inputs. Use the feature matrix, X2, as both inputs, and save the distance matrix to a variable called dist_matrix. One way to check that your matrix is correct is to make sure that the distance values are symmetric, with a diagonal of zeros. . dist_matrix = distance_matrix(X1, X1) print(dist_matrix) . [[0. 0.10264836 0.75840228 ... 0.71198038 0.58237479 0.42606018] [0.10264836 0. 0.67498119 ... 0.62861156 0.48764469 0.33707566] [0.75840228 0.67498119 0. ... 0.04644316 0.22929692 0.3396303 ] ... [0.71198038 0.62861156 0.04644316 ... 0. 0.19162587 0.29360964] [0.58237479 0.48764469 0.22929692 ... 0.19162587 0. 0.1638079 ] [0.42606018 0.33707566 0.3396303 ... 0.29360964 0.1638079 0. ]] . Save the result to a variable called Z. . Z = hierarchy.linkage(dist_matrix, &#39;complete&#39;) . C: Users prana Anaconda3 lib site-packages ipykernel_launcher.py:1: ClusterWarning: scipy.cluster: The symmetric non-negative hollow observation matrix looks suspiciously like an uncondensed distance matrix &#34;&#34;&#34;Entry point for launching an IPython kernel. . Hierarchical clustering is typically visualized as a dendrogram. Each erge is represented by a horizontal line. The y-coordinate of the horizontal line is the similarity of the two clusters that were merged. By moving up from the bottom layer to the top node, a dendrogram allows us to reconstruct the history of merges that resulted in the depicted clustering. . dendro = hierarchy.dendrogram(Z) .",
            "url": "https://shirolepranav.github.io/blog/clustering/2020/02/15/heirarchical-clustering.html",
            "relUrl": "/clustering/2020/02/15/heirarchical-clustering.html",
            "date": " • Feb 15, 2020"
        }
        
    
  
    
        ,"post10": {
            "title": "Understanding Logistic Regression using Customer Churn",
            "content": "A telecommunications company is concerned about the number of customers leaving their landline business for cable competitors. They need to understand who is leaving. Imahine that you are an analyst at this company and you have to find out who is leaving and why. In this blog post, we will create a model for the telecommunications company using Logistic Regrssion to predict when its customers will leave for a competitor, so that they can take some action to retain the customers. . While Linear Regression is suited for estimating continuous values, it is not the best tool for predicting the class of an observed data point. In order to estimate the class of a data point, we need som e sort of guidance on what would be the most probable class for that data point. For this, we use Logistic Regression. Logistic Regression is a variation of Linar Regression, useful when the observed dependent variable, y, is categorical. It produces a formula that predicts the probability of the class label as a function of the independent variables. Logistic Regression fits a special s-shaped curve by taking the linear regression and transforming the numeric estimate into a probability. . The dataset we&#39;ll be using contains information about 200 customers. It includes information about: . Customers who left within the last month - the column is called Churn. | Services that each customer has signed up for - phone, multiple lines, internet, online security, online backup, device protection, tech support, and streaming TV and movies. | Customer account information - how long they have been a customer, contract, payment method, paperless billing, monthly charges, and total charges. | Demographic information about customers - geneder, age, range, and if they have partners and dependents. | . Typically, it is less expensive to keep customers than to acquire new ones, so the focus of this analysis is to predict the customers who will stay with the company. . import pandas as pd import numpy as np import pylab as pl import scipy.optimize as opt import matplotlib.pyplot as plt %matplotlib inline . df = pd.read_csv(&#39;ChurnData.csv&#39;) df.head() . tenure age address income ed employ equip callcard wireless longmon ... pager internet callwait confer ebill loglong logtoll lninc custcat churn . 0 11.0 | 33.0 | 7.0 | 136.0 | 5.0 | 5.0 | 0.0 | 1.0 | 1.0 | 4.40 | ... | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.482 | 3.033 | 4.913 | 4.0 | 1.0 | . 1 33.0 | 33.0 | 12.0 | 33.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 9.45 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.246 | 3.240 | 3.497 | 1.0 | 1.0 | . 2 23.0 | 30.0 | 9.0 | 30.0 | 1.0 | 2.0 | 0.0 | 0.0 | 0.0 | 6.30 | ... | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.841 | 3.240 | 3.401 | 3.0 | 0.0 | . 3 38.0 | 35.0 | 5.0 | 76.0 | 2.0 | 10.0 | 1.0 | 1.0 | 1.0 | 6.05 | ... | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.800 | 3.807 | 4.331 | 4.0 | 0.0 | . 4 7.0 | 35.0 | 14.0 | 80.0 | 2.0 | 15.0 | 0.0 | 1.0 | 0.0 | 7.10 | ... | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.960 | 3.091 | 4.382 | 3.0 | 0.0 | . 5 rows × 28 columns . df.shape . (200, 28) . . Preprocessing the data . Let&#39;s select some features for modeling. Also, we&#39;ll change the target data type to be integer, as it is a requirement of the sklearn algorithm. . df = df[[&#39;tenure&#39;, &#39;age&#39;, &#39;address&#39;, &#39;income&#39;, &#39;ed&#39;, &#39;employ&#39;, &#39;equip&#39;, &#39;callcard&#39;, &#39;wireless&#39;, &#39;churn&#39;]] df[&#39;churn&#39;] = df[&#39;churn&#39;].astype(&#39;int&#39;) df.head() . tenure age address income ed employ equip callcard wireless churn . 0 11.0 | 33.0 | 7.0 | 136.0 | 5.0 | 5.0 | 0.0 | 1.0 | 1.0 | 1 | . 1 33.0 | 33.0 | 12.0 | 33.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1 | . 2 23.0 | 30.0 | 9.0 | 30.0 | 1.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0 | . 3 38.0 | 35.0 | 5.0 | 76.0 | 2.0 | 10.0 | 1.0 | 1.0 | 1.0 | 0 | . 4 7.0 | 35.0 | 14.0 | 80.0 | 2.0 | 15.0 | 0.0 | 1.0 | 0.0 | 0 | . df.shape . (200, 10) . Define X and y for the dataset. . X = np.asarray(df[[&#39;tenure&#39;, &#39;age&#39;, &#39;address&#39;, &#39;income&#39;, &#39;ed&#39;, &#39;employ&#39;, &#39;equip&#39;]]) X[0:5] . array([[ 11., 33., 7., 136., 5., 5., 0.], [ 33., 33., 12., 33., 2., 0., 0.], [ 23., 30., 9., 30., 1., 2., 0.], [ 38., 35., 5., 76., 2., 10., 1.], [ 7., 35., 14., 80., 2., 15., 0.]]) . y = np.asarray(df[&#39;churn&#39;]) y[0:5] . array([1, 1, 0, 0, 0]) . Normalize the dataset. . from sklearn import preprocessing X = preprocessing.StandardScaler().fit(X).transform(X) X[0:5] . array([[-1.13518441, -0.62595491, -0.4588971 , 0.4751423 , 1.6961288 , -0.58477841, -0.85972695], [-0.11604313, -0.62595491, 0.03454064, -0.32886061, -0.6433592 , -1.14437497, -0.85972695], [-0.57928917, -0.85594447, -0.261522 , -0.35227817, -1.42318853, -0.92053635, -0.85972695], [ 0.11557989, -0.47262854, -0.65627219, 0.00679109, -0.6433592 , -0.02518185, 1.16316 ], [-1.32048283, -0.47262854, 0.23191574, 0.03801451, -0.6433592 , 0.53441472, -0.85972695]]) . . Train/Test Split . Let&#39;s split our dataset into training and testing sets. . from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=4) print(&#39;Train set: &#39;, X_train.shape, y_train.shape) print(&#39;Test set: &#39;, X_test.shape, y_test.shape) . Train set: (160, 7) (160,) Test set: (40, 7) (40,) . . Modeling . Let&#39;s build our model using LogisticRegression from the scikit-learn package. This function implements logistic regression and can use different numerical optimizers to find parameters, including &#39;newton-cg&#39;, &#39;lbfgs&#39;, &#39;liblinear&#39;, &#39;sag&#39;, &#39;saga&#39; solvers. This version of Logisitic Regression supports Regularization. Regularization is a technique used to solve the overfitting problem in machine learning models. C parameter indicates inverse of regularization strength, which must be a positive float. Smaller values specify stronger regularization. . Now let&#39;s fit our model with the train set. . from sklearn.linear_model import LogisticRegression from sklearn.metrics import confusion_matrix LR = LogisticRegression(C=0.01, solver=&#39;liblinear&#39;).fit(X_train, y_train) LR . LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=True, intercept_scaling=1, l1_ratio=None, max_iter=100, multi_class=&#39;auto&#39;, n_jobs=None, penalty=&#39;l2&#39;, random_state=None, solver=&#39;liblinear&#39;, tol=0.0001, verbose=0, warm_start=False) . yhat = LR.predict(X_test) yhat . array([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]) . predict_proba returns estimates for all classes ordered by the label of classes. So, the first column is the probability of class 1, P(Y=1|X), and the second column is the probability of class 0, P(Y=0|X). . yhat_prob = LR.predict_proba(X_test) yhat_prob . array([[0.54132919, 0.45867081], [0.60593357, 0.39406643], [0.56277713, 0.43722287], [0.63432489, 0.36567511], [0.56431839, 0.43568161], [0.55386646, 0.44613354], [0.52237207, 0.47762793], [0.60514349, 0.39485651], [0.41069572, 0.58930428], [0.6333873 , 0.3666127 ], [0.58068791, 0.41931209], [0.62768628, 0.37231372], [0.47559883, 0.52440117], [0.4267593 , 0.5732407 ], [0.66172417, 0.33827583], [0.55092315, 0.44907685], [0.51749946, 0.48250054], [0.485743 , 0.514257 ], [0.49011451, 0.50988549], [0.52423349, 0.47576651], [0.61619519, 0.38380481], [0.52696302, 0.47303698], [0.63957168, 0.36042832], [0.52205164, 0.47794836], [0.50572852, 0.49427148], [0.70706202, 0.29293798], [0.55266286, 0.44733714], [0.52271594, 0.47728406], [0.51638863, 0.48361137], [0.71331391, 0.28668609], [0.67862111, 0.32137889], [0.50896403, 0.49103597], [0.42348082, 0.57651918], [0.71495838, 0.28504162], [0.59711064, 0.40288936], [0.63808839, 0.36191161], [0.39957895, 0.60042105], [0.52127638, 0.47872362], [0.65975464, 0.34024536], [0.5114172 , 0.4885828 ]]) . . Evaluation . Jaccard Index . We can define Jaccard as the size of the intersection divided by the size of the union of two label sets. If the entire set of predicted labels for a sample strictly match with the true set of labels, then the subset accuracy is 1.0, otherwise it is 0.0. . from sklearn.metrics import jaccard_similarity_score jaccard_similarity_score(y_test, yhat) . C: Users prana Anaconda3 lib site-packages sklearn metrics _classification.py:664: FutureWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks. FutureWarning) . 0.75 . Confusion Matrix . Another way of looking at the accuracy of a classifier is to look at the Confusion Matrix. . from sklearn.metrics import classification_report, confusion_matrix import itertools def plot_confusion_matrix(cm, classes, normalize=False, title=&#39;Confusion matrix&#39;, cmap=plt.cm.Blues): &quot;&quot;&quot; This function prints and plots the confusion matrix. Normalization can be applied by setting `normalize=True`. &quot;&quot;&quot; if normalize: cm = cm.astype(&#39;float&#39;) / cm.sum(axis=1)[:, np.newaxis] print(&quot;Normalized confusion matrix&quot;) else: print(&#39;Confusion matrix, without normalization&#39;) print(cm) plt.imshow(cm, interpolation=&#39;nearest&#39;, cmap=cmap) plt.title(title) plt.colorbar() tick_marks = np.arange(len(classes)) plt.xticks(tick_marks, classes, rotation=45) plt.yticks(tick_marks, classes) fmt = &#39;.2f&#39; if normalize else &#39;d&#39; thresh = cm.max() / 2. for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])): plt.text(j, i, format(cm[i, j], fmt), horizontalalignment=&quot;center&quot;, color=&quot;white&quot; if cm[i, j] &gt; thresh else &quot;black&quot;) plt.tight_layout() plt.ylabel(&#39;True label&#39;) plt.xlabel(&#39;Predicted label&#39;) print(confusion_matrix(y_test, yhat, labels=[1,0])) . [[ 6 9] [ 1 24]] . cnf_matrix = confusion_matrix(y_test, yhat, labels=[1,0]) np.set_printoptions(precision=2) # Plot non-normalized confusion matrix plt.figure() plot_confusion_matrix(cnf_matrix, classes=[&#39;churn=1&#39;,&#39;churn=0&#39;],normalize= False, title=&#39;Confusion matrix&#39;) . Confusion matrix, without normalization [[ 6 9] [ 1 24]] . The first row is for customers whose actual churn value in the test set is 1. As you can calculate, out of 40 customers, the churn value of 15 of them is 1.A nd out of these 15, the classifier correctly predicted 6 of them as 1, and 9 of them as 0. It means that for 6 customers, the actual churn value was 1 in the test set, and the classifier correctly predicted those as 1. However, the actual label of 9 customers was 1, and the classifier predicted these as 0, which is not very good. We can consider it as the error of the model for the first row. . Let&#39;s look at the second row. There were 25 customers for whom the churn value was 0. The classifier correctly predicted 24 of them as 0, and one of them wrongly as 1. So, it has done a good job in predicting the customers with churn value 0. . A good thing about the confusion matrix is that is shows the model&#39;s ability to correctly predict or separate the classes.We can interpret these numbers as the count of true positives, false positives, true negatives, and false negatives. . print(classification_report(y_test, yhat)) . precision recall f1-score support 0 0.73 0.96 0.83 25 1 0.86 0.40 0.55 15 accuracy 0.75 40 macro avg 0.79 0.68 0.69 40 weighted avg 0.78 0.75 0.72 40 . Based on the count of each section, we can calcualte precision and recall of each label. . Precision is a measure of the accuracy provided that a class label has been predicted. It is defined by: Precision = TP/(TP+FP) | Recall is the true positive rate. It is defined as: Recall = TP / (TP+FN) | . So we can calculate Precision and Recall for each class. . F1 score is the harmonic average of the precision and recall, where an F1 score reaches its best value at 1 (prefect precision and recall) and worst at 0. It&#39;s a good way to show that a classifier has a good value for both recall and precision. Finally, we can tell the average accuracy for this classifier is the average of the F1 score for both labels, which is 0.72 in our case. . Log Loss . In Logistic regression, the output can be the probability of customer churn. Log loss measures the performance of a classifier where the predicted output is a probability between 0 and 1. . from sklearn.metrics import log_loss log_loss(y_test, yhat_prob) . 0.6017092478101187 .",
            "url": "https://shirolepranav.github.io/blog/regression/modeling/2020/02/06/customer-churn-logistic-regression.html",
            "relUrl": "/regression/modeling/2020/02/06/customer-churn-logistic-regression.html",
            "date": " • Feb 6, 2020"
        }
        
    
  
    
        ,"post11": {
            "title": "Studying crime in San Francisco using Maps",
            "content": "In this blog, we will be looking at the crime data in the city of San Francisco. The data we will be using contains all crimes in San Francisco from the year 2018 to 2020. You can download the data here. Since this dataset is very large (more than 330,000 crimes), we will be considering only a small part of the data for this post. . Note: To view the interactive maps, open the notebook in Google Colab. . import numpy as np import pandas as pd import folium . df = pd.read_csv(&#39;SF_Crime_data.csv&#39;) df.head() . Incident Datetime Incident Date Incident Time Incident Year Incident Day of Week Report Datetime Row ID Incident ID Incident Number CAD Number ... Current Supervisor Districts Analysis Neighborhoods HSOC Zones as of 2018-06-05 OWED Public Spaces Central Market/Tenderloin Boundary Polygon - Updated Parks Alliance CPSI (27+TL sites) ESNCAG - Boundary File Areas of Vulnerability, 2016 Unnamed: 36 Unnamed: 37 . 0 2/3/2020 14:45 | 2/3/2020 | 14:45 | 2020 | Monday | 2/3/2020 17:50 | 89881675000 | 898816 | 200085557 | 200342870.0 | ... | 8.0 | 16.0 | NaN | NaN | NaN | NaN | NaN | 2.0 | NaN | NaN | . 1 2/3/2020 3:45 | 2/3/2020 | 3:45 | 2020 | Monday | 2/3/2020 3:45 | 89860711012 | 898607 | 200083749 | 200340316.0 | ... | 2.0 | 20.0 | 3.0 | NaN | NaN | NaN | NaN | 2.0 | NaN | NaN | . 2 2/3/2020 10:00 | 2/3/2020 | 10:00 | 2020 | Monday | 2/3/2020 10:06 | 89867264015 | 898672 | 200084060 | 200340808.0 | ... | 3.0 | 8.0 | NaN | 35.0 | NaN | NaN | NaN | 2.0 | NaN | NaN | . 3 1/19/2020 17:12 | 1/19/2020 | 17:12 | 2020 | Sunday | 2/1/2020 13:01 | 89863571000 | 898635 | 206024187 | NaN | ... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 4 1/5/2020 0:00 | 1/5/2020 | 0:00 | 2020 | Sunday | 2/3/2020 16:09 | 89877368020 | 898773 | 200085193 | 200342341.0 | ... | 6.0 | 30.0 | NaN | NaN | NaN | NaN | NaN | 1.0 | NaN | NaN | . 5 rows × 38 columns . df.shape . (330054, 38) . There have been more than 330,000 crimes in San Francisco in the past two years. . df.columns . Index([&#39;Incident Datetime&#39;, &#39;Incident Date&#39;, &#39;Incident Time&#39;, &#39;Incident Year&#39;, &#39;Incident Day of Week&#39;, &#39;Report Datetime&#39;, &#39;Row ID&#39;, &#39;Incident ID&#39;, &#39;Incident Number&#39;, &#39;CAD Number&#39;, &#39;Report Type Code&#39;, &#39;Report Type Description&#39;, &#39;Filed Online&#39;, &#39;Incident Code&#39;, &#39;Incident Category&#39;, &#39;Incident Subcategory&#39;, &#39;Incident Description&#39;, &#39;Resolution&#39;, &#39;Intersection&#39;, &#39;CNN&#39;, &#39;Police District&#39;, &#39;Analysis Neighborhood&#39;, &#39;Supervisor District&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;, &#39;point&#39;, &#39;SF Find Neighborhoods&#39;, &#39;Current Police Districts&#39;, &#39;Current Supervisor Districts&#39;, &#39;Analysis Neighborhoods&#39;, &#39;HSOC Zones as of 2018-06-05&#39;, &#39;OWED Public Spaces&#39;, &#39;Central Market/Tenderloin Boundary Polygon - Updated&#39;, &#39;Parks Alliance CPSI (27+TL sites)&#39;, &#39;ESNCAG - Boundary File&#39;, &#39;Areas of Vulnerability, 2016&#39;, &#39;Unnamed: 36&#39;, &#39;Unnamed: 37&#39;], dtype=&#39;object&#39;) . We do not need all these columns for our analysis. So we will consider only the necessary columns. . df = df[[&#39;Incident Datetime&#39;, &#39;Incident Day of Week&#39;, &#39;Incident Number&#39;, &#39;Incident Category&#39;, &#39;Incident Description&#39;, &#39;Police District&#39;, &#39;Analysis Neighborhood&#39;, &#39;Resolution&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;, &#39;point&#39;]] df.head() . Incident Datetime Incident Day of Week Incident Number Incident Category Incident Description Police District Analysis Neighborhood Resolution Latitude Longitude point . 0 2/3/2020 14:45 | Monday | 200085557 | Missing Person | Found Person | Taraval | Lakeshore | Open or Active | 37.726950 | -122.476039 | (37.72694991292525, -122.47603947349434) | . 1 2/3/2020 3:45 | Monday | 200083749 | Stolen Property | Stolen Property, Possession with Knowledge, Re... | Mission | Mission | Cite or Arrest Adult | 37.752440 | -122.415172 | (37.752439644389675, -122.41517229045435) | . 2 2/3/2020 10:00 | Monday | 200084060 | Non-Criminal | Aided Case, Injured or Sick Person | Tenderloin | Financial District/South Beach | Open or Active | 37.784560 | -122.407337 | (37.784560141211806, -122.40733704162238) | . 3 1/19/2020 17:12 | Sunday | 206024187 | Lost Property | Lost Property | Taraval | NaN | Open or Active | NaN | NaN | NaN | . 4 1/5/2020 0:00 | Sunday | 200085193 | Miscellaneous Investigation | Miscellaneous Investigation | Richmond | Pacific Heights | Open or Active | 37.787112 | -122.440250 | (37.78711245591735, -122.44024995765258) | . Now, each row consists of the following 11 features: . Incident Datetime: The date and time when the incident occurred | Incident Day of Week: The day of week on which the incident occurred | Incident Number: The incident or crime number | Incident Category: The category of the incident or crime | Incident Desccription: The description of the incident or crime | Police: The police department district | Resolution: The resolution of the crime in terms of whether the perpertrator was arrested or not | Analysis Neighborhoods: The neighborhood where the incident took place | Latitude: The latitude value of the crime location | Longitude: The longitude value of the crime location | point: A tuple of the latitude and logitude values | . Let&#39;s drop the missing values from the Latitude and Longitude columns as they will result in an error when creating a map. . df.dropna(subset=[&#39;Latitude&#39;, &#39;Longitude&#39;], inplace=True) . Rename the Incident Category column for the sake of simplicity. . df.rename(columns={&#39;Incident Category&#39;:&#39;Category&#39;}, inplace=True) df.head() . Incident Datetime Incident Day of Week Incident Number Category Incident Description Police District Analysis Neighborhood Resolution Latitude Longitude point . 0 2/3/2020 14:45 | Monday | 200085557 | Missing Person | Found Person | Taraval | Lakeshore | Open or Active | 37.726950 | -122.476039 | (37.72694991292525, -122.47603947349434) | . 1 2/3/2020 3:45 | Monday | 200083749 | Stolen Property | Stolen Property, Possession with Knowledge, Re... | Mission | Mission | Cite or Arrest Adult | 37.752440 | -122.415172 | (37.752439644389675, -122.41517229045435) | . 2 2/3/2020 10:00 | Monday | 200084060 | Non-Criminal | Aided Case, Injured or Sick Person | Tenderloin | Financial District/South Beach | Open or Active | 37.784560 | -122.407337 | (37.784560141211806, -122.40733704162238) | . 4 1/5/2020 0:00 | Sunday | 200085193 | Miscellaneous Investigation | Miscellaneous Investigation | Richmond | Pacific Heights | Open or Active | 37.787112 | -122.440250 | (37.78711245591735, -122.44024995765258) | . 5 2/3/2020 8:36 | Monday | 200083909 | Miscellaneous Investigation | Miscellaneous Investigation | Central | Financial District/South Beach | Open or Active | 37.796926 | -122.399507 | (37.796926429317054, -122.39950750040278) | . limit = 100 df = df.iloc[0:limit, :] . df.shape . (100, 11) . . Visualization . Let&#39;s visualize where these crimes took place in the city of San Francisco. . latitude = 37.7749 longitude = -122.4194 . sanfran_map = folium.Map(location=[latitude, longitude], zoom_start=12) sanfran_map . &lt;iframe src=&quot;about:blank&quot; style=&quot;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&quot; data-html=PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgPHNjcmlwdD5MX1BSRUZFUl9DQU5WQVMgPSBmYWxzZTsgTF9OT19UT1VDSCA9IGZhbHNlOyBMX0RJU0FCTEVfM0QgPSBmYWxzZTs8L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS4yLjAvZGlzdC9sZWFmbGV0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjExLjEvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvTGVhZmxldC5hd2Vzb21lLW1hcmtlcnMvMi4wLjIvbGVhZmxldC5hd2Vzb21lLW1hcmtlcnMuanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS4yLjAvZGlzdC9sZWFmbGV0LmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvY3NzL2Jvb3RzdHJhcC10aGVtZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vZm9udC1hd2Vzb21lLzQuNi4zL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9yYXdnaXQuY29tL3B5dGhvbi12aXN1YWxpemF0aW9uL2ZvbGl1bS9tYXN0ZXIvZm9saXVtL3RlbXBsYXRlcy9sZWFmbGV0LmF3ZXNvbWUucm90YXRlLmNzcyIvPgogICAgPHN0eWxlPmh0bWwsIGJvZHkge3dpZHRoOiAxMDAlO2hlaWdodDogMTAwJTttYXJnaW46IDA7cGFkZGluZzogMDt9PC9zdHlsZT4KICAgIDxzdHlsZT4jbWFwIHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtib3R0b206MDtyaWdodDowO2xlZnQ6MDt9PC9zdHlsZT4KICAgIAogICAgICAgICAgICA8c3R5bGU+ICNtYXBfOWU3MzJmNDJmY2I4NDEzOGJlNTk5NGUyM2M3MjAwOGUgewogICAgICAgICAgICAgICAgcG9zaXRpb24gOiByZWxhdGl2ZTsKICAgICAgICAgICAgICAgIHdpZHRoIDogMTAwLjAlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAuMCU7CiAgICAgICAgICAgICAgICBsZWZ0OiAwLjAlOwogICAgICAgICAgICAgICAgdG9wOiAwLjAlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICA8L3N0eWxlPgogICAgICAgIAo8L2hlYWQ+Cjxib2R5PiAgICAKICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb2xpdW0tbWFwIiBpZD0ibWFwXzllNzMyZjQyZmNiODQxMzhiZTU5OTRlMjNjNzIwMDhlIiA+PC9kaXY+CiAgICAgICAgCjwvYm9keT4KPHNjcmlwdD4gICAgCiAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGJvdW5kcyA9IG51bGw7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgdmFyIG1hcF85ZTczMmY0MmZjYjg0MTM4YmU1OTk0ZTIzYzcyMDA4ZSA9IEwubWFwKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ21hcF85ZTczMmY0MmZjYjg0MTM4YmU1OTk0ZTIzYzcyMDA4ZScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y2VudGVyOiBbMzcuNzc0OSwtMTIyLjQxOTRdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgem9vbTogMTIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhCb3VuZHM6IGJvdW5kcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxheWVyczogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b3JsZENvcHlKdW1wOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyczogTC5DUlMuRVBTRzM4NTcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciB0aWxlX2xheWVyX2U0YzU3MzhhOTI5MzRjM2RiODZkMDkzODBmNDBmNzdjID0gTC50aWxlTGF5ZXIoCiAgICAgICAgICAgICAgICAnaHR0cHM6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLAogICAgICAgICAgICAgICAgewogICJhdHRyaWJ1dGlvbiI6IG51bGwsCiAgImRldGVjdFJldGluYSI6IGZhbHNlLAogICJtYXhab29tIjogMTgsCiAgIm1pblpvb20iOiAxLAogICJub1dyYXAiOiBmYWxzZSwKICAic3ViZG9tYWlucyI6ICJhYmMiCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzllNzMyZjQyZmNiODQxMzhiZTU5OTRlMjNjNzIwMDhlKTsKICAgICAgICAKPC9zY3JpcHQ+ onload=&quot;this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute(&#39;data-html&#39;)));this.contentDocument.close();&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt; Let&#39;s create clusters of neighborhoods. The number of crimes per clusters is denoted on the cluster circle. In a Jupyter notebook, you can interact with the map - click on a cluster to zoom in, in on a marker to check the category of the crime. . from folium import plugins # let&#39;s start again with a clean copy of the map of San Francisco sanfran_map = folium.Map(location = [latitude, longitude], zoom_start = 12) # instantiate a mark cluster object for the incidents in the dataframe incidents = plugins.MarkerCluster().add_to(sanfran_map) # loop through the dataframe and add each data point to the mark cluster for lat, lng, label, in zip(df.Latitude, df.Longitude, df.Category): folium.Marker( location=[lat, lng], icon=None, popup=label, ).add_to(incidents) # display map sanfran_map . &lt;iframe src=&quot;about:blank&quot; style=&quot;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&quot; data-html= onload=&quot;this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute(&#39;data-html&#39;)));this.contentDocument.close();&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt;",
            "url": "https://shirolepranav.github.io/blog/visualization/2020/01/30/crime-in-SF.html",
            "relUrl": "/visualization/2020/01/30/crime-in-SF.html",
            "date": " • Jan 30, 2020"
        }
        
    
  
    
        ,"post12": {
            "title": "Segmenting and Clustering Neighborhoods in New York City",
            "content": "In this blog post, we will explore neighborhoods in New York City using the Foursquare API. We will get the most common venue categories in each neighborhood, and then using the k-means clustering algorithm, group the neighborhoods into clusters. . import numpy as np # library to handle data in a vectorized manner import pandas as pd # library for data analsysis pd.set_option(&#39;display.max_columns&#39;, None) pd.set_option(&#39;display.max_rows&#39;, None) import json # library to handle JSON files # !conda install -c conda-forge geopy --yes from geopy.geocoders import Nominatim # convert an address into latitude and longitude values import requests # library to handle requests from pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe # Matplotlib and associated plotting modules import matplotlib.cm as cm import matplotlib.colors as colors # import k-means from clustering stage from sklearn.cluster import KMeans # !conda install -c conda-forge folium=0.5.0 --yes import folium # map rendering library print(&#39;Libraries imported.&#39;) . Libraries imported. . . Explore the data . !wget -q -O &#39;newyork_data.json&#39; https://cocl.us/new_york_dataset print(&#39;Data downloaded.&#39;) . Data downloaded. . with open(&#39;newyork_data.json&#39;) as json_data: newyork_data = json.load(json_data) . # explore the data newyork_data . {&#39;bbox&#39;: [-74.2492599487305, 40.5033187866211, -73.7061614990234, 40.9105606079102], &#39;crs&#39;: {&#39;properties&#39;: {&#39;name&#39;: &#39;urn:ogc:def:crs:EPSG::4326&#39;}, &#39;type&#39;: &#39;name&#39;}, &#39;features&#39;: [{&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84720052054902, 40.89470517661], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.1&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Wakefield&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84720052054902, 40.89470517661, -73.84720052054902, 40.89470517661], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Wakefield&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.82993910812398, 40.87429419303012], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.2&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Co-op&#39;, &#39;annoline2&#39;: &#39;City&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.82993910812398, 40.87429419303012, -73.82993910812398, 40.87429419303012], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Co-op City&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.82780644716412, 40.887555677350775], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.3&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Eastchester&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.82780644716412, 40.887555677350775, -73.82780644716412, 40.887555677350775], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Eastchester&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90564259591682, 40.89543742690383], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.4&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Fieldston&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90564259591682, 40.89543742690383, -73.90564259591682, 40.89543742690383], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Fieldston&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.9125854610857, 40.890834493891305], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.5&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Riverdale&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.9125854610857, 40.890834493891305, -73.9125854610857, 40.890834493891305], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Riverdale&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90281798724604, 40.88168737120521], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.6&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Kingsbridge&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90281798724604, 40.88168737120521, -73.90281798724604, 40.88168737120521], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Kingsbridge&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91065965862981, 40.87655077879964], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.7&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Marble&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91065965862981, 40.87655077879964, -73.91065965862981, 40.87655077879964], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Marble Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.86731496814176, 40.89827261213805], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.8&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Woodlawn&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.86731496814176, 40.89827261213805, -73.86731496814176, 40.89827261213805], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Woodlawn&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8793907395681, 40.87722415599446], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.9&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Norwood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8793907395681, 40.87722415599446, -73.8793907395681, 40.87722415599446], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Norwood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85744642974207, 40.88103887819211], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.10&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Williamsbridge&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85744642974207, 40.88103887819211, -73.85744642974207, 40.88103887819211], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Williamsbridge&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.83579759808117, 40.866858107252696], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.11&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Baychester&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.83579759808117, 40.866858107252696, -73.83579759808117, 40.866858107252696], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Baychester&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85475564017999, 40.85741349808865], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.12&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Pelham Parkway&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85475564017999, 40.85741349808865, -73.85475564017999, 40.85741349808865], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Pelham Parkway&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.78648845267413, 40.84724670491813], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.13&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;City&#39;, &#39;annoline2&#39;: &#39;Island&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.78648845267413, 40.84724670491813, -73.78648845267413, 40.84724670491813], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;City Island&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8855121841913, 40.870185164975325], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.14&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bedford&#39;, &#39;annoline2&#39;: &#39;Park&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8855121841913, 40.870185164975325, -73.8855121841913, 40.870185164975325], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Bedford Park&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.9104159619131, 40.85572707719664], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.15&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;University&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.9104159619131, 40.85572707719664, -73.9104159619131, 40.85572707719664], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;University Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91967159119565, 40.84789792606271], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.16&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Morris&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91967159119565, 40.84789792606271, -73.91967159119565, 40.84789792606271], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Morris Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.89642655981623, 40.86099679638654], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.17&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Fordham&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.89642655981623, 40.86099679638654, -73.89642655981623, 40.86099679638654], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Fordham&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.88735617532338, 40.84269615786053], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.18&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;East&#39;, &#39;annoline2&#39;: &#39;Tremont&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.88735617532338, 40.84269615786053, -73.88735617532338, 40.84269615786053], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;East Tremont&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.87774474910545, 40.83947505672653], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.19&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;West&#39;, &#39;annoline2&#39;: &#39;Farms&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.87774474910545, 40.83947505672653, -73.87774474910545, 40.83947505672653], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;West Farms&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.9261020935813, 40.836623010706056], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.20&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Highbridge&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.9261020935813, 40.836623010706056, -73.9261020935813, 40.836623010706056], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;High Bridge&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90942160757436, 40.819754370594936], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.21&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Melrose&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90942160757436, 40.819754370594936, -73.90942160757436, 40.819754370594936], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Melrose&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91609987487575, 40.80623874935177], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.22&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Mott Haven&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91609987487575, 40.80623874935177, -73.91609987487575, 40.80623874935177], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Mott Haven&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91322139386135, 40.801663627756206], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.23&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Port&#39;, &#39;annoline2&#39;: &#39;Morris&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91322139386135, 40.801663627756206, -73.91322139386135, 40.801663627756206], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Port Morris&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8957882009446, 40.81509904545822], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.24&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Longwood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8957882009446, 40.81509904545822, -73.8957882009446, 40.81509904545822], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Longwood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.88331505955291, 40.80972987938709], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.25&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Hunts&#39;, &#39;annoline2&#39;: &#39;Point&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.88331505955291, 40.80972987938709, -73.88331505955291, 40.80972987938709], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Hunts Point&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90150648943059, 40.82359198585534], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.26&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Morrisania&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90150648943059, 40.82359198585534, -73.90150648943059, 40.82359198585534], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Morrisania&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.86574609554924, 40.821012197914015], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.27&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Soundview&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.86574609554924, 40.821012197914015, -73.86574609554924, 40.821012197914015], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Soundview&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85414416189266, 40.80655112003589], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.28&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Clason&#39;, &#39;annoline2&#39;: &#39;Point&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85414416189266, 40.80655112003589, -73.85414416189266, 40.80655112003589], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Clason Point&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.81635002158441, 40.81510925804005], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.29&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Throgs Neck&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.81635002158441, 40.81510925804005, -73.81635002158441, 40.81510925804005], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Throgs Neck&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8240992675385, 40.844245936947374], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.30&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Country&#39;, &#39;annoline2&#39;: &#39;Club&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8240992675385, 40.844245936947374, -73.8240992675385, 40.844245936947374], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Country Club&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85600310535783, 40.837937822267286], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.31&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Parkchester&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85600310535783, 40.837937822267286, -73.85600310535783, 40.837937822267286], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Parkchester&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84219407604444, 40.8406194964327], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.32&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Westchester&#39;, &#39;annoline2&#39;: &#39;Square&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84219407604444, 40.8406194964327, -73.84219407604444, 40.8406194964327], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Westchester Square&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8662991807561, 40.84360847124718], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.33&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Van&#39;, &#39;annoline2&#39;: &#39;Nest&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8662991807561, 40.84360847124718, -73.8662991807561, 40.84360847124718], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Van Nest&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85040178030421, 40.847549063536334], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.34&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Morris Park&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85040178030421, 40.847549063536334, -73.85040178030421, 40.847549063536334], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Morris Park&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.88845196134804, 40.85727710073895], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.35&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Belmont&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.88845196134804, 40.85727710073895, -73.88845196134804, 40.85727710073895], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Belmont&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91719048210393, 40.88139497727086], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.36&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Spuyten&#39;, &#39;annoline2&#39;: &#39;Duyvil&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91719048210393, 40.88139497727086, -73.91719048210393, 40.88139497727086], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Spuyten Duyvil&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90453054908927, 40.90854282950666], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.37&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;North&#39;, &#39;annoline2&#39;: &#39;Riverdale&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90453054908927, 40.90854282950666, -73.90453054908927, 40.90854282950666], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;North Riverdale&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8320737824047, 40.85064140940335], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.38&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Pelham&#39;, &#39;annoline2&#39;: &#39;Bay&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8320737824047, 40.85064140940335, -73.8320737824047, 40.85064140940335], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Pelham Bay&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.82620275994073, 40.82657951686922], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.39&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Schuylerville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.82620275994073, 40.82657951686922, -73.82620275994073, 40.82657951686922], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Schuylerville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.81388514428619, 40.821986118163494], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.40&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Edgewater&#39;, &#39;annoline2&#39;: &#39;Park&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.81388514428619, 40.821986118163494, -73.81388514428619, 40.821986118163494], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Edgewater Park&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84802729582735, 40.819014376988314], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.41&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Castle&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84802729582735, 40.819014376988314, -73.84802729582735, 40.819014376988314], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Castle Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.86332361652777, 40.87137078192371], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.42&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Olinville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.86332361652777, 40.87137078192371, -73.86332361652777, 40.87137078192371], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Olinville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84161194831223, 40.86296562477998], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.43&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Pelham&#39;, &#39;annoline2&#39;: &#39;Gardens&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84161194831223, 40.86296562477998, -73.84161194831223, 40.86296562477998], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Pelham Gardens&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91558941773444, 40.83428380733851], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.44&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Concourse&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91558941773444, 40.83428380733851, -73.91558941773444, 40.83428380733851], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Concourse&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85053524451935, 40.82977429787161], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.45&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Unionport&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85053524451935, 40.82977429787161, -73.85053524451935, 40.82977429787161], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Unionport&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84808271877168, 40.88456130303732], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.46&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Edenwald&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84808271877168, 40.88456130303732, -73.84808271877168, 40.88456130303732], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Edenwald&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.03062069353813, 40.625801065010656], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.47&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bay Ridge&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.03062069353813, 40.625801065010656, -74.03062069353813, 40.625801065010656], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Bay Ridge&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99517998380729, 40.61100890202044], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.48&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bensonhurst&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99517998380729, 40.61100890202044, -73.99517998380729, 40.61100890202044], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Bensonhurst&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.01031618527784, 40.64510294925429], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.49&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Sunset&#39;, &#39;annoline2&#39;: &#39;Park&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.01031618527784, 40.64510294925429, -74.01031618527784, 40.64510294925429], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Sunset Park&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95424093127393, 40.7302009848647], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.50&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Greenpoint&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95424093127393, 40.7302009848647, -73.95424093127393, 40.7302009848647], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Greenpoint&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.97347087708445, 40.59526001306593], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.51&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Gravesend&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.97347087708445, 40.59526001306593, -73.97347087708445, 40.59526001306593], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Gravesend&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96509448785336, 40.57682506566604], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.52&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Brighton&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96509448785336, 40.57682506566604, -73.96509448785336, 40.57682506566604], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Brighton Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94318640482979, 40.58689012678384], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.53&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Sheepshead&#39;, &#39;annoline2&#39;: &#39;Bay&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94318640482979, 40.58689012678384, -73.94318640482979, 40.58689012678384], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Sheepshead Bay&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95743840559939, 40.61443251335098], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.54&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Manhattan&#39;, &#39;annoline2&#39;: &#39;Terrace&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95743840559939, 40.61443251335098, -73.95743840559939, 40.61443251335098], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Manhattan Terrace&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95840106533903, 40.63632589026677], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.55&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Flatbush&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95840106533903, 40.63632589026677, -73.95840106533903, 40.63632589026677], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Flatbush&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94329119073582, 40.67082917695294], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.56&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Crown&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94329119073582, 40.67082917695294, -73.94329119073582, 40.67082917695294], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Crown Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93610256185836, 40.64171776668961], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.57&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;East Flatbush&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93610256185836, 40.64171776668961, -73.93610256185836, 40.64171776668961], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;East Flatbush&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98042110559474, 40.642381958003526], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.58&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Kensington&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98042110559474, 40.642381958003526, -73.98042110559474, 40.642381958003526], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Kensington&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98007340430172, 40.65694583575104], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.59&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Windsor&#39;, &#39;annoline2&#39;: &#39;Terrace&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98007340430172, 40.65694583575104, -73.98007340430172, 40.65694583575104], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Windsor Terrace&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.9648592426269, 40.676822262254724], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.60&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Prospect&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.9648592426269, 40.676822262254724, -73.9648592426269, 40.676822262254724], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Prospect Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91023536176607, 40.66394994339755], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.61&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Brownsville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91023536176607, 40.66394994339755, -73.91023536176607, 40.66394994339755], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Brownsville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95811529220927, 40.70714439344251], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.62&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Williamsburg&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95811529220927, 40.70714439344251, -73.95811529220927, 40.70714439344251], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Williamsburg&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.92525797487045, 40.69811611017901], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.63&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bushwick&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.92525797487045, 40.69811611017901, -73.92525797487045, 40.69811611017901], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Bushwick&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94178488690297, 40.687231607720456], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.64&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bedford Stuyvesant&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94178488690297, 40.687231607720456, -73.94178488690297, 40.687231607720456], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Bedford Stuyvesant&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99378225496424, 40.695863722724084], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.65&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Brooklyn&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99378225496424, 40.695863722724084, -73.99378225496424, 40.695863722724084], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Brooklyn Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99856139218463, 40.687919722485574], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.66&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Cobble&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99856139218463, 40.687919722485574, -73.99856139218463, 40.687919722485574], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Cobble Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99465372828006, 40.680540231076485], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.67&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Carroll&#39;, &#39;annoline2&#39;: &#39;Gardens&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99465372828006, 40.680540231076485, -73.99465372828006, 40.680540231076485], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Carroll Gardens&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.0127589747356, 40.676253230250886], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.68&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Red&#39;, &#39;annoline2&#39;: &#39;Hook&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.0127589747356, 40.676253230250886, -74.0127589747356, 40.676253230250886], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Red Hook&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99444087145339, 40.673931143187154], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.69&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Gowanus&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99444087145339, 40.673931143187154, -73.99444087145339, 40.673931143187154], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Gowanus&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.97290574369092, 40.68852726018977], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.70&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Fort&#39;, &#39;annoline2&#39;: &#39;Greene&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.97290574369092, 40.68852726018977, -73.97290574369092, 40.68852726018977], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Fort Greene&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.97705030183924, 40.67232052268197], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.71&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Park&#39;, &#39;annoline2&#39;: &#39;Slope&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.97705030183924, 40.67232052268197, -73.97705030183924, 40.67232052268197], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Park Slope&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.87661596457296, 40.68239101144211], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.72&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Cypress&#39;, &#39;annoline2&#39;: &#39;Hills&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.87661596457296, 40.68239101144211, -73.87661596457296, 40.68239101144211], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Cypress Hills&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.88069863917366, 40.669925700847045], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.73&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;East New York&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.88069863917366, 40.669925700847045, -73.88069863917366, 40.669925700847045], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;East New York&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.87936970045875, 40.64758905230874], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.74&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Starrett&#39;, &#39;annoline2&#39;: &#39;City&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.87936970045875, 40.64758905230874, -73.87936970045875, 40.64758905230874], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Starrett City&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90209269778966, 40.63556432797428], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.75&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Canarsie&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90209269778966, 40.63556432797428, -73.90209269778966, 40.63556432797428], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Canarsie&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.92911302644674, 40.630446043757466], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.76&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Flatlands&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.92911302644674, 40.630446043757466, -73.92911302644674, 40.630446043757466], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Flatlands&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90818571777423, 40.606336421685626], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.77&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Mill&#39;, &#39;annoline2&#39;: &#39;Island&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90818571777423, 40.606336421685626, -73.90818571777423, 40.606336421685626], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Mill Island&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94353722891886, 40.57791350308657], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.78&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Manhattan&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94353722891886, 40.57791350308657, -73.94353722891886, 40.57791350308657], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Manhattan Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98868295821637, 40.57429256471601], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.79&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Coney Island&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98868295821637, 40.57429256471601, -73.98868295821637, 40.57429256471601], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Coney Island&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99875221443519, 40.59951870282238], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.80&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bath&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99875221443519, 40.59951870282238, -73.99875221443519, 40.59951870282238], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Bath Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99049823044811, 40.633130512758015], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.81&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Borough&#39;, &#39;annoline2&#39;: &#39;Park&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99049823044811, 40.633130512758015, -73.99049823044811, 40.633130512758015], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Borough Park&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.01931375636022, 40.619219457722636], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.82&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Dyker&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.01931375636022, 40.619219457722636, -74.01931375636022, 40.619219457722636], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Dyker Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93010170691196, 40.590848433902046], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.83&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Gerritsen&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93010170691196, 40.590848433902046, -73.93010170691196, 40.590848433902046], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Gerritsen Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93134404108497, 40.609747779894604], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.84&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Marine Park&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93134404108497, 40.609747779894604, -73.93134404108497, 40.609747779894604], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Marine Park&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96784306216367, 40.693229421881504], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.85&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Clinton&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96784306216367, 40.693229421881504, -73.96784306216367, 40.693229421881504], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Clinton Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.0078731120024, 40.57637537890224], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.86&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Sea&#39;, &#39;annoline2&#39;: &#39;Gate&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.0078731120024, 40.57637537890224, -74.0078731120024, 40.57637537890224], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Sea Gate&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98346337431099, 40.69084402109802], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.87&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Downtown&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98346337431099, 40.69084402109802, -73.98346337431099, 40.69084402109802], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Downtown&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98374824115798, 40.685682912091444], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.88&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Boerum&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98374824115798, 40.685682912091444, -73.98374824115798, 40.685682912091444], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Boerum Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95489867077713, 40.658420017469815], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.89&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Prospect&#39;, &#39;annoline2&#39;: &#39;Lefferts&#39;, &#39;annoline3&#39;: &#39;Gardens&#39;, &#39;bbox&#39;: [-73.95489867077713, 40.658420017469815, -73.95489867077713, 40.658420017469815], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Prospect Lefferts Gardens&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91306831787395, 40.678402554795355], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.90&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Ocean&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91306831787395, 40.678402554795355, -73.91306831787395, 40.678402554795355], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Ocean Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.86797598081334, 40.67856995727479], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.91&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;City&#39;, &#39;annoline2&#39;: &#39;Line&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.86797598081334, 40.67856995727479, -73.86797598081334, 40.67856995727479], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;City Line&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.89855633630317, 40.61514955045308], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.92&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bergen&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.89855633630317, 40.61514955045308, -73.89855633630317, 40.61514955045308], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Bergen Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95759523489838, 40.62559589869843], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.93&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Midwood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95759523489838, 40.62559589869843, -73.95759523489838, 40.62559589869843], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Midwood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96261316716048, 40.647008603185185], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.94&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Prospect&#39;, &#39;annoline2&#39;: &#39;Park South&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96261316716048, 40.647008603185185, -73.96261316716048, 40.647008603185185], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Prospect Park South&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91607483951324, 40.62384524478419], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.95&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Georgetown&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91607483951324, 40.62384524478419, -73.91607483951324, 40.62384524478419], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Georgetown&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93885815269195, 40.70849241041548], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.96&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;East&#39;, &#39;annoline2&#39;: &#39;Williamsburg&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93885815269195, 40.70849241041548, -73.93885815269195, 40.70849241041548], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;East Williamsburg&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95880857587582, 40.714822906532014], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.97&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;North Side&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95880857587582, 40.714822906532014, -73.95880857587582, 40.714822906532014], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;North Side&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95800095153331, 40.71086147265064], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.98&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;South Side&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95800095153331, 40.71086147265064, -73.95800095153331, 40.71086147265064], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;South Side&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96836678035541, 40.61305976667942], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.99&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Ocean&#39;, &#39;annoline2&#39;: &#39;Parkway&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96836678035541, 40.61305976667942, -73.96836678035541, 40.61305976667942], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Ocean Parkway&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.03197914537984, 40.61476812694226], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.100&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Fort&#39;, &#39;annoline2&#39;: &#39;Hamilton&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.03197914537984, 40.61476812694226, -74.03197914537984, 40.61476812694226], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Fort Hamilton&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99427936255978, 40.71561842231432], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.101&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Chinatown&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99427936255978, 40.71561842231432, -73.99427936255978, 40.71561842231432], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Chinatown&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93690027985234, 40.85190252555305], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.102&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Washington&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93690027985234, 40.85190252555305, -73.93690027985234, 40.85190252555305], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Washington Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.92121042203897, 40.86768396449915], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.103&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Inwood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.92121042203897, 40.86768396449915, -73.92121042203897, 40.86768396449915], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Inwood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94968791883366, 40.823604284811935], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.104&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Hamilton&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94968791883366, 40.823604284811935, -73.94968791883366, 40.823604284811935], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Hamilton Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.9573853935188, 40.8169344294978], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.105&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Manhattanville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.9573853935188, 40.8169344294978, -73.9573853935188, 40.8169344294978], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Manhattanville&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94321112603905, 40.81597606742414], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.106&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Central&#39;, &#39;annoline2&#39;: &#39;Harlem&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94321112603905, 40.81597606742414, -73.94321112603905, 40.81597606742414], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Central Harlem&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94418223148524, 40.79224946663033], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.107&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;East&#39;, &#39;annoline2&#39;: &#39;Harlem&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94418223148524, 40.79224946663033, -73.94418223148524, 40.79224946663033], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;East Harlem&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96050763135, 40.775638573301805], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.108&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Upper&#39;, &#39;annoline2&#39;: &#39;East&#39;, &#39;annoline3&#39;: &#39;Side&#39;, &#39;bbox&#39;: [-73.96050763135, 40.775638573301805, -73.96050763135, 40.775638573301805], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Upper East Side&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94711784471826, 40.775929849884875], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.109&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Yorkville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94711784471826, 40.775929849884875, -73.94711784471826, 40.775929849884875], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Yorkville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.9588596881376, 40.76811265828733], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.110&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Lenox&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.9588596881376, 40.76811265828733, -73.9588596881376, 40.76811265828733], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Lenox Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94916769227953, 40.76215960576283], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.111&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 56, &#39;annoline1&#39;: &#39;Roosevelt Island&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94916769227953, 40.76215960576283, -73.94916769227953, 40.76215960576283], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Roosevelt Island&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.97705923630603, 40.787657998534854], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.112&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Upper&#39;, &#39;annoline2&#39;: &#39;West&#39;, &#39;annoline3&#39;: &#39;Side&#39;, &#39;bbox&#39;: [-73.97705923630603, 40.787657998534854, -73.97705923630603, 40.787657998534854], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Upper West Side&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98533777001262, 40.77352888942166], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.113&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Lincoln&#39;, &#39;annoline2&#39;: &#39;Square&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98533777001262, 40.77352888942166, -73.98533777001262, 40.77352888942166], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Lincoln Square&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99611936309479, 40.75910089146212], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.114&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Clinton&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99611936309479, 40.75910089146212, -73.99611936309479, 40.75910089146212], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Clinton&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98166882730304, 40.75469110270623], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.115&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Midtown&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98166882730304, 40.75469110270623, -73.98166882730304, 40.75469110270623], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Midtown&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.97833207924127, 40.748303077252174], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.116&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Murray&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.97833207924127, 40.748303077252174, -73.97833207924127, 40.748303077252174], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Murray Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.00311633472813, 40.744034706747975], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.117&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Chelsea&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.00311633472813, 40.744034706747975, -74.00311633472813, 40.744034706747975], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Chelsea&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99991402945902, 40.72693288536128], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.118&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Greenwich&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99991402945902, 40.72693288536128, -73.99991402945902, 40.72693288536128], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Greenwich Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98222616506416, 40.727846777270244], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.119&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;East&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98222616506416, 40.727846777270244, -73.98222616506416, 40.727846777270244], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;East Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98089031999291, 40.71780674892765], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.120&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Lower&#39;, &#39;annoline2&#39;: &#39;East&#39;, &#39;annoline3&#39;: &#39;Side&#39;, &#39;bbox&#39;: [-73.98089031999291, 40.71780674892765, -73.98089031999291, 40.71780674892765], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Lower East Side&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.01068328559087, 40.721521967443216], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.121&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Tribeca&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.01068328559087, 40.721521967443216, -74.01068328559087, 40.721521967443216], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Tribeca&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99730467208073, 40.71932379395907], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.122&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Little&#39;, &#39;annoline2&#39;: &#39;Italy&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99730467208073, 40.71932379395907, -73.99730467208073, 40.71932379395907], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Little Italy&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.00065666959759, 40.72218384131794], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.123&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Soho&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.00065666959759, 40.72218384131794, -74.00065666959759, 40.72218384131794], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Soho&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.00617998126812, 40.73443393572434], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.124&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;West&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.00617998126812, 40.73443393572434, -74.00617998126812, 40.73443393572434], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;West Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96428617740655, 40.797307041702865], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.125&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Manhattan&#39;, &#39;annoline2&#39;: &#39;Valley&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96428617740655, 40.797307041702865, -73.96428617740655, 40.797307041702865], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Manhattan Valley&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96389627905332, 40.807999738165826], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.126&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Morningside&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96389627905332, 40.807999738165826, -73.96389627905332, 40.807999738165826], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Morningside Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98137594833541, 40.737209832715], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.127&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Gramercy&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98137594833541, 40.737209832715, -73.98137594833541, 40.737209832715], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Gramercy&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.01686930508617, 40.71193198394565], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.128&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Battery&#39;, &#39;annoline2&#39;: &#39;Park&#39;, &#39;annoline3&#39;: &#39;City&#39;, &#39;bbox&#39;: [-74.01686930508617, 40.71193198394565, -74.01686930508617, 40.71193198394565], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Battery Park City&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.0106654452127, 40.70710710727048], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.129&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Financial&#39;, &#39;annoline2&#39;: &#39;District&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.0106654452127, 40.70710710727048, -74.0106654452127, 40.70710710727048], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Financial District&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91565374304234, 40.76850859335492], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.130&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Astoria&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91565374304234, 40.76850859335492, -73.91565374304234, 40.76850859335492], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Astoria&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90184166838284, 40.74634908860222], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.131&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Woodside&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90184166838284, 40.74634908860222, -73.90184166838284, 40.74634908860222], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Woodside&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.88282109164365, 40.75198138007367], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.132&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Jackson&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.88282109164365, 40.75198138007367, -73.88282109164365, 40.75198138007367], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Jackson Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.88165622288388, 40.744048505122024], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.133&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Elmhurst&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.88165622288388, 40.744048505122024, -73.88165622288388, 40.744048505122024], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Elmhurst&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8381376460028, 40.65422527738487], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.134&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Howard&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8381376460028, 40.65422527738487, -73.8381376460028, 40.65422527738487], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Howard Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85682497345258, 40.74238175015667], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.135&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Corona&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85682497345258, 40.74238175015667, -73.85682497345258, 40.74238175015667], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Corona&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84447500788983, 40.72526378216503], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.136&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Forest&#39;, &#39;annoline2&#39;: &#39;Hills&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84447500788983, 40.72526378216503, -73.84447500788983, 40.72526378216503], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Forest Hills&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.82981905825703, 40.7051790354148], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.137&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Kew&#39;, &#39;annoline2&#39;: &#39;Gardens&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.82981905825703, 40.7051790354148, -73.82981905825703, 40.7051790354148], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Kew Gardens&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.83183321446887, 40.69794731471763], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.138&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Richmond&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.83183321446887, 40.69794731471763, -73.83183321446887, 40.69794731471763], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Richmond Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.83177300329582, 40.76445419697846], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.139&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Flushing&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.83177300329582, 40.76445419697846, -73.83177300329582, 40.76445419697846], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Flushing&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93920223915505, 40.75021734610528], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.140&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Long&#39;, &#39;annoline2&#39;: &#39;Island&#39;, &#39;annoline3&#39;: &#39;City&#39;, &#39;bbox&#39;: [-73.93920223915505, 40.75021734610528, -73.93920223915505, 40.75021734610528], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Long Island City&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.92691617561577, 40.74017628351924], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.141&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Sunnyside&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.92691617561577, 40.74017628351924, -73.92691617561577, 40.74017628351924], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Sunnyside&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.86704147658772, 40.76407323883091], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.142&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;East&#39;, &#39;annoline2&#39;: &#39;Elmhurst&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.86704147658772, 40.76407323883091, -73.86704147658772, 40.76407323883091], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;East Elmhurst&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.89621713626859, 40.725427374093606], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.143&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Maspeth&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.89621713626859, 40.725427374093606, -73.89621713626859, 40.725427374093606], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Maspeth&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90143517559589, 40.70832315613858], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.144&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Ridgewood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90143517559589, 40.70832315613858, -73.90143517559589, 40.70832315613858], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Ridgewood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.87074167435605, 40.70276242967838], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.145&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Glendale&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.87074167435605, 40.70276242967838, -73.87074167435605, 40.70276242967838], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Glendale&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8578268690537, 40.72897409480735], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.146&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Rego Park&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8578268690537, 40.72897409480735, -73.8578268690537, 40.72897409480735], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Rego Park&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8581104655432, 40.68988687915789], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.147&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Woodhaven&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8581104655432, 40.68988687915789, -73.8581104655432, 40.68988687915789], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Woodhaven&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84320266173447, 40.680708468265415], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.148&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Ozone Park&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84320266173447, 40.680708468265415, -73.84320266173447, 40.680708468265415], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Ozone Park&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.80986478649041, 40.66854957767195], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.149&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;South&#39;, &#39;annoline2&#39;: &#39;Ozone Park&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.80986478649041, 40.66854957767195, -73.80986478649041, 40.66854957767195], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;South Ozone Park&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84304528896125, 40.784902749260205], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.150&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;College&#39;, &#39;annoline2&#39;: &#39;Point&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84304528896125, 40.784902749260205, -73.84304528896125, 40.784902749260205], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;College Point&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.81420216610863, 40.78129076602694], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.151&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Whitestone&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.81420216610863, 40.78129076602694, -73.81420216610863, 40.78129076602694], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Whitestone&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.7742736306867, 40.76604063281064], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.152&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bayside&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.7742736306867, 40.76604063281064, -73.7742736306867, 40.76604063281064], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Bayside&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.79176243728061, 40.76172954903262], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.153&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Auburndale&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.79176243728061, 40.76172954903262, -73.79176243728061, 40.76172954903262], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Auburndale&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.7388977558074, 40.7708261928267], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.154&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Little&#39;, &#39;annoline2&#39;: &#39;Neck&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.7388977558074, 40.7708261928267, -73.7388977558074, 40.7708261928267], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Little Neck&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.7424982072733, 40.76684609790763], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.155&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Douglaston&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.7424982072733, 40.76684609790763, -73.7424982072733, 40.76684609790763], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Douglaston&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.71548118999145, 40.74944079974332], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.156&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Glen&#39;, &#39;annoline2&#39;: &#39;Oaks&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.71548118999145, 40.74944079974332, -73.71548118999145, 40.74944079974332], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Glen Oaks&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.72012814826903, 40.72857318176675], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.157&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bellerose&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.72012814826903, 40.72857318176675, -73.72012814826903, 40.72857318176675], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Bellerose&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.82087764933566, 40.722578244228046], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.158&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Kew&#39;, &#39;annoline2&#39;: &#39;Gardens&#39;, &#39;annoline3&#39;: &#39;Hills&#39;, &#39;bbox&#39;: [-73.82087764933566, 40.722578244228046, -73.82087764933566, 40.722578244228046], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Kew Gardens Hills&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.78271337003264, 40.7343944653313], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.159&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Fresh&#39;, &#39;annoline2&#39;: &#39;Meadows&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.78271337003264, 40.7343944653313, -73.78271337003264, 40.7343944653313], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Fresh Meadows&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.81174822458634, 40.71093547252271], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.160&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Briarwood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.81174822458634, 40.71093547252271, -73.81174822458634, 40.71093547252271], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Briarwood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.79690165888289, 40.70465736068717], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.161&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Jamaica&#39;, &#39;annoline2&#39;: &#39;Center&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.79690165888289, 40.70465736068717, -73.79690165888289, 40.70465736068717], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Jamaica Center&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.75494976234332, 40.74561857141855], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.162&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Oakland&#39;, &#39;annoline2&#39;: &#39;Gardens&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.75494976234332, 40.74561857141855, -73.75494976234332, 40.74561857141855], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Oakland Gardens&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.73871484578424, 40.718893092167356], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.163&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Queens&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.73871484578424, 40.718893092167356, -73.73871484578424, 40.718893092167356], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Queens Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.75925009335594, 40.71124344191904], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.164&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Hollis&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.75925009335594, 40.71124344191904, -73.75925009335594, 40.71124344191904], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Hollis&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.7904261313554, 40.696911253789885], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.165&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;South Jamaica&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.7904261313554, 40.696911253789885, -73.7904261313554, 40.696911253789885], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;South Jamaica&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.75867603727717, 40.69444538522359], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.166&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;St. Albans&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.75867603727717, 40.69444538522359, -73.75867603727717, 40.69444538522359], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;St. Albans&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.77258787620906, 40.67521139591733], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.167&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Rochdale&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.77258787620906, 40.67521139591733, -73.77258787620906, 40.67521139591733], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Rochdale&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.76042092682287, 40.666230490368584], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.168&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Springfield&#39;, &#39;annoline2&#39;: &#39;Gardens&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.76042092682287, 40.666230490368584, -73.76042092682287, 40.666230490368584], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Springfield Gardens&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.73526873708026, 40.692774639160845], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.169&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Cambria&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.73526873708026, 40.692774639160845, -73.73526873708026, 40.692774639160845], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Cambria Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.73526079428278, 40.659816433428084], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.170&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Rosedale&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.73526079428278, 40.659816433428084, -73.73526079428278, 40.659816433428084], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Rosedale&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.75497968043872, 40.603134432500894], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.171&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Far Rockaway&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.75497968043872, 40.603134432500894, -73.75497968043872, 40.603134432500894], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Far Rockaway&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8200548911032, 40.60302658351238], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.172&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Broad&#39;, &#39;annoline2&#39;: &#39;Channel&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8200548911032, 40.60302658351238, -73.8200548911032, 40.60302658351238], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Broad Channel&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.92551196994168, 40.55740128845452], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.173&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Breezy&#39;, &#39;annoline2&#39;: &#39;Point&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.92551196994168, 40.55740128845452, -73.92551196994168, 40.55740128845452], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Breezy Point&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90228960391673, 40.775923015642896], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.174&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Steinway&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90228960391673, 40.775923015642896, -73.90228960391673, 40.775923015642896], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Steinway&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.80436451720988, 40.79278140360048], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.175&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Beechhurst&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.80436451720988, 40.79278140360048, -73.80436451720988, 40.79278140360048], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Beechhurst&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.7768022262158, 40.782842806245554], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.176&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bay&#39;, &#39;annoline2&#39;: &#39;Terrace&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.7768022262158, 40.782842806245554, -73.7768022262158, 40.782842806245554], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Bay Terrace&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.77613282391705, 40.595641807368494], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.177&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Edgemere&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.77613282391705, 40.595641807368494, -73.77613282391705, 40.595641807368494], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Edgemere&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.79199233136943, 40.58914394372971], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.178&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Arverne&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.79199233136943, 40.58914394372971, -73.79199233136943, 40.58914394372971], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Arverne&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.82236121088751, 40.582801696845586], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.179&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Rockaway&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.82236121088751, 40.582801696845586, -73.82236121088751, 40.582801696845586], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Rockaway Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85754672410827, 40.572036730217015], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.180&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Neponsit&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85754672410827, 40.572036730217015, -73.85754672410827, 40.572036730217015], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Neponsit&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.81276269135866, 40.764126122614066], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.181&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Murray&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.81276269135866, 40.764126122614066, -73.81276269135866, 40.764126122614066], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Murray Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.70884705889246, 40.741378421945434], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.182&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Floral Park&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.70884705889246, 40.741378421945434, -73.70884705889246, 40.741378421945434], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Floral Park&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.76714166714729, 40.7209572076444], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.183&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Holliswood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.76714166714729, 40.7209572076444, -73.76714166714729, 40.7209572076444], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Holliswood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.7872269693666, 40.71680483014613], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.184&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Jamaica&#39;, &#39;annoline2&#39;: &#39;Estates&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.7872269693666, 40.71680483014613, -73.7872269693666, 40.71680483014613], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Jamaica Estates&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.82580915110559, 40.7445723092867], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.185&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Queensboro&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.82580915110559, 40.7445723092867, -73.82580915110559, 40.7445723092867], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Queensboro Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.79760300912672, 40.723824901829204], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.186&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Hillcrest&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.79760300912672, 40.723824901829204, -73.79760300912672, 40.723824901829204], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Hillcrest&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93157506072878, 40.761704526054146], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.187&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Ravenswood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93157506072878, 40.761704526054146, -73.93157506072878, 40.761704526054146], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Ravenswood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84963782402441, 40.66391841925139], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.188&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Lindenwood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84963782402441, 40.66391841925139, -73.84963782402441, 40.66391841925139], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Lindenwood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.74025607989822, 40.66788389660247], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.189&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Laurelton&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.74025607989822, 40.66788389660247, -73.74025607989822, 40.66788389660247], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Laurelton&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8625247141374, 40.736074570830795], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.190&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Lefrak&#39;, &#39;annoline2&#39;: &#39;City&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8625247141374, 40.736074570830795, -73.8625247141374, 40.736074570830795], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Lefrak City&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8540175039252, 40.57615556543109], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.191&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Belle Harbor&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.8540175039252, 40.57615556543109, -73.8540175039252, 40.57615556543109], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Belle Harbor&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84153370226186, 40.58034295646131], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.192&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Rockaway Park&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84153370226186, 40.58034295646131, -73.84153370226186, 40.58034295646131], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Rockaway Park&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.79664750844047, 40.59771061565768], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.193&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Somerville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.79664750844047, 40.59771061565768, -73.79664750844047, 40.59771061565768], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Somerville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.75175310731153, 40.66000322733613], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.194&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Brookville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.75175310731153, 40.66000322733613, -73.75175310731153, 40.66000322733613], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Brookville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.73889198912481, 40.73301404027834], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.195&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bellaire&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.73889198912481, 40.73301404027834, -73.73889198912481, 40.73301404027834], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Bellaire&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85751790676447, 40.7540709990489], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.196&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;North&#39;, &#39;annoline2&#39;: &#39;Corona&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85751790676447, 40.7540709990489, -73.85751790676447, 40.7540709990489], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;North Corona&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.8410221123401, 40.7146110815117], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.197&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Forest&#39;, &#39;annoline2&#39;: &#39;Hills&#39;, &#39;annoline3&#39;: &#39;Gardens&#39;, &#39;bbox&#39;: [-73.8410221123401, 40.7146110815117, -73.8410221123401, 40.7146110815117], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Forest Hills Gardens&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.07935312512797, 40.6449815710044], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.198&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;St.&#39;, &#39;annoline2&#39;: &#39;George&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.07935312512797, 40.6449815710044, -74.07935312512797, 40.6449815710044], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;St. George&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.08701650516625, 40.64061455913511], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.199&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;New&#39;, &#39;annoline2&#39;: &#39;Brighton&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.08701650516625, 40.64061455913511, -74.08701650516625, 40.64061455913511], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;New Brighton&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.07790192660066, 40.62692762538176], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.200&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Stapleton&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.07790192660066, 40.62692762538176, -74.07790192660066, 40.62692762538176], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Stapleton&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.06980526716141, 40.61530494652761], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.201&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Rosebank&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.06980526716141, 40.61530494652761, -74.06980526716141, 40.61530494652761], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Rosebank&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.1071817826561, 40.63187892654607], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.202&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;West&#39;, &#39;annoline2&#39;: &#39;Brighton&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.1071817826561, 40.63187892654607, -74.1071817826561, 40.63187892654607], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;West Brighton&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.08724819983729, 40.624184791313006], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.203&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Grymes&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.08724819983729, 40.624184791313006, -74.08724819983729, 40.624184791313006], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Grymes Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.1113288180088, 40.59706851814673], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.204&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Todt&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.1113288180088, 40.59706851814673, -74.1113288180088, 40.59706851814673], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Todt Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.0795529253982, 40.58024741350956], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.205&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;South&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.0795529253982, 40.58024741350956, -74.0795529253982, 40.58024741350956], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;South Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.12943426797008, 40.63366930554365], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.206&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Port&#39;, &#39;annoline2&#39;: &#39;Richmond&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.12943426797008, 40.63366930554365, -74.12943426797008, 40.63366930554365], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Port Richmond&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.15008537046981, 40.632546390481124], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.207&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#34;Mariner&#39;s&#34;, &#39;annoline2&#39;: &#39;Harbor&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.15008537046981, 40.632546390481124, -74.15008537046981, 40.632546390481124], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#34;Mariner&#39;s Harbor&#34;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.17464532993542, 40.63968297845542], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.208&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Port&#39;, &#39;annoline2&#39;: &#39;Ivory&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.17464532993542, 40.63968297845542, -74.17464532993542, 40.63968297845542], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Port Ivory&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.11918058534842, 40.61333593766742], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.209&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Castleton&#39;, &#39;annoline2&#39;: &#39;Corners&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.11918058534842, 40.61333593766742, -74.11918058534842, 40.61333593766742], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Castleton Corners&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.16496031329827, 40.594252379161695], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.210&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;New&#39;, &#39;annoline2&#39;: &#39;Springville&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.16496031329827, 40.594252379161695, -74.16496031329827, 40.594252379161695], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;New Springville&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.19073717538116, 40.58631375103281], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.211&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Travis&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.19073717538116, 40.58631375103281, -74.19073717538116, 40.58631375103281], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Travis&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.1164794360638, 40.57257231820632], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.212&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;New&#39;, &#39;annoline2&#39;: &#39;Dorp&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.1164794360638, 40.57257231820632, -74.1164794360638, 40.57257231820632], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;New Dorp&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.12156593771896, 40.5584622432888], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.213&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Oakwood&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.12156593771896, 40.5584622432888, -74.12156593771896, 40.5584622432888], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Oakwood&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.14932381490992, 40.549480228713605], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.214&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Great&#39;, &#39;annoline2&#39;: &#39;Kills&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.14932381490992, 40.549480228713605, -74.14932381490992, 40.549480228713605], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Great Kills&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.1643308041936, 40.542230747450745], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.215&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Eltingville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.1643308041936, 40.542230747450745, -74.1643308041936, 40.542230747450745], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Eltingville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.17854866165878, 40.53811417474507], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.216&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Annadale&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.17854866165878, 40.53811417474507, -74.17854866165878, 40.53811417474507], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Annadale&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.20524582480326, 40.541967622888755], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.217&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Woodrow&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.20524582480326, 40.541967622888755, -74.20524582480326, 40.541967622888755], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Woodrow&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.24656934235283, 40.50533376115642], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.218&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Tottenville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.24656934235283, 40.50533376115642, -74.24656934235283, 40.50533376115642], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Tottenville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.08055351790115, 40.637316067110326], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.219&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Tompkinsville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.08055351790115, 40.637316067110326, -74.08055351790115, 40.637316067110326], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Tompkinsville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.09629029235458, 40.61919310792676], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.220&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Silver&#39;, &#39;annoline2&#39;: &#39;Lake&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.09629029235458, 40.61919310792676, -74.09629029235458, 40.61919310792676], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Silver Lake&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.0971255217853, 40.61276015756489], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.221&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Sunnyside&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.0971255217853, 40.61276015756489, -74.0971255217853, 40.61276015756489], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Sunnyside&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96101312466779, 40.643675183340974], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.222&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Ditmas&#39;, &#39;annoline2&#39;: &#39;Park&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96101312466779, 40.643675183340974, -73.96101312466779, 40.643675183340974], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Ditmas Park&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93718680559314, 40.66094656188111], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.223&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Wingate&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93718680559314, 40.66094656188111, -73.93718680559314, 40.66094656188111], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Wingate&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.92688212616955, 40.655572313280764], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.224&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Rugby&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.92688212616955, 40.655572313280764, -73.92688212616955, 40.655572313280764], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Rugby&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.08015734936296, 40.60919044434558], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.225&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Park&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.08015734936296, 40.60919044434558, -74.08015734936296, 40.60919044434558], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Park Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.13304143951704, 40.62109047275409], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.226&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Westerleigh&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.13304143951704, 40.62109047275409, -74.13304143951704, 40.62109047275409], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Westerleigh&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.15315246387762, 40.620171512231884], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.227&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Graniteville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.15315246387762, 40.620171512231884, -74.15315246387762, 40.620171512231884], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Graniteville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.16510420241124, 40.63532509911492], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.228&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Arlington&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.16510420241124, 40.63532509911492, -74.16510420241124, 40.63532509911492], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Arlington&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.06712363225574, 40.596312571276734], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.229&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Arrochar&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.06712363225574, 40.596312571276734, -74.06712363225574, 40.596312571276734], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Arrochar&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.0766743627905, 40.59826835959991], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.230&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Grasmere&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.0766743627905, 40.59826835959991, -74.0766743627905, 40.59826835959991], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Grasmere&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.08751118005578, 40.59632891379513], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.231&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Old&#39;, &#39;annoline2&#39;: &#39;Town&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.08751118005578, 40.59632891379513, -74.08751118005578, 40.59632891379513], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Old Town&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.09639905312521, 40.588672948199275], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.232&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Dongan&#39;, &#39;annoline2&#39;: &#39;Hills&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.09639905312521, 40.588672948199275, -74.09639905312521, 40.588672948199275], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Dongan Hills&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.09348266303591, 40.57352690574283], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.233&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Midland&#39;, &#39;annoline2&#39;: &#39;Beach&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.09348266303591, 40.57352690574283, -74.09348266303591, 40.57352690574283], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Midland Beach&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.10585598545434, 40.57621558711788], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.234&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Grant&#39;, &#39;annoline2&#39;: &#39;City&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.10585598545434, 40.57621558711788, -74.10585598545434, 40.57621558711788], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Grant City&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.10432707469124, 40.56425549307335], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.235&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;New&#39;, &#39;annoline2&#39;: &#39;Dorp&#39;, &#39;annoline3&#39;: &#39;Beach&#39;, &#39;bbox&#39;: [-74.10432707469124, 40.56425549307335, -74.10432707469124, 40.56425549307335], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;New Dorp Beach&#39;, &#39;stacked&#39;: 3}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.13916622175768, 40.55398800858462], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.236&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bay&#39;, &#39;annoline2&#39;: &#39;Terrace&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.13916622175768, 40.55398800858462, -74.13916622175768, 40.55398800858462], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Bay Terrace&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.19174105747814, 40.531911920489605], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.237&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Huguenot&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.19174105747814, 40.531911920489605, -74.19174105747814, 40.531911920489605], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Huguenot&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.21983106616777, 40.524699376118136], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.238&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Pleasant&#39;, &#39;annoline2&#39;: &#39;Plains&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.21983106616777, 40.524699376118136, -74.21983106616777, 40.524699376118136], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Pleasant Plains&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.22950350260027, 40.50608165346305], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.239&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Butler&#39;, &#39;annoline2&#39;: &#39;Manor&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.22950350260027, 40.50608165346305, -74.22950350260027, 40.50608165346305], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Butler Manor&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.23215775896526, 40.53053148283314], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.240&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Charleston&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.23215775896526, 40.53053148283314, -74.23215775896526, 40.53053148283314], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Charleston&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.21572851113952, 40.54940400650072], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.241&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Rossville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.21572851113952, 40.54940400650072, -74.21572851113952, 40.54940400650072], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Rossville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.18588674583893, 40.54928582278321], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.242&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Arden&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.18588674583893, 40.54928582278321, -74.18588674583893, 40.54928582278321], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Arden Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.17079414786092, 40.555295236173194], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.243&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Greenridge&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.17079414786092, 40.555295236173194, -74.17079414786092, 40.555295236173194], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Greenridge&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.15902208156601, 40.58913894875281], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.244&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Heartland&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.15902208156601, 40.58913894875281, -74.15902208156601, 40.58913894875281], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Heartland Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.1895604551969, 40.59472602746295], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.245&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Chelsea&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.1895604551969, 40.59472602746295, -74.1895604551969, 40.59472602746295], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Chelsea&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.18725638381567, 40.60577868452358], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.246&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bloomfield&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.18725638381567, 40.60577868452358, -74.18725638381567, 40.60577868452358], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Bloomfield&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.15940948657122, 40.6095918004203], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.247&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bulls&#39;, &#39;annoline2&#39;: &#39;Head&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.15940948657122, 40.6095918004203, -74.15940948657122, 40.6095918004203], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Bulls Head&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95325646837112, 40.7826825671257], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.248&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Carnegie&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95325646837112, 40.7826825671257, -73.95325646837112, 40.7826825671257], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Carnegie Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98843368023597, 40.72325901885768], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.249&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Noho&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98843368023597, 40.72325901885768, -73.98843368023597, 40.72325901885768], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Noho&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.00541529873355, 40.71522892046282], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.250&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Civic&#39;, &#39;annoline2&#39;: &#39;Center&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.00541529873355, 40.71522892046282, -74.00541529873355, 40.71522892046282], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Civic Center&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98871313285247, 40.7485096643122], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.251&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Midtown&#39;, &#39;annoline2&#39;: &#39;South&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98871313285247, 40.7485096643122, -73.98871313285247, 40.7485096643122], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Midtown South&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.1340572986257, 40.56960594275505], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.252&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Richmond&#39;, &#39;annoline2&#39;: &#39;Town&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.1340572986257, 40.56960594275505, -74.1340572986257, 40.56960594275505], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Richmond Town&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.06667766061771, 40.60971934079284], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.253&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Shore&#39;, &#39;annoline2&#39;: &#39;Acres&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.06667766061771, 40.60971934079284, -74.06667766061771, 40.60971934079284], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Shore Acres&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.072642445484, 40.61917845202843], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.254&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Clifton&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.072642445484, 40.61917845202843, -74.072642445484, 40.61917845202843], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Clifton&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.08402364740358, 40.6044731896879], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.255&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Concord&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.08402364740358, 40.6044731896879, -74.08402364740358, 40.6044731896879], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Concord&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.09776206972522, 40.606794394801], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.256&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Emerson&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.09776206972522, 40.606794394801, -74.09776206972522, 40.606794394801], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Emerson Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.09805062373887, 40.63563000681151], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.257&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Randall&#39;, &#39;annoline2&#39;: &#39;Manor&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.09805062373887, 40.63563000681151, -74.09805062373887, 40.63563000681151], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Randall Manor&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.18622331749823, 40.63843283794795], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.258&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Howland&#39;, &#39;annoline2&#39;: &#39;Hook&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.18622331749823, 40.63843283794795, -74.18622331749823, 40.63843283794795], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Howland Hook&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.1418167896889, 40.630146741193826], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.259&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Elm&#39;, &#39;annoline2&#39;: &#39;Park&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.1418167896889, 40.630146741193826, -74.1418167896889, 40.630146741193826], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Elm Park&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91665331978048, 40.652117451793494], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.260&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Remsen&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91665331978048, 40.652117451793494, -73.91665331978048, 40.652117451793494], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Remsen Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.88511776379292, 40.6627442796966], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.261&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;New&#39;, &#39;annoline2&#39;: &#39;Lots&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.88511776379292, 40.6627442796966, -73.88511776379292, 40.6627442796966], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;New Lots&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90233474295836, 40.63131755039667], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.262&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Paerdegat&#39;, &#39;annoline2&#39;: &#39;Basin&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90233474295836, 40.63131755039667, -73.90233474295836, 40.63131755039667], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Paerdegat Basin&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91515391550404, 40.61597423962336], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.263&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Mill&#39;, &#39;annoline2&#39;: &#39;Basin&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91515391550404, 40.61597423962336, -73.91515391550404, 40.61597423962336], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Mill Basin&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.79646462081593, 40.71145964370482], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.264&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Jamaica&#39;, &#39;annoline2&#39;: &#39;Hills&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.79646462081593, 40.71145964370482, -73.79646462081593, 40.71145964370482], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Jamaica Hills&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.79671678028349, 40.73350025429757], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.265&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Utopia&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.79671678028349, 40.73350025429757, -73.79671678028349, 40.73350025429757], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Utopia&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.80486120040537, 40.73493618075478], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.266&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Pomonok&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.80486120040537, 40.73493618075478, -73.80486120040537, 40.73493618075478], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Pomonok&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.89467996270574, 40.7703173929982], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.267&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Astoria&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.89467996270574, 40.7703173929982, -73.89467996270574, 40.7703173929982], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Astoria Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90119903387667, 40.83142834161548], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.268&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Claremont&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90119903387667, 40.83142834161548, -73.90119903387667, 40.83142834161548], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Claremont Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91584652759009, 40.824780490842905], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.269&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Concourse&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91584652759009, 40.824780490842905, -73.91584652759009, 40.824780490842905], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Concourse Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91655551964419, 40.84382617671654], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.270&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Mount&#39;, &#39;annoline2&#39;: &#39;Eden&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91655551964419, 40.84382617671654, -73.91655551964419, 40.84382617671654], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Mount Eden&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90829930881988, 40.84884160724665], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.271&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Mount&#39;, &#39;annoline2&#39;: &#39;Hope&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90829930881988, 40.84884160724665, -73.90829930881988, 40.84884160724665], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Mount Hope&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96355614094303, 40.76028033131374], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.272&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Sutton&#39;, &#39;annoline2&#39;: &#39;Place&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96355614094303, 40.76028033131374, -73.96355614094303, 40.76028033131374], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Sutton Place&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95386782130745, 40.743414090073536], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.273&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Hunters&#39;, &#39;annoline2&#39;: &#39;Point&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95386782130745, 40.743414090073536, -73.95386782130745, 40.743414090073536], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Hunters Point&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.96770824581834, 40.75204236950722], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.274&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Turtle&#39;, &#39;annoline2&#39;: &#39;Bay&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.96770824581834, 40.75204236950722, -73.96770824581834, 40.75204236950722], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Turtle Bay&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.97121928722265, 40.746917410740195], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.275&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Tudor&#39;, &#39;annoline2&#39;: &#39;City&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.97121928722265, 40.746917410740195, -73.97121928722265, 40.746917410740195], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Tudor City&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.97405170469203, 40.73099955477061], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.276&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Stuyvesant&#39;, &#39;annoline2&#39;: &#39;Town&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.97405170469203, 40.73099955477061, -73.97405170469203, 40.73099955477061], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Stuyvesant Town&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.9909471052826, 40.739673047638426], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.277&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Flatiron&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.9909471052826, 40.739673047638426, -73.9909471052826, 40.739673047638426], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Flatiron&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.91819286431682, 40.74565180608076], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.278&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Sunnyside&#39;, &#39;annoline2&#39;: &#39;Gardens&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.91819286431682, 40.74565180608076, -73.91819286431682, 40.74565180608076], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Sunnyside Gardens&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93244235260178, 40.73725071694497], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.279&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Blissville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93244235260178, 40.73725071694497, -73.93244235260178, 40.73725071694497], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Blissville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.99550751888415, 40.70328109093014], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.280&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Fulton&#39;, &#39;annoline2&#39;: &#39;Ferry&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.99550751888415, 40.70328109093014, -73.99550751888415, 40.70328109093014], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Fulton Ferry&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.98111603592393, 40.70332149882874], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.281&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Vinegar&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.98111603592393, 40.70332149882874, -73.98111603592393, 40.70332149882874], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Vinegar Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.93053108817338, 40.67503986503237], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.282&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Weeksville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.93053108817338, 40.67503986503237, -73.93053108817338, 40.67503986503237], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Weeksville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90331684852599, 40.67786104769531], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.283&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Broadway&#39;, &#39;annoline2&#39;: &#39;Junction&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90331684852599, 40.67786104769531, -73.90331684852599, 40.67786104769531], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Broadway Junction&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.9887528074504, 40.70317632822692], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.284&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Dumbo&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.9887528074504, 40.70317632822692, -73.9887528074504, 40.70317632822692], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Dumbo&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.12059399718001, 40.60180957631444], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.285&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Manor&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.12059399718001, 40.60180957631444, -74.12059399718001, 40.60180957631444], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Manor Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.13208447484298, 40.60370692627371], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.286&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Willowbrook&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.13208447484298, 40.60370692627371, -74.13208447484298, 40.60370692627371], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Willowbrook&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.21776636068567, 40.541139922091766], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.287&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Sandy&#39;, &#39;annoline2&#39;: &#39;Ground&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.21776636068567, 40.541139922091766, -74.21776636068567, 40.541139922091766], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Sandy Ground&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.12727240604946, 40.579118742961214], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.288&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Egbertville&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.12727240604946, 40.579118742961214, -74.12727240604946, 40.579118742961214], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Egbertville&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.89213760232822, 40.56737588957032], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.289&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Roxbury&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.89213760232822, 40.56737588957032, -73.89213760232822, 40.56737588957032], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Roxbury&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.95918459428702, 40.598525095137255], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.290&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Homecrest&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.95918459428702, 40.598525095137255, -73.95918459428702, 40.598525095137255], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Homecrest&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.88114319200604, 40.716414511158185], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.291&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Middle&#39;, &#39;annoline2&#39;: &#39;Village&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.88114319200604, 40.716414511158185, -73.88114319200604, 40.716414511158185], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Middle Village&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.20152556457658, 40.52626406734812], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.292&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#34;Prince&#39;s&#34;, &#39;annoline2&#39;: &#39;Bay&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.20152556457658, 40.52626406734812, -74.20152556457658, 40.52626406734812], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#34;Prince&#39;s Bay&#34;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.13792663771568, 40.57650629379489], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.293&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Lighthouse&#39;, &#39;annoline2&#39;: &#39;Hill&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.13792663771568, 40.57650629379489, -74.13792663771568, 40.57650629379489], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Lighthouse Hill&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.22957080626941, 40.51954145748909], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.294&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Richmond&#39;, &#39;annoline2&#39;: &#39;Valley&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.22957080626941, 40.51954145748909, -74.22957080626941, 40.51954145748909], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Richmond Valley&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.82667757138641, 40.79060155670148], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.295&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Malba&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.82667757138641, 40.79060155670148, -73.82667757138641, 40.79060155670148], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Malba&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.890345709872, 40.6819989345173], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.296&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Highland&#39;, &#39;annoline2&#39;: &#39;Park&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.890345709872, 40.6819989345173, -73.890345709872, 40.6819989345173], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Highland Park&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94841515328893, 40.60937770113766], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.297&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Madison&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94841515328893, 40.60937770113766, -73.94841515328893, 40.60937770113766], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Madison&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.86172577555115, 40.85272297633017], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.298&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bronxdale&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.86172577555115, 40.85272297633017, -73.86172577555115, 40.85272297633017], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Bronxdale&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.85931863221647, 40.86578787802982], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.299&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Allerton&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.85931863221647, 40.86578787802982, -73.85931863221647, 40.86578787802982], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Allerton&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.90152264513144, 40.8703923914147], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.300&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Kingsbridge&#39;, &#39;annoline2&#39;: &#39;Heights&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.90152264513144, 40.8703923914147, -73.90152264513144, 40.8703923914147], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Kingsbridge Heights&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94817709920184, 40.64692606658579], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.301&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Erasmus&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94817709920184, 40.64692606658579, -73.94817709920184, 40.64692606658579], &#39;borough&#39;: &#39;Brooklyn&#39;, &#39;name&#39;: &#39;Erasmus&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.00011136202637, 40.75665808227519], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.302&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Hudson&#39;, &#39;annoline2&#39;: &#39;Yards&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.00011136202637, 40.75665808227519, -74.00011136202637, 40.75665808227519], &#39;borough&#39;: &#39;Manhattan&#39;, &#39;name&#39;: &#39;Hudson Yards&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.80553002968718, 40.58733774018741], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.303&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Hammels&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.80553002968718, 40.58733774018741, -73.80553002968718, 40.58733774018741], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Hammels&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.76596781445627, 40.611321691283834], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.304&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Bayswater&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.76596781445627, 40.611321691283834, -73.76596781445627, 40.611321691283834], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Bayswater&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.94563070334091, 40.756091297094706], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.305&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Queensbridge&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.94563070334091, 40.756091297094706, -73.94563070334091, 40.756091297094706], &#39;borough&#39;: &#39;Queens&#39;, &#39;name&#39;: &#39;Queensbridge&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;}, {&#39;geometry&#39;: {&#39;coordinates&#39;: [-74.08173992211962, 40.61731079252983], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.306&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Fox&#39;, &#39;annoline2&#39;: &#39;Hills&#39;, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-74.08173992211962, 40.61731079252983, -74.08173992211962, 40.61731079252983], &#39;borough&#39;: &#39;Staten Island&#39;, &#39;name&#39;: &#39;Fox Hills&#39;, &#39;stacked&#39;: 2}, &#39;type&#39;: &#39;Feature&#39;}], &#39;totalFeatures&#39;: 306, &#39;type&#39;: &#39;FeatureCollection&#39;} . . All the relevant data is in the features key, which is basically a list of the neighborhoods. Let&#39;s define a new variable that includes this data. . neighborhoods_data = newyork_data[&#39;features&#39;] . Let&#39;s check the first item in the list. . neighborhoods_data[0] . {&#39;geometry&#39;: {&#39;coordinates&#39;: [-73.84720052054902, 40.89470517661], &#39;type&#39;: &#39;Point&#39;}, &#39;geometry_name&#39;: &#39;geom&#39;, &#39;id&#39;: &#39;nyu_2451_34572.1&#39;, &#39;properties&#39;: {&#39;annoangle&#39;: 0.0, &#39;annoline1&#39;: &#39;Wakefield&#39;, &#39;annoline2&#39;: None, &#39;annoline3&#39;: None, &#39;bbox&#39;: [-73.84720052054902, 40.89470517661, -73.84720052054902, 40.89470517661], &#39;borough&#39;: &#39;Bronx&#39;, &#39;name&#39;: &#39;Wakefield&#39;, &#39;stacked&#39;: 1}, &#39;type&#39;: &#39;Feature&#39;} . . Transform the data into a pandas dataframe . We will essentially be transforming this data of nested Python dictionaries into a pandas dataframe. Let&#39;s start by creating an empty dataframe. . column_names = [&#39;Borough&#39;, &#39;Neighborhood&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;] # instantiate the dataframe neighborhoods = pd.DataFrame(columns=column_names) . neighborhoods . Borough Neighborhood Latitude Longitude . Let&#39;s loop through the data and fill the dataframe one row at a time. . for data in neighborhoods_data: borough = neighborhood_name = data[&#39;properties&#39;][&#39;borough&#39;] neighborhood_name = data[&#39;properties&#39;][&#39;name&#39;] neighborhood_latlon = data[&#39;geometry&#39;][&#39;coordinates&#39;] neighborhood_lat = neighborhood_latlon[1] neighborhood_lon = neighborhood_latlon[0] neighborhoods = neighborhoods.append({&#39;Borough&#39;: borough, &#39;Neighborhood&#39;: neighborhood_name, &#39;Latitude&#39;: neighborhood_lat, &#39;Longitude&#39;: neighborhood_lon}, ignore_index=True) . neighborhoods.head() . Borough Neighborhood Latitude Longitude . 0 Bronx | Wakefield | 40.894705 | -73.847201 | . 1 Bronx | Co-op City | 40.874294 | -73.829939 | . 2 Bronx | Eastchester | 40.887556 | -73.827806 | . 3 Bronx | Fieldston | 40.895437 | -73.905643 | . 4 Bronx | Riverdale | 40.890834 | -73.912585 | . print(&#39;The dataframe has {} boroughs and {} neighborhoods.&#39;.format( len(neighborhoods[&#39;Borough&#39;].unique()), neighborhoods.shape[0])) . The dataframe has 5 boroughs and 306 neighborhoods. . . Visualize the data . We will use the geopy library to get the latitude and longitude values of New York City. In order to define an instance of the geocoder, we need to define a user_agent. . address = &#39;New York City, NY&#39; geolocator = Nominatim(user_agent=&#39;ny_explorer&#39;) location = geolocator.geocode(address) latitude = location.latitude longitude = location.longitude print(&#39;The geographical coordinates of New York City are {}, {}.&#39;.format(latitude, longitude)) . The geographical coordinates of New York City are 40.7127281, -74.0060152. . Let&#39;s create a map of New York with the neighborhoods superimposed on top. . map_newyork = folium.Map(location=[latitude, longitude], zoom_start=11) # add markers to map for lat, lng, borough, neighborhood in zip(neighborhoods[&#39;Latitude&#39;], neighborhoods[&#39;Longitude&#39;], neighborhoods[&#39;Borough&#39;], neighborhoods[&#39;Neighborhood&#39;]): label = &#39;{}, {}&#39;.format(neighborhood, borough) label = folium.Popup(label, parse_html=True) folium.CircleMarker( [lat, lng], radius=5, popup=label, color=&#39;blue&#39;, fill=True, fill_color=&#39;#3186cc&#39;, fill_opacity=0.7, parse_html=False).add_to(map_newyork) map_newyork . You can zoom into the above map, and click on each circle mark to reveal the name of the neighborhood and its respective borough. . Let&#39;s simplify the above map, and segment and cluster only the neighborhoods in Manhattan. We will slice the original dataframe and create a new dataframe of the Manhattan data. . manhattan_data = neighborhoods[neighborhoods[&#39;Borough&#39;] == &#39;Manhattan&#39;].reset_index(drop=True) manhattan_data.head() . Borough Neighborhood Latitude Longitude . 0 Manhattan | Marble Hill | 40.876551 | -73.910660 | . 1 Manhattan | Chinatown | 40.715618 | -73.994279 | . 2 Manhattan | Washington Heights | 40.851903 | -73.936900 | . 3 Manhattan | Inwood | 40.867684 | -73.921210 | . 4 Manhattan | Hamilton Heights | 40.823604 | -73.949688 | . Let&#39;s get the geographiical coordinates of Manhattan. . address = &#39;Manhattan, NY&#39; geolocator = Nominatim(user_agent=&#39;ny_explorer&#39;) location = geolocator.geocode(address) latitude = location.latitude longitude = location.longitude print(&#39;The geographical coordinates of Manhattan are {}, {}.&#39;.format(latitude, longitude)) . The geographical coordinates of Manhattan are 40.7896239, -73.9598939. . Let&#39;s visualize the neighborhoods in Manhattan. . map_manhattan = folium.Map(location=[latitude, longitude], zoom_start=12) # add markers to map for lat, lng, label in zip(manhattan_data[&#39;Latitude&#39;], manhattan_data[&#39;Longitude&#39;], manhattan_data[&#39;Neighborhood&#39;]): label = folium.Popup(label, parse_html=True) folium.CircleMarker( [lat, lng], radius=5, popup=label, color=&#39;blue&#39;, fill=True, fill_color=&#39;#3186cc&#39;, fill_opacity=0.7, parse_html=False).add_to(map_manhattan) map_manhattan . . Explore the neighborhoods in Manhattan . We will utilize the Foursquare API to explore the neighborhoods and segment them. . CLIENT_ID = &#39;B50RYBOWHJ3ZMRVEFTLHJCXGOYNCXGI13VDT5FMYTUQSUTQC&#39; CLIENT_SECRET = &#39;ST2IN4ZGOQ3BXEWJ2HW1LKUML2BBGK1JX1QD2WKEPET31W4W&#39; VERSION = &#39;20191219&#39; . Explore the first neighborhood in our dataframe. . manhattan_data.loc[0, &#39;Neighborhood&#39;] . &#39;Marble Hill&#39; . neighborhood_latitude = manhattan_data.loc[0, &#39;Latitude&#39;] # neighborhood latitude value neighborhood_longitude = manhattan_data.loc[0,&#39;Longitude&#39;] #neighborhood longitude value neighborhood_name = manhattan_data.loc[0, &#39;Neighborhood&#39;] # neighborhood name print(&#39;The geographical coordinates of {} are {}, {}.&#39;.format(neighborhood_name, neighborhood_latitude, neighborhood_longitude)) . The geographical coordinates of Marble Hill are 40.87655077879964, -73.91065965862981. . Let&#39;s get the top 100 venues that are in Marble Hill within a radius of 500 meters. First, create the GET request URL. . LIMIT = 100 # define radius radius = 500 # Create URL url = &#39;https://api.foursquare.com/v2/venues/explore?&amp;client_id={}&amp;client_secret={}&amp;v={}&amp;ll={},{}&amp;radius={}&amp;limit={}&#39;.format( CLIENT_ID, CLIENT_SECRET, VERSION, neighborhood_latitude, neighborhood_longitude, radius, LIMIT) # display URL url . &#39;https://api.foursquare.com/v2/venues/explore?&amp;client_id=B50RYBOWHJ3ZMRVEFTLHJCXGOYNCXGI13VDT5FMYTUQSUTQC&amp;client_secret=ST2IN4ZGOQ3BXEWJ2HW1LKUML2BBGK1JX1QD2WKEPET31W4W&amp;v=20191219&amp;ll=40.87655077879964,-73.91065965862981&amp;radius=500&amp;limit=100&#39; . Send the GET request and examine the results. . results = requests.get(url).json() results . {&#39;meta&#39;: {&#39;code&#39;: 200, &#39;requestId&#39;: &#39;5e68ce37618f43001c2e7a8e&#39;}, &#39;response&#39;: {&#39;groups&#39;: [{&#39;items&#39;: [{&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4b4429abf964a52037f225e3-0&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/pizza_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1ca941735&#39;, &#39;name&#39;: &#39;Pizza Place&#39;, &#39;pluralName&#39;: &#39;Pizza Places&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Pizza&#39;}], &#39;delivery&#39;: {&#39;id&#39;: &#39;72548&#39;, &#39;provider&#39;: {&#39;icon&#39;: {&#39;name&#39;: &#39;/delivery_provider_seamless_20180129.png&#39;, &#39;prefix&#39;: &#39;https://fastly.4sqi.net/img/general/cap/&#39;, &#39;sizes&#39;: [40, 50]}, &#39;name&#39;: &#39;seamless&#39;}, &#39;url&#39;: &#39;https://www.seamless.com/menu/arturos-pizza-5189-broadway-ave-new-york/72548?affiliate=1131&amp;utm_source=foursquare-affiliate-network&amp;utm_medium=affiliate&amp;utm_campaign=1131&amp;utm_content=72548&#39;}, &#39;id&#39;: &#39;4b4429abf964a52037f225e3&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5198 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;New York&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;at 225th St.&#39;, &#39;distance&#39;: 240, &#39;formattedAddress&#39;: [&#39;5198 Broadway (at 225th St.)&#39;, &#39;New York, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87441177110231, &#39;lng&#39;: -73.91027100981574}], &#39;lat&#39;: 40.87441177110231, &#39;lng&#39;: -73.91027100981574, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#34;Arturo&#39;s&#34;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4baf59e8f964a520a6f93be3-1&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/shops/gym_yogastudio_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d102941735&#39;, &#39;name&#39;: &#39;Yoga Studio&#39;, &#39;pluralName&#39;: &#39;Yoga Studios&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Yoga Studio&#39;}], &#39;id&#39;: &#39;4baf59e8f964a520a6f93be3&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5500 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;230th Street&#39;, &#39;distance&#39;: 376, &#39;formattedAddress&#39;: [&#39;5500 Broadway (230th Street)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.876843690797934, &#39;lng&#39;: -73.90620384419528}], &#39;lat&#39;: 40.876843690797934, &#39;lng&#39;: -73.90620384419528, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Bikram Yoga&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4b79cc46f964a520c5122fe3-2&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/diner_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d147941735&#39;, &#39;name&#39;: &#39;Diner&#39;, &#39;pluralName&#39;: &#39;Diners&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Diner&#39;}], &#39;id&#39;: &#39;4b79cc46f964a520c5122fe3&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;3033 Tibbett Ave&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;btwn 230th &amp; 231st&#39;, &#39;distance&#39;: 452, &#39;formattedAddress&#39;: [&#39;3033 Tibbett Ave (btwn 230th &amp; 231st)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.8804044222466, &#39;lng&#39;: -73.90893738006402}], &#39;lat&#39;: 40.8804044222466, &#39;lng&#39;: -73.90893738006402, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Tibbett Diner&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4b5357adf964a520319827e3-3&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/donuts_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d148941735&#39;, &#39;name&#39;: &#39;Donut Shop&#39;, &#39;pluralName&#39;: &#39;Donut Shops&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Donuts&#39;}], &#39;id&#39;: &#39;4b5357adf964a520319827e3&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5501 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;W 230th St&#39;, &#39;distance&#39;: 342, &#39;formattedAddress&#39;: [&#39;5501 Broadway (W 230th St)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87713584201589, &#39;lng&#39;: -73.90666550701411}], &#39;lat&#39;: 40.87713584201589, &#39;lng&#39;: -73.90666550701411, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#34;Dunkin&#39;&#34;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-55f81cd2498ee903149fcc64-4&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/coffeeshop_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1e0931735&#39;, &#39;name&#39;: &#39;Coffee Shop&#39;, &#39;pluralName&#39;: &#39;Coffee Shops&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Coffee Shop&#39;}], &#39;id&#39;: &#39;55f81cd2498ee903149fcc64&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;171 W 230th St&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;Kimberly Pl&#39;, &#39;distance&#39;: 441, &#39;formattedAddress&#39;: [&#39;171 W 230th St (Kimberly Pl)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87753134921497, &#39;lng&#39;: -73.90558216359267}], &#39;lat&#39;: 40.87753134921497, &#39;lng&#39;: -73.90558216359267, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Starbucks&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4cf6ae55d3a8a1cd71a9d243-5&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/building/gym_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d176941735&#39;, &#39;name&#39;: &#39;Gym&#39;, &#39;pluralName&#39;: &#39;Gyms&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Gym&#39;}], &#39;id&#39;: &#39;4cf6ae55d3a8a1cd71a9d243&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5500 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;230th St&#39;, &#39;distance&#39;: 361, &#39;formattedAddress&#39;: [&#39;5500 Broadway (230th St)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87670526507199, &#39;lng&#39;: -73.90637207670373}], &#39;lat&#39;: 40.87670526507199, &#39;lng&#39;: -73.90637207670373, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Astral Fitness &amp; Wellness Center&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}, &#39;venuePage&#39;: {&#39;id&#39;: &#39;75803748&#39;}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-55f751ca498eacc0307d1cfe-6&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/building/gym_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d176941735&#39;, &#39;name&#39;: &#39;Gym&#39;, &#39;pluralName&#39;: &#39;Gyms&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Gym&#39;}], &#39;id&#39;: &#39;55f751ca498eacc0307d1cfe&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5520 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;at W 230th St&#39;, &#39;distance&#39;: 433, &#39;formattedAddress&#39;: [&#39;5520 Broadway (at W 230th St)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.877271495944626, &#39;lng&#39;: -73.90559491338075}], &#39;lat&#39;: 40.877271495944626, &#39;lng&#39;: -73.90559491338075, &#39;neighborhood&#39;: &#39;Kingsbridge&#39;, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Blink Fitness&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-546d31ca498e561c698a0320-7&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/shops/departmentstore_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1f6941735&#39;, &#39;name&#39;: &#39;Department Store&#39;, &#39;pluralName&#39;: &#39;Department Stores&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Department Store&#39;}], &#39;id&#39;: &#39;546d31ca498e561c698a0320&#39;, &#39;location&#39;: {&#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 478, &#39;formattedAddress&#39;: [&#39;Bronx, NY&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87723198343352, &#39;lng&#39;: -73.90504239962168}], &#39;lat&#39;: 40.87723198343352, &#39;lng&#39;: -73.90504239962168, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;T.J. Maxx&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4b9c9c6af964a520b27236e3-8&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/seafood_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1ce941735&#39;, &#39;name&#39;: &#39;Seafood Restaurant&#39;, &#39;pluralName&#39;: &#39;Seafood Restaurants&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Seafood&#39;}], &#39;delivery&#39;: {&#39;id&#39;: &#39;277380&#39;, &#39;provider&#39;: {&#39;icon&#39;: {&#39;name&#39;: &#39;/delivery_provider_seamless_20180129.png&#39;, &#39;prefix&#39;: &#39;https://fastly.4sqi.net/img/general/cap/&#39;, &#39;sizes&#39;: [40, 50]}, &#39;name&#39;: &#39;seamless&#39;}, &#39;url&#39;: &#39;https://www.seamless.com/menu/land--sea-restaurant-5535-broadway-ave-bronx/277380?affiliate=1131&amp;utm_source=foursquare-affiliate-network&amp;utm_medium=affiliate&amp;utm_campaign=1131&amp;utm_content=277380&#39;}, &#39;id&#39;: &#39;4b9c9c6af964a520b27236e3&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5535 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;231st St&#39;, &#39;distance&#39;: 429, &#39;formattedAddress&#39;: [&#39;5535 Broadway (231st St)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87788463309788, &#39;lng&#39;: -73.90587282193539}], &#39;lat&#39;: 40.87788463309788, &#39;lng&#39;: -73.90587282193539, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Land &amp; Sea Restaurant&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4a725fa1f964a520f6da1fe3-9&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/arts_entertainment/stadium_tennis_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4e39a891bd410d7aed40cbc2&#39;, &#39;name&#39;: &#39;Tennis Stadium&#39;, &#39;pluralName&#39;: &#39;Tennis Stadiums&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Tennis&#39;}], &#39;id&#39;: &#39;4a725fa1f964a520f6da1fe3&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;2600 Netherland Ave&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 402, &#39;formattedAddress&#39;: [&#39;2600 Netherland Ave&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.8786283, &#39;lng&#39;: -73.9145678}], &#39;lat&#39;: 40.8786283, &#39;lng&#39;: -73.9145678, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;TCR The Club of Riverdale&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}, &#39;venuePage&#39;: {&#39;id&#39;: &#39;40358759&#39;}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4b88e053f964a5208a1132e3-10&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/shops/pharmacy_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d10f951735&#39;, &#39;name&#39;: &#39;Pharmacy&#39;, &#39;pluralName&#39;: &#39;Pharmacies&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Pharmacy&#39;}], &#39;id&#39;: &#39;4b88e053f964a5208a1132e3&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5237 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;228th Street&#39;, &#39;distance&#39;: 190, &#39;formattedAddress&#39;: [&#39;5237 Broadway (228th Street)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.875466574434704, &#39;lng&#39;: -73.90890629016033}], &#39;lat&#39;: 40.875466574434704, &#39;lng&#39;: -73.90890629016033, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Rite Aid&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-57655be738faa66160da7527-11&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/coffeeshop_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1e0931735&#39;, &#39;name&#39;: &#39;Coffee Shop&#39;, &#39;pluralName&#39;: &#39;Coffee Shops&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Coffee Shop&#39;}], &#39;id&#39;: &#39;57655be738faa66160da7527&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;50 W 225th St&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;New York&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 355, &#39;formattedAddress&#39;: [&#39;50 W 225th St&#39;, &#39;New York, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.873754554218515, &#39;lng&#39;: -73.90861305343668}], &#39;lat&#39;: 40.873754554218515, &#39;lng&#39;: -73.90861305343668, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Starbucks&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4b9c9c43f964a520ac7236e3-12&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/shops/discountstore_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;52dea92d3cf9994f4e043dbb&#39;, &#39;name&#39;: &#39;Discount Store&#39;, &#39;pluralName&#39;: &#39;Discount Stores&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Discount Store&#39;}], &#39;id&#39;: &#39;4b9c9c43f964a520ac7236e3&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5545 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;crossStreet&#39;: &#39;231st St&#39;, &#39;distance&#39;: 492, &#39;formattedAddress&#39;: [&#39;5545 Broadway (231st St)&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.878270422202085, &#39;lng&#39;: -73.9052646742604}], &#39;lat&#39;: 40.878270422202085, &#39;lng&#39;: -73.9052646742604, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Lot Less Closeouts&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-5631194e498e2de074de661c-13&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/education/lab_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;5744ccdfe4b0c0459246b4cd&#39;, &#39;name&#39;: &#39;Supplement Shop&#39;, &#39;pluralName&#39;: &#39;Supplement Shops&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Supplement Shop&#39;}], &#39;id&#39;: &#39;5631194e498e2de074de661c&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5510 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 428, &#39;formattedAddress&#39;: [&#39;5510 Broadway&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87716, &#39;lng&#39;: -73.905632}], &#39;lat&#39;: 40.87716, &#39;lng&#39;: -73.905632, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Vitamin Shoppe&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4e4e4517bd4101d0d7a67568-14&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/icecream_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1c9941735&#39;, &#39;name&#39;: &#39;Ice Cream Shop&#39;, &#39;pluralName&#39;: &#39;Ice Cream Shops&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Ice Cream&#39;}], &#39;id&#39;: &#39;4e4e4517bd4101d0d7a67568&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5501 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 343, &#39;formattedAddress&#39;: [&#39;5501 Broadway&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87714929478882, &#39;lng&#39;: -73.90665810372622}], &#39;lat&#39;: 40.87714929478882, &#39;lng&#39;: -73.90665810372622, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Baskin-Robbins&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-56229ff8498e2abb44b6f12b-15&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/shops/default_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1ff941735&#39;, &#39;name&#39;: &#39;Miscellaneous Shop&#39;, &#39;pluralName&#39;: &#39;Miscellaneous Shops&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Shop&#39;}], &#39;id&#39;: &#39;56229ff8498e2abb44b6f12b&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;171 W 230th St&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 487, &#39;formattedAddress&#39;: [&#39;171 W 230th St&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.8772564, &#39;lng&#39;: -73.9049384}], &#39;lat&#39;: 40.8772564, &#39;lng&#39;: -73.9049384, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Five Below&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-585c205665e7c70a2f1055ea-16&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/default_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d14e941735&#39;, &#39;name&#39;: &#39;American Restaurant&#39;, &#39;pluralName&#39;: &#39;American Restaurants&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;American&#39;}], &#39;delivery&#39;: {&#39;id&#39;: &#39;1436334&#39;, &#39;provider&#39;: {&#39;icon&#39;: {&#39;name&#39;: &#39;/delivery_provider_seamless_20180129.png&#39;, &#39;prefix&#39;: &#39;https://fastly.4sqi.net/img/general/cap/&#39;, &#39;sizes&#39;: [40, 50]}, &#39;name&#39;: &#39;seamless&#39;}, &#39;url&#39;: &#39;https://www.seamless.com/menu/boston-market-5520-broadway-bronx/1436334?affiliate=1131&amp;utm_source=foursquare-affiliate-network&amp;utm_medium=affiliate&amp;utm_campaign=1131&amp;utm_content=1436334&#39;}, &#39;id&#39;: &#39;585c205665e7c70a2f1055ea&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5520 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 452, &#39;formattedAddress&#39;: [&#39;5520 Broadway&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87743, &#39;lng&#39;: -73.9054121}], &#39;lat&#39;: 40.87743, &#39;lng&#39;: -73.9054121, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Boston Market&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4e4ce4debd413c4cc66d05d0-17&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/deli_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1c5941735&#39;, &#39;name&#39;: &#39;Sandwich Place&#39;, &#39;pluralName&#39;: &#39;Sandwich Places&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Sandwiches&#39;}], &#39;delivery&#39;: {&#39;id&#39;: &#39;774886&#39;, &#39;provider&#39;: {&#39;icon&#39;: {&#39;name&#39;: &#39;/delivery_provider_seamless_20180129.png&#39;, &#39;prefix&#39;: &#39;https://fastly.4sqi.net/img/general/cap/&#39;, &#39;sizes&#39;: [40, 50]}, &#39;name&#39;: &#39;seamless&#39;}, &#39;url&#39;: &#39;https://www.seamless.com/menu/subway-5549-broadway-bronx/774886?affiliate=1131&amp;utm_source=foursquare-affiliate-network&amp;utm_medium=affiliate&amp;utm_campaign=1131&amp;utm_content=774886&#39;}, &#39;id&#39;: &#39;4e4ce4debd413c4cc66d05d0&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5549 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 482, &#39;formattedAddress&#39;: [&#39;5549 Broadway&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.878464979323944, &#39;lng&#39;: -73.9055176422437}], &#39;lat&#39;: 40.878464979323944, &#39;lng&#39;: -73.9055176422437, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;SUBWAY&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4ec68016cc21b428e1d2060a-18&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/shops/financial_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d10a951735&#39;, &#39;name&#39;: &#39;Bank&#39;, &#39;pluralName&#39;: &#39;Banks&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Bank&#39;}], &#39;id&#39;: &#39;4ec68016cc21b428e1d2060a&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;281 W 230th St&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 347, &#39;formattedAddress&#39;: [&#39;281 W 230th St&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.8794958, &#39;lng&#39;: -73.9092856}], &#39;lat&#39;: 40.8794958, &#39;lng&#39;: -73.9092856, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;TD Bank&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4dfe40df8877333e195b68fc-19&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/steakhouse_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1cc941735&#39;, &#39;name&#39;: &#39;Steakhouse&#39;, &#39;pluralName&#39;: &#39;Steakhouses&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Steakhouse&#39;}], &#39;delivery&#39;: {&#39;id&#39;: &#39;330981&#39;, &#39;provider&#39;: {&#39;icon&#39;: {&#39;name&#39;: &#39;/delivery_provider_seamless_20180129.png&#39;, &#39;prefix&#39;: &#39;https://fastly.4sqi.net/img/general/cap/&#39;, &#39;sizes&#39;: [40, 50]}, &#39;name&#39;: &#39;seamless&#39;}, &#39;url&#39;: &#39;https://www.seamless.com/menu/parrilla-latina-5523-broadway-bronx/330981?affiliate=1131&amp;utm_source=foursquare-affiliate-network&amp;utm_medium=affiliate&amp;utm_campaign=1131&amp;utm_content=330981&#39;}, &#39;id&#39;: &#39;4dfe40df8877333e195b68fc&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;230th St &amp; Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 399, &#39;formattedAddress&#39;: [&#39;230th St &amp; Broadway&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87747294351472, &#39;lng&#39;: -73.90607346968568}], &#39;lat&#39;: 40.87747294351472, &#39;lng&#39;: -73.90607346968568, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Parrilla Latina&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4c852173dc018cfa2bc3e56c-20&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/shops/apparel_kids_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d105951735&#39;, &#39;name&#39;: &#39;Kids Store&#39;, &#39;pluralName&#39;: &#39;Kids Stores&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Kids Store&#39;}], &#39;id&#39;: &#39;4c852173dc018cfa2bc3e56c&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;44 W 225th St&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 383, &#39;formattedAddress&#39;: [&#39;44 W 225th St&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.873671591133125, &#39;lng&#39;: -73.90815619608166}], &#39;lat&#39;: 40.873671591133125, &#39;lng&#39;: -73.90815619608166, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#34;The Children&#39;s Place&#34;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-53319bb511d2ef06787f02b4-21&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/shops/mall_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1fd941735&#39;, &#39;name&#39;: &#39;Shopping Mall&#39;, &#39;pluralName&#39;: &#39;Shopping Malls&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Mall&#39;}], &#39;id&#39;: &#39;53319bb511d2ef06787f02b4&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;171 W 231st St&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 456, &#39;formattedAddress&#39;: [&#39;171 W 231st St&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.87753906779665, &#39;lng&#39;: -73.90539578168178}], &#39;lat&#39;: 40.87753906779665, &#39;lng&#39;: -73.90539578168178, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Broadway Plaza&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4d0a529133d6b60cf4cf9985-22&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/deli_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d1c5941735&#39;, &#39;name&#39;: &#39;Sandwich Place&#39;, &#39;pluralName&#39;: &#39;Sandwich Places&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Sandwiches&#39;}], &#39;id&#39;: &#39;4d0a529133d6b60cf4cf9985&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;5209 Broadway&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;Bronx&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 463, &#39;formattedAddress&#39;: [&#39;5209 Broadway&#39;, &#39;Bronx, NY 10463&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.877720351115315, &#39;lng&#39;: -73.90537973066263}], &#39;lat&#39;: 40.877720351115315, &#39;lng&#39;: -73.90537973066263, &#39;postalCode&#39;: &#39;10463&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Subway&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}, {&#39;reasons&#39;: {&#39;count&#39;: 0, &#39;items&#39;: [{&#39;reasonName&#39;: &#39;globalInteractionReason&#39;, &#39;summary&#39;: &#39;This spot is popular&#39;, &#39;type&#39;: &#39;general&#39;}]}, &#39;referralId&#39;: &#39;e-0-4ed7956b8b81b2bf28adc714-23&#39;, &#39;venue&#39;: {&#39;categories&#39;: [{&#39;icon&#39;: {&#39;prefix&#39;: &#39;https://ss3.4sqi.net/img/categories_v2/food/deli_&#39;, &#39;suffix&#39;: &#39;.png&#39;}, &#39;id&#39;: &#39;4bf58dd8d48988d146941735&#39;, &#39;name&#39;: &#39;Deli / Bodega&#39;, &#39;pluralName&#39;: &#39;Delis / Bodegas&#39;, &#39;primary&#39;: True, &#39;shortName&#39;: &#39;Deli / Bodega&#39;}], &#39;id&#39;: &#39;4ed7956b8b81b2bf28adc714&#39;, &#39;location&#39;: {&#39;address&#39;: &#39;135 Terrace View Ave.&#39;, &#39;cc&#39;: &#39;US&#39;, &#39;city&#39;: &#39;New York&#39;, &#39;country&#39;: &#39;United States&#39;, &#39;distance&#39;: 218, &#39;formattedAddress&#39;: [&#39;135 Terrace View Ave.&#39;, &#39;New York, NY 10034&#39;, &#39;United States&#39;], &#39;labeledLatLngs&#39;: [{&#39;label&#39;: &#39;display&#39;, &#39;lat&#39;: 40.875995, &#39;lng&#39;: -73.913151}], &#39;lat&#39;: 40.875995, &#39;lng&#39;: -73.913151, &#39;postalCode&#39;: &#39;10034&#39;, &#39;state&#39;: &#39;NY&#39;}, &#39;name&#39;: &#39;Terrace View Delicatessen&#39;, &#39;photos&#39;: {&#39;count&#39;: 0, &#39;groups&#39;: []}}}], &#39;name&#39;: &#39;recommended&#39;, &#39;type&#39;: &#39;Recommended Places&#39;}], &#39;headerFullLocation&#39;: &#39;Marble Hill, New York&#39;, &#39;headerLocation&#39;: &#39;Marble Hill&#39;, &#39;headerLocationGranularity&#39;: &#39;neighborhood&#39;, &#39;suggestedBounds&#39;: {&#39;ne&#39;: {&#39;lat&#39;: 40.88105078329964, &#39;lng&#39;: -73.90471933917806}, &#39;sw&#39;: {&#39;lat&#39;: 40.87205077429964, &#39;lng&#39;: -73.91659997808156}}, &#39;suggestedFilters&#39;: {&#39;filters&#39;: [{&#39;key&#39;: &#39;openNow&#39;, &#39;name&#39;: &#39;Open now&#39;}], &#39;header&#39;: &#39;Tap to show:&#39;}, &#39;totalResults&#39;: 24}} . . All the information is in the items key. Let&#39;s borrow the get_category_type function from the Foursquare lab. . def get_category_type(row): try: categories_list = row[&#39;categories&#39;] except: categories_list = row[&#39;venue.categories&#39;] if len(categories_list) == 0: return None else: return categories_list[0][&#39;name&#39;] . Clean the json and structure it into a pandas dataframe. . venues = results[&#39;response&#39;][&#39;groups&#39;][0][&#39;items&#39;] nearby_venues = json_normalize(venues) # flatten JSON # filter columns filtered_columns = [&#39;venue.name&#39;, &#39;venue.categories&#39;, &#39;venue.location.lat&#39;, &#39;venue.location.lng&#39;] nearby_venues = nearby_venues.loc[:, filtered_columns] # filter the category for each row nearby_venues[&#39;venue.categories&#39;] = nearby_venues.apply(get_category_type, axis=1) # clean columns nearby_venues.columns = [col.split(&quot;.&quot;)[-1] for col in nearby_venues.columns] nearby_venues.head() . name categories lat lng . 0 Arturo&#39;s | Pizza Place | 40.874412 | -73.910271 | . 1 Bikram Yoga | Yoga Studio | 40.876844 | -73.906204 | . 2 Tibbett Diner | Diner | 40.880404 | -73.908937 | . 3 Dunkin&#39; | Donut Shop | 40.877136 | -73.906666 | . 4 Starbucks | Coffee Shop | 40.877531 | -73.905582 | . print(&#39;{} venues were returned by Foursquare.&#39;.format(nearby_venues.shape[0])) . 24 venues were returned by Foursquare. . Explore all neighborhoods in Manhattan . Let&#39;s create a function to repeat the same process for all the neighborhoods in Manhattan. . def getNearbyVenues(names, latitudes, longitudes, radius=500): venues_list=[] for name, lat, lng in zip(names, latitudes, longitudes): print(name) # create the API request URL url = &#39;https://api.foursquare.com/v2/venues/explore?&amp;client_id={}&amp;client_secret={}&amp;v={}&amp;ll={},{}&amp;radius={}&amp;limit={}&#39;.format( CLIENT_ID, CLIENT_SECRET, VERSION, lat, lng, radius, LIMIT) # make the GET request results = requests.get(url).json()[&quot;response&quot;][&#39;groups&#39;][0][&#39;items&#39;] # return only relevant information for each nearby venue venues_list.append([( name, lat, lng, v[&#39;venue&#39;][&#39;name&#39;], v[&#39;venue&#39;][&#39;location&#39;][&#39;lat&#39;], v[&#39;venue&#39;][&#39;location&#39;][&#39;lng&#39;], v[&#39;venue&#39;][&#39;categories&#39;][0][&#39;name&#39;]) for v in results]) nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list]) nearby_venues.columns = [&#39;Neighborhood&#39;, &#39;Neighborhood Latitude&#39;, &#39;Neighborhood Longitude&#39;, &#39;Venue&#39;, &#39;Venue Latitude&#39;, &#39;Venue Longitude&#39;, &#39;Venue Category&#39;] return(nearby_venues) . Run the above function on each neighborhood and create a new dataframe. . manhattan_venues = getNearbyVenues(names=manhattan_data[&#39;Neighborhood&#39;], latitudes=manhattan_data[&#39;Latitude&#39;], longitudes=manhattan_data[&#39;Longitude&#39;]) . Marble Hill Chinatown Washington Heights Inwood Hamilton Heights Manhattanville Central Harlem East Harlem Upper East Side Yorkville Lenox Hill Roosevelt Island Upper West Side Lincoln Square Clinton Midtown Murray Hill Chelsea Greenwich Village East Village Lower East Side Tribeca Little Italy Soho West Village Manhattan Valley Morningside Heights Gramercy Battery Park City Financial District Carnegie Hill Noho Civic Center Midtown South Sutton Place Turtle Bay Tudor City Stuyvesant Town Flatiron Hudson Yards . Let&#39;s check the size of the resulting dataframe. . print(manhattan_venues.shape) manhattan_venues.head() . (3313, 7) . Neighborhood Neighborhood Latitude Neighborhood Longitude Venue Venue Latitude Venue Longitude Venue Category . 0 Marble Hill | 40.876551 | -73.91066 | Arturo&#39;s | 40.874412 | -73.910271 | Pizza Place | . 1 Marble Hill | 40.876551 | -73.91066 | Bikram Yoga | 40.876844 | -73.906204 | Yoga Studio | . 2 Marble Hill | 40.876551 | -73.91066 | Tibbett Diner | 40.880404 | -73.908937 | Diner | . 3 Marble Hill | 40.876551 | -73.91066 | Dunkin&#39; | 40.877136 | -73.906666 | Donut Shop | . 4 Marble Hill | 40.876551 | -73.91066 | Starbucks | 40.877531 | -73.905582 | Coffee Shop | . Let&#39;s check how many venues were returned for each neighborhood. . manhattan_venues.groupby(&#39;Neighborhood&#39;).count() . Neighborhood Latitude Neighborhood Longitude Venue Venue Latitude Venue Longitude Venue Category . Neighborhood . Battery Park City 95 | 95 | 95 | 95 | 95 | 95 | . Carnegie Hill 100 | 100 | 100 | 100 | 100 | 100 | . Central Harlem 46 | 46 | 46 | 46 | 46 | 46 | . Chelsea 100 | 100 | 100 | 100 | 100 | 100 | . Chinatown 100 | 100 | 100 | 100 | 100 | 100 | . Civic Center 100 | 100 | 100 | 100 | 100 | 100 | . Clinton 100 | 100 | 100 | 100 | 100 | 100 | . East Harlem 41 | 41 | 41 | 41 | 41 | 41 | . East Village 100 | 100 | 100 | 100 | 100 | 100 | . Financial District 100 | 100 | 100 | 100 | 100 | 100 | . Flatiron 100 | 100 | 100 | 100 | 100 | 100 | . Gramercy 100 | 100 | 100 | 100 | 100 | 100 | . Greenwich Village 100 | 100 | 100 | 100 | 100 | 100 | . Hamilton Heights 61 | 61 | 61 | 61 | 61 | 61 | . Hudson Yards 84 | 84 | 84 | 84 | 84 | 84 | . Inwood 56 | 56 | 56 | 56 | 56 | 56 | . Lenox Hill 100 | 100 | 100 | 100 | 100 | 100 | . Lincoln Square 100 | 100 | 100 | 100 | 100 | 100 | . Little Italy 100 | 100 | 100 | 100 | 100 | 100 | . Lower East Side 56 | 56 | 56 | 56 | 56 | 56 | . Manhattan Valley 51 | 51 | 51 | 51 | 51 | 51 | . Manhattanville 42 | 42 | 42 | 42 | 42 | 42 | . Marble Hill 24 | 24 | 24 | 24 | 24 | 24 | . Midtown 100 | 100 | 100 | 100 | 100 | 100 | . Midtown South 100 | 100 | 100 | 100 | 100 | 100 | . Morningside Heights 42 | 42 | 42 | 42 | 42 | 42 | . Murray Hill 100 | 100 | 100 | 100 | 100 | 100 | . Noho 100 | 100 | 100 | 100 | 100 | 100 | . Roosevelt Island 30 | 30 | 30 | 30 | 30 | 30 | . Soho 100 | 100 | 100 | 100 | 100 | 100 | . Stuyvesant Town 16 | 16 | 16 | 16 | 16 | 16 | . Sutton Place 100 | 100 | 100 | 100 | 100 | 100 | . Tribeca 100 | 100 | 100 | 100 | 100 | 100 | . Tudor City 79 | 79 | 79 | 79 | 79 | 79 | . Turtle Bay 100 | 100 | 100 | 100 | 100 | 100 | . Upper East Side 100 | 100 | 100 | 100 | 100 | 100 | . Upper West Side 100 | 100 | 100 | 100 | 100 | 100 | . Washington Heights 90 | 90 | 90 | 90 | 90 | 90 | . West Village 100 | 100 | 100 | 100 | 100 | 100 | . Yorkville 100 | 100 | 100 | 100 | 100 | 100 | . How many unique categories can be curated from all the returned venues? . print(&#39;There are {} unique categories&#39;.format(len(manhattan_venues[&#39;Venue Category&#39;].unique()))) . There are 343 unique categories . . Analyze each neighborhood . manhattan_onehot = pd.get_dummies(manhattan_venues[[&#39;Venue Category&#39;]], prefix=&#39;&#39;, prefix_sep=&#39;&#39;) # add neighborhood column back to the dataframe manhattan_onehot[&#39;Neighborhood&#39;] = manhattan_venues[&#39;Neighborhood&#39;] # move neighborhood column to the first column fixed_columns = [manhattan_onehot.columns[-1]] + list(manhattan_onehot.columns[:-1]) manhattan_onehot = manhattan_onehot[fixed_columns] manhattan_onehot.head() . Neighborhood Accessories Store Adult Boutique Afghan Restaurant African Restaurant American Restaurant Antique Shop Arcade Arepa Restaurant Argentinian Restaurant Art Gallery Art Museum Arts &amp; Crafts Store Asian Restaurant Athletics &amp; Sports Auditorium Australian Restaurant Austrian Restaurant BBQ Joint Baby Store Bagel Shop Bakery Bank Bar Baseball Field Basketball Court Bed &amp; Breakfast Beer Bar Beer Garden Beer Store Big Box Store Bike Rental / Bike Share Bike Shop Bike Trail Bistro Board Shop Boat or Ferry Bookstore Boutique Boxing Gym Brazilian Restaurant Breakfast Spot Bridal Shop Bridge Bubble Tea Shop Building Burger Joint Burrito Place Bus Line Bus Station Bus Stop Butcher Cafeteria Café Cajun / Creole Restaurant Cambodian Restaurant Camera Store Candy Store Caribbean Restaurant Caucasian Restaurant Cheese Shop Chinese Restaurant Chocolate Shop Circus Climbing Gym Clothing Store Club House Cocktail Bar Coffee Shop College Academic Building College Arts Building College Bookstore College Cafeteria College Gym College Theater Comedy Club Comfort Food Restaurant Community Center Concert Hall Convenience Store Cooking School Cosmetics Shop Coworking Space Creperie Cuban Restaurant Cultural Center Cupcake Shop Cycle Studio Czech Restaurant Dance Studio Daycare Deli / Bodega Department Store Design Studio Dessert Shop Dim Sum Restaurant Diner Discount Store Dive Bar Doctor&#39;s Office Dog Run Donut Shop Drugstore Dry Cleaner Dumpling Restaurant Duty-free Shop Eastern European Restaurant Electronics Store Empanada Restaurant English Restaurant Ethiopian Restaurant Event Space Exhibit Falafel Restaurant Farmers Market Fast Food Restaurant Filipino Restaurant Fish Market Flea Market Flower Shop Food &amp; Drink Shop Food Court Food Stand Food Truck Fountain French Restaurant Fried Chicken Joint Frozen Yogurt Shop Furniture / Home Store Gaming Cafe Garden Garden Center Gas Station Gastropub Gay Bar General College &amp; University General Entertainment German Restaurant Gift Shop Golf Course Gourmet Shop Greek Restaurant Grocery Store Gym Gym / Fitness Center Gym Pool Gymnastics Gym Harbor / Marina Hardware Store Hawaiian Restaurant Health &amp; Beauty Service Health Food Store Heliport High School Himalayan Restaurant Historic Site History Museum Hobby Shop Hookah Bar Hostel Hot Dog Joint Hotel Hotel Bar Hotpot Restaurant Ice Cream Shop Indian Restaurant Indie Movie Theater Indie Theater Intersection Irish Pub Israeli Restaurant Italian Restaurant Japanese Curry Restaurant Japanese Restaurant Jazz Club Jewelry Store Jewish Restaurant Juice Bar Karaoke Bar Kebab Restaurant Kids Store Kitchen Supply Store Korean Restaurant Kosher Restaurant Latin American Restaurant Laundry Service Leather Goods Store Lebanese Restaurant Library Lingerie Store Liquor Store Lounge Malay Restaurant Market Martial Arts Dojo Massage Studio Medical Center Mediterranean Restaurant Memorial Site Men&#39;s Store Metro Station Mexican Restaurant Middle Eastern Restaurant Mini Golf Miscellaneous Shop Mobile Phone Shop Modern European Restaurant Molecular Gastronomy Restaurant Monument / Landmark Moroccan Restaurant Movie Theater Museum Music School Music Venue Nail Salon New American Restaurant Newsstand Nightclub Non-Profit Noodle House North Indian Restaurant Office Opera House Optical Shop Organic Grocery Other Great Outdoors Outdoor Sculpture Outdoor Supply Store Outdoors &amp; Recreation Paella Restaurant Pakistani Restaurant Paper / Office Supplies Store Park Pastry Shop Pedestrian Plaza Performing Arts Venue Persian Restaurant Peruvian Restaurant Pet Café Pet Service Pet Store Pharmacy Photography Studio Physical Therapist Piano Bar Pie Shop Pilates Studio Pizza Place Playground Plaza Poke Place Pool Pop-Up Shop Pub Public Art Ramen Restaurant Record Shop Recording Studio Recreation Center Rental Car Location Residential Building (Apartment / Condo) Resort Rest Area Restaurant Rock Climbing Spot Rock Club Roof Deck Russian Restaurant Sake Bar Salad Place Salon / Barbershop Sandwich Place Scandinavian Restaurant Scenic Lookout School Sculpture Garden Seafood Restaurant Shanghai Restaurant Shipping Store Shoe Store Shopping Mall Skate Park Skating Rink Smoke Shop Smoothie Shop Snack Place Soba Restaurant Soccer Field Social Club Soup Place South American Restaurant South Indian Restaurant Southern / Soul Food Restaurant Spa Spanish Restaurant Speakeasy Spiritual Center Sporting Goods Shop Sports Bar Sports Club Stables Steakhouse Street Art Strip Club Supermarket Supplement Shop Sushi Restaurant Swiss Restaurant Szechuan Restaurant Taco Place Tailor Shop Taiwanese Restaurant Tapas Restaurant Tattoo Parlor Tea Room Tennis Court Tennis Stadium Thai Restaurant Theater Theme Park Ride / Attraction Thrift / Vintage Store Tiki Bar Tourist Information Center Toy / Game Store Trail Tree Turkish Restaurant Udon Restaurant Used Bookstore Vegetarian / Vegan Restaurant Venezuelan Restaurant Veterinarian Video Game Store Video Store Vietnamese Restaurant Volleyball Court Waterfront Weight Loss Center Whisky Bar Wine Bar Wine Shop Wings Joint Women&#39;s Store Yoga Studio . 0 Marble Hill | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 1 Marble Hill | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | . 2 Marble Hill | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 3 Marble Hill | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 4 Marble Hill | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . manhattan_onehot.shape . (3313, 344) . Let&#39;s group rows by neighborhood and by taking the mean of the frequency of occurrence of each category. . manhattan_grouped = manhattan_onehot.groupby(&#39;Neighborhood&#39;).mean().reset_index() manhattan_grouped . Neighborhood Accessories Store Adult Boutique Afghan Restaurant African Restaurant American Restaurant Antique Shop Arcade Arepa Restaurant Argentinian Restaurant Art Gallery Art Museum Arts &amp; Crafts Store Asian Restaurant Athletics &amp; Sports Auditorium Australian Restaurant Austrian Restaurant BBQ Joint Baby Store Bagel Shop Bakery Bank Bar Baseball Field Basketball Court Bed &amp; Breakfast Beer Bar Beer Garden Beer Store Big Box Store Bike Rental / Bike Share Bike Shop Bike Trail Bistro Board Shop Boat or Ferry Bookstore Boutique Boxing Gym Brazilian Restaurant Breakfast Spot Bridal Shop Bridge Bubble Tea Shop Building Burger Joint Burrito Place Bus Line Bus Station Bus Stop Butcher Cafeteria Café Cajun / Creole Restaurant Cambodian Restaurant Camera Store Candy Store Caribbean Restaurant Caucasian Restaurant Cheese Shop Chinese Restaurant Chocolate Shop Circus Climbing Gym Clothing Store Club House Cocktail Bar Coffee Shop College Academic Building College Arts Building College Bookstore College Cafeteria College Gym College Theater Comedy Club Comfort Food Restaurant Community Center Concert Hall Convenience Store Cooking School Cosmetics Shop Coworking Space Creperie Cuban Restaurant Cultural Center Cupcake Shop Cycle Studio Czech Restaurant Dance Studio Daycare Deli / Bodega Department Store Design Studio Dessert Shop Dim Sum Restaurant Diner Discount Store Dive Bar Doctor&#39;s Office Dog Run Donut Shop Drugstore Dry Cleaner Dumpling Restaurant Duty-free Shop Eastern European Restaurant Electronics Store Empanada Restaurant English Restaurant Ethiopian Restaurant Event Space Exhibit Falafel Restaurant Farmers Market Fast Food Restaurant Filipino Restaurant Fish Market Flea Market Flower Shop Food &amp; Drink Shop Food Court Food Stand Food Truck Fountain French Restaurant Fried Chicken Joint Frozen Yogurt Shop Furniture / Home Store Gaming Cafe Garden Garden Center Gas Station Gastropub Gay Bar General College &amp; University General Entertainment German Restaurant Gift Shop Golf Course Gourmet Shop Greek Restaurant Grocery Store Gym Gym / Fitness Center Gym Pool Gymnastics Gym Harbor / Marina Hardware Store Hawaiian Restaurant Health &amp; Beauty Service Health Food Store Heliport High School Himalayan Restaurant Historic Site History Museum Hobby Shop Hookah Bar Hostel Hot Dog Joint Hotel Hotel Bar Hotpot Restaurant Ice Cream Shop Indian Restaurant Indie Movie Theater Indie Theater Intersection Irish Pub Israeli Restaurant Italian Restaurant Japanese Curry Restaurant Japanese Restaurant Jazz Club Jewelry Store Jewish Restaurant Juice Bar Karaoke Bar Kebab Restaurant Kids Store Kitchen Supply Store Korean Restaurant Kosher Restaurant Latin American Restaurant Laundry Service Leather Goods Store Lebanese Restaurant Library Lingerie Store Liquor Store Lounge Malay Restaurant Market Martial Arts Dojo Massage Studio Medical Center Mediterranean Restaurant Memorial Site Men&#39;s Store Metro Station Mexican Restaurant Middle Eastern Restaurant Mini Golf Miscellaneous Shop Mobile Phone Shop Modern European Restaurant Molecular Gastronomy Restaurant Monument / Landmark Moroccan Restaurant Movie Theater Museum Music School Music Venue Nail Salon New American Restaurant Newsstand Nightclub Non-Profit Noodle House North Indian Restaurant Office Opera House Optical Shop Organic Grocery Other Great Outdoors Outdoor Sculpture Outdoor Supply Store Outdoors &amp; Recreation Paella Restaurant Pakistani Restaurant Paper / Office Supplies Store Park Pastry Shop Pedestrian Plaza Performing Arts Venue Persian Restaurant Peruvian Restaurant Pet Café Pet Service Pet Store Pharmacy Photography Studio Physical Therapist Piano Bar Pie Shop Pilates Studio Pizza Place Playground Plaza Poke Place Pool Pop-Up Shop Pub Public Art Ramen Restaurant Record Shop Recording Studio Recreation Center Rental Car Location Residential Building (Apartment / Condo) Resort Rest Area Restaurant Rock Climbing Spot Rock Club Roof Deck Russian Restaurant Sake Bar Salad Place Salon / Barbershop Sandwich Place Scandinavian Restaurant Scenic Lookout School Sculpture Garden Seafood Restaurant Shanghai Restaurant Shipping Store Shoe Store Shopping Mall Skate Park Skating Rink Smoke Shop Smoothie Shop Snack Place Soba Restaurant Soccer Field Social Club Soup Place South American Restaurant South Indian Restaurant Southern / Soul Food Restaurant Spa Spanish Restaurant Speakeasy Spiritual Center Sporting Goods Shop Sports Bar Sports Club Stables Steakhouse Street Art Strip Club Supermarket Supplement Shop Sushi Restaurant Swiss Restaurant Szechuan Restaurant Taco Place Tailor Shop Taiwanese Restaurant Tapas Restaurant Tattoo Parlor Tea Room Tennis Court Tennis Stadium Thai Restaurant Theater Theme Park Ride / Attraction Thrift / Vintage Store Tiki Bar Tourist Information Center Toy / Game Store Trail Tree Turkish Restaurant Udon Restaurant Used Bookstore Vegetarian / Vegan Restaurant Venezuelan Restaurant Veterinarian Video Game Store Video Store Vietnamese Restaurant Volleyball Court Waterfront Weight Loss Center Whisky Bar Wine Bar Wine Shop Wings Joint Women&#39;s Store Yoga Studio . 0 Battery Park City | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010526 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010526 | 0.010526 | 0.00 | 0.00 | 0.021053 | 0.00 | 0.000000 | 0.010526 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.010526 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.010526 | 0.00 | 0.021053 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010526 | 0.010526 | 0.010526 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010526 | 0.000000 | 0.000000 | 0.00 | 0.010526 | 0.00 | 0.00 | 0.00000 | 0.021053 | 0.00 | 0.000000 | 0.063158 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010526 | 0.010526 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.010526 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010526 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.010526 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.021053 | 0.00 | 0.010526 | 0.0000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010526 | 0.00 | 0.00000 | 0.010526 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.021053 | 0.000000 | 0.021053 | 0.031579 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010526 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.052632 | 0.010526 | 0.00 | 0.021053 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.021053 | 0.00000 | 0.000000 | 0.000000 | 0.010526 | 0.000000 | 0.010526 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010526 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010526 | 0.031579 | 0.021053 | 0.000000 | 0.010526 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010526 | 0.00 | 0.010526 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.073684 | 0.00 | 0.000000 | 0.010526 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.010526 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.021053 | 0.010526 | 0.021053 | 0.00 | 0.000000 | 0.00 | 0.010526 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010526 | 0.000000 | 0.021053 | 0.00 | 0.010526 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.031579 | 0.00 | 0.00 | 0.010526 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010526 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.010526 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010526 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.031579 | 0.000000 | 0.031579 | 0.000000 | . 1 Carnegie Hill | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.030000 | 0.000000 | 0.020000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.050000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.010000 | 0.00 | 0.020000 | 0.060000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.010000 | 0.0000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.030000 | 0.030000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.00000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.060000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.030000 | 0.000000 | 0.010000 | 0.030000 | . 2 Central Harlem | 0.000000 | 0.00 | 0.00 | 0.065217 | 0.043478 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.021739 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.021739 | 0.00 | 0.021739 | 0.000000 | 0.000000 | 0.043478 | 0.0000 | 0.00 | 0.00 | 0.021739 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.021739 | 0.021739 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.021739 | 0.021739 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.021739 | 0.000000 | 0.00 | 0.043478 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.021739 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.043478 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.021739 | 0.00 | 0.000000 | 0.00 | 0.021739 | 0.000000 | 0.00 | 0.021739 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.021739 | 0.021739 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.043478 | 0.043478 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.021739 | 0.021739 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.021739 | 0.000000 | 0.000000 | 0.021739 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.021739 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.021739 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.021739 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.021739 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.021739 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.021739 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.021739 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.043478 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.021739 | 0.021739 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.021739 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 3 Chelsea | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.050000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.010000 | 0.00 | 0.020000 | 0.060000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.01 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.00000 | 0.00 | 0.020000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.01 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.00 | 0.030000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.050000 | 0.00000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.020000 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.01 | 0.01 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.030000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.000000 | . 4 Chinatown | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.020000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.090000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.050000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.020000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.02000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.01 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.03 | 0.020000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.02 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.02 | 0.00 | 0.000000 | 0.00 | 0.03 | 0.01 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.01 | 0.000000 | 0.030000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.040000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | . 5 Civic Center | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.01 | 0.010000 | 0.030000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.010000 | 0.00 | 0.030000 | 0.060000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.01000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.040000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.020000 | 0.050000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.040000 | 0.020000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.02 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.010000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.01 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.020000 | 0.010000 | 0.000000 | 0.030000 | . 6 Clinton | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.020000 | 0.040000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.020000 | 0.00 | 0.000000 | 0.0000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.050000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.050000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.010000 | 0.01 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.01 | 0.00 | 0.000000 | 0.010000 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.090000 | 0.00 | 0.00000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | . 7 East Harlem | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.097561 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.024390 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.024390 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.024390 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.024390 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.02439 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.024390 | 0.00 | 0.048780 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.024390 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.024390 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.02439 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.024390 | 0.024390 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.073171 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.121951 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.024390 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.024390 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.024390 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.024390 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.024390 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.024390 | 0.024390 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.024390 | 0.02439 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.024390 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.073171 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 8 East Village | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.010000 | 0.010000 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.020000 | 0.020000 | 0.000000 | 0.070000 | 0.0000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.01 | 0.040000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.040000 | 0.020000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.050000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.030000 | 0.00000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.040000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.030000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.03 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.050000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | . 9 Financial District | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.050000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.050000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.030000 | 0.090000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.01000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.020000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.010000 | 0.00 | 0.030000 | 0.0000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.010000 | 0.010000 | 0.040000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.00 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.01000 | 0.010000 | 0.000000 | 0.020000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.040000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.000000 | . 10 Flatiron | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.01 | 0.00 | 0.00000 | 0.030000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.01000 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.020000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.020000 | 0.00000 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.01 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.01 | 0.01 | 0.00 | 0.010000 | 0.030000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.02 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.02 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.010000 | 0.040000 | . 11 Gramercy | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.040000 | 0.010000 | 0.000000 | 0.050000 | 0.0000 | 0.00 | 0.01 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.030000 | 0.030000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.020000 | 0.01 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.010000 | 0.0000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.050000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.040000 | 0.020000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.00 | 0.03000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | . 12 Greenwich Village | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.00 | 0.00000 | 0.060000 | 0.00 | 0.020000 | 0.020000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.01 | 0.01000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.01 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.020000 | 0.0000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.020000 | 0.030000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.130000 | 0.00000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.040000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | . 13 Hamilton Heights | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.032787 | 0.016393 | 0.016393 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.016393 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.065574 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.032787 | 0.000000 | 0.00 | 0.032787 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.032787 | 0.065574 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.016393 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.065574 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.016393 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.016393 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.016393 | 0.0000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.016393 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.016393 | 0.000000 | 0.00 | 0.016393 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.032787 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.016393 | 0.00000 | 0.016393 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.016393 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.016393 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.016393 | 0.000000 | 0.000000 | 0.016393 | 0.049180 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.032787 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.098361 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.016393 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.032787 | 0.00 | 0.000000 | 0.032787 | 0.00 | 0.016393 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.016393 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.032787 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.016393 | 0.000000 | 0.000000 | 0.000000 | 0.032787 | . 14 Hudson Yards | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.059524 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.023810 | 0.00 | 0.000000 | 0.011905 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.011905 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.011905 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.011905 | 0.011905 | 0.000000 | 0.000000 | 0.011905 | 0.000000 | 0.00 | 0.000000 | 0.035714 | 0.00 | 0.00 | 0.011905 | 0.000000 | 0.000000 | 0.011905 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.011905 | 0.047619 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.011905 | 0.00 | 0.00 | 0.011905 | 0.000000 | 0.000000 | 0.011905 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.011905 | 0.00 | 0.000000 | 0.00 | 0.011905 | 0.011905 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.023810 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.011905 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.000000 | 0.011905 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.011905 | 0.011905 | 0.000000 | 0.023810 | 0.047619 | 0.00 | 0.00 | 0.011905 | 0.000000 | 0.000000 | 0.00 | 0.011905 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.047619 | 0.011905 | 0.00 | 0.011905 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.047619 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.011905 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.011905 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.011905 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.011905 | 0.000000 | 0.023810 | 0.00 | 0.011905 | 0.011905 | 0.00 | 0.011905 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.011905 | 0.011905 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.011905 | 0.00 | 0.000000 | 0.023810 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.011905 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.011905 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.011905 | 0.023810 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.011905 | 0.011905 | 0.00000 | 0.00 | 0.011905 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.011905 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.035714 | 0.011905 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.011905 | 0.011905 | 0.000000 | 0.000000 | 0.000000 | . 15 Inwood | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.035714 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.035714 | 0.000000 | 0.017857 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.017857 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.017857 | 0.000000 | 0.00 | 0.000000 | 0.053571 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.017857 | 0.000000 | 0.00 | 0.035714 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.017857 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.017857 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.035714 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.017857 | 0.000000 | 0.00 | 0.00 | 0.017857 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.017857 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.017857 | 0.017857 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.035714 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.017857 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.017857 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.071429 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.071429 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.035714 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.017857 | 0.017857 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.053571 | 0.017857 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.053571 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.017857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.035714 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.017857 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.017857 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.035714 | 0.017857 | 0.000000 | 0.000000 | 0.017857 | . 16 Lenox Hill | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.010000 | 0.020000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.010000 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.010000 | 0.01 | 0.040000 | 0.060000 | 0.01 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.01000 | 0.00 | 0.000000 | 0.020000 | 0.01 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.010000 | 0.010000 | 0.030000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.070000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.050000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.020000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.050000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.020000 | 0.000000 | 0.010000 | 0.000000 | . 17 Lincoln Square | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.020000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.050000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.01000 | 0.010000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.01 | 0.01 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.040000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.020000 | 0.0100 | 0.020000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.010000 | 0.020000 | 0.020000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.03 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.050000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.02 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.010000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.060000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.020000 | 0.000000 | 0.000000 | 0.010000 | . 18 Little Italy | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.050000 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.060000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.01 | 0.00 | 0.00000 | 0.020000 | 0.00 | 0.030000 | 0.020000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.010000 | 0.02 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.030000 | 0.00000 | 0.020000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.01 | 0.00 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.030000 | 0.030000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.01 | 0.02 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.010000 | 0.000000 | 0.020000 | 0.020000 | . 19 Lower East Side | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.017857 | 0.053571 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.017857 | 0.035714 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.017857 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.000000 | 0.053571 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.035714 | 0.00 | 0.00 | 0.00000 | 0.017857 | 0.00 | 0.035714 | 0.053571 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.017857 | 0.00 | 0.000000 | 0.017857 | 0.00 | 0.017857 | 0.017857 | 0.017857 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.017857 | 0.000000 | 0.017857 | 0.00 | 0.00 | 0.017857 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.017857 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.017857 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.017857 | 0.00000 | 0.035714 | 0.000000 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.017857 | 0.000000 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.017857 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.000000 | 0.017857 | 0.00 | 0.000000 | 0.017857 | 0.0000 | 0.000000 | 0.017857 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.053571 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.035714 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.017857 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.017857 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.017857 | 0.000000 | 0.017857 | 0.017857 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.017857 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.017857 | 0.017857 | . 20 Manhattan Valley | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.019608 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.019608 | 0.000000 | 0.058824 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.019608 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.019608 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.019608 | 0.000000 | 0.00 | 0.019608 | 0.00 | 0.00 | 0.00000 | 0.019608 | 0.00 | 0.000000 | 0.039216 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.019608 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.039216 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.019608 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.019608 | 0.000000 | 0.00 | 0.019608 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.000000 | 0.019608 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.019608 | 0.000000 | 0.019608 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.019608 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.019608 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.019608 | 0.058824 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.019608 | 0.00000 | 0.019608 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.019608 | 0.000000 | 0.019608 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.039216 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.019608 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.019608 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.058824 | 0.039216 | 0.019608 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.019608 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.019608 | 0.00 | 0.019608 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.039216 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.019608 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.019608 | 0.019608 | 0.000000 | 0.039216 | . 21 Manhattanville | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.023810 | 0.00 | 0.000000 | 0.023810 | 0.023810 | 0.023810 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.02381 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.00 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.00 | 0.00 | 0.02381 | 0.000000 | 0.00 | 0.000000 | 0.071429 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.02381 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.047619 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.02381 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.02381 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.023810 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.023810 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.047619 | 0.02381 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.047619 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.023810 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.047619 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.047619 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.023810 | 0.000000 | 0.023810 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.02381 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 22 Marble Hill | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.041667 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.041667 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.083333 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.041667 | 0.041667 | 0.00 | 0.000000 | 0.000000 | 0.041667 | 0.041667 | 0.00 | 0.00 | 0.000000 | 0.041667 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.083333 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.041667 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.041667 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.041667 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.041667 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.041667 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.083333 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.041667 | 0.000000 | 0.000000 | 0.000000 | 0.041667 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.041667 | 0.00000 | 0.00 | 0.000000 | 0.041667 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.041667 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.041667 | . 23 Midtown | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.01 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.040000 | 0.00 | 0.030000 | 0.040000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.01000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.010000 | 0.01 | 0.010000 | 0.0000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.010000 | 0.010000 | 0.020000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.070000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.01 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.01 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.010000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.01 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | . 24 Midtown South | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.020000 | 0.00 | 0.020000 | 0.030000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.00000 | 0.010000 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.020000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.050000 | 0.050000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.00000 | 0.050000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.150000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.02 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | . 25 Morningside Heights | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.071429 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.071429 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.047619 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.071429 | 0.00 | 0.00 | 0.00 | 0.02381 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.047619 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.023810 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.000000 | 0.00 | 0.000000 | 0.023810 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.023810 | 0.0000 | 0.000000 | 0.000000 | 0.023810 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.023810 | 0.023810 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.023810 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.02381 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.023810 | 0.071429 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.023810 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.023810 | 0.000000 | 0.047619 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.023810 | 0.000000 | 0.000000 | 0.023810 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 26 Murray Hill | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.020000 | 0.010000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.020000 | 0.050000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.02000 | 0.01 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.020000 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.030000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.040000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.030000 | 0.00000 | 0.040000 | 0.010000 | 0.000000 | 0.020000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.0000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.050000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 27 Noho | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.030000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.01 | 0.040000 | 0.030000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.050000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.03 | 0.00 | 0.010000 | 0.010000 | 0.030000 | 0.010000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.040000 | 0.010000 | 0.00 | 0.020000 | 0.010000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.050000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.030000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.01000 | 0.00 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.010000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.020000 | 0.020000 | 0.000000 | 0.000000 | 0.020000 | . 28 Roosevelt Island | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.033333 | 0.000000 | 0.000000 | 0.000000 | 0.033333 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.033333 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.066667 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.033333 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.033333 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.033333 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.033333 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.033333 | 0.000000 | 0.033333 | 0.033333 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.033333 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.033333 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.033333 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.033333 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.033333 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.033333 | 0.00 | 0.000000 | 0.000000 | 0.066667 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.033333 | 0.033333 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.033333 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.066667 | 0.00 | 0.033333 | 0.033333 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.033333 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.033333 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.033333 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 29 Soho | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.040000 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.060000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.100000 | 0.00 | 0.010000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.010000 | 0.010000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.010000 | 0.0000 | 0.020000 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.020000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.030000 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.040000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.010000 | 0.000000 | 0.00 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.01 | 0.01 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.02 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.040000 | 0.020000 | . 30 Stuyvesant Town | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.125000 | 0.0625 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.062500 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.062500 | 0.062500 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.062500 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0625 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.06250 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.062500 | 0.00 | 0.00 | 0.062500 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.062500 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.125000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0625 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.062500 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 31 Sutton Place | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.020000 | 0.010000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.020000 | 0.020000 | 0.01 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.020000 | 0.01 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.010000 | 0.00 | 0.000000 | 0.0000 | 0.020000 | 0.000000 | 0.000000 | 0.040000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.010000 | 0.020000 | 0.040000 | 0.060000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.02 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.020000 | 0.030000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.040000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.01 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.02 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00000 | 0.01 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.020000 | . 32 Tribeca | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.050000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.010000 | 0.0000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.030000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.010000 | 0.00 | 0.020000 | 0.030000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.010000 | 0.010000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.01 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.050000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.050000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.010000 | 0.020000 | 0.000000 | 0.02 | 0.000000 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.040000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.01 | 0.000000 | 0.00 | 0.01 | 0.030000 | 0.030000 | 0.000000 | 0.000000 | 0.010000 | . 33 Tudor City | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.012658 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.025316 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.012658 | 0.000000 | 0.012658 | 0.012658 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | 0.00 | 0.000000 | 0.00 | 0.012658 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.063291 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.037975 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.012658 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.037975 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.037975 | 0.000000 | 0.00 | 0.00 | 0.025316 | 0.012658 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.025316 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.037975 | 0.000000 | 0.025316 | 0.012658 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.012658 | 0.00 | 0.000000 | 0.012658 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.012658 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.012658 | 0.00000 | 0.012658 | 0.000000 | 0.000000 | 0.012658 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.012658 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.012658 | 0.012658 | 0.012658 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.063291 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.012658 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.063291 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.012658 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.037975 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.012658 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.012658 | 0.012658 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.012658 | 0.012658 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.012658 | 0.025316 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.025316 | 0.00 | 0.000000 | 0.012658 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.012658 | 0.000000 | 0.025316 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.012658 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.025316 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.012658 | . 34 Turtle Bay | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.010000 | 0.050000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.010000 | 0.0000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.01 | 0.00 | 0.000000 | 0.020000 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.070000 | 0.01000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.02 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.01 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.050000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.050000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.02 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.040000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 35 Upper East Side | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.060000 | 0.02 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.050000 | 0.000000 | 0.010000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.020000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.01 | 0.00 | 0.00000 | 0.010000 | 0.00 | 0.020000 | 0.050000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.06 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.010000 | 0.000000 | 0.020000 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.060000 | 0.00000 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.030000 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.010000 | 0.020000 | . 36 Upper West Side | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.030000 | 0.000000 | 0.040000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.040000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.01 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.01000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.010000 | 0.020000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.020000 | 0.030000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.060000 | 0.00000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.02 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.01 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.020000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.010000 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.01 | 0.00 | 0.000000 | 0.000000 | 0.01000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.000000 | 0.00 | 0.00000 | 0.01 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.02 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.040000 | 0.010000 | 0.000000 | 0.000000 | 0.020000 | . 37 Washington Heights | 0.011111 | 0.00 | 0.00 | 0.000000 | 0.011111 | 0.00 | 0.00 | 0.011111 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.044444 | 0.011111 | 0.011111 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.011111 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.011111 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.055556 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.011111 | 0.000000 | 0.00 | 0.022222 | 0.00 | 0.00 | 0.00000 | 0.011111 | 0.00 | 0.011111 | 0.022222 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.022222 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.011111 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.022222 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.011111 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.044444 | 0.022222 | 0.011111 | 0.00 | 0.00 | 0.000000 | 0.011111 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.011111 | 0.011111 | 0.00 | 0.000000 | 0.011111 | 0.00 | 0.00 | 0.011111 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.011111 | 0.00 | 0.000000 | 0.000000 | 0.022222 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.011111 | 0.011111 | 0.00 | 0.011111 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.022222 | 0.00 | 0.00 | 0.000000 | 0.033333 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.022222 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.011111 | 0.022222 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.011111 | 0.0000 | 0.011111 | 0.011111 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.022222 | 0.000000 | 0.011111 | 0.00 | 0.011111 | 0.00 | 0.000000 | 0.000000 | 0.011111 | 0.00 | 0.00 | 0.00 | 0.011111 | 0.000000 | 0.00 | 0.011111 | 0.011111 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.011111 | 0.000000 | 0.022222 | 0.00 | 0.011111 | 0.000000 | 0.00 | 0.011111 | 0.000000 | 0.011111 | 0.011111 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.022222 | 0.000000 | 0.00 | 0.011111 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.022222 | 0.022222 | 0.011111 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.022222 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.011111 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.011111 | 0.022222 | 0.000000 | 0.011111 | 0.000000 | . 38 West Village | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.050000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.00 | 0.000000 | 0.030000 | 0.000000 | 0.000000 | 0.0000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.010000 | 0.01 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.01 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.040000 | 0.030000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.050000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.01000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.020000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00000 | 0.010000 | 0.01 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.030000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.090000 | 0.00000 | 0.020000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.060000 | 0.01 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.01 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.040000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.0000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.01 | 0.00 | 0.00 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.010000 | 0.000000 | 0.010000 | 0.00 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.040000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | . 39 Yorkville | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.010000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.020000 | 0.010000 | 0.010000 | 0.050000 | 0.0000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.010000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.060000 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.01 | 0.040000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.030000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.00 | 0.000000 | 0.00000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00000 | 0.000000 | 0.00 | 0.000000 | 0.0000 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.01 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.060000 | 0.010000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.01 | 0.000000 | 0.000000 | 0.00 | 0.020000 | 0.010000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.070000 | 0.00000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.010000 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.000000 | 0.030000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00000 | 0.00 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.000000 | 0.0000 | 0.000000 | 0.010000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.040000 | 0.000000 | 0.000000 | 0.00 | 0.010000 | 0.00 | 0.010000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.010000 | 0.020000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.020000 | 0.000000 | 0.000000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.00000 | 0.00 | 0.000000 | 0.000000 | 0.040000 | 0.00 | 0.000000 | 0.000000 | 0.00 | 0.00 | 0.000000 | 0.00 | 0.01 | 0.000000 | 0.000000 | 0.010000 | 0.000000 | 0.00 | 0.00000 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.00 | 0.00 | 0.00 | 0.00 | 0.000000 | 0.000000 | 0.01 | 0.020000 | 0.00 | 0.000000 | 0.00 | 0.00 | 0.010000 | 0.030000 | 0.000000 | 0.000000 | 0.000000 | . manhattan_grouped.shape . (40, 344) . Let&#39;s print the top 5 most common venues for each neighborhood. . num_top_venues = 5 for hood in manhattan_grouped[&#39;Neighborhood&#39;]: print(&#39;-&#39; + hood + &#39;-&#39;) temp = manhattan_grouped[manhattan_grouped[&#39;Neighborhood&#39;] == hood].T.reset_index() temp.columns = [&#39;venue&#39;, &#39;freq&#39;] temp = temp.iloc[1:] temp[&#39;freq&#39;] = temp[&#39;freq&#39;].astype(float) temp = temp.round({&#39;freq&#39;: 2}) print(temp.sort_values(&#39;freq&#39;, ascending=False).reset_index(drop=True).head(num_top_venues)) print(&#39; n&#39;) . -Battery Park City- venue freq 0 Park 0.07 1 Coffee Shop 0.06 2 Hotel 0.05 3 Shopping Mall 0.03 4 Women&#39;s Store 0.03 -Carnegie Hill- venue freq 0 Coffee Shop 0.06 1 Pizza Place 0.06 2 Café 0.05 3 Gym / Fitness Center 0.03 4 Cosmetics Shop 0.03 -Central Harlem- venue freq 0 African Restaurant 0.07 1 Bar 0.04 2 Seafood Restaurant 0.04 3 French Restaurant 0.04 4 Cosmetics Shop 0.04 -Chelsea- venue freq 0 Coffee Shop 0.06 1 Italian Restaurant 0.05 2 Bakery 0.05 3 Hotel 0.03 4 Theater 0.03 -Chinatown- venue freq 0 Chinese Restaurant 0.09 1 Cocktail Bar 0.05 2 Vietnamese Restaurant 0.04 3 American Restaurant 0.04 4 Bakery 0.03 -Civic Center- venue freq 0 Coffee Shop 0.06 1 Gym / Fitness Center 0.05 2 Hotel 0.04 3 French Restaurant 0.04 4 Yoga Studio 0.03 -Clinton- venue freq 0 Theater 0.09 1 Italian Restaurant 0.05 2 Gym / Fitness Center 0.05 3 American Restaurant 0.04 4 Coffee Shop 0.04 -East Harlem- venue freq 0 Mexican Restaurant 0.12 1 Bakery 0.10 2 Thai Restaurant 0.07 3 Latin American Restaurant 0.07 4 Deli / Bodega 0.05 -East Village- venue freq 0 Bar 0.07 1 Ice Cream Shop 0.05 2 Wine Bar 0.05 3 Mexican Restaurant 0.04 4 Cocktail Bar 0.04 -Financial District- venue freq 0 Coffee Shop 0.09 1 Bar 0.05 2 American Restaurant 0.05 3 Pizza Place 0.04 4 Gym 0.04 -Flatiron- venue freq 0 Yoga Studio 0.04 1 Café 0.04 2 Japanese Restaurant 0.04 3 American Restaurant 0.04 4 Gym / Fitness Center 0.04 -Gramercy- venue freq 0 Bar 0.05 1 Italian Restaurant 0.05 2 Bagel Shop 0.04 3 Mexican Restaurant 0.04 4 Pizza Place 0.04 -Greenwich Village- venue freq 0 Italian Restaurant 0.13 1 Clothing Store 0.06 2 Café 0.04 3 Sushi Restaurant 0.04 4 French Restaurant 0.03 -Hamilton Heights- venue freq 0 Pizza Place 0.10 1 Deli / Bodega 0.07 2 Coffee Shop 0.07 3 Café 0.07 4 Mexican Restaurant 0.05 -Hudson Yards- venue freq 0 American Restaurant 0.06 1 Gym / Fitness Center 0.05 2 Coffee Shop 0.05 3 Hotel 0.05 4 Italian Restaurant 0.05 -Inwood- venue freq 0 Lounge 0.07 1 Mexican Restaurant 0.07 2 Pizza Place 0.05 3 Café 0.05 4 Restaurant 0.05 -Lenox Hill- venue freq 0 Italian Restaurant 0.07 1 Coffee Shop 0.06 2 Sushi Restaurant 0.05 3 Pizza Place 0.05 4 Cocktail Bar 0.04 -Lincoln Square- venue freq 0 Plaza 0.06 1 Café 0.05 2 Theater 0.05 3 Italian Restaurant 0.05 4 Performing Arts Venue 0.04 -Little Italy- venue freq 0 Café 0.06 1 Bakery 0.05 2 Bubble Tea Shop 0.04 3 Mediterranean Restaurant 0.03 4 Italian Restaurant 0.03 -Lower East Side- venue freq 0 Pizza Place 0.05 1 Coffee Shop 0.05 2 Art Gallery 0.05 3 Café 0.05 4 Japanese Restaurant 0.04 -Manhattan Valley- venue freq 0 Pizza Place 0.06 1 Bar 0.06 2 Indian Restaurant 0.06 3 Playground 0.04 4 Thai Restaurant 0.04 -Manhattanville- venue freq 0 Coffee Shop 0.07 1 Park 0.05 2 Mexican Restaurant 0.05 3 Deli / Bodega 0.05 4 Seafood Restaurant 0.05 -Marble Hill- venue freq 0 Gym 0.08 1 Sandwich Place 0.08 2 Coffee Shop 0.08 3 Yoga Studio 0.04 4 Seafood Restaurant 0.04 -Midtown- venue freq 0 Hotel 0.07 1 Coffee Shop 0.04 2 Clothing Store 0.04 3 Cocktail Bar 0.03 4 Sporting Goods Shop 0.03 -Midtown South- venue freq 0 Korean Restaurant 0.15 1 Japanese Restaurant 0.05 2 Hotel Bar 0.05 3 Hotel 0.05 4 Dessert Shop 0.04 -Morningside Heights- venue freq 0 American Restaurant 0.07 1 Park 0.07 2 Bookstore 0.07 3 Coffee Shop 0.07 4 Sandwich Place 0.05 -Murray Hill- venue freq 0 Coffee Shop 0.05 1 Sandwich Place 0.05 2 American Restaurant 0.04 3 Japanese Restaurant 0.04 4 Hotel 0.04 -Noho- venue freq 0 French Restaurant 0.05 1 Italian Restaurant 0.05 2 Cocktail Bar 0.04 3 Hotel 0.04 4 Rock Club 0.03 -Roosevelt Island- venue freq 0 Coffee Shop 0.07 1 Sandwich Place 0.07 2 Park 0.07 3 Residential Building (Apartment / Condo) 0.03 4 Gym 0.03 -Soho- venue freq 0 Clothing Store 0.10 1 Boutique 0.06 2 Women&#39;s Store 0.04 3 Shoe Store 0.04 4 Art Gallery 0.04 -Stuyvesant Town- venue freq 0 Bar 0.12 1 Park 0.12 2 Farmers Market 0.06 3 Gym / Fitness Center 0.06 4 Heliport 0.06 -Sutton Place- venue freq 0 Gym / Fitness Center 0.06 1 Italian Restaurant 0.04 2 Furniture / Home Store 0.04 3 Gym 0.04 4 Indian Restaurant 0.03 -Tribeca- venue freq 0 Park 0.05 1 American Restaurant 0.05 2 Italian Restaurant 0.05 3 Café 0.04 4 Spa 0.04 -Tudor City- venue freq 0 Park 0.06 1 Café 0.06 2 Mexican Restaurant 0.06 3 Coffee Shop 0.04 4 Diner 0.04 -Turtle Bay- venue freq 0 Italian Restaurant 0.07 1 Sushi Restaurant 0.05 2 Coffee Shop 0.05 3 Steakhouse 0.05 4 Wine Bar 0.04 -Upper East Side- venue freq 0 Exhibit 0.06 1 Art Gallery 0.06 2 Italian Restaurant 0.06 3 Coffee Shop 0.05 4 Bakery 0.05 -Upper West Side- venue freq 0 Italian Restaurant 0.06 1 Coffee Shop 0.04 2 Bar 0.04 3 Wine Bar 0.04 4 Café 0.04 -Washington Heights- venue freq 0 Café 0.06 1 Grocery Store 0.04 2 Bakery 0.04 3 Mobile Phone Shop 0.03 4 Supplement Shop 0.02 -West Village- venue freq 0 Italian Restaurant 0.09 1 New American Restaurant 0.06 2 Cosmetics Shop 0.05 3 American Restaurant 0.05 4 Wine Bar 0.04 -Yorkville- venue freq 0 Italian Restaurant 0.07 1 Coffee Shop 0.06 2 Gym 0.06 3 Bar 0.05 4 Pizza Place 0.04 . . Let&#39;s put that into a pandas dataframe. . def return_most_common_venues(row, num_top_venues): row_categories = row.iloc[1:] row_categories_sorted = row_categories.sort_values(ascending=False) return row_categories_sorted.index.values[0:num_top_venues] . Let&#39;s create the new dataframe and display the top 10 venues for each neighborhood. . num_top_venues = 10 indicators = [&#39;st&#39;, &#39;nd&#39;, &#39;rd&#39;] # create columns according to number of top venues columns = [&#39;Neighborhood&#39;] for ind in np.arange(num_top_venues): try: columns.append(&#39;{}{} Most Common Venue&#39;.format(ind+1, indicators[ind])) except: columns.append(&#39;{}th Most Common Venue&#39;.format(ind+1)) # create a new dataframe neighborhoods_venues_sorted = pd.DataFrame(columns=columns) neighborhoods_venues_sorted[&#39;Neighborhood&#39;] = manhattan_grouped[&#39;Neighborhood&#39;] for ind in np.arange(manhattan_grouped.shape[0]): neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(manhattan_grouped.iloc[ind, :], num_top_venues) neighborhoods_venues_sorted.head() . Neighborhood 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 Battery Park City | Park | Coffee Shop | Hotel | Women&#39;s Store | Memorial Site | Shopping Mall | Gym | Wine Shop | Boat or Ferry | Food Court | . 1 Carnegie Hill | Pizza Place | Coffee Shop | Café | Bookstore | Cosmetics Shop | Grocery Store | Gym | Gym / Fitness Center | Bakery | Japanese Restaurant | . 2 Central Harlem | African Restaurant | Fried Chicken Joint | French Restaurant | American Restaurant | Chinese Restaurant | Cosmetics Shop | Seafood Restaurant | Bar | Metro Station | Southern / Soul Food Restaurant | . 3 Chelsea | Coffee Shop | Italian Restaurant | Bakery | Wine Shop | American Restaurant | Ice Cream Shop | Theater | Hotel | Sushi Restaurant | Cupcake Shop | . 4 Chinatown | Chinese Restaurant | Cocktail Bar | American Restaurant | Vietnamese Restaurant | Hotpot Restaurant | Optical Shop | Spa | Bakery | Salon / Barbershop | Bar | . . Cluster the neighborhoods . Run the k-means algorithm to cluster the neighborhood into 5 clusters. . kclusters = 5 manhattan_grouped_clustering = manhattan_grouped.drop(&#39;Neighborhood&#39;, 1) # run k-means clustering kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(manhattan_grouped_clustering) # check cluster labels generated for each row in the dataframe kmeans.labels_[0:10] . array([1, 0, 1, 1, 1, 1, 1, 3, 0, 0], dtype=int32) . Let&#39;s create a new dataframe that includes the cluster as well as the top 10 venues for each neighborhood. . neighborhoods_venues_sorted.insert(0, &#39;Cluster Labels&#39;, kmeans.labels_) manhattan_merged = manhattan_data # merge manhattan_grouped with manhattan_data to add latitude/longitude for each neighborhood manhattan_merged = manhattan_merged.join(neighborhoods_venues_sorted.set_index(&#39;Neighborhood&#39;), on=&#39;Neighborhood&#39;) manhattan_merged.head() . Borough Neighborhood Latitude Longitude Cluster Labels 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 Manhattan | Marble Hill | 40.876551 | -73.910660 | 4 | Coffee Shop | Gym | Sandwich Place | Yoga Studio | Tennis Stadium | Supplement Shop | Donut Shop | Miscellaneous Shop | Steakhouse | Discount Store | . 1 Manhattan | Chinatown | 40.715618 | -73.994279 | 1 | Chinese Restaurant | Cocktail Bar | American Restaurant | Vietnamese Restaurant | Hotpot Restaurant | Optical Shop | Spa | Bakery | Salon / Barbershop | Bar | . 2 Manhattan | Washington Heights | 40.851903 | -73.936900 | 3 | Café | Grocery Store | Bakery | Mobile Phone Shop | Pizza Place | Chinese Restaurant | Tapas Restaurant | Mexican Restaurant | Coffee Shop | Supplement Shop | . 3 Manhattan | Inwood | 40.867684 | -73.921210 | 3 | Mexican Restaurant | Lounge | Pizza Place | Restaurant | Café | Spanish Restaurant | Bakery | Park | Chinese Restaurant | Frozen Yogurt Shop | . 4 Manhattan | Hamilton Heights | 40.823604 | -73.949688 | 3 | Pizza Place | Café | Coffee Shop | Deli / Bodega | Mexican Restaurant | Yoga Studio | Sushi Restaurant | Caribbean Restaurant | Chinese Restaurant | School | . Let&#39;s visualize the clusters. . map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11) # set color scheme for the clusters x = np.arange(kclusters) ys = [i + x + (i*x)**2 for i in range(kclusters)] colors_array = cm.rainbow(np.linspace(0, 1, len(ys))) rainbow = [colors.rgb2hex(i) for i in colors_array] # add markers to the map markers_colors = [] for lat, lon, poi, cluster in zip(manhattan_merged[&#39;Latitude&#39;], manhattan_merged[&#39;Longitude&#39;], manhattan_merged[&#39;Neighborhood&#39;], manhattan_merged[&#39;Cluster Labels&#39;]): label = folium.Popup(str(poi) + &#39; Cluster &#39; + str(cluster), parse_html=True) folium.CircleMarker( [lat, lon], radius=5, popup=label, color=rainbow[cluster-1], fill=True, fill_color=rainbow[cluster-1], fill_opacity=0.7).add_to(map_clusters) map_clusters . . Examine the clusters . You can examine and determine the discriminating venue categories that distinguish each cluster. Based on the defining categories, you can assign a name to each cluster. . Cluster 1 . manhattan_merged.loc[manhattan_merged[&#39;Cluster Labels&#39;] == 0, manhattan_merged.columns[[1] + list(range(5, manhattan_merged.shape[1]))]] . Neighborhood 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 9 Yorkville | Italian Restaurant | Coffee Shop | Gym | Bar | Pizza Place | Deli / Bodega | Sushi Restaurant | Wine Shop | Mexican Restaurant | Japanese Restaurant | . 10 Lenox Hill | Italian Restaurant | Coffee Shop | Sushi Restaurant | Pizza Place | Cocktail Bar | Burger Joint | Gym / Fitness Center | Café | Gym | Sporting Goods Shop | . 12 Upper West Side | Italian Restaurant | Wine Bar | Bar | Café | Coffee Shop | Mediterranean Restaurant | Bakery | Indian Restaurant | Yoga Studio | Dessert Shop | . 13 Lincoln Square | Plaza | Café | Theater | Italian Restaurant | Concert Hall | Performing Arts Venue | Indie Movie Theater | American Restaurant | Gym / Fitness Center | Park | . 18 Greenwich Village | Italian Restaurant | Clothing Store | Sushi Restaurant | Café | Seafood Restaurant | Indian Restaurant | French Restaurant | Cosmetics Shop | Gourmet Shop | Boutique | . 19 East Village | Bar | Wine Bar | Ice Cream Shop | Pizza Place | Mexican Restaurant | Chinese Restaurant | Cocktail Bar | Ramen Restaurant | Italian Restaurant | Japanese Restaurant | . 25 Manhattan Valley | Pizza Place | Indian Restaurant | Bar | Yoga Studio | Coffee Shop | Mexican Restaurant | Deli / Bodega | Thai Restaurant | Playground | Park | . 29 Financial District | Coffee Shop | American Restaurant | Bar | Gym | Pizza Place | Gym / Fitness Center | Hotel | Steakhouse | Food Truck | Event Space | . 30 Carnegie Hill | Pizza Place | Coffee Shop | Café | Bookstore | Cosmetics Shop | Grocery Store | Gym | Gym / Fitness Center | Bakery | Japanese Restaurant | . 33 Midtown South | Korean Restaurant | Hotel | Hotel Bar | Japanese Restaurant | Dessert Shop | Gym / Fitness Center | Coffee Shop | Cosmetics Shop | American Restaurant | Fried Chicken Joint | . 34 Sutton Place | Gym / Fitness Center | Furniture / Home Store | Italian Restaurant | Gym | Coffee Shop | Indian Restaurant | Yoga Studio | Chinese Restaurant | Sushi Restaurant | Pilates Studio | . 35 Turtle Bay | Italian Restaurant | Coffee Shop | Sushi Restaurant | Steakhouse | Wine Bar | Park | Ramen Restaurant | Hotel | Indian Restaurant | Café | . 38 Flatiron | Yoga Studio | American Restaurant | Gym / Fitness Center | Café | Japanese Restaurant | Spa | Mediterranean Restaurant | Cycle Studio | Cosmetics Shop | New American Restaurant | . 39 Hudson Yards | American Restaurant | Hotel | Gym / Fitness Center | Coffee Shop | Italian Restaurant | Café | Thai Restaurant | Park | Art Gallery | Spanish Restaurant | . Cluster 2 . manhattan_merged.loc[manhattan_merged[&#39;Cluster Labels&#39;] == 1, manhattan_merged.columns[[1] + list(range(5, manhattan_merged.shape[1]))]] . Neighborhood 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 1 Chinatown | Chinese Restaurant | Cocktail Bar | American Restaurant | Vietnamese Restaurant | Hotpot Restaurant | Optical Shop | Spa | Bakery | Salon / Barbershop | Bar | . 6 Central Harlem | African Restaurant | Fried Chicken Joint | French Restaurant | American Restaurant | Chinese Restaurant | Cosmetics Shop | Seafood Restaurant | Bar | Metro Station | Southern / Soul Food Restaurant | . 8 Upper East Side | Art Gallery | Italian Restaurant | Exhibit | Coffee Shop | Bakery | Juice Bar | Gym / Fitness Center | French Restaurant | Hotel | Pizza Place | . 14 Clinton | Theater | Italian Restaurant | Gym / Fitness Center | American Restaurant | Coffee Shop | Sandwich Place | Wine Shop | Spa | Hotel | Lounge | . 15 Midtown | Hotel | Coffee Shop | Clothing Store | Bakery | Steakhouse | French Restaurant | Café | Theater | Sporting Goods Shop | Cocktail Bar | . 16 Murray Hill | Coffee Shop | Sandwich Place | Japanese Restaurant | American Restaurant | Hotel | Gym | Italian Restaurant | Gym / Fitness Center | Mediterranean Restaurant | Bagel Shop | . 17 Chelsea | Coffee Shop | Italian Restaurant | Bakery | Wine Shop | American Restaurant | Ice Cream Shop | Theater | Hotel | Sushi Restaurant | Cupcake Shop | . 20 Lower East Side | Pizza Place | Coffee Shop | Café | Art Gallery | Japanese Restaurant | Ramen Restaurant | Chinese Restaurant | Cocktail Bar | Bakery | Filipino Restaurant | . 21 Tribeca | Park | American Restaurant | Italian Restaurant | Spa | Café | Wine Shop | Wine Bar | Boutique | Coffee Shop | Greek Restaurant | . 22 Little Italy | Café | Bakery | Bubble Tea Shop | Sandwich Place | Salon / Barbershop | Italian Restaurant | Mediterranean Restaurant | Cocktail Bar | Yoga Studio | Women&#39;s Store | . 23 Soho | Clothing Store | Boutique | Art Gallery | Shoe Store | Women&#39;s Store | Bakery | Furniture / Home Store | Sporting Goods Shop | Mediterranean Restaurant | Men&#39;s Store | . 24 West Village | Italian Restaurant | New American Restaurant | American Restaurant | Cosmetics Shop | Park | Wine Bar | Cocktail Bar | Coffee Shop | Theater | Bakery | . 27 Gramercy | Bar | Italian Restaurant | Mexican Restaurant | Pizza Place | Bagel Shop | Thai Restaurant | Thrift / Vintage Store | Coffee Shop | Diner | Cocktail Bar | . 28 Battery Park City | Park | Coffee Shop | Hotel | Women&#39;s Store | Memorial Site | Shopping Mall | Gym | Wine Shop | Boat or Ferry | Food Court | . 31 Noho | Italian Restaurant | French Restaurant | Cocktail Bar | Hotel | Grocery Store | Art Gallery | Pizza Place | Coffee Shop | Mexican Restaurant | American Restaurant | . 32 Civic Center | Coffee Shop | Gym / Fitness Center | Hotel | French Restaurant | Yoga Studio | Spa | Park | American Restaurant | Bakery | Sandwich Place | . Cluster 3 . manhattan_merged.loc[manhattan_merged[&#39;Cluster Labels&#39;] == 2, manhattan_merged.columns[[1] + list(range(5, manhattan_merged.shape[1]))]] . Neighborhood 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 37 Stuyvesant Town | Park | Bar | Baseball Field | Pet Service | Gas Station | Boat or Ferry | Farmers Market | Gym / Fitness Center | Cocktail Bar | Harbor / Marina | . Cluster 4 . manhattan_merged.loc[manhattan_merged[&#39;Cluster Labels&#39;] == 3, manhattan_merged.columns[[1] + list(range(5, manhattan_merged.shape[1]))]] . Neighborhood 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 2 Washington Heights | Café | Grocery Store | Bakery | Mobile Phone Shop | Pizza Place | Chinese Restaurant | Tapas Restaurant | Mexican Restaurant | Coffee Shop | Supplement Shop | . 3 Inwood | Mexican Restaurant | Lounge | Pizza Place | Restaurant | Café | Spanish Restaurant | Bakery | Park | Chinese Restaurant | Frozen Yogurt Shop | . 4 Hamilton Heights | Pizza Place | Café | Coffee Shop | Deli / Bodega | Mexican Restaurant | Yoga Studio | Sushi Restaurant | Caribbean Restaurant | Chinese Restaurant | School | . 5 Manhattanville | Coffee Shop | Deli / Bodega | Italian Restaurant | Mexican Restaurant | Seafood Restaurant | Park | Indian Restaurant | Supermarket | Boutique | Spanish Restaurant | . 7 East Harlem | Mexican Restaurant | Bakery | Latin American Restaurant | Thai Restaurant | Deli / Bodega | French Restaurant | Spa | Liquor Store | Taco Place | Gas Station | . 11 Roosevelt Island | Park | Coffee Shop | Sandwich Place | Kosher Restaurant | Gym / Fitness Center | Gym | Greek Restaurant | Dry Cleaner | Outdoors &amp; Recreation | Playground | . 26 Morningside Heights | Bookstore | Park | American Restaurant | Coffee Shop | Burger Joint | Sandwich Place | Deli / Bodega | Café | Seafood Restaurant | Salad Place | . 36 Tudor City | Park | Mexican Restaurant | Café | Deli / Bodega | Diner | Pizza Place | Coffee Shop | Greek Restaurant | Dog Run | Thai Restaurant | . Cluster 5 . manhattan_merged.loc[manhattan_merged[&#39;Cluster Labels&#39;] == 4, manhattan_merged.columns[[1] + list(range(5, manhattan_merged.shape[1]))]] . Neighborhood 1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue 6th Most Common Venue 7th Most Common Venue 8th Most Common Venue 9th Most Common Venue 10th Most Common Venue . 0 Marble Hill | Coffee Shop | Gym | Sandwich Place | Yoga Studio | Tennis Stadium | Supplement Shop | Donut Shop | Miscellaneous Shop | Steakhouse | Discount Store | . Cluster 2 is the biggest. Cluster 3 and 5 have only one neighborhood each. .",
            "url": "https://shirolepranav.github.io/blog/segmentation/k-means%20clustering/2020/01/26/clustering-nyc.html",
            "relUrl": "/segmentation/k-means%20clustering/2020/01/26/clustering-nyc.html",
            "date": " • Jan 26, 2020"
        }
        
    
  
    
        ,"post13": {
            "title": "k-means for Customer Segmentation",
            "content": "Imagine that you have a customer dataset, and you are interested in exploring the behavior of your customers using their historical data. Customer segmentation is the practice of partitioning a customer base into groups of individuals that have similar characteristics. It is a significant strategy as a business can target these specific groups of customers and effectively allocate marketing resources. . The dataset being worked on consists of 850 customers, with information about their income and debt. You can download the data set here: https://cocl.us/customer_dataset . import random # library for random number generation import numpy as np # library for vectorized computation import pandas as pd # library to process data as dataframes import matplotlib.pyplot as plt # plotting library # backend for rendering plots within the browser %matplotlib inline from sklearn.cluster import KMeans from sklearn.datasets.samples_generator import make_blobs print(&#39;Libraries imported.&#39;) . Libraries imported. . Read the data into a pandas dataframe. . customers_df = pd.read_csv(&#39;Cust_Segmentation.csv&#39;) customers_df.head() . Customer Id Age Edu Years Employed Income Card Debt Other Debt Defaulted Address DebtIncomeRatio . 0 | 1 | 41 | 2 | 6 | 19 | 0.124 | 1.073 | 0.0 | NBA001 | 6.3 | . 1 | 2 | 47 | 1 | 26 | 100 | 4.582 | 8.218 | 0.0 | NBA021 | 12.8 | . 2 | 3 | 33 | 2 | 10 | 57 | 6.111 | 5.802 | 1.0 | NBA013 | 20.9 | . 3 | 4 | 29 | 2 | 4 | 19 | 0.681 | 0.516 | 0.0 | NBA009 | 6.3 | . 4 | 5 | 47 | 1 | 31 | 253 | 9.308 | 8.908 | 0.0 | NBA008 | 7.2 | . . Pre-processing the data . Address in this dataset is a categorical variable. k-means algorithm isn&#39;t directly applicable to categorical variables because the Euclidean distance function isn&#39;t reallly meaningful for discrete variables. So let&#39;s drop this feature and run clustering. . df = customers_df.drop(&#39;Address&#39;, axis=1) df.head() . Customer Id Age Edu Years Employed Income Card Debt Other Debt Defaulted DebtIncomeRatio . 0 | 1 | 41 | 2 | 6 | 19 | 0.124 | 1.073 | 0.0 | 6.3 | . 1 | 2 | 47 | 1 | 26 | 100 | 4.582 | 8.218 | 0.0 | 12.8 | . 2 | 3 | 33 | 2 | 10 | 57 | 6.111 | 5.802 | 1.0 | 20.9 | . 3 | 4 | 29 | 2 | 4 | 19 | 0.681 | 0.516 | 0.0 | 6.3 | . 4 | 5 | 47 | 1 | 31 | 253 | 9.308 | 8.908 | 0.0 | 7.2 | . Normalize the dataset using StandardScalar(). Normalization is astatistical method that helps mathematical-based algorithms interpret features with different magnitudes and distributions equaly. . from sklearn.preprocessing import StandardScaler X = df.values[:,1:] X = np.nan_to_num(X) cluster_dataset = StandardScaler().fit_transform(X) cluster_dataset . array([[ 0.74291541, 0.31212243, -0.37878978, ..., -0.59048916, -0.52379654, -0.57652509], [ 1.48949049, -0.76634938, 2.5737211 , ..., 1.51296181, -0.52379654, 0.39138677], [-0.25251804, 0.31212243, 0.2117124 , ..., 0.80170393, 1.90913822, 1.59755385], ..., [-1.24795149, 2.46906604, -1.26454304, ..., 0.03863257, 1.90913822, 3.45892281], [-0.37694723, -0.76634938, 0.50696349, ..., -0.70147601, -0.52379654, -1.08281745], [ 2.1116364 , -0.76634938, 1.09746566, ..., 0.16463355, -0.52379654, -0.2340332 ]]) . . Modeling . Let&#39;s run our model and group the customers into three clusters. . num_clusters = 3 k_means = KMeans(init=&#39;k-means++&#39;, n_clusters=num_clusters, n_init=12) k_means.fit(cluster_dataset) labels = k_means.labels_ print(labels) . [1 2 0 1 2 2 1 1 1 2 0 1 1 1 0 1 1 1 2 1 1 1 0 2 2 1 1 1 1 1 1 2 0 1 1 1 0 0 1 2 0 2 1 2 1 2 1 1 1 1 2 2 0 1 0 0 0 1 1 1 2 1 2 2 1 1 1 0 1 0 1 1 1 1 1 1 1 1 2 1 1 0 2 1 2 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 0 2 1 0 0 2 1 1 1 1 1 1 1 0 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 2 1 1 0 1 1 1 2 0 1 1 1 1 2 0 0 1 2 1 1 1 1 1 1 1 1 2 1 1 0 1 0 1 1 0 2 0 1 1 2 0 2 1 1 1 1 1 2 1 0 1 1 1 2 2 1 2 1 0 1 1 0 1 2 1 0 1 1 1 1 1 0 0 2 1 1 0 2 1 1 1 1 2 1 1 0 1 1 1 1 2 1 1 0 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 2 0 1 0 1 1 1 2 1 0 2 0 1 2 1 1 0 1 1 1 1 0 0 0 1 1 1 2 1 1 2 1 2 1 1 2 1 1 1 0 1 1 0 1 0 2 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 2 1 0 1 1 1 0 0 1 1 1 2 0 1 1 0 1 2 1 1 1 1 1 0 2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 2 0 1 0 1 1 1 2 2 1 0 1 2 0 0 1 1 1 0 1 1 1 1 1 2 1 2 1 1 1 1 0 1 0 1 1 1 2 1 1 1 1 0 1 1 0 0 2 1 1 1 1 1 0 0 1 2 0 2 1 1 0 1 1 2 2 1 0 1 1 2 1 0 1 2 1 1 1 2 1 1 1 1 2 1 0 1 1 1 1 2 0 1 1 2 1 0 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 1 2 1 0 1 1 1 0 1 0 1 1 1 1 1 2 0 0 1 2 1 2 1 1 0 2 1 0 0 0 2 2 0 1 1 0 1 0 0 1 0 2 1 1 0 1 0 2 0 1 1 0 1 1 0 0 0 1 1 1 2 2 1 1 0 1 1 0 2 1 0 1 1 1 0 1 2 1 2 2 1 2 1 1 2 1 0 1 1 1 1 0 0 1 2 1 2 1 1 2 1 0 1 0 1 0 0 0 2 0 1 1 1 0 1 1 1 2 1 2 1 0 0 1 1 1 1 1 1 1 0 2 1 2 1 1 0 1 1 1 0 1 1 0 0 0 0 1 2 1 0 0 1 1 1 1 2 2 1 0 1 1 2 1 1 2 1 2 1 1 2 0 2 2 2 0 1 1 0 1 2 2 1 1 1 2 0 1 1 1 1 2 1 1 1 1 1 0 1 1 2 1 1 2 1 1 1 1 1 1 0 2 1 1 0 1 1 1 1 0 1 2 1 1 2 1 1 0 1 0 1 0 0 1 1 1 2 0 2 1 2 2 1 0 1 2 1 2 1 1 1 1 1 2 1 0 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 0 1 1 2 1 1 1 1 1 1 1 0 1 1 1 2 0 2 2 1 1 1 0 1 1 1 0 0 1 0 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 0 0 1 0 1 1 1 1 2 0 1 1 1 1 1 2 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 2 2 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 2] . . Insights . Each row in the dataset represents a customer, and therefore, each row is assigned a label. . df[&#39;Labels&#39;] = labels df.head() . Customer Id Age Edu Years Employed Income Card Debt Other Debt Defaulted DebtIncomeRatio Labels . 0 | 1 | 41 | 2 | 6 | 19 | 0.124 | 1.073 | 0.0 | 6.3 | 1 | . 1 | 2 | 47 | 1 | 26 | 100 | 4.582 | 8.218 | 0.0 | 12.8 | 2 | . 2 | 3 | 33 | 2 | 10 | 57 | 6.111 | 5.802 | 1.0 | 20.9 | 0 | . 3 | 4 | 29 | 2 | 4 | 19 | 0.681 | 0.516 | 0.0 | 6.3 | 1 | . 4 | 5 | 47 | 1 | 31 | 253 | 9.308 | 8.908 | 0.0 | 7.2 | 2 | . Check the centroid values by averaging the features in each cluster. . df.groupby(&#39;Labels&#39;).mean() . Customer Id Age Edu Years Employed Income Card Debt Other Debt Defaulted DebtIncomeRatio . Labels . 0 | 424.451807 | 31.891566 | 1.861446 | 3.963855 | 31.789157 | 1.576675 | 2.843355 | 0.993939 | 13.994578 | . 1 | 426.122905 | 33.817505 | 1.603352 | 7.625698 | 36.143389 | 0.853128 | 1.816855 | 0.000000 | 7.964991 | . 2 | 424.408163 | 43.000000 | 1.931973 | 17.197279 | 101.959184 | 4.220673 | 7.954483 | 0.162393 | 13.915646 | . Let&#39;s look at the distribution of customers based on their age and income. . area = np.pi * ( X[:, 1])**2 plt.scatter(X[:, 0], X[:, 3], s=area, c=labels.astype(np.float), alpha=0.5) plt.xlabel(&#39;Age&#39;, fontsize=16) plt.ylabel(&#39;Income&#39;, fontsize=16) plt.show() . from mpl_toolkits.mplot3d import Axes3D fig = plt.figure(1, figsize=(8, 6)) plt.clf() ax = Axes3D(fig, rect=[0, 0, .95, 1], elev=48, azim=134) plt.cla() ax.set_xlabel(&#39;Age&#39;) ax.set_ylabel(&#39;Income&#39;) ax.set_zlabel(&#39;DebtIncomeRatio&#39;) ax.scatter(X[:, 1], X[:, 0], X[:, 3], c= labels.astype(np.float)) . &lt;mpl_toolkits.mplot3d.art3d.Path3DCollection at 0x1a21784a90&gt; . k-means will partition the customers into three groups since we specified the algorithm to generate three clusters. The customers in each cluster are similar to each other in terms of the features included in the dataset. We can create a profile for each group, considering the common characteristics of each cluster. For example, the three clusters can be: . older, high income, and indebted | middle-aged, middle income, and financially responsible | young, low income, and indebted | . You can devise your own profiles based on the means above and come up with labels that you think best describe each cluster. .",
            "url": "https://shirolepranav.github.io/blog/segmentation/k-means%20clustering/2020/01/19/k-means-customer-segmentation.html",
            "relUrl": "/segmentation/k-means%20clustering/2020/01/19/k-means-customer-segmentation.html",
            "date": " • Jan 19, 2020"
        }
        
    
  
    
        ,"post14": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://shirolepranav.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  
    
        ,"post15": {
            "title": "Understanding k-means clustering",
            "content": "k-means clustering is a method of vector quantization, originally from signal processing, that is popular for cluster analysis in data mining. k-means clustering aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest mean, serving as a prototype of the cluster. Although it is one of the simplest models for clustering, it is vastly used in many data science applications. . import random # library for random number generation import numpy as np # library for vectorized computation import pandas as pd # library to process data as dataframes import matplotlib.pyplot as plt # plotting library # backend for rendering plots within the browser %matplotlib inline from sklearn.cluster import KMeans from sklearn.datasets.samples_generator import make_blobs print(&#39;Libraries imported.&#39;) . Libraries imported. . . k-means on a randomly generated dataset . Here are 30 data points belonging to 2 different clusters. x1 is the first feature and x2 is the second feature. . x1 = [-4.9, -3.5, 0, -4.5, -3, -1, -1.2, -4.5, -1.5, -4.5, -1, -2, -2.5, -2, -1.5, 4, 1.8, 2, 2.5, 3, 4, 2.25, 1, 0, 1, 2.5, 5, 2.8, 2, 2] x2 = [-3.5, -4, -3.5, -3, -2.9, -3, -2.6, -2.1, 0, -0.5, -0.8, -0.8, -1.5, -1.75, -1.75, 0, 0.8, 0.9, 1, 1, 1, 1.75, 2, 2.5, 2.5, 2.5, 2.5, 3, 6, 6.5] print(&#39;Datapoints defined!&#39;) . Datapoints defined! . Define a function that assigns each datapoint to a cluster. . colors_map = np.array([&#39;b&#39;, &#39;r&#39;]) def assign_members(x1, x2, centers): compare_to_first_center = np.sqrt(np.square(np.array(x1) - centers[0][0]) + np.square(np.array(x2) - centers[0][1])) compare_to_second_center = np.sqrt(np.square(np.array(x1) - centers[1][0]) + np.square(np.array(x2) - centers[1][1])) class_of_points = compare_to_first_center &gt; compare_to_second_center colors = colors_map[class_of_points + 1 - 1] return colors, class_of_points print(&#39;assign_members function defined!&#39;) . assign_members function defined! . Define a function that updates the centroid of each cluster. . def update_centers(x1, x2, class_of_points): center1 = [np.mean(np.array(x1)[~class_of_points]), np.mean(np.array(x2)[~class_of_points])] center2 = [np.mean(np.array(x1)[class_of_points]), np.mean(np.array(x2)[class_of_points])] return [center1, center2] print(&#39;assign_members function defined.&#39;) . assign_members function defined. . Define a function that plots the data points along with the cluster centroids. . def plot_points(centroids=None, colors=&#39;g&#39;, figure_title=None): # plot the figure fig = plt.figure(figsize=(15, 10)) # create a figure object ax = fig.add_subplot(1, 1, 1) centroid_colors = [&#39;bx&#39;, &#39;rx&#39;] if centroids: for (i, centroid) in enumerate(centroids): ax.plot(centroid[0], centroid[1], centroid_colors[i], markeredgewidth=5, markersize=20) plt.scatter(x1, x2, s=500, c=colors) # define the ticks xticks = np.linspace(-6, 8, 15, endpoint=True) yticks = np.linspace(-6, 6, 13, endpoint=True) # fix the horizontal axis ax.set_xticks(xticks) ax.set_yticks(yticks) # add tick labels xlabels = xticks ax.set_xticklabels(xlabels) ylabels = yticks ax.set_yticklabels(ylabels) # style the ticks ax.xaxis.set_ticks_position(&#39;bottom&#39;) ax.yaxis.set_ticks_position(&#39;left&#39;) ax.tick_params(&#39;both&#39;, length=2, width=1, which=&#39;major&#39;, labelsize=15) # add labels to axes ax.set_xlabel(&#39;x1&#39;, fontsize=20) ax.set_ylabel(&#39;x2&#39;, fontsize=20) # add title to figure ax.set_title(figure_title, fontsize=24) plt.show() print(&#39;plot_points function defined.&#39;) . plot_points function defined. . Initialize k-means: plot data points. . plot_points(figure_title=&#39;Scatter Plot of x2 vs x1&#39;) . Initialize k-means: randomly define clusters and add them to the plot. . centers = [[-2,2], [2,-2]] plot_points(centers, figure_title=&#39;k-means Initialization&#39;) . Run k-means: 4 iterations . number_of_iterations = 4 for i in range(number_of_iterations): input(&#39;Iteration {} - Press Enter to update the members of each cluster&#39;.format(i + 1)) colors, class_of_points = assign_members(x1, x2, centers) title = &#39;Iteration {} - Cluster Assignment&#39;.format(i + 1) plot_points(centers, colors, figure_title=title) input(&#39;Iteration {} - Press Enter to update the centers&#39;.format(i + 1)) centers = update_centers(x1, x2, class_of_points) title = &#39;Iteration {} - Centroid Update&#39;.format(i + 1) plot_points(centers, colors, figure_title=title) . Iteration 1 - Press Enter to update the members of each cluster . Iteration 1 - Press Enter to update the centers . Iteration 2 - Press Enter to update the members of each cluster . Iteration 2 - Press Enter to update the centers . Iteration 3 - Press Enter to update the members of each cluster . Iteration 3 - Press Enter to update the centers . Iteration 4 - Press Enter to update the members of each cluster . Iteration 4 - Press Enter to update the centers . From the above example, you can visually observe how k-means works. . . An example with thousands of datapoints . Let&#39;s use the random library to generate thousands of datapoints. . Generating the data . Set up a random seed using Numpy&#39;s random.seed() function, and set the seed to 0. . np.random.seed(0) . Make random clusters of points by usinf the make_blobs class. . The make_blobs class can take in many inputs, but we will use the following ones: Input . n_samples: The total number of points equally divided among clusters. | centers: The number of centers to generate, or the fixed center locations. | cluster_std: The standard deviation of the clusters. | . Output . X: Array of shape [n_samples, n_features]. (Feature Matrix) | The generated samples. | . y: Array of shape [n_samples]. (Response Vector) | The integer labels for cluster membership of each sample. | . . X, y = make_blobs(n_samples=5000, centers=[[4,4], [-2,-1], [2,-3], [1,1]], cluster_std=0.9) . Display the scatter plot of the randomly generated data. . plt.figure(figsize=(15, 10)) plt.scatter(X[:,0], X[:,1], marker=&#39;.&#39;) . &lt;matplotlib.collections.PathCollection at 0x1a1b47ac10&gt; . Setting up k-means . The KMeans class has many parameters that can be used, but we will use the following three: . init: Initialization method of the centroids. | Value will be: &quot;k-means++&quot;. k-means++ selects initial cluster centers for k-means clustering in a smart way to speed up convergence. | . n_clusters: The number of clusters to form as well as the number of centroids to generate. | Value will be 4 (since we have 4 centers) | . n_init: Number of times the k-means algorithm will be run with different centroid seeds. The final results will be the best output of n_init consecutive runs in terms of inertia. | . Initialize KMeans with the above parameters, where the output parameter is called k_means. . k_means = KMeans(init=&#39;k-means++&#39;, n_clusters=4, n_init=12) . Fit the KMeans model with the feature matrix X we created above. . k_means.fit(X) . KMeans(algorithm=&#39;auto&#39;, copy_x=True, init=&#39;k-means++&#39;, max_iter=300, n_clusters=4, n_init=12, n_jobs=None, precompute_distances=&#39;auto&#39;, random_state=None, tol=0.0001, verbose=0) . Grab the labels for each point in the model using the KMeans .labels_ attribute and save it as k_means_labels. . k_means_labels = k_means.labels_ k_means_labels . array([0, 3, 3, ..., 1, 0, 0], dtype=int32) . Get the coordinates of the cluster centers using KMeans .cluster_centers_ and save it as k_means_cluster_centers. . k_means_cluster_centers = k_means.cluster_centers_ k_means_cluster_centers . array([[-2.03743147, -0.99782524], [ 3.97334234, 3.98758687], [ 0.96900523, 0.98370298], [ 1.99741008, -3.01666822]]) . Visualizing the resulting clusters . Now that we have the random data generated and the KMeans model initialized, let&#39;s plot them and see what the cluster looks like. . fig = plt.figure(figsize=(15, 10)) # colors uses a color map, which will produce an array of colors based on # the number of labels. We use set(k_means_labels) to get the # unique labels. colors = plt.cm.Spectral(np.linspace(0, 1, len(set(k_means_labels)))) # create a plot ax = fig.add_subplot(1, 1, 1) # loop through the data and plot the datapoints and centroids. # k will range from 0-3, which will match the number of clusters in the dataset. for k, col in zip(range(len([[4,4], [-2, -1], [2, -3], [1, 1]])), colors): # create a list of all datapoints, where the datapoitns that are # in the cluster (ex. cluster 0) are labeled as true, else they are # labeled as false. my_members = (k_means_labels == k) # define the centroid, or cluster center. cluster_center = k_means_cluster_centers[k] # plot the datapoints with color col. ax.plot(X[my_members, 0], X[my_members, 1], &#39;w&#39;, markerfacecolor=col, marker=&#39;.&#39;) # plot the centroids with specified color, but with a darker outline ax.plot(cluster_center[0], cluster_center[1], &#39;o&#39;, markerfacecolor=col, markeredgecolor=&#39;k&#39;, markersize=6) # title of the plot ax.set_title(&#39;KMeans&#39;) # remove x-axis ticks ax.set_xticks(()) # remove y-axis ticks ax.set_yticks(()) # show the plot plt.show() .",
            "url": "https://shirolepranav.github.io/blog/k-means%20clustering/2019/12/26/k-means-clustering.html",
            "relUrl": "/k-means%20clustering/2019/12/26/k-means-clustering.html",
            "date": " • Dec 26, 2019"
        }
        
    
  
    
        ,"post16": {
            "title": "Finding the proper drug for a new patient using Decision Tree Classification",
            "content": "Imagine that you are a medical researcher compiling data for a study. You have collected data about a set of patients, all of whom suffered from the same illness. During their course of treatment, each patient responded to one of 5 medications, Drug A, Drug B, Drug C, Drug X and Y. Part of your job is to build a model to find out which drug might be appropriate for a future patient with the same illness. The feature sets of this dataset are Age, Sex, Blood Pressure, and Cholesterol of patients, and the target is the drug that each patient responded to. . In this blog post, we will use the Decision Tree classification algorithm to build a model from the historical data of patients, and their response to different medications. Then we&#39;ll use the trained decision tree to predict the class of an unknown patient or find a proper drug for a new patient. . import numpy as np import pandas as pd from sklearn.tree import DecisionTreeClassifier . df = pd.read_csv(&#39;drug200.csv&#39;, delimiter=&#39;,&#39;) df.head() . Age Sex BP Cholesterol Na_to_K Drug . 0 23 | F | HIGH | HIGH | 25.355 | drugY | . 1 47 | M | LOW | HIGH | 13.093 | drugC | . 2 47 | M | LOW | HIGH | 10.114 | drugC | . 3 28 | F | NORMAL | HIGH | 7.798 | drugX | . 4 61 | F | LOW | HIGH | 18.043 | drugY | . df.shape . (200, 6) . . Preprocessing . Declare the following variables: . X as the feature matrix (data of df) | y as the response vector (target) | . X = df[[&#39;Age&#39;, &#39;Sex&#39;, &#39;BP&#39;, &#39;Cholesterol&#39;, &#39;Na_to_K&#39;]].values X[0:5] . array([[23, &#39;F&#39;, &#39;HIGH&#39;, &#39;HIGH&#39;, 25.355], [47, &#39;M&#39;, &#39;LOW&#39;, &#39;HIGH&#39;, 13.093], [47, &#39;M&#39;, &#39;LOW&#39;, &#39;HIGH&#39;, 10.113999999999999], [28, &#39;F&#39;, &#39;NORMAL&#39;, &#39;HIGH&#39;, 7.797999999999999], [61, &#39;F&#39;, &#39;LOW&#39;, &#39;HIGH&#39;, 18.043]], dtype=object) . Some features in this dataset are categorical, such as Sex and BP. Unfortunately, sklearn Decision Trees do not handle categorical variables. So convert these features to numerical values. pandas.get_dummies() converts categorical variables into dummy/indicator variables. . from sklearn import preprocessing le_sex = preprocessing.LabelEncoder() le_sex.fit([&#39;F&#39;,&#39;M&#39;]) X[:,1] = le_sex.transform(X[:,1]) le_BP = preprocessing.LabelEncoder() le_BP.fit([ &#39;LOW&#39;, &#39;NORMAL&#39;, &#39;HIGH&#39;]) X[:,2] = le_BP.transform(X[:,2]) le_Chol = preprocessing.LabelEncoder() le_Chol.fit([ &#39;NORMAL&#39;, &#39;HIGH&#39;]) X[:,3] = le_Chol.transform(X[:,3]) X[0:5] . array([[23, 0, 0, 0, 25.355], [47, 1, 1, 0, 13.093], [47, 1, 1, 0, 10.113999999999999], [28, 0, 2, 0, 7.797999999999999], [61, 0, 1, 0, 18.043]], dtype=object) . Now, fill the target variable. . y = df[&#39;Drug&#39;] y[0:5] . 0 drugY 1 drugC 2 drugC 3 drugX 4 drugY Name: Drug, dtype: object . . The Decision Tree . Train/Test Split . from sklearn.model_selection import train_test_split # train 70% of the data X_trainset, X_testset, y_trainset, y_testset = train_test_split(X, y, test_size=0.3, random_state=3) # dimensions of the sets print(&#39;The shape of the train set predictors&#39;, X_trainset.shape) print(&#39;The shape of the train set target&#39;, y_trainset.shape) print(&#39;The shape of the test set predictors&#39;, X_testset.shape) print(&#39;The shape of the test set target&#39;, y_testset.shape) . The shape of the train set predictors (140, 5) The shape of the train set target (140,) The shape of the test set predictors (60, 5) The shape of the test set target (60,) . . Modeling . First, we will create an instance of the DecisionTreeClassifier called drugTree. Inside of the classifier, specify criterion=&#39;entropy&#39; so that we can see the information gain of each node. . drugTree = DecisionTreeClassifier(criterion=&#39;entropy&#39;, max_depth=4) drugTree # shows the default parameters . DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion=&#39;entropy&#39;, max_depth=4, max_features=None, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, min_samples_leaf=1, min_samples_split=2, min_weight_fraction_leaf=0.0, presort=&#39;deprecated&#39;, random_state=None, splitter=&#39;best&#39;) . Fit the data with the training feature matrix X_trainset and the training response vector y_trainset . drugTree.fit(X_trainset, y_trainset) . DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion=&#39;entropy&#39;, max_depth=4, max_features=None, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, min_samples_leaf=1, min_samples_split=2, min_weight_fraction_leaf=0.0, presort=&#39;deprecated&#39;, random_state=None, splitter=&#39;best&#39;) . . Prediction . Let&#39;s make some predictions on the testing dataset and store it into a variable called predTree. . predTree = drugTree.predict(X_testset) . Print out predTree and y_testset if you want to visually compare the prediction to the actual values. . print(predTree[0:5]) print(y_testset[0:5]) . [&#39;drugY&#39; &#39;drugX&#39; &#39;drugX&#39; &#39;drugX&#39; &#39;drugX&#39;] 40 drugY 51 drugX 139 drugX 197 drugX 170 drugX Name: Drug, dtype: object . . Evaluation . Next, let&#39;s import metrics from sklearn and check the accuracy of our model. . from sklearn import metrics import matplotlib.pyplot as plt print(&#39;DecisoinTree;s Accuracy: &#39;, metrics.accuracy_score(y_testset, predTree)) . DecisoinTree;s Accuracy: 0.9833333333333333 . Our Decision Tree is very accurate. . Accuracy classification score computes subset accuracy, i.e. the set of labels predicted for a sample must exactly match the corresponding set of labels in y_true. . In multilabel classification, the function returns the subset accuracy. If the entire set of predicted labels for a sample strictly match with the true set of labels, then the subset accuracy is 1.0; otherwise it is 0.0. . . Visualization . Let&#39;s visualize the tree. . from sklearn.externals.six import StringIO import pydotplus import matplotlib.image as mpimg from sklearn import tree %matplotlib inline . /usr/local/lib/python3.6/dist-packages/sklearn/externals/six.py:31: FutureWarning: The module is deprecated in version 0.21 and will be removed in version 0.23 since we&#39;ve dropped support for Python 2.7. Please rely on the official version of six (https://pypi.org/project/six/). &#34;(https://pypi.org/project/six/).&#34;, FutureWarning) . dot_data = StringIO() filename = &quot;drugtree.png&quot; featureNames = df.columns[0:5] targetNames = df[&quot;Drug&quot;].unique().tolist() out=tree.export_graphviz(drugTree,feature_names=featureNames, out_file=dot_data, class_names= np.unique(y_trainset), filled=True, special_characters=True,rotate=False) graph = pydotplus.graph_from_dot_data(dot_data.getvalue()) graph.write_png(filename) img = mpimg.imread(filename) plt.figure(figsize=(20, 40)) plt.imshow(img,interpolation=&#39;nearest&#39;) . &lt;matplotlib.image.AxesImage at 0x7f0a6b0afc50&gt; .",
            "url": "https://shirolepranav.github.io/blog/decision%20trees/classification/2019/12/10/decision-trees-drug.html",
            "relUrl": "/decision%20trees/classification/2019/12/10/decision-trees-drug.html",
            "date": " • Dec 10, 2019"
        }
        
    
  
    
        ,"post17": {
            "title": "Customer Classification using K-Nearest Neighbors",
            "content": "Imagine a telecommunications provider has segmented its customer base by service usage patterns, categorizing the customers into four groups. If demographic data can be used to predict group membership, the company can customize offers for individual prospective customers. It is a classification problem. That is, given the dataset, with predefined labels, we need to build a model to be used to predict class of a new or unknown case. . The example focuses on using demographic data, such as region, age, and marital, to predict usage patterns. . The target field, called custcat, has four possible values that correspond to the four customer groups, as follows: . 1- Basic Service | 2- E-Service | 3- Plus Service | 4- Total Service | . In this blog post, we will build a classifier to predict the class of unknown cases. We will use a specific type of classification called K-Nearest Neighbors. . K-Nearest Neighbors is an algorithm for supervised learning, where the data is trained with data points corresponding to their classification. Once a point is predicted, it takes into account the &#39;K&#39; nearest points to it to determine its classification. . import itertools import numpy as np import matplotlib.pyplot as plt from matplotlib.ticker import NullFormatter import pandas as pd from sklearn import preprocessing %matplotlib inline . df = pd.read_csv(&#39;teleCust1000t.csv&#39;) df.head() . region tenure age marital address income ed employ retire gender reside custcat . 0 2 | 13 | 44 | 1 | 9 | 64.0 | 4 | 5 | 0.0 | 0 | 2 | 1 | . 1 3 | 11 | 33 | 1 | 7 | 136.0 | 5 | 5 | 0.0 | 0 | 6 | 4 | . 2 3 | 68 | 52 | 1 | 24 | 116.0 | 1 | 29 | 0.0 | 1 | 2 | 3 | . 3 2 | 33 | 33 | 0 | 12 | 33.0 | 2 | 0 | 0.0 | 1 | 1 | 1 | . 4 2 | 23 | 30 | 1 | 9 | 30.0 | 1 | 2 | 0.0 | 0 | 4 | 3 | . . Analyze the data . df.shape . (1000, 12) . How many customers of each class are present in the dataset? . df[&#39;custcat&#39;].value_counts() . 3 281 1 266 4 236 2 217 Name: custcat, dtype: int64 . There are . 281 customers in the &#39;Plus Service&#39; category | 266 in the &#39;Basic Service&#39; category | 236 in the &#39;Total Service&#39; category | 217 in the &#39;E-Service&#39; category. | . Explore the data using histograms. . viz = df[[&#39;income&#39;, &#39;age&#39;, &#39;employ&#39;, &#39;reside&#39;]] viz.hist() plt.show() . Define the feature set, X. . df.columns . Index([&#39;region&#39;, &#39;tenure&#39;, &#39;age&#39;, &#39;marital&#39;, &#39;address&#39;, &#39;income&#39;, &#39;ed&#39;, &#39;employ&#39;, &#39;retire&#39;, &#39;gender&#39;, &#39;reside&#39;, &#39;custcat&#39;], dtype=&#39;object&#39;) . To use the scikit-learn library, convert the Pandas dataframe to a Numpy array. . X = df[[&#39;region&#39;, &#39;tenure&#39;, &#39;age&#39;, &#39;marital&#39;, &#39;address&#39;, &#39;income&#39;, &#39;ed&#39;, &#39;employ&#39;, &#39;retire&#39;, &#39;gender&#39;, &#39;reside&#39;]].values X[0:5] . array([[ 2., 13., 44., 1., 9., 64., 4., 5., 0., 0., 2.], [ 3., 11., 33., 1., 7., 136., 5., 5., 0., 0., 6.], [ 3., 68., 52., 1., 24., 116., 1., 29., 0., 1., 2.], [ 2., 33., 33., 0., 12., 33., 2., 0., 0., 1., 1.], [ 2., 23., 30., 1., 9., 30., 1., 2., 0., 0., 4.]]) . y = df[&#39;custcat&#39;].values y[0:5] . array([1, 4, 3, 1, 3], dtype=int64) . . Normalize the data . X = preprocessing.StandardScaler().fit(X).transform(X.astype(float)) X[0:5] . array([[-0.02696767, -1.055125 , 0.18450456, 1.0100505 , -0.25303431, -0.12650641, 1.0877526 , -0.5941226 , -0.22207644, -1.03459817, -0.23065004], [ 1.19883553, -1.14880563, -0.69181243, 1.0100505 , -0.4514148 , 0.54644972, 1.9062271 , -0.5941226 , -0.22207644, -1.03459817, 2.55666158], [ 1.19883553, 1.52109247, 0.82182601, 1.0100505 , 1.23481934, 0.35951747, -1.36767088, 1.78752803, -0.22207644, 0.96655883, -0.23065004], [-0.02696767, -0.11831864, -0.69181243, -0.9900495 , 0.04453642, -0.41625141, -0.54919639, -1.09029981, -0.22207644, 0.96655883, -0.92747794], [-0.02696767, -0.58672182, -0.93080797, 1.0100505 , -0.25303431, -0.44429125, -1.36767088, -0.89182893, -0.22207644, -1.03459817, 1.16300577]]) . . Train/Test Split . from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=4) print(&#39;Train set: &#39;, X_train.shape, y_train.shape) print(&#39;Test set: &#39;, X_test.shape, y_test.shape) . Train set: (800, 11) (800,) Test set: (200, 11) (200,) . . KNN Classification . from sklearn.neighbors import KNeighborsClassifier . Training . Let&#39;s start the algorithm with k=4. . k = 4 neigh = KNeighborsClassifier(n_neighbors=k).fit(X_train, y_train) neigh . KNeighborsClassifier(algorithm=&#39;auto&#39;, leaf_size=30, metric=&#39;minkowski&#39;, metric_params=None, n_jobs=None, n_neighbors=4, p=2, weights=&#39;uniform&#39;) . Predicting . yhat = neigh.predict(X_test) yhat[0:5] . array([1, 1, 3, 2, 4], dtype=int64) . Evaluating . In multilabel classification, accuracy classification score is a function that computes subset accuracy. This function is equal to the jaccard_similarity_score function. Essentially, it calculates how closely the actual labels and predicted labels are matched in the test set. . from sklearn import metrics print(&#39;Train set accuracy: &#39;, metrics.accuracy_score(y_train, neigh.predict(X_train))) print(&#39;Test set accuracy: &#39;, metrics.accuracy_score(y_test, yhat)) . Train set accuracy: 0.5475 Test set accuracy: 0.32 . . Different K values . Calculate the accuracy of KNN for different K values. . Ks = 10 mean_acc = np.zeros((Ks-1)) std_acc = np.zeros((Ks-1)) ConfusionMx = []; for n in range(1, Ks): # train model and predict neigh = KNeighborsClassifier(n_neighbors = n).fit(X_train, y_train) yhat = neigh.predict(X_test) mean_acc[n-1] = metrics.accuracy_score(y_test, yhat) std_acc[n-1] = np.std(yhat==y_test) / np.sqrt(yhat.shape[0]) mean_acc . array([0.3 , 0.29 , 0.315, 0.32 , 0.315, 0.31 , 0.335, 0.325, 0.34 ]) . Plot model accuracy for different number of Neighbors . plt.plot(range(1,Ks), mean_acc, &#39;g&#39;) plt.fill_between(range(1,Ks), mean_acc - 1*std_acc,mean_acc + 1*std_acc, alpha=0.1) plt.legend((&#39;Accuracy &#39;, &#39;+/- 3xstd&#39;)) plt.ylabel(&#39;Accuracy&#39;) plt.xlabel(&#39;Number of Neighbors (K)&#39;) plt.tight_layout() plt.show() . print(&#39;The best accuracy was with&#39;, mean_acc.max(), &#39;with k=&#39;, mean_acc.argmax()+1) . The best accuracy was with 0.34 with k= 9 . Evaluate the above code with k=16. . k = 9 neigh = KNeighborsClassifier(n_neighbors=k).fit(X_train, y_train) neigh . KNeighborsClassifier(algorithm=&#39;auto&#39;, leaf_size=30, metric=&#39;minkowski&#39;, metric_params=None, n_jobs=None, n_neighbors=9, p=2, weights=&#39;uniform&#39;) . yhat = neigh.predict(X_test) yhat[0:5] . array([3, 1, 3, 2, 4], dtype=int64) . from sklearn import metrics print(&#39;Train set accuracy: &#39;, metrics.accuracy_score(y_train, neigh.predict(X_train))) print(&#39;Test set accuracy: &#39;, metrics.accuracy_score(y_test, yhat)) . Train set accuracy: 0.5025 Test set accuracy: 0.34 .",
            "url": "https://shirolepranav.github.io/blog/k-nearest-neighbors/modeling/classification/2019/12/02/customer-classification-knn.html",
            "relUrl": "/k-nearest-neighbors/modeling/classification/2019/12/02/customer-classification-knn.html",
            "date": " • Dec 2, 2019"
        }
        
    
  
    
        ,"post18": {
            "title": "Fuel Consumption and Emission Ratings of all Cars in Canada with model year 2019",
            "content": "In this blog post, we will use scikit-learn to implement different types of linear regression on our dataset. Then, we will split our data into training and testing sets, create a model using the training set, evaluate the model using a test set, and finally use the model to predict an unknown value. The dataset is related to the Fuel Consumption and Carbon Dioxide Emission of all cars for retail sale in Canada in the year 2019. You can download the dataset here: https://open.canada.ca/data/en/dataset/98f1a129-f628-4ce4-b24d-6f16bf24dd64 . Understanding the data: Model: 4WD/4X4 = Four-wheel drive, AWD = All-wheel drive, FFV = Flexible-fuel vehicle, SWB = Short wheelbase, LWB = Long wheelbase, EWB = Extended wheelbase Transmission: A = automatic, AM = automated manual, AS = automatic with select shift, AV = continuously variable, M = manual, 3 – 10 = Number of gears Fuel type: X = regular gasoline, Z = premium gasoline, D = diesel, E = ethanol (E85), N = natural gas Fuel consumption: City and highway fuel consumption ratings are shown in litres per 100 kilometres (L/100 km); the combined rating (55% city, 45% hwy) is shown in L/100 km and in miles per imperial gallon (mpg) CO2 emissions: the tailpipe emissions of carbon dioxide (in grams per kilometre) for combined city and highway driving CO2 rating: the tailpipe emissions of carbon dioxide rated on a scale from 1 (worst) to 10 (best) Smog rating: the tailpipe emissions of smog-forming pollutants rated on a scale from 1 (worst) to 10 (best) . import matplotlib.pyplot as plt import pandas as pd import pylab as pl import numpy as np %matplotlib inline . . Explore the data . Read the data into a pandas dataframe. . df = pd.read_csv(&#39;MY2019 Fuel Consumption Ratings.csv&#39;, skipfooter=30) df.head() . C: Users prana Anaconda3 lib site-packages ipykernel_launcher.py:1: ParserWarning: Falling back to the &#39;python&#39; engine because the &#39;c&#39; engine does not support skipfooter; you can avoid this warning by specifying engine=&#39;python&#39;. &#34;&#34;&#34;Entry point for launching an IPython kernel. . Model Year Make Model Vehicle Class Engine Size (L) Cylinders Transmission Fuel Type Fuel Consumption City (L/100 km) Fuel Consumption Hwy (L/100 km) Fuel Consumption Comb (L/100 km) Fuel Consumption Comb (mpg) CO2 Emissions (g/km) CO2 Rating Smog Rating . 0 2019 | Acura | ILX | Compact | 2.4 | 4 | AM8 | Z | 9.9 | 7.0 | 8.6 | 33 | 199 | 6 | 3 | . 1 2019 | Acura | MDX SH-AWD | SUV: Small | 3.5 | 6 | AS9 | Z | 12.2 | 9.0 | 10.8 | 26 | 252 | 4 | 3 | . 2 2019 | Acura | MDX SH-AWD A-SPEC | SUV: Small | 3.5 | 6 | AS9 | Z | 12.2 | 9.5 | 11.0 | 26 | 258 | 4 | 3 | . 3 2019 | Acura | MDX Hybrid AWD | SUV: Small | 3.0 | 6 | AM7 | Z | 9.1 | 9.0 | 9.0 | 31 | 210 | 5 | 3 | . 4 2019 | Acura | NSX | Two-seater | 3.5 | 6 | AM9 | Z | 11.1 | 10.8 | 11.0 | 26 | 261 | 4 | 3 | . df.shape . (1041, 15) . df.describe() . Model Year Engine Size (L) Cylinders Fuel Consumption City (L/100 km) Fuel Consumption Hwy (L/100 km) Fuel Consumption Comb (L/100 km) Fuel Consumption Comb (mpg) CO2 Emissions (g/km) CO2 Rating Smog Rating . count 1041.0 | 1041.000000 | 1041.000000 | 1041.000000 | 1041.000000 | 1041.000000 | 1041.000000 | 1041.000000 | 1041.000000 | 1041.000000 | . mean 2019.0 | 3.114121 | 5.603266 | 12.382901 | 9.041114 | 10.876657 | 27.633045 | 251.396734 | 4.557157 | 4.128722 | . std 0.0 | 1.316896 | 1.797741 | 3.301165 | 2.053922 | 2.702855 | 7.332346 | 57.134349 | 1.655076 | 1.789056 | . min 2019.0 | 1.000000 | 3.000000 | 4.200000 | 4.000000 | 4.100000 | 13.000000 | 96.000000 | 1.000000 | 1.000000 | . 25% 2019.0 | 2.000000 | 4.000000 | 10.200000 | 7.600000 | 9.100000 | 22.000000 | 212.000000 | 3.000000 | 3.000000 | . 50% 2019.0 | 3.000000 | 6.000000 | 12.100000 | 8.800000 | 10.600000 | 27.000000 | 248.000000 | 4.000000 | 5.000000 | . 75% 2019.0 | 3.600000 | 6.000000 | 14.300000 | 10.200000 | 12.600000 | 31.000000 | 290.000000 | 5.000000 | 5.000000 | . max 2019.0 | 8.000000 | 16.000000 | 26.800000 | 17.200000 | 22.200000 | 69.000000 | 522.000000 | 10.000000 | 7.000000 | . Let&#39;s rename the columns for the sake of simplicity. . df.rename(columns={&#39;Engine Size (L)&#39;:&#39;Engine_Size&#39;, &#39;Fuel Consumption Comb (L/100 km)&#39;:&#39;Fuel_Consumption&#39;, &#39;CO2 Emissions (g/km)&#39;:&#39;CO2_Emissions&#39;}, inplace=True) df.head(2) . Model Year Make Model Vehicle Class Engine_Size Cylinders Transmission Fuel Type Fuel Consumption City (L/100 km) Fuel Consumption Hwy (L/100 km) Fuel_Consumption Fuel Consumption Comb (mpg) CO2_Emissions CO2 Rating Smog Rating . 0 2019 | Acura | ILX | Compact | 2.4 | 4 | AM8 | Z | 9.9 | 7.0 | 8.6 | 33 | 199 | 6 | 3 | . 1 2019 | Acura | MDX SH-AWD | SUV: Small | 3.5 | 6 | AS9 | Z | 12.2 | 9.0 | 10.8 | 26 | 252 | 4 | 3 | . cdf = df[[&#39;Engine_Size&#39;, &#39;Cylinders&#39;, &#39;Fuel_Consumption&#39;, &#39;CO2_Emissions&#39;]] cdf.head() . Engine_Size Cylinders Fuel_Consumption CO2_Emissions . 0 2.4 | 4 | 8.6 | 199 | . 1 3.5 | 6 | 10.8 | 252 | . 2 3.5 | 6 | 11.0 | 258 | . 3 3.0 | 6 | 9.0 | 210 | . 4 3.5 | 6 | 11.0 | 261 | . We can plot each of these features to determine their frequency distribution. . viz = cdf[[&#39;Engine_Size&#39;, &#39;Cylinders&#39;, &#39;Fuel_Consumption&#39;, &#39;CO2_Emissions&#39;]] viz.hist() plt.show() . Now let&#39;s plot each of these features vs the CO2 Emissions to see how linear is their relationship. . plt.scatter(cdf.Fuel_Consumption, cdf.CO2_Emissions, color=&#39;blue&#39;) plt.xlabel(&#39;Fuel Consumption&#39;) plt.ylabel(&#39;CO2 Emissions&#39;) plt.show() . plt.scatter(cdf.Engine_Size, cdf.CO2_Emissions, color=&#39;blue&#39;) plt.xlabel(&#39;Engine Size&#39;) plt.ylabel(&#39;CO2 Emissions&#39;) plt.show() . plt.scatter(cdf.Cylinders, cdf.CO2_Emissions, color=&#39;blue&#39;) plt.xlabel(&#39;No. of Cylinders&#39;) plt.ylabel(&#39;CO2 Emissions&#39;) plt.show() . . Train/Test Split . Train/Test Split involves splitting the dataset into training and testing sets respectively, which are mutually exclusive. You train with the training set and test with the testing set. . Let&#39;s split our dataset: 80% of the data for training, and the remaining 20% for testing. Create a mask to select random rows using the np.random.rand() function. . mask = np.random.rand(len(df)) &lt; 0.8 train = cdf[mask] test = cdf[~mask] . . Simple Linear Regression . Modeling . Use the sklearn package to model the data. . from sklearn import linear_model regr = linear_model.LinearRegression() train_x = np.asanyarray(train[[&#39;Engine_Size&#39;]]) train_y = np.asanyarray(train[[&#39;CO2_Emissions&#39;]]) regr.fit(train_x, train_y) # the coefficients print(&#39;Coefficients: &#39;, regr.coef_) print(&#39;Intercept&#39;, regr.intercept_) . Coefficients: [[36.13934429]] Intercept [138.26102071] . The coefficient and intercept in simple linear regression are the only two parameters of the fit line. sklearn can estimate them directly from our data. . . Plot the outputs . Let&#39;s plot the fit line over the data. . plt.scatter(train.Engine_Size, train.CO2_Emissions, color=&#39;blue&#39;) plt.plot(train_x, regr.coef_[0][0]*train_x + regr.intercept_[0], &#39;-r&#39;) plt.xlabel(&#39;Engine Size&#39;) plt.ylabel(&#39;CO2 Emissions&#39;) . Text(0, 0.5, &#39;CO2 Emissions&#39;) . . Evaluation . We compare the actual values and predicted values to calculate the accuracy of a regression model. Evaluation metrics provide insight to areas that require improvement. . There are different model evaluation metrics. We&#39;ll use MSE to calcualte the accuracy of our model based on the test set. . Mean Absolute Error: It is the mean of the absolute value of the errors. This is the easiest of the metrics to understand since it’s just the average error. | Mean Squared Error (MSE): Mean Squared Error (MSE) is the mean of the squared error. It’s more popular than Mean Absolute Error because the focus is geared more towards large errors. This is due to the squared term exponentially increasing larger errors in comparison to smaller ones. | Root Mean Squared Error (RMSE): This is the square root of the Mean Square Error. | R-squared: It is not an error, but is a popular metric for accuracy of your model. It represents how close the data are to the fitted regression line. The higher the R-squared, the better the model fits your data. Best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). | . from sklearn.metrics import r2_score test_x = np.asanyarray(test[[&#39;Engine_Size&#39;]]) test_y = np.asanyarray(test[[&#39;CO2_Emissions&#39;]]) test_y_hat = regr.predict(test_x) print(&quot;Mean absolute error: %.2f&quot; % np.mean(np.absolute(test_y_hat - test_y))) print(&quot;Residual sum of squares (MSE): %.2f&quot; % np.mean((test_y_hat - test_y)**2)) print(&quot;R2-score: %.2f&quot; % r2_score(test_y_hat , test_y)) . Mean absolute error: 23.94 Residual sum of squares (MSE): 955.46 R2-score: 0.57 . . Multiple Linear Regression . In reality, there are multiple variables that predict CO2 emissions. When more than one independent variable is present, the process is called multiple linear regression. . Modeling . regr = linear_model.LinearRegression() train_x = np.asanyarray(train[[&#39;Engine_Size&#39;, &#39;Cylinders&#39;, &#39;Fuel_Consumption&#39;]]) train_y = np.asanyarray(train[[&#39;CO2_Emissions&#39;]]) regr.fit(train_x, train_y) # the coefficients print(&#39;Coefficients: &#39;, regr.coef_) print(&#39;Intercept&#39;, regr.intercept_) . Coefficients: [[ 4.56544675 4.79488067 15.1778644 ]] Intercept [44.85260676] . The coefficients and intercept are the parameters of the fit line. Given that it is a mulitple linear regression, with 3 parameters, sklearn can estimate them from our data. . . Prediction . y_hat = regr.predict(test[[&#39;Engine_Size&#39;, &#39;Cylinders&#39;, &#39;Fuel_Consumption&#39;]]) x = np.asanyarray(test[[&#39;Engine_Size&#39;, &#39;Cylinders&#39;, &#39;Fuel_Consumption&#39;]]) y = np.asanyarray(test[[&#39;CO2_Emissions&#39;]]) print(&#39;Residual sum of squares (MSE): %.2f&#39; % np.mean((y_hat - y)**2)) print(&#39;Variance score:%.2f&#39; % regr.score(x, y)) . Residual sum of squares (MSE): 288.23 Variance score:0.92 . If $ hat{y}$ is the estimated target output, y the corresponding (correct) target output, and Var is Variance, the square of the standard deviation, then the explained variance is estimated as follow: . $ texttt{explainedVariance}(y, hat{y}) = 1 - frac{Var { y - hat{y} }}{Var {y }}$ The best possible score is 1.0, lower values are worse. . As suspected, the multiple linear regression model provides a higher variance score and a lower MSE. Hence, it is more accurate than the simple linear regression model. . . Polynomial Regression . Sometimes, the trend of data is not really linear, and looks curvy. In this case we can use Polynomial regression methods. In fact, many different regressions exist that can be used to fit whatever the dataset looks like, such as quadratic, cubic, and so on, and it can go on and on to infinite degrees. We can call all of these polynomial regression, where the relationship between the independent variable x and the dependent variable y is modeled as an nth degree polynomial in x. PolynomialFeatures() function in Scikit-learn library, derives a new feature set from the original feature set. That is, a matrix will be generated consisting of all polynomial combinations of the features with degree less than or equal to the specified degree. For example, lets say the original feature set has only one feature, Engine_Size. Now, if we select the degree of the polynomial to be 2, then it generates 3 features, degree=0, degree=1 and degree=2: . msk = np.random.rand(len(df)) &lt; 0.8 train = cdf[msk] test = cdf[~msk] . . Modeling . from sklearn.preprocessing import PolynomialFeatures from sklearn import linear_model train_x = np.asanyarray(train[[&#39;Engine_Size&#39;]]) train_y = np.asanyarray(train[[&#39;CO2_Emissions&#39;]]) test_x = np.asanyarray(test[[&#39;Engine_Size&#39;]]) test_y = np.asanyarray(test[[&#39;CO2_Emissions&#39;]]) poly = PolynomialFeatures(degree=2) train_x_poly = poly.fit_transform(train_x) train_x_poly . array([[ 1. , 3.5 , 12.25], [ 1. , 3.5 , 12.25], [ 1. , 3. , 9. ], ..., [ 1. , 2. , 4. ], [ 1. , 2. , 4. ], [ 1. , 2. , 4. ]]) . fit_transform takes our x values, and outputs a list of our data raised from power of 0 to power of 2 (since we set the degree of our polynomial to 2). . $ begin{bmatrix} v_1 v_2 vdots v_n end{bmatrix} $ $ longrightarrow$ $ begin{bmatrix} [ 1 &amp; v_1 &amp; v_1^2] [ 1 &amp; v_2 &amp; v_2^2] vdots &amp; vdots &amp; vdots [ 1 &amp; v_n &amp; v_n^2] end{bmatrix} $ . It looks like feature sets for multiple linear regression analysis, right? Yes. It Does. Indeed, Polynomial regression is a special case of linear regression, with the main idea of how do you select your features. Just consider replacing the $x$ with $x_1$, $x_1^2$ with $x_2$, and so on. Then the degree 2 equation would turn into: . $y = b + theta_1 x_1 + theta_2 x_2$ . Now, we can deal with it as &#39;linear regression&#39; problem. Therefore, this polynomial regression is considered to be a special case of traditional multiple linear regression. So, you can use the same mechanism as linear regression to solve such a problems. So we can use LinearRegression() function to solve it: . clf = linear_model.LinearRegression() train_y = clf.fit(train_x_poly, train_y) # the coefficients print(&#39;Coefficients: &#39;, clf.coef_) print(&#39;Intercept: &#39;, clf.intercept_) . Coefficients: [[ 0. 56.58731642 -2.65311782]] Intercept: [106.13683949] . . Plot the model . plt.scatter(train.Engine_Size, train.CO2_Emissions, color=&#39;blue&#39;) XX = np.arange(0.0, 10.0, 0.1) yy = clf.intercept_[0] + clf.coef_[0][1]*XX + clf.coef_[0][2]*np.power(XX,2) plt.plot(XX, yy, &#39;-r&#39;) plt.xlabel(&#39;Engine size&#39;) plt.ylabel(&#39;Emission&#39;) . Text(0, 0.5, &#39;Emission&#39;) . . Evaluation . from sklearn.metrics import r2_score test_x_poly = poly.fit_transform(test_x) test_y_ = clf.predict(test_x_poly) print(&#39;Mean absolute error: %.2f&#39; % np.mean(np.absolute(test_y_ - test_y))) print(&#39;Residual sum of squares (MSE): %.2f&#39; % np.mean((test_y_ - test_y)**2)) print(&#39;R2-score: %.2f&#39; % r2_score(test_y_, test_y)) . Mean absolute error: 23.76 Residual sum of squares (MSE): 970.46 R2-score: 0.59 . Let&#39;s use a polynomial regression with degree three to try to improve the model. . from sklearn.preprocessing import PolynomialFeatures from sklearn import linear_model train_x = np.asanyarray(train[[&#39;Engine_Size&#39;]]) train_y = np.asanyarray(train[[&#39;CO2_Emissions&#39;]]) test_x = np.asanyarray(test[[&#39;Engine_Size&#39;]]) test_y = np.asanyarray(test[[&#39;CO2_Emissions&#39;]]) poly3 = PolynomialFeatures(degree=3) train_x_poly3 = poly3.fit_transform(train_x) clf3 = linear_model.LinearRegression() train_y3_ = clf3.fit(train_x_poly3, train_y) # The coefficients print (&#39;Coefficients: &#39;, clf3.coef_) print (&#39;Intercept: &#39;,clf3.intercept_) #plotting plt.scatter(train.Engine_Size, train.CO2_Emissions, color=&#39;blue&#39;) XX = np.arange(0.0, 10.0, 0.1) yy = clf3.intercept_[0]+ clf3.coef_[0][1]*XX + clf3.coef_[0][2]*np.power(XX, 2) + clf3.coef_[0][3]*np.power(XX, 3) plt.plot(XX, yy, &#39;-r&#39; ) plt.xlabel(&quot;Engine size&quot;) plt.ylabel(&quot;Emission&quot;) # evaluation test_x_poly3 = poly3.fit_transform(test_x) test_y3_ = clf3.predict(test_x_poly3) print(&quot;Mean absolute error: %.2f&quot; % np.mean(np.absolute(test_y3_ - test_y))) print(&quot;Residual sum of squares (MSE): %.2f&quot; % np.mean((test_y3_ - test_y) ** 2)) print(&quot;R2-score: %.2f&quot; % r2_score(test_y3_ , test_y)) . Coefficients: [[ 0. 111.3343238 -18.52676551 1.38049377]] Intercept: [50.35011629] Mean absolute error: 23.21 Residual sum of squares (MSE): 948.62 R2-score: 0.59 . The cubic regression model only results in slightly better accuracy. .",
            "url": "https://shirolepranav.github.io/blog/regression/modeling/2019/11/05/fuel-consumption-canada.html",
            "relUrl": "/regression/modeling/2019/11/05/fuel-consumption-canada.html",
            "date": " • Nov 5, 2019"
        }
        
    
  
    
        ,"post19": {
            "title": "Analyzing China's GDP growth",
            "content": "In this blog post, we will analyze China&#39;s GDP growth from the year 1960 to 2019. If the data shows a curvy trend, then linear regression will not produce very accurate results when compared to a non-linear regression. . import numpy as np import pandas as pd import matplotlib.pyplot as plt %matplotlib inline . df = pd.read_csv(&#39;/content/china_gdp.csv&#39;) df . Year Value . 0 1960 | 5.918412e+10 | . 1 1961 | 4.955705e+10 | . 2 1962 | 4.668518e+10 | . 3 1963 | 5.009730e+10 | . 4 1964 | 5.906225e+10 | . 5 1965 | 6.970915e+10 | . 6 1966 | 7.587943e+10 | . 7 1967 | 7.205703e+10 | . 8 1968 | 6.999350e+10 | . 9 1969 | 7.871882e+10 | . 10 1970 | 9.150621e+10 | . 11 1971 | 9.856202e+10 | . 12 1972 | 1.121598e+11 | . 13 1973 | 1.367699e+11 | . 14 1974 | 1.422547e+11 | . 15 1975 | 1.611625e+11 | . 16 1976 | 1.516277e+11 | . 17 1977 | 1.723490e+11 | . 18 1978 | 1.483821e+11 | . 19 1979 | 1.768565e+11 | . 20 1980 | 1.896500e+11 | . 21 1981 | 1.943690e+11 | . 22 1982 | 2.035496e+11 | . 23 1983 | 2.289502e+11 | . 24 1984 | 2.580821e+11 | . 25 1985 | 3.074796e+11 | . 26 1986 | 2.988058e+11 | . 27 1987 | 2.713498e+11 | . 28 1988 | 3.107222e+11 | . 29 1989 | 3.459575e+11 | . 30 1990 | 3.589732e+11 | . 31 1991 | 3.814547e+11 | . 32 1992 | 4.249341e+11 | . 33 1993 | 4.428746e+11 | . 34 1994 | 5.622611e+11 | . 35 1995 | 7.320320e+11 | . 36 1996 | 8.608441e+11 | . 37 1997 | 9.581594e+11 | . 38 1998 | 1.025277e+12 | . 39 1999 | 1.089447e+12 | . 40 2000 | 1.205261e+12 | . 41 2001 | 1.332235e+12 | . 42 2002 | 1.461906e+12 | . 43 2003 | 1.649929e+12 | . 44 2004 | 1.941746e+12 | . 45 2005 | 2.268599e+12 | . 46 2006 | 2.729784e+12 | . 47 2007 | 3.523094e+12 | . 48 2008 | 4.558431e+12 | . 49 2009 | 5.059420e+12 | . 50 2010 | 6.039659e+12 | . 51 2011 | 7.492432e+12 | . 52 2012 | 8.461623e+12 | . 53 2013 | 9.490603e+12 | . 54 2014 | 1.035483e+13 | . 55 2015 | 1.105995e+13 | . 56 2016 | 1.123700e+13 | . 57 2017 | 1.232317e+13 | . 58 2018 | 1.389188e+13 | . 59 2019 | 1.436348e+13 | . . Plot the data . plt.figure(figsize=(8,5)) x_data, y_data = (df[&#39;Year&#39;].values, df[&#39;Value&#39;].values) plt.plot(x_data, y_data, &#39;ro&#39;) plt.ylabel(&#39;GDP&#39;) plt.xlabel(&#39;Year&#39;) plt.show() . We can see that the growth starts off slow. Then, from 2005 onwards, the growth is very significant. It decelerates slightly after the period of the 2008 global recession. . . Choosing a model . Looking at the plot, a logistic function would be a good approximation, since it has the property of starting with a slow growth, increasing growth in the middle, and then decreasing again at the end. Let&#39;s check this assumption below: . X = np.arange(-5.0, 5.0, 0.1) Y = 1.0 / (1.0 + np.exp(-X)) plt.plot(X, Y) plt.ylabel(&#39;Dependent Variable&#39;) plt.xlabel(&#39;Independent Variable&#39;) plt.show() . . Build the model . Let&#39;s build our regression model and initialize its parameters. . def sigmoid(x, Beta_1, Beta_2): y = 1/ (1 + np.exp(-Beta_1 * (x - Beta_2))) return y . Let&#39;s look at a sample sigmoid line that might fit with the data. . beta_1 = 0.1 beta_2 = 1990 # logistic function Y_pred = sigmoid(x_data, beta_1, beta_2) # plot initial prediction againts data points plt.plot(x_data, Y_pred*15000000000000) plt.plot(x_data, y_data, &#39;ro&#39;) . [&lt;matplotlib.lines.Line2D at 0x7f5c93a4d780&gt;] . Our task is to find the best parameters for the model. First, lets normalize our x and y. . xdata = x_data / max(x_data) ydata = y_data / max(y_data) . How can we find the best parameters for our fit line? We can use curve_fit, which uses non-linear least squares to fit our sigmoid function to the data. . from scipy.optimize import curve_fit popt, pcov = curve_fit(sigmoid, xdata, ydata) # print the final parameters print(&#39;beta_1=%f, beta_2=%f&#39; % (popt[0], popt[1])) . beta_1 = 571.415035, beta_2 = 0.995885 . . Plot the model . x = np.linspace(1960, 2015, 55) x = x/max(x) plt.figure(figsize=(8,5)) y = sigmoid(x, *popt) plt.plot(xdata, ydata, &#39;ro&#39;, label=&#39;data&#39;) plt.plot(x, y, linewidth=3.0, label=&#39;fit&#39;) plt.legend(loc=&#39;best&#39;) plt.ylabel(&#39;GDP&#39;) plt.xlabel(&#39;Year&#39;) plt.show() . . Train/Test Split the data . Split data into training and testing sets. . msk = np.random.randn(len(df)) &lt; 0.8 train_x = x_data[msk] test_x = xdata[~msk] train_y = y_data[msk] test_y = ydata[~msk] . Build the model using the train set. . popt, pcov = curve_fit(sigmoid, train_x, train_y) . /usr/local/lib/python3.6/dist-packages/scipy/optimize/minpack.py:808: OptimizeWarning: Covariance of the parameters could not be estimated category=OptimizeWarning) . Predict GDP using the test set. . y_hat = sigmoid(test_x, *popt) . . Evaluate the model . print(&#39;Mean absolute error: %.2f&#39; % np.mean(np.absolute(y_hat - test_y))) print(&#39;Residual sum of error (MSE): %.2f&#39; % np.mean((y_hat - test_y)**2)) from sklearn.metrics import r2_score print(&#39;R2-score: %.2f&#39; % r2_score(y_hat, test_y)) . Mean absolute error: 0.40 Residual sum of error (MSE): 0.17 R2-score: -34427.16 .",
            "url": "https://shirolepranav.github.io/blog/regression/modeling/2019/10/31/china-gdp-growth.html",
            "relUrl": "/regression/modeling/2019/10/31/china-gdp-growth.html",
            "date": " • Oct 31, 2019"
        }
        
    
  
    
        ,"post20": {
            "title": "Visualizing Immigration to Canada using a Choropleth Map",
            "content": "A Choropleth map is a thematic map in which areas are shaded or patterned in proportion to the measurement of the statistical variable being displayed on the map. It provides an easy way to visualize how a measurement varies across a geographical area or it shows the level of variability within a region. . In this blog post, we will create a Choropleth map of the world depicting immigration from various countries to Canada. The dataset is officially collected by the United Nations and contains the international migrant flows to Canada from other countries from the years 1980 to 2013. You can download the dataset here. . Note: To view the interactive maps, open the notebook in Google Colab. . import pandas as pd import numpy as np import folium . df = pd.read_excel(&#39;Canada.xlsx&#39;, skiprows=range(20), skipfooter=2) . df.head() . Type Coverage OdName AREA AreaName REG RegName DEV DevName 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 . 0 Immigrants | Foreigners | Afghanistan | 935 | Asia | 5501 | Southern Asia | 902 | Developing regions | 16 | 39 | 39 | 47 | 71 | 340 | 496 | 741 | 828 | 1076 | 1028 | 1378 | 1170 | 713 | 858 | 1537 | 2212 | 2555 | 1999 | 2395 | 3326 | 4067 | 3697 | 3479 | 2978 | 3436 | 3009 | 2652 | 2111 | 1746 | 1758 | 2203 | 2635 | 2004 | . 1 Immigrants | Foreigners | Albania | 908 | Europe | 925 | Southern Europe | 901 | Developed regions | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 2 | 2 | 3 | 3 | 21 | 56 | 96 | 71 | 63 | 113 | 307 | 574 | 1264 | 1816 | 1602 | 1021 | 853 | 1450 | 1223 | 856 | 702 | 560 | 716 | 561 | 539 | 620 | 603 | . 2 Immigrants | Foreigners | Algeria | 903 | Africa | 912 | Northern Africa | 902 | Developing regions | 80 | 67 | 71 | 69 | 63 | 44 | 69 | 132 | 242 | 434 | 491 | 872 | 795 | 717 | 595 | 1106 | 2054 | 1842 | 2292 | 2389 | 2867 | 3418 | 3406 | 3072 | 3616 | 3626 | 4807 | 3623 | 4005 | 5393 | 4752 | 4325 | 3774 | 4331 | . 3 Immigrants | Foreigners | American Samoa | 909 | Oceania | 957 | Polynesia | 902 | Developing regions | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 2 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 4 Immigrants | Foreigners | Andorra | 908 | Europe | 925 | Southern Europe | 901 | Developed regions | 0 | 0 | 0 | 0 | 0 | 0 | 2 | 0 | 0 | 0 | 3 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 2 | 0 | 0 | 1 | 0 | 2 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | . df.shape . (195, 43) . . Preprocessing . Let&#39;s clean up the data. . df.drop([&#39;AREA&#39;, &#39;REG&#39;, &#39;DEV&#39;, &#39;Type&#39;, &#39;Coverage&#39;], axis=1, inplace=True) . df.rename(columns={&#39;OdName&#39;:&#39;Country&#39;, &#39;AreaName&#39;:&#39;Continent&#39;, &#39;RegName&#39;:&#39;Region&#39;}, inplace=True) . df.columns = list(map(str, df.columns)) . We&#39;ll add a &#39;Total&#39; column to the dataset, which will sum the population from each country throughout the years. . df[&#39;Total&#39;] = df.sum(axis=1) . Create a &#39;years&#39; variable which we will use later for plotting. . years = list(map(str, range(1980, 2014))) . df.shape . (195, 39) . df.head() . Country Continent Region DevName 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 Total . 0 Afghanistan | Asia | Southern Asia | Developing regions | 16 | 39 | 39 | 47 | 71 | 340 | 496 | 741 | 828 | 1076 | 1028 | 1378 | 1170 | 713 | 858 | 1537 | 2212 | 2555 | 1999 | 2395 | 3326 | 4067 | 3697 | 3479 | 2978 | 3436 | 3009 | 2652 | 2111 | 1746 | 1758 | 2203 | 2635 | 2004 | 58639 | . 1 Albania | Europe | Southern Europe | Developed regions | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 2 | 2 | 3 | 3 | 21 | 56 | 96 | 71 | 63 | 113 | 307 | 574 | 1264 | 1816 | 1602 | 1021 | 853 | 1450 | 1223 | 856 | 702 | 560 | 716 | 561 | 539 | 620 | 603 | 15699 | . 2 Algeria | Africa | Northern Africa | Developing regions | 80 | 67 | 71 | 69 | 63 | 44 | 69 | 132 | 242 | 434 | 491 | 872 | 795 | 717 | 595 | 1106 | 2054 | 1842 | 2292 | 2389 | 2867 | 3418 | 3406 | 3072 | 3616 | 3626 | 4807 | 3623 | 4005 | 5393 | 4752 | 4325 | 3774 | 4331 | 69439 | . 3 American Samoa | Oceania | Polynesia | Developing regions | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 2 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 6 | . 4 Andorra | Europe | Southern Europe | Developed regions | 0 | 0 | 0 | 0 | 0 | 0 | 2 | 0 | 0 | 0 | 3 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 2 | 0 | 0 | 1 | 0 | 2 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 15 | . !wget --quiet https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/DV0101EN/labs/Data_Files/world_countries.json -O world_countries.json print(&#39;GeoJSON file downloaded!&#39;) . GeoJSON file downloaded! . Now that we have the GeoJSON file, let&#39;s create a world map, centered around [0, 0] latitude and longitude values, with an intial zoom level of 2, and using Mapbox Bright style. . world_geo = r&#39;world_countries.json&#39; # geojson file # create a plain world map world_map = folium.Map(location=[0, 0], zoom_start=2, tiles=&#39;Mapbox Bright&#39;) . Create a choropleth map. . world_map.choropleth( geo_data=world_geo, data=df, columns=[&#39;Country&#39;, &#39;Total&#39;], key_on=&#39;feature.properties.name&#39;, fill_color=&#39;YlOrRd&#39;, fill_opacity=0.7, line_opacity=0.2, legend_name=&#39;Immigration to Canada&#39; ) # display map world_map . /usr/local/lib/python3.6/dist-packages/folium/folium.py:426: FutureWarning: The choropleth method has been deprecated. Instead use the new Choropleth class, which has the same arguments. See the example notebook &#39;GeoJSON_and_choropleth&#39; for how to do this. FutureWarning . &lt;iframe src=&quot;about:blank&quot; style=&quot;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&quot; data-html=PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgPHNjcmlwdD5MX1BSRUZFUl9DQU5WQVM9ZmFsc2U7IExfTk9fVE9VQ0g9ZmFsc2U7IExfRElTQUJMRV8zRD1mYWxzZTs8L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS40LjAvZGlzdC9sZWFmbGV0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NvZGUuanF1ZXJ5LmNvbS9qcXVlcnktMS4xMi40Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvTGVhZmxldC5hd2Vzb21lLW1hcmtlcnMvMi4wLjIvbGVhZmxldC5hd2Vzb21lLW1hcmtlcnMuanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS40LjAvZGlzdC9sZWFmbGV0LmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvY3NzL2Jvb3RzdHJhcC10aGVtZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vZm9udC1hd2Vzb21lLzQuNi4zL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9yYXdjZG4uZ2l0aGFjay5jb20vcHl0aG9uLXZpc3VhbGl6YXRpb24vZm9saXVtL21hc3Rlci9mb2xpdW0vdGVtcGxhdGVzL2xlYWZsZXQuYXdlc29tZS5yb3RhdGUuY3NzIi8+CiAgICA8c3R5bGU+aHRtbCwgYm9keSB7d2lkdGg6IDEwMCU7aGVpZ2h0OiAxMDAlO21hcmdpbjogMDtwYWRkaW5nOiAwO308L3N0eWxlPgogICAgPHN0eWxlPiNtYXAge3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2JvdHRvbTowO3JpZ2h0OjA7bGVmdDowO308L3N0eWxlPgogICAgCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLAogICAgICAgIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyIgLz4KICAgIDxzdHlsZT4jbWFwX2ZhODdmMDY0MjYzMDQyOGNhNWI4ZTZhMDdjMzYzNWEyIHsKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgd2lkdGg6IDEwMC4wJTsKICAgICAgICBoZWlnaHQ6IDEwMC4wJTsKICAgICAgICBsZWZ0OiAwLjAlOwogICAgICAgIHRvcDogMC4wJTsKICAgICAgICB9CiAgICA8L3N0eWxlPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2QzLzMuNS41L2QzLm1pbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+ICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJmb2xpdW0tbWFwIiBpZD0ibWFwX2ZhODdmMDY0MjYzMDQyOGNhNWI4ZTZhMDdjMzYzNWEyIiA+PC9kaXY+CjwvYm9keT4KPHNjcmlwdD4gICAgCiAgICAKICAgIAogICAgICAgIHZhciBib3VuZHMgPSBudWxsOwogICAgCgogICAgdmFyIG1hcF9mYTg3ZjA2NDI2MzA0MjhjYTViOGU2YTA3YzM2MzVhMiA9IEwubWFwKAogICAgICAgICdtYXBfZmE4N2YwNjQyNjMwNDI4Y2E1YjhlNmEwN2MzNjM1YTInLCB7CiAgICAgICAgY2VudGVyOiBbMCwgMF0sCiAgICAgICAgem9vbTogMiwKICAgICAgICBtYXhCb3VuZHM6IGJvdW5kcywKICAgICAgICBsYXllcnM6IFtdLAogICAgICAgIHdvcmxkQ29weUp1bXA6IGZhbHNlLAogICAgICAgIGNyczogTC5DUlMuRVBTRzM4NTcsCiAgICAgICAgem9vbUNvbnRyb2w6IHRydWUsCiAgICAgICAgfSk7CgoKICAgIAogICAgdmFyIHRpbGVfbGF5ZXJfNzQ1N2Q3YWNlZmRkNDQ3NGI1MjM5ZWE0NjQ2NmMyZTUgPSBMLnRpbGVMYXllcigKICAgICAgICAnaHR0cHM6Ly97c30udGlsZXMubWFwYm94LmNvbS92My9tYXBib3gud29ybGQtYnJpZ2h0L3t6fS97eH0ve3l9LnBuZycsCiAgICAgICAgewogICAgICAgICJhdHRyaWJ1dGlvbiI6IG51bGwsCiAgICAgICAgImRldGVjdFJldGluYSI6IGZhbHNlLAogICAgICAgICJtYXhOYXRpdmVab29tIjogMTgsCiAgICAgICAgIm1heFpvb20iOiAxOCwKICAgICAgICAibWluWm9vbSI6IDAsCiAgICAgICAgIm5vV3JhcCI6IGZhbHNlLAogICAgICAgICJvcGFjaXR5IjogMSwKICAgICAgICAic3ViZG9tYWlucyI6ICJhYmMiLAogICAgICAgICJ0bXMiOiBmYWxzZQp9KS5hZGRUbyhtYXBfZmE4N2YwNjQyNjMwNDI4Y2E1YjhlNmEwN2MzNjM1YTIpOwogICAgCiAgICAgICAgICAgIHZhciBjaG9yb3BsZXRoXzVjYjkyNDhjMTE1ZjQyM2NhZWJjMzFlODVkYTQ0MGRlID0gTC5mZWF0dXJlR3JvdXAoCiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF9mYTg3ZjA2NDI2MzA0MjhjYTViOGU2YTA3YzM2MzVhMik7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgZ2VvX2pzb25fYTJkZTkwOTg0MGQ1NDJhZWE5MzNlMWMyOWNjMzExNDMgPSBMLmdlb0pzb24oCiAgICAgICAgICAgIHsiZmVhdHVyZXMiOiBbeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s2MS4yMTA4MTcsIDM1LjY1MDA3Ml0sIFs2Mi4yMzA2NTEsIDM1LjI3MDY2NF0sIFs2Mi45ODQ2NjIsIDM1LjQwNDA0MV0sIFs2My4xOTM1MzgsIDM1Ljg1NzE2Nl0sIFs2My45ODI4OTYsIDM2LjAwNzk1N10sIFs2NC41NDY0NzksIDM2LjMxMjA3M10sIFs2NC43NDYxMDUsIDM3LjExMTgxOF0sIFs2NS41ODg5NDgsIDM3LjMwNTIxN10sIFs2NS43NDU2MzEsIDM3LjY2MTE2NF0sIFs2Ni4yMTczODUsIDM3LjM5Mzc5XSwgWzY2LjUxODYwNywgMzcuMzYyNzg0XSwgWzY3LjA3NTc4MiwgMzcuMzU2MTQ0XSwgWzY3LjgzLCAzNy4xNDQ5OTRdLCBbNjguMTM1NTYyLCAzNy4wMjMxMTVdLCBbNjguODU5NDQ2LCAzNy4zNDQzMzZdLCBbNjkuMTk2MjczLCAzNy4xNTExNDRdLCBbNjkuNTE4Nzg1LCAzNy42MDg5OTddLCBbNzAuMTE2NTc4LCAzNy41ODgyMjNdLCBbNzAuMjcwNTc0LCAzNy43MzUxNjVdLCBbNzAuMzc2MzA0LCAzOC4xMzgzOTZdLCBbNzAuODA2ODIxLCAzOC40ODYyODJdLCBbNzEuMzQ4MTMxLCAzOC4yNTg5MDVdLCBbNzEuMjM5NDA0LCAzNy45NTMyNjVdLCBbNzEuNTQxOTE4LCAzNy45MDU3NzRdLCBbNzEuNDQ4NjkzLCAzNy4wNjU2NDVdLCBbNzEuODQ0NjM4LCAzNi43MzgxNzFdLCBbNzIuMTkzMDQxLCAzNi45NDgyODhdLCBbNzIuNjM2ODksIDM3LjA0NzU1OF0sIFs3My4yNjAwNTYsIDM3LjQ5NTI1N10sIFs3My45NDg2OTYsIDM3LjQyMTU2Nl0sIFs3NC45ODAwMDIsIDM3LjQxOTk5XSwgWzc1LjE1ODAyOCwgMzcuMTMzMDMxXSwgWzc0LjU3NTg5MywgMzcuMDIwODQxXSwgWzc0LjA2NzU1MiwgMzYuODM2MTc2XSwgWzcyLjkyMDAyNSwgMzYuNzIwMDA3XSwgWzcxLjg0NjI5MiwgMzYuNTA5OTQyXSwgWzcxLjI2MjM0OCwgMzYuMDc0Mzg4XSwgWzcxLjQ5ODc2OCwgMzUuNjUwNTYzXSwgWzcxLjYxMzA3NiwgMzUuMTUzMjAzXSwgWzcxLjExNTAxOSwgMzQuNzMzMTI2XSwgWzcxLjE1Njc3MywgMzQuMzQ4OTExXSwgWzcwLjg4MTgwMywgMzMuOTg4ODU2XSwgWzY5LjkzMDU0MywgMzQuMDIwMTJdLCBbNzAuMzIzNTk0LCAzMy4zNTg1MzNdLCBbNjkuNjg3MTQ3LCAzMy4xMDU0OTldLCBbNjkuMjYyNTIyLCAzMi41MDE5NDRdLCBbNjkuMzE3NzY0LCAzMS45MDE0MTJdLCBbNjguOTI2Njc3LCAzMS42MjAxODldLCBbNjguNTU2OTMyLCAzMS43MTMzMV0sIFs2Ny43OTI2ODksIDMxLjU4MjkzXSwgWzY3LjY4MzM5NCwgMzEuMzAzMTU0XSwgWzY2LjkzODg5MSwgMzEuMzA0OTExXSwgWzY2LjM4MTQ1OCwgMzAuNzM4ODk5XSwgWzY2LjM0NjQ3MywgMjkuODg3OTQzXSwgWzY1LjA0Njg2MiwgMjkuNDcyMTgxXSwgWzY0LjM1MDQxOSwgMjkuNTYwMDMxXSwgWzY0LjE0ODAwMiwgMjkuMzQwODE5XSwgWzYzLjU1MDI2MSwgMjkuNDY4MzMxXSwgWzYyLjU0OTg1NywgMjkuMzE4NTcyXSwgWzYwLjg3NDI0OCwgMjkuODI5MjM5XSwgWzYxLjc4MTIyMiwgMzAuNzM1ODVdLCBbNjEuNjk5MzE0LCAzMS4zNzk1MDZdLCBbNjAuOTQxOTQ1LCAzMS41NDgwNzVdLCBbNjAuODYzNjU1LCAzMi4xODI5Ml0sIFs2MC41MzYwNzgsIDMyLjk4MTI2OV0sIFs2MC45NjM3LCAzMy41Mjg4MzJdLCBbNjAuNTI4NDMsIDMzLjY3NjQ0Nl0sIFs2MC44MDMxOTMsIDM0LjQwNDEwMl0sIFs2MS4yMTA4MTcsIDM1LjY1MDA3Ml1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQUZHIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJBZmdoYW5pc3RhbiIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbWzE2LjMyNjUyOCwgLTUuODc3NDddLCBbMTYuNTczMTgsIC02LjYyMjY0NV0sIFsxNi44NjAxOTEsIC03LjIyMjI5OF0sIFsxNy4wODk5OTYsIC03LjU0NTY4OV0sIFsxNy40NzI5NywgLTguMDY4NTUxXSwgWzE4LjEzNDIyMiwgLTcuOTg3Njc4XSwgWzE4LjQ2NDE3NiwgLTcuODQ3MDE0XSwgWzE5LjAxNjc1MiwgLTcuOTg4MjQ2XSwgWzE5LjE2NjYxMywgLTcuNzM4MTg0XSwgWzE5LjQxNzUwMiwgLTcuMTU1NDI5XSwgWzIwLjAzNzcyMywgLTcuMTE2MzYxXSwgWzIwLjA5MTYyMiwgLTYuOTQzMDldLCBbMjAuNjAxODIzLCAtNi45MzkzMThdLCBbMjAuNTE0NzQ4LCAtNy4yOTk2MDZdLCBbMjEuNzI4MTExLCAtNy4yOTA4NzJdLCBbMjEuNzQ2NDU2LCAtNy45MjAwODVdLCBbMjEuOTQ5MTMxLCAtOC4zMDU5MDFdLCBbMjEuODAxODAxLCAtOC45MDg3MDddLCBbMjEuODc1MTgyLCAtOS41MjM3MDhdLCBbMjIuMjA4NzUzLCAtOS44OTQ3OTZdLCBbMjIuMTU1MjY4LCAtMTEuMDg0ODAxXSwgWzIyLjQwMjc5OCwgLTEwLjk5MzA3NV0sIFsyMi44MzczNDUsIC0xMS4wMTc2MjJdLCBbMjMuNDU2NzkxLCAtMTAuODY3ODYzXSwgWzIzLjkxMjIxNSwgLTEwLjkyNjgyNl0sIFsyNC4wMTc4OTQsIC0xMS4yMzcyOThdLCBbMjMuOTA0MTU0LCAtMTEuNzIyMjgyXSwgWzI0LjA3OTkwNSwgLTEyLjE5MTI5N10sIFsyMy45MzA5MjIsIC0xMi41NjU4NDhdLCBbMjQuMDE2MTM3LCAtMTIuOTExMDQ2XSwgWzIxLjkzMzg4NiwgLTEyLjg5ODQzN10sIFsyMS44ODc4NDMsIC0xNi4wODAzMV0sIFsyMi41NjI0NzgsIC0xNi44OTg0NTFdLCBbMjMuMjE1MDQ4LCAtMTcuNTIzMTE2XSwgWzIxLjM3NzE3NiwgLTE3LjkzMDYzNl0sIFsxOC45NTYxODcsIC0xNy43ODkwOTVdLCBbMTguMjYzMzA5LCAtMTcuMzA5OTUxXSwgWzE0LjIwOTcwNywgLTE3LjM1MzEwMV0sIFsxNC4wNTg1MDEsIC0xNy40MjMzODFdLCBbMTMuNDYyMzYyLCAtMTYuOTcxMjEyXSwgWzEyLjgxNDA4MSwgLTE2Ljk0MTM0M10sIFsxMi4yMTU0NjEsIC0xNy4xMTE2NjhdLCBbMTEuNzM0MTk5LCAtMTcuMzAxODg5XSwgWzExLjY0MDA5NiwgLTE2LjY3MzE0Ml0sIFsxMS43Nzg1MzcsIC0xNS43OTM4MTZdLCBbMTIuMTIzNTgxLCAtMTQuODc4MzE2XSwgWzEyLjE3NTYxOSwgLTE0LjQ0OTE0NF0sIFsxMi41MDAwOTUsIC0xMy41NDc3XSwgWzEyLjczODQ3OSwgLTEzLjEzNzkwNl0sIFsxMy4zMTI5MTQsIC0xMi40ODM2M10sIFsxMy42MzM3MjEsIC0xMi4wMzg2NDVdLCBbMTMuNzM4NzI4LCAtMTEuMjk3ODYzXSwgWzEzLjY4NjM3OSwgLTEwLjczMTA3Nl0sIFsxMy4zODczMjgsIC0xMC4zNzM1NzhdLCBbMTMuMTIwOTg4LCAtOS43NjY4OTddLCBbMTIuODc1MzcsIC05LjE2NjkzNF0sIFsxMi45MjkwNjEsIC04Ljk1OTA5MV0sIFsxMy4yMzY0MzMsIC04LjU2MjYyOV0sIFsxMi45MzMwNCwgLTcuNTk2NTM5XSwgWzEyLjcyODI5OCwgLTYuOTI3MTIyXSwgWzEyLjIyNzM0NywgLTYuMjk0NDQ4XSwgWzEyLjMyMjQzMiwgLTYuMTAwMDkyXSwgWzEyLjczNTE3MSwgLTUuOTY1NjgyXSwgWzEzLjAyNDg2OSwgLTUuOTg0Mzg5XSwgWzEzLjM3NTU5NywgLTUuODY0MjQxXSwgWzE2LjMyNjUyOCwgLTUuODc3NDddXV0sIFtbWzEyLjQzNjY4OCwgLTUuNjg0MzA0XSwgWzEyLjE4MjMzNywgLTUuNzg5OTMxXSwgWzExLjkxNDk2MywgLTUuMDM3OTg3XSwgWzEyLjMxODYwOCwgLTQuNjA2MjNdLCBbMTIuNjIwNzYsIC00LjQzODAyM10sIFsxMi45OTU1MTcsIC00Ljc4MTEwM10sIFsxMi42MzE2MTIsIC00Ljk5MTI3MV0sIFsxMi40NjgwMDQsIC01LjI0ODM2Ml0sIFsxMi40MzY2ODgsIC01LjY4NDMwNF1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiQUdPIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJBbmdvbGEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzIwLjU5MDI0NywgNDEuODU1NDA0XSwgWzIwLjQ2MzE3NSwgNDEuNTE1MDg5XSwgWzIwLjYwNTE4MiwgNDEuMDg2MjI2XSwgWzIxLjAyMDA0LCA0MC44NDI3MjddLCBbMjAuOTk5OTksIDQwLjU4MDAwNF0sIFsyMC42NzQ5OTcsIDQwLjQzNV0sIFsyMC42MTUsIDQwLjExMDAwN10sIFsyMC4xNTAwMTYsIDM5LjYyNDk5OF0sIFsxOS45OCwgMzkuNjk0OTkzXSwgWzE5Ljk2MDAwMiwgMzkuOTE1MDA2XSwgWzE5LjQwNjA4MiwgNDAuMjUwNzczXSwgWzE5LjMxOTA1OSwgNDAuNzI3MjNdLCBbMTkuNDAzNTUsIDQxLjQwOTU2Nl0sIFsxOS41NDAwMjcsIDQxLjcxOTk4Nl0sIFsxOS4zNzE3NjksIDQxLjg3NzU0OF0sIFsxOS4zMDQ0ODYsIDQyLjE5NTc0NV0sIFsxOS43MzgwNTEsIDQyLjY4ODI0N10sIFsxOS44MDE2MTMsIDQyLjUwMDA5M10sIFsyMC4wNzA3LCA0Mi41ODg2M10sIFsyMC4yODM3NTUsIDQyLjMyMDI2XSwgWzIwLjUyMjk1LCA0Mi4yMTc4N10sIFsyMC41OTAyNDcsIDQxLjg1NTQwNF1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQUxCIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJBbGJhbmlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s1MS41Nzk1MTksIDI0LjI0NTQ5N10sIFs1MS43NTc0NDEsIDI0LjI5NDA3M10sIFs1MS43OTQzODksIDI0LjAxOTgyNl0sIFs1Mi41NzcwODEsIDI0LjE3NzQzOV0sIFs1My40MDQwMDcsIDI0LjE1MTMxN10sIFs1NC4wMDgwMDEsIDI0LjEyMTc1OF0sIFs1NC42OTMwMjQsIDI0Ljc5Nzg5Ml0sIFs1NS40MzkwMjUsIDI1LjQzOTE0NV0sIFs1Ni4wNzA4MjEsIDI2LjA1NTQ2NF0sIFs1Ni4yNjEwNDIsIDI1LjcxNDYwNl0sIFs1Ni4zOTY4NDcsIDI0LjkyNDczMl0sIFs1NS44ODYyMzMsIDI0LjkyMDgzMV0sIFs1NS44MDQxMTksIDI0LjI2OTYwNF0sIFs1NS45ODEyMTQsIDI0LjEzMDU0M10sIFs1NS41Mjg2MzIsIDIzLjkzMzYwNF0sIFs1NS41MjU4NDEsIDIzLjUyNDg2OV0sIFs1NS4yMzQ0ODksIDIzLjExMDk5M10sIFs1NS4yMDgzNDEsIDIyLjcwODMzXSwgWzU1LjAwNjgwMywgMjIuNDk2OTQ4XSwgWzUyLjAwMDczMywgMjMuMDAxMTU0XSwgWzUxLjYxNzcwOCwgMjQuMDE0MjE5XSwgWzUxLjU3OTUxOSwgMjQuMjQ1NDk3XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJBUkUiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbLTY1LjUsIC01NS4yXSwgWy02Ni40NSwgLTU1LjI1XSwgWy02Ni45NTk5MiwgLTU0Ljg5NjgxXSwgWy02Ny41NjI0NCwgLTU0Ljg3MDAxXSwgWy02OC42MzMzNSwgLTU0Ljg2OTVdLCBbLTY4LjYzNDAxLCAtNTIuNjM2MzddLCBbLTY4LjI1LCAtNTMuMV0sIFstNjcuNzUsIC01My44NV0sIFstNjYuNDUsIC01NC40NV0sIFstNjUuMDUsIC01NC43XSwgWy02NS41LCAtNTUuMl1dXSwgW1tbLTY0Ljk2NDg5MiwgLTIyLjA3NTg2Ml0sIFstNjQuMzc3MDIxLCAtMjIuNzk4MDkxXSwgWy02My45ODY4MzgsIC0yMS45OTM2NDRdLCBbLTYyLjg0NjQ2OCwgLTIyLjAzNDk4NV0sIFstNjIuNjg1MDU3LCAtMjIuMjQ5MDI5XSwgWy02MC44NDY1NjUsIC0yMy44ODA3MTNdLCBbLTYwLjAyODk2NiwgLTI0LjAzMjc5Nl0sIFstNTguODA3MTI4LCAtMjQuNzcxNDU5XSwgWy01Ny43NzcyMTcsIC0yNS4xNjIzNF0sIFstNTcuNjMzNjYsIC0yNS42MDM2NTddLCBbLTU4LjYxODE3NCwgLTI3LjEyMzcxOV0sIFstNTcuNjA5NzYsIC0yNy4zOTU4OTldLCBbLTU2LjQ4NjcwMiwgLTI3LjU0ODQ5OV0sIFstNTUuNjk1ODQ2LCAtMjcuMzg3ODM3XSwgWy01NC43ODg3OTUsIC0yNi42MjE3ODZdLCBbLTU0LjYyNTI5MSwgLTI1LjczOTI1NV0sIFstNTQuMTMwMDUsIC0yNS41NDc2MzldLCBbLTUzLjYyODM0OSwgLTI2LjEyNDg2NV0sIFstNTMuNjQ4NzM1LCAtMjYuOTIzNDczXSwgWy01NC40OTA3MjUsIC0yNy40NzQ3NTddLCBbLTU1LjE2MjI4NiwgLTI3Ljg4MTkxNV0sIFstNTYuMjkwOSwgLTI4Ljg1Mjc2MV0sIFstNTcuNjI1MTMzLCAtMzAuMjE2Mjk1XSwgWy01Ny44NzQ5MzcsIC0zMS4wMTY1NTZdLCBbLTU4LjE0MjQ0LCAtMzIuMDQ0NTA0XSwgWy01OC4xMzI2NDgsIC0zMy4wNDA1NjddLCBbLTU4LjM0OTYxMSwgLTMzLjI2MzE4OV0sIFstNTguNDI3MDc0LCAtMzMuOTA5NDU0XSwgWy01OC40OTU0NDIsIC0zNC40MzE0OV0sIFstNTcuMjI1ODMsIC0zNS4yODgwMjddLCBbLTU3LjM2MjM1OSwgLTM1Ljk3NzM5XSwgWy01Ni43Mzc0ODcsIC0zNi40MTMxMjZdLCBbLTU2Ljc4ODI4NSwgLTM2LjkwMTU3Ml0sIFstNTcuNzQ5MTU3LCAtMzguMTgzODcxXSwgWy01OS4yMzE4NTcsIC0zOC43MjAyMl0sIFstNjEuMjM3NDQ1LCAtMzguOTI4NDI1XSwgWy02Mi4zMzU5NTcsIC0zOC44Mjc3MDddLCBbLTYyLjEyNTc2MywgLTM5LjQyNDEwNV0sIFstNjIuMzMwNTMxLCAtNDAuMTcyNTg2XSwgWy02Mi4xNDU5OTQsIC00MC42NzY4OTddLCBbLTYyLjc0NTgwMywgLTQxLjAyODc2MV0sIFstNjMuNzcwNDk1LCAtNDEuMTY2Nzg5XSwgWy02NC43MzIwOSwgLTQwLjgwMjY3N10sIFstNjUuMTE4MDM1LCAtNDEuMDY0MzE1XSwgWy02NC45Nzg1NjEsIC00Mi4wNTgwMDFdLCBbLTY0LjMwMzQwOCwgLTQyLjM1OTAxNl0sIFstNjMuNzU1OTQ4LCAtNDIuMDQzNjg3XSwgWy02My40NTgwNTksIC00Mi41NjMxMzhdLCBbLTY0LjM3ODgwNCwgLTQyLjg3MzU1OF0sIFstNjUuMTgxODA0LCAtNDMuNDk1MzgxXSwgWy02NS4zMjg4MjMsIC00NC41MDEzNjZdLCBbLTY1LjU2NTI2OSwgLTQ1LjAzNjc4Nl0sIFstNjYuNTA5OTY2LCAtNDUuMDM5NjI4XSwgWy02Ny4yOTM3OTQsIC00NS41NTE4OTZdLCBbLTY3LjU4MDU0NiwgLTQ2LjMwMTc3M10sIFstNjYuNTk3MDY2LCAtNDcuMDMzOTI1XSwgWy02NS42NDEwMjcsIC00Ny4yMzYxMzVdLCBbLTY1Ljk4NTA4OCwgLTQ4LjEzMzI4OV0sIFstNjcuMTY2MTc5LCAtNDguNjk3MzM3XSwgWy02Ny44MTYwODgsIC00OS44Njk2NjldLCBbLTY4LjcyODc0NSwgLTUwLjI2NDIxOF0sIFstNjkuMTM4NTM5LCAtNTAuNzMyNTFdLCBbLTY4LjgxNTU2MSwgLTUxLjc3MTEwNF0sIFstNjguMTQ5OTk1LCAtNTIuMzQ5OTgzXSwgWy02OC41NzE1NDUsIC01Mi4yOTk0NDRdLCBbLTY5LjQ5ODM2MiwgLTUyLjE0Mjc2MV0sIFstNzEuOTE0ODA0LCAtNTIuMDA5MDIyXSwgWy03Mi4zMjk0MDQsIC01MS40MjU5NTZdLCBbLTcyLjMwOTk3NCwgLTUwLjY3NzAxXSwgWy03Mi45NzU3NDcsIC01MC43NDE0NV0sIFstNzMuMzI4MDUxLCAtNTAuMzc4Nzg1XSwgWy03My40MTU0MzYsIC00OS4zMTg0MzZdLCBbLTcyLjY0ODI0NywgLTQ4Ljg3ODYxOF0sIFstNzIuMzMxMTYxLCAtNDguMjQ0MjM4XSwgWy03Mi40NDczNTUsIC00Ny43Mzg1MzNdLCBbLTcxLjkxNzI1OCwgLTQ2Ljg4NDgzOF0sIFstNzEuNTUyMDA5LCAtNDUuNTYwNzMzXSwgWy03MS42NTkzMTYsIC00NC45NzM2ODldLCBbLTcxLjIyMjc3OSwgLTQ0Ljc4NDI0M10sIFstNzEuMzI5ODAxLCAtNDQuNDA3NTIyXSwgWy03MS43OTM2MjMsIC00NC4yMDcxNzJdLCBbLTcxLjQ2NDA1NiwgLTQzLjc4NzYxMV0sIFstNzEuOTE1NDI0LCAtNDMuNDA4NTY1XSwgWy03Mi4xNDg4OTgsIC00Mi4yNTQ4ODhdLCBbLTcxLjc0NjgwNCwgLTQyLjA1MTM4Nl0sIFstNzEuOTE1NzM0LCAtNDAuODMyMzM5XSwgWy03MS42ODA3NjEsIC0zOS44MDgxNjRdLCBbLTcxLjQxMzUxNywgLTM4LjkxNjAyMl0sIFstNzAuODE0NjY0LCAtMzguNTUyOTk1XSwgWy03MS4xMTg2MjUsIC0zNy41NzY4MjddLCBbLTcxLjEyMTg4MSwgLTM2LjY1ODEyNF0sIFstNzAuMzY0NzY5LCAtMzYuMDA1MDg5XSwgWy03MC4zODgwNDksIC0zNS4xNjk2ODhdLCBbLTY5LjgxNzMwOSwgLTM0LjE5MzU3MV0sIFstNjkuODE0Nzc3LCAtMzMuMjczODg2XSwgWy03MC4wNzQzOTksIC0zMy4wOTEyMV0sIFstNzAuNTM1MDY5LCAtMzEuMzY1MDFdLCBbLTY5LjkxOTAwOCwgLTMwLjMzNjMzOV0sIFstNzAuMDEzNTUsIC0yOS4zNjc5MjNdLCBbLTY5LjY1NjEzLCAtMjguNDU5MTQxXSwgWy02OS4wMDEyMzUsIC0yNy41MjEyMTRdLCBbLTY4LjI5NTU0MiwgLTI2Ljg5OTM0XSwgWy02OC41OTQ4LCAtMjYuNTA2OTA5XSwgWy02OC4zODYwMDEsIC0yNi4xODUwMTZdLCBbLTY4LjQxNzY1MywgLTI0LjUxODU1NV0sIFstNjcuMzI4NDQzLCAtMjQuMDI1MzAzXSwgWy02Ni45ODUyMzQsIC0yMi45ODYzNDldLCBbLTY3LjEwNjY3NCwgLTIyLjczNTkyNV0sIFstNjYuMjczMzM5LCAtMjEuODMyMzFdLCBbLTY0Ljk2NDg5MiwgLTIyLjA3NTg2Ml1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiQVJHIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJBcmdlbnRpbmEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzQzLjU4Mjc0NiwgNDEuMDkyMTQzXSwgWzQ0Ljk3MjQ4LCA0MS4yNDgxMjldLCBbNDUuMTc5NDk2LCA0MC45ODUzNTRdLCBbNDUuNTYwMzUxLCA0MC44MTIyOV0sIFs0NS4zNTkxNzUsIDQwLjU2MTUwNF0sIFs0NS44OTE5MDcsIDQwLjIxODQ3Nl0sIFs0NS42MTAwMTIsIDM5Ljg5OTk5NF0sIFs0Ni4wMzQ1MzQsIDM5LjYyODAyMV0sIFs0Ni40ODM0OTksIDM5LjQ2NDE1NV0sIFs0Ni41MDU3MiwgMzguNzcwNjA1XSwgWzQ2LjE0MzYyMywgMzguNzQxMjAxXSwgWzQ1LjczNTM3OSwgMzkuMzE5NzE5XSwgWzQ1LjczOTk3OCwgMzkuNDczOTk5XSwgWzQ1LjI5ODE0NSwgMzkuNDcxNzUxXSwgWzQ1LjAwMTk4NywgMzkuNzQwMDA0XSwgWzQ0Ljc5Mzk5LCAzOS43MTMwMDNdLCBbNDQuNDAwMDA5LCA0MC4wMDVdLCBbNDMuNjU2NDM2LCA0MC4yNTM1NjRdLCBbNDMuNzUyNjU4LCA0MC43NDAyMDFdLCBbNDMuNTgyNzQ2LCA0MS4wOTIxNDNdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkFSTSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQXJtZW5pYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbWy01OS41NzIwOTUsIC04MC4wNDAxNzldLCBbLTU5Ljg2NTg0OSwgLTgwLjU0OTY1N10sIFstNjAuMTU5NjU2LCAtODEuMDAwMzI3XSwgWy02Mi4yNTUzOTMsIC04MC44NjMxNzhdLCBbLTY0LjQ4ODEyNSwgLTgwLjkyMTkzNF0sIFstNjUuNzQxNjY2LCAtODAuNTg4ODI3XSwgWy02NS43NDE2NjYsIC04MC41NDk2NTddLCBbLTY2LjI5MDAzMSwgLTgwLjI1NTc3M10sIFstNjQuMDM3Njg4LCAtODAuMjk0OTQ0XSwgWy02MS44ODMyNDYsIC04MC4zOTI4N10sIFstNjEuMTM4OTc2LCAtNzkuOTgxMzcxXSwgWy02MC42MTAxMTksIC03OS42Mjg2NzldLCBbLTU5LjU3MjA5NSwgLTgwLjA0MDE3OV1dXSwgW1tbLTE1OS4yMDgxODQsIC03OS40OTcwNTldLCBbLTE2MS4xMjc2MDEsIC03OS42MzQyMDldLCBbLTE2Mi40Mzk4NDcsIC03OS4yODE0NjVdLCBbLTE2My4wMjc0MDgsIC03OC45Mjg3NzRdLCBbLTE2My4wNjY2MDQsIC03OC44Njk5NjZdLCBbLTE2My43MTI4OTYsIC03OC41OTU2NjddLCBbLTE2My43MTI4OTYsIC03OC41OTU2NjddLCBbLTE2My4xMDU4MDEsIC03OC4yMjMzMzhdLCBbLTE2MS4yNDUxMTMsIC03OC4zODAxNzZdLCBbLTE2MC4yNDYyMDgsIC03OC42OTM2NDVdLCBbLTE1OS40ODI0MDUsIC03OS4wNDYzMzhdLCBbLTE1OS4yMDgxODQsIC03OS40OTcwNTldXV0sIFtbWy00NS4xNTQ3NTgsIC03OC4wNDcwN10sIFstNDMuOTIwODI4LCAtNzguNDc4MTAzXSwgWy00My40ODk5NSwgLTc5LjA4NTU2XSwgWy00My4zNzI0MzgsIC03OS41MTY2NDVdLCBbLTQzLjMzMzI2NywgLTgwLjAyNjEyM10sIFstNDQuODgwNTM3LCAtODAuMzM5NjQ0XSwgWy00Ni41MDYxNzQsIC04MC41OTQzNTddLCBbLTQ4LjM4NjQyMSwgLTgwLjgyOTQ4NV0sIFstNTAuNDgyMTA3LCAtODEuMDI1NDQyXSwgWy01Mi44NTE5ODgsIC04MC45NjY2ODVdLCBbLTU0LjE2NDI1OSwgLTgwLjYzMzUyOF0sIFstNTMuOTg3OTkxLCAtODAuMjIyMDI4XSwgWy01MS44NTMxMzQsIC03OS45NDc3M10sIFstNTAuOTkxMzI2LCAtNzkuNjE0NjIzXSwgWy01MC4zNjQ1OTUsIC03OS4xODM0ODddLCBbLTQ5LjkxNDEzMSwgLTc4LjgxMTIwOV0sIFstNDkuMzA2OTU5LCAtNzguNDU4NTY5XSwgWy00OC42NjA2MTYsIC03OC4wNDcwMThdLCBbLTQ4LjY2MDYxNiwgLTc4LjA0NzAxOV0sIFstNDguMTUxMzk2LCAtNzguMDQ3MDddLCBbLTQ2LjY2Mjg1NywgLTc3LjgzMTQ3Nl0sIFstNDUuMTU0NzU4LCAtNzguMDQ3MDddXV0sIFtbWy0xMjEuMjExNTExLCAtNzMuNTAwOTldLCBbLTExOS45MTg4NTEsIC03My42NTc3MjVdLCBbLTExOC43MjQxNDMsIC03My40ODEzNTNdLCBbLTExOS4yOTIxMTksIC03My44MzQwOTddLCBbLTEyMC4yMzIyMTcsIC03NC4wODg4MV0sIFstMTIxLjYyMjgzLCAtNzQuMDEwNDY4XSwgWy0xMjIuNjIxNzM1LCAtNzMuNjU3Nzc4XSwgWy0xMjIuNjIxNzM1LCAtNzMuNjU3Nzc3XSwgWy0xMjIuNDA2MjQ1LCAtNzMuMzI0NjE5XSwgWy0xMjEuMjExNTExLCAtNzMuNTAwOTldXV0sIFtbWy0xMjUuNTU5NTY2LCAtNzMuNDgxMzUzXSwgWy0xMjQuMDMxODgyLCAtNzMuODczMjY4XSwgWy0xMjQuNjE5NDY5LCAtNzMuODM0MDk3XSwgWy0xMjUuOTEyMTgxLCAtNzMuNzM2MTE4XSwgWy0xMjcuMjgzMTMsIC03My40NjE3NjldLCBbLTEyNy4yODMxMywgLTczLjQ2MTc2OF0sIFstMTI2LjU1ODQ3MiwgLTczLjI0NjIyNl0sIFstMTI1LjU1OTU2NiwgLTczLjQ4MTM1M11dXSwgW1tbLTk4Ljk4MTU1LCAtNzEuOTMzMzM0XSwgWy05Ny44ODQ3NDMsIC03Mi4wNzA1MzVdLCBbLTk2Ljc4NzkzNywgLTcxLjk1Mjk3MV0sIFstOTYuMjAwMzUsIC03Mi41MjEyMDVdLCBbLTk2Ljk4Mzc2NSwgLTcyLjQ0Mjg2NF0sIFstOTguMTk4MDgzLCAtNzIuNDgyMDM1XSwgWy05OS40MzIwMTMsIC03Mi40NDI4NjRdLCBbLTEwMC43ODM0NTUsIC03Mi41MDE2Ml0sIFstMTAxLjgwMTg2OCwgLTcyLjMwNTY2M10sIFstMTAyLjMzMDcyNSwgLTcxLjg5NDE2NF0sIFstMTAyLjMzMDcyNSwgLTcxLjg5NDE2NF0sIFstMTAxLjcwMzk2NywgLTcxLjcxNzc5Ml0sIFstMTAwLjQzMDkxOSwgLTcxLjg1NDk5M10sIFstOTguOTgxNTUsIC03MS45MzMzMzRdXV0sIFtbWy02OC40NTEzNDYsIC03MC45NTU4MjNdLCBbLTY4LjMzMzgzNCwgLTcxLjQwNjQ5M10sIFstNjguNTEwMTI4LCAtNzEuNzk4NDA3XSwgWy02OC43ODQyOTcsIC03Mi4xNzA3MzZdLCBbLTY5Ljk1OTQ3MSwgLTcyLjMwNzg4NV0sIFstNzEuMDc1ODg5LCAtNzIuNTAzODQyXSwgWy03Mi4zODgxMzQsIC03Mi40ODQyNTddLCBbLTcxLjg5ODUsIC03Mi4wOTIzNDNdLCBbLTczLjA3MzYyMiwgLTcyLjIyOTQ5Ml0sIFstNzQuMTkwMDQsIC03Mi4zNjY2OTNdLCBbLTc0Ljk1Mzg5NSwgLTcyLjA3Mjc1N10sIFstNzUuMDEyNjI1LCAtNzEuNjYxMjU4XSwgWy03My45MTU4MTksIC03MS4yNjkzNDVdLCBbLTczLjkxNTgxOSwgLTcxLjI2OTM0NF0sIFstNzMuMjMwMzMxLCAtNzEuMTUxNzhdLCBbLTcyLjA3NDcxNywgLTcxLjE5MDk1MV0sIFstNzEuNzgwOTYyLCAtNzAuNjgxNDczXSwgWy03MS43MjIxOCwgLTcwLjMwOTE5Nl0sIFstNzEuNzQxNzkxLCAtNjkuNTA1NzgyXSwgWy03MS4xNzM4MTUsIC02OS4wMzU0NzVdLCBbLTcwLjI1MzI1MiwgLTY4Ljg3ODc0XSwgWy02OS43MjQ0NDcsIC02OS4yNTEwMTddLCBbLTY5LjQ4OTQyMiwgLTY5LjYyMzM0Nl0sIFstNjkuMDU4NTE4LCAtNzAuMDc0MDE2XSwgWy02OC43MjU1NDEsIC03MC41MDUxNTNdLCBbLTY4LjQ1MTM0NiwgLTcwLjk1NTgyM11dXSwgW1tbLTU4LjYxNDE0MywgLTY0LjE1MjQ2N10sIFstNTkuMDQ1MDczLCAtNjQuMzY4MDFdLCBbLTU5Ljc4OTM0MiwgLTY0LjIxMTIyM10sIFstNjAuNjExOTI4LCAtNjQuMzA5MjAyXSwgWy02MS4yOTc0MTYsIC02NC41NDQzM10sIFstNjIuMDIyMSwgLTY0Ljc5OTA5NF0sIFstNjIuNTExNzYsIC02NS4wOTMwM10sIFstNjIuNjQ4ODU4LCAtNjUuNDg0OTQyXSwgWy02Mi41OTAxMjgsIC02NS44NTcyMTldLCBbLTYyLjEyMDA3OSwgLTY2LjE5MDMyNl0sIFstNjIuODA1NTY3LCAtNjYuNDI1NTA1XSwgWy02My43NDU2OSwgLTY2LjUwMzg0N10sIFstNjQuMjk0MTA2LCAtNjYuODM3MDA0XSwgWy02NC44ODE2OTMsIC02Ny4xNTA0NzRdLCBbLTY1LjUwODQyNSwgLTY3LjU4MTYxXSwgWy02NS42NjUwODIsIC02Ny45NTM4ODddLCBbLTY1LjMxMjU0NSwgLTY4LjM2NTMzNV0sIFstNjQuNzgzNzE1LCAtNjguNjc4OTA4XSwgWy02My45NjExMDMsIC02OC45MTM5ODRdLCBbLTYzLjE5NzMsIC02OS4yMjc1NTZdLCBbLTYyLjc4NTk1NSwgLTY5LjYxOTQxOV0sIFstNjIuNTcwNTE2LCAtNjkuOTkxNzQ3XSwgWy02Mi4yNzY3MzYsIC03MC4zODM2NjFdLCBbLTYxLjgwNjY2MSwgLTcwLjcxNjc2OF0sIFstNjEuNTEyOTA2LCAtNzEuMDg5MDQ1XSwgWy02MS4zNzU4MDksIC03Mi4wMTAwNzRdLCBbLTYxLjA4MTk3NywgLTcyLjM4MjM1MV0sIFstNjEuMDAzNjYxLCAtNzIuNzc0MjY1XSwgWy02MC42OTAyNjksIC03My4xNjYxNzldLCBbLTYwLjgyNzM2NywgLTczLjY5NTI0Ml0sIFstNjEuMzc1ODA5LCAtNzQuMTA2NzQyXSwgWy02MS45NjMzNywgLTc0LjQzOTg0OF0sIFstNjMuMjk1MjAxLCAtNzQuNTc2OTk3XSwgWy02My43NDU2OSwgLTc0LjkyOTc0XSwgWy02NC4zNTI4MzYsIC03NS4yNjI4NDddLCBbLTY1Ljg2MDk4NywgLTc1LjYzNTEyNF0sIFstNjcuMTkyODE4LCAtNzUuNzkxOTFdLCBbLTY4LjQ0NjI4MiwgLTc2LjAwNzQ1Ml0sIFstNjkuNzk3NzI0LCAtNzYuMjIyOTk1XSwgWy03MC42MDA3MjQsIC03Ni42MzQ0OTRdLCBbLTcyLjIwNjc3NiwgLTc2LjY3MzY2NV0sIFstNzMuOTY5NTM2LCAtNzYuNjM0NDk0XSwgWy03NS41NTU5NzcsIC03Ni43MTI4ODddLCBbLTc3LjI0MDM3LCAtNzYuNzEyODg3XSwgWy03Ni45MjY5NzksIC03Ny4xMDQ4MDJdLCBbLTc1LjM5OTI5NCwgLTc3LjI4MTA3XSwgWy03NC4yODI4NzYsIC03Ny41NTU0Ml0sIFstNzMuNjU2MTE5LCAtNzcuOTA4MTEyXSwgWy03NC43NzI1MzYsIC03OC4yMjE2MzNdLCBbLTc2LjQ5NjEsIC03OC4xMjM2NTRdLCBbLTc3LjkyNTg1OCwgLTc4LjM3ODQxOV0sIFstNzcuOTg0NjY2LCAtNzguNzg5OTE4XSwgWy03OC4wMjM3ODUsIC03OS4xODE4MzNdLCBbLTc2Ljg0ODYzNywgLTc5LjUxNDkzOV0sIFstNzYuNjMzMjI0LCAtNzkuODg3MjE2XSwgWy03NS4zNjAwOTcsIC04MC4yNTk1NDVdLCBbLTczLjI0NDg1MiwgLTgwLjQxNjMzMV0sIFstNzEuNDQyOTQ2LCAtODAuNjkwNjNdLCBbLTcwLjAxMzE2MywgLTgxLjAwNDE1MV0sIFstNjguMTkxNjQ2LCAtODEuMzE3NjcyXSwgWy02NS43MDQyNzksIC04MS40NzQ0NThdLCBbLTYzLjI1NjAzLCAtODEuNzQ4NzU3XSwgWy02MS41NTIwMjYsIC04Mi4wNDI2OTJdLCBbLTU5LjY5MTQxNiwgLTgyLjM3NTg1XSwgWy01OC43MTIxMjEsIC04Mi44NDYxMDZdLCBbLTU4LjIyMjQ4NywgLTgzLjIxODQzNF0sIFstNTcuMDA4MTE3LCAtODIuODY1NjkxXSwgWy01NS4zNjI4OTQsIC04Mi41NzE3NTVdLCBbLTUzLjYxOTc3MSwgLTgyLjI1ODIzNV0sIFstNTEuNTQzNjQ0LCAtODIuMDAzNTIxXSwgWy00OS43NjEzNSwgLTgxLjcyOTE3MV0sIFstNDcuMjczOTMxLCAtODEuNzA5NTg2XSwgWy00NC44MjU3MDgsIC04MS44NDY3MzVdLCBbLTQyLjgwODM2MywgLTgyLjA4MTkxNV0sIFstNDIuMTYyMDIsIC04MS42NTA4M10sIFstNDAuNzcxNDMzLCAtODEuMzU2ODk0XSwgWy0zOC4yNDQ4MTgsIC04MS4zMzczMDldLCBbLTM2LjI2NjY3LCAtODEuMTIxNzE1XSwgWy0zNC4zODYzOTcsIC04MC45MDYxNzJdLCBbLTMyLjMxMDI5NiwgLTgwLjc2OTAyM10sIFstMzAuMDk3MDk4LCAtODAuNTkyNjUxXSwgWy0yOC41NDk4MDIsIC04MC4zMzc5MzhdLCBbLTI5LjI1NDkwMSwgLTc5Ljk4NTE5NV0sIFstMjkuNjg1ODA1LCAtNzkuNjMyNTAzXSwgWy0yOS42ODU4MDUsIC03OS4yNjAyMjZdLCBbLTMxLjYyNDgwOCwgLTc5LjI5OTM5N10sIFstMzMuNjgxMzI0LCAtNzkuNDU2MTMyXSwgWy0zNS42Mzk5MTIsIC03OS40NTYxMzJdLCBbLTM1LjkxNDEwNywgLTc5LjA4Mzg1NV0sIFstMzUuNzc3MDEsIC03OC4zMzkyNDhdLCBbLTM1LjMyNjU0NiwgLTc4LjEyMzY1NF0sIFstMzMuODk2NzYzLCAtNzcuODg4NTI2XSwgWy0zMi4yMTIzNjksIC03Ny42NTM0NV0sIFstMzAuOTk4MDUxLCAtNzcuMzU5NTE1XSwgWy0yOS43ODM3MzIsIC03Ny4wNjU1NzldLCBbLTI4Ljg4Mjc3OSwgLTc2LjY3MzY2NV0sIFstMjcuNTExNzUyLCAtNzYuNDk3MzQ1XSwgWy0yNi4xNjAzMzYsIC03Ni4zNjAxNDRdLCBbLTI1LjQ3NDgyMiwgLTc2LjI4MTgwM10sIFstMjMuOTI3NTUyLCAtNzYuMjQyNThdLCBbLTIyLjQ1ODU5OCwgLTc2LjEwNTQzMV0sIFstMjEuMjI0Njk0LCAtNzUuOTA5NDc0XSwgWy0yMC4wMTAzNzUsIC03NS42NzQzNDZdLCBbLTE4LjkxMzU0MywgLTc1LjQzOTIxOF0sIFstMTcuNTIyOTgyLCAtNzUuMTI1Njk4XSwgWy0xNi42NDE1ODksIC03NC43OTI1NF0sIFstMTUuNzAxNDkxLCAtNzQuNDk4NjA0XSwgWy0xNS40MDc3MSwgLTc0LjEwNjc0Ml0sIFstMTYuNDY1MzIsIC03My44NzE2MTRdLCBbLTE2LjExMjc4NCwgLTczLjQ2MDExNF0sIFstMTUuNDQ2ODU1LCAtNzMuMTQ2NTQyXSwgWy0xNC40MDg4MDUsIC03Mi45NTA1ODVdLCBbLTEzLjMxMTk3MywgLTcyLjcxNTQ1N10sIFstMTIuMjkzNTA4LCAtNzIuNDAxOTM2XSwgWy0xMS41MTAwNjcsIC03Mi4wMTAwNzRdLCBbLTExLjAyMDQzMywgLTcxLjUzOTc2N10sIFstMTAuMjk1Nzc0LCAtNzEuMjY1NDE2XSwgWy05LjEwMTAxNSwgLTcxLjMyNDIyNF0sIFstOC42MTEzODEsIC03MS42NTczM10sIFstNy40MTY2MjIsIC03MS42OTY1MDFdLCBbLTcuMzc3NDUxLCAtNzEuMzI0MjI0XSwgWy02Ljg2ODIzMiwgLTcwLjkzMjMxXSwgWy01Ljc5MDk4NSwgLTcxLjAzMDI4OV0sIFstNS41MzYzNzUsIC03MS40MDI2MTddLCBbLTQuMzQxNjY3LCAtNzEuNDYxMzczXSwgWy0zLjA0ODk4MSwgLTcxLjI4NTA1M10sIFstMS43OTU0OTIsIC03MS4xNjc0MzhdLCBbLTAuNjU5NDg5LCAtNzEuMjI2MjQ2XSwgWy0wLjIyODYzNywgLTcxLjYzNzc0NV0sIFswLjg2ODE5NSwgLTcxLjMwNDYzOV0sIFsxLjg4NjY4NiwgLTcxLjEyODI2N10sIFszLjAyMjYzOCwgLTcwLjk5MTExOF0sIFs0LjEzOTA1NSwgLTcwLjg1MzkxN10sIFs1LjE1NzU0NiwgLTcwLjYxODc4OV0sIFs2LjI3MzkxMiwgLTcwLjQ2MjA1NV0sIFs3LjEzNTcyLCAtNzAuMjQ2NTEyXSwgWzcuNzQyODY2LCAtNjkuODkzNzY5XSwgWzguNDg3MTEsIC03MC4xNDg1MzRdLCBbOS41MjUxMzUsIC03MC4wMTEzMzNdLCBbMTAuMjQ5ODQ1LCAtNzAuNDgxNjRdLCBbMTAuODE3ODIxLCAtNzAuODM0MzMyXSwgWzExLjk1MzgyNCwgLTcwLjYzODM3NV0sIFsxMi40MDQyODcsIC03MC4yNDY1MTJdLCBbMTMuNDIyNzc4LCAtNjkuOTcyMTYyXSwgWzE0LjczNDk5OCwgLTcwLjAzMDkxOF0sIFsxNS4xMjY3NTcsIC03MC40MDMyNDddLCBbMTUuOTQ5MzQyLCAtNzAuMDMwOTE4XSwgWzE3LjAyNjU4OSwgLTY5LjkxMzM1NF0sIFsxOC4yMDE3MTEsIC02OS44NzQxODNdLCBbMTkuMjU5MzczLCAtNjkuODkzNzY5XSwgWzIwLjM3NTczOSwgLTcwLjAxMTMzM10sIFsyMS40NTI5ODUsIC03MC4wNzAxNF0sIFsyMS45MjMwMzQsIC03MC40MDMyNDddLCBbMjIuNTY5NDAzLCAtNzAuNjk3MTgyXSwgWzIzLjY2NjE4NCwgLTcwLjUyMDgxMV0sIFsyNC44NDEzNTcsIC03MC40ODE2NF0sIFsyNS45NzczMDksIC03MC40ODE2NF0sIFsyNy4wOTM3MjYsIC03MC40NjIwNTVdLCBbMjguMDkyNTgsIC03MC4zMjQ4NTRdLCBbMjkuMTUwMjQyLCAtNzAuMjA3MjldLCBbMzAuMDMxNTgzLCAtNjkuOTMyOTRdLCBbMzAuOTcxNzMzLCAtNjkuNzU2NjJdLCBbMzEuOTkwMTcyLCAtNjkuNjU4NjQxXSwgWzMyLjc1NDA1MywgLTY5LjM4NDI5MV0sIFszMy4zMDI0NDMsIC02OC44MzU2NDJdLCBbMzMuODcwNDE5LCAtNjguNTAyNTg4XSwgWzM0LjkwODQ5NSwgLTY4LjY1OTI3MV0sIFszNS4zMDAyMDIsIC02OS4wMTIwMTRdLCBbMzYuMTYyMDEsIC02OS4yNDcxNDJdLCBbMzcuMjAwMDM1LCAtNjkuMTY4NzQ4XSwgWzM3LjkwNTEwOCwgLTY5LjUyMTQ0XSwgWzM4LjY0OTQwNCwgLTY5Ljc3NjIwNV0sIFszOS42Njc4OTQsIC02OS41NDEwNzddLCBbNDAuMDIwNDMxLCAtNjkuMTA5OTQxXSwgWzQwLjkyMTM1OCwgLTY4LjkzMzYyMV0sIFs0MS45NTk0MzQsIC02OC42MDA1MTRdLCBbNDIuOTM4NzAyLCAtNjguNDYzMzEzXSwgWzQ0LjExMzg3NiwgLTY4LjI2NzQwOF0sIFs0NC44OTcyOTEsIC02OC4wNTE4NjZdLCBbNDUuNzE5OTI4LCAtNjcuODE2NzM4XSwgWzQ2LjUwMzM0MywgLTY3LjYwMTE5Nl0sIFs0Ny40NDM0NCwgLTY3LjcxODc1OV0sIFs0OC4zNDQ0MTksIC02Ny4zNjYwNjhdLCBbNDguOTkwNzM2LCAtNjcuMDkxNzE4XSwgWzQ5LjkzMDg4NSwgLTY3LjExMTMwM10sIFs1MC43NTM0NzEsIC02Ni44NzYxNzVdLCBbNTAuOTQ5MzI1LCAtNjYuNTIzNDg0XSwgWzUxLjc5MTU0NywgLTY2LjI0OTEzM10sIFs1Mi42MTQxMzMsIC02Ni4wNTMxNzZdLCBbNTMuNjEzMDM4LCAtNjUuODk2MzldLCBbNTQuNTMzNTUsIC02NS44MTgwNDldLCBbNTUuNDE0OTQzLCAtNjUuODc2ODA1XSwgWzU2LjM1NTA0MSwgLTY1Ljk3NDc4M10sIFs1Ny4xNTgwOTMsIC02Ni4yNDkxMzNdLCBbNTcuMjU1OTY4LCAtNjYuNjgwMjE4XSwgWzU4LjEzNzM2MSwgLTY3LjAxMzMyNF0sIFs1OC43NDQ1MDgsIC02Ny4yODc2NzVdLCBbNTkuOTM5MzE4LCAtNjcuNDA1MjM5XSwgWzYwLjYwNTIyMSwgLTY3LjY3OTU4OV0sIFs2MS40Mjc4MDYsIC02Ny45NTM4ODddLCBbNjIuMzg3NDg5LCAtNjguMDEyNjk1XSwgWzYzLjE5MDQ5LCAtNjcuODE2NzM4XSwgWzY0LjA1MjM0OSwgLTY3LjQwNTIzOV0sIFs2NC45OTI0NDcsIC02Ny42MjA3MjldLCBbNjUuOTcxNzE1LCAtNjcuNzM4MzQ1XSwgWzY2LjkxMTg2NCwgLTY3Ljg1NTkwOV0sIFs2Ny44OTExMzMsIC02Ny45MzQzMDJdLCBbNjguODkwMDM4LCAtNjcuOTM0MzAyXSwgWzY5LjcxMjYyNCwgLTY4Ljk3Mjc5MV0sIFs2OS42NzM0NTMsIC02OS4yMjc1NTZdLCBbNjkuNTU1OTQxLCAtNjkuNjc4MjI2XSwgWzY4LjU5NjI1OCwgLTY5LjkzMjk0XSwgWzY3LjgxMjc0LCAtNzAuMzA1MjY4XSwgWzY3Ljk0OTg4OSwgLTcwLjY5NzE4Ml0sIFs2OS4wNjYzMDcsIC03MC42Nzc1NDVdLCBbNjguOTI5MTU3LCAtNzEuMDY5NDU5XSwgWzY4LjQxOTk4OSwgLTcxLjQ0MTc4OF0sIFs2Ny45NDk4ODksIC03MS44NTMyODddLCBbNjguNzEzNzcsIC03Mi4xNjY4MDhdLCBbNjkuODY5MzA3LCAtNzIuMjY0Nzg3XSwgWzcxLjAyNDg5NSwgLTcyLjA4ODQxNV0sIFs3MS41NzMyODUsIC03MS42OTY1MDFdLCBbNzEuOTA2Mjg4LCAtNzEuMzI0MjI0XSwgWzcyLjQ1NDYyNywgLTcxLjAxMDcwM10sIFs3My4wODE0MSwgLTcwLjcxNjc2OF0sIFs3My4zMzYwMiwgLTcwLjM2NDAyNF0sIFs3My44NjQ4NzcsIC02OS44NzQxODNdLCBbNzQuNDkxNTU3LCAtNjkuNzc2MjA1XSwgWzc1LjYyNzU2LCAtNjkuNzM3MDM0XSwgWzc2LjYyNjQ2NSwgLTY5LjYxOTQxOV0sIFs3Ny42NDQ5MDQsIC02OS40NjI2ODRdLCBbNzguMTM0NTM5LCAtNjkuMDcwNzddLCBbNzguNDI4MzcxLCAtNjguNjk4NDQxXSwgWzc5LjExMzg1OSwgLTY4LjMyNjIxNl0sIFs4MC4wOTMxMjcsIC02OC4wNzE1MDNdLCBbODAuOTM1MzUsIC02Ny44NzU1NDZdLCBbODEuNDgzNzkyLCAtNjcuNTQyMzg4XSwgWzgyLjA1MTc2NywgLTY3LjM2NjA2OF0sIFs4Mi43NzY0MjYsIC02Ny4yMDkyODJdLCBbODMuNzc1MzMxLCAtNjcuMzA3MjZdLCBbODQuNjc2MjA2LCAtNjcuMjA5MjgyXSwgWzg1LjY1NTUyNywgLTY3LjA5MTcxOF0sIFs4Ni43NTIzNTksIC02Ny4xNTA0NzRdLCBbODcuNDc3MDE3LCAtNjYuODc2MTc1XSwgWzg3Ljk4NjI4OSwgLTY2LjIwOTkxMV0sIFs4OC4zNTg0MTEsIC02Ni40ODQyNjFdLCBbODguODI4NDA4LCAtNjYuOTU0NTY4XSwgWzg5LjY3MDYzLCAtNjcuMTUwNDc0XSwgWzkwLjYzMDM2NSwgLTY3LjIyODg2N10sIFs5MS41OTAxLCAtNjcuMTExMzAzXSwgWzkyLjYwODUzOSwgLTY3LjE4OTY5Nl0sIFs5My41NDg2MzcsIC02Ny4yMDkyODJdLCBbOTQuMTc1NDIsIC02Ny4xMTEzMDNdLCBbOTUuMDE3NTkxLCAtNjcuMTcwMTExXSwgWzk1Ljc4MTQ3MiwgLTY3LjM4NTY1M10sIFs5Ni42ODIzOTksIC02Ny4yNDg1MDRdLCBbOTcuNzU5NjQ2LCAtNjcuMjQ4NTA0XSwgWzk4LjY4MDIxLCAtNjcuMTExMzAzXSwgWzk5LjcxODE4MiwgLTY3LjI0ODUwNF0sIFsxMDAuMzg0MTg4LCAtNjYuOTE1MzQ2XSwgWzEwMC44OTMzNTYsIC02Ni41ODIyNF0sIFsxMDEuNTc4ODk2LCAtNjYuMzA3ODldLCBbMTAyLjgzMjQxMSwgLTY1LjU2MzI4NF0sIFsxMDMuNDc4Njc2LCAtNjUuNzAwNDg1XSwgWzEwNC4yNDI1NTcsIC02NS45NzQ3ODNdLCBbMTA0LjkwODQ2LCAtNjYuMzI3NTI3XSwgWzEwNi4xODE1NjEsIC02Ni45MzQ5MzFdLCBbMTA3LjE2MDg4MSwgLTY2Ljk1NDU2OF0sIFsxMDguMDgxMzkzLCAtNjYuOTU0NTY4XSwgWzEwOS4xNTg2NCwgLTY2LjgzNzAwNF0sIFsxMTAuMjM1ODM1LCAtNjYuNjk5ODA0XSwgWzExMS4wNTg0NzIsIC02Ni40MjU1MDVdLCBbMTExLjc0Mzk2LCAtNjYuMTMxNTddLCBbMTEyLjg2MDM3OCwgLTY2LjA5MjM0N10sIFsxMTMuNjA0NjczLCAtNjUuODc2ODA1XSwgWzExNC4zODgwODgsIC02Ni4wNzI3NjJdLCBbMTE0Ljg5NzMwOCwgLTY2LjM4NjI4M10sIFsxMTUuNjAyMzgxLCAtNjYuNjk5ODA0XSwgWzExNi42OTkxNjEsIC02Ni42NjA2MzNdLCBbMTE3LjM4NDcwMSwgLTY2LjkxNTM0Nl0sIFsxMTguNTc5NDYsIC02Ny4xNzAxMTFdLCBbMTE5LjgzMjkyNCwgLTY3LjI2ODA4OV0sIFsxMjAuODcxLCAtNjcuMTg5Njk2XSwgWzEyMS42NTQ0MTUsIC02Ni44NzYxNzVdLCBbMTIyLjMyMDM2OSwgLTY2LjU2MjY1NF0sIFsxMjMuMjIxMjk2LCAtNjYuNDg0MjYxXSwgWzEyNC4xMjIyNzQsIC02Ni42MjE0NjJdLCBbMTI1LjE2MDI0NywgLTY2LjcxOTM4OV0sIFsxMjYuMTAwMzk2LCAtNjYuNTYyNjU0XSwgWzEyNy4wMDE0MjcsIC02Ni41NjI2NTRdLCBbMTI3Ljg4Mjc2OCwgLTY2LjY2MDYzM10sIFsxMjguODAzMjgsIC02Ni43NTg2MTFdLCBbMTI5LjcwNDI1OSwgLTY2LjU4MjI0XSwgWzEzMC43ODE0NTQsIC02Ni40MjU1MDVdLCBbMTMxLjc5OTk0NSwgLTY2LjM4NjI4M10sIFsxMzIuOTM1ODk2LCAtNjYuMzg2MjgzXSwgWzEzMy44NTY0NiwgLTY2LjI4ODMwNF0sIFsxMzQuNzU3Mzg3LCAtNjYuMjA5OTYzXSwgWzEzNS4wMzE1ODIsIC02NS43MjAwN10sIFsxMzUuMDcwNzUzLCAtNjUuMzA4NTcxXSwgWzEzNS42OTc0ODUsIC02NS41ODI4NjldLCBbMTM1Ljg3MzgwNSwgLTY2LjAzMzU5MV0sIFsxMzYuMjA2NzA1LCAtNjYuNDQ1MDldLCBbMTM2LjYxODA0OSwgLTY2Ljc3ODE5N10sIFsxMzcuNDYwMjcxLCAtNjYuOTU0NTY4XSwgWzEzOC41OTYyMjMsIC02Ni44OTU3NjFdLCBbMTM5LjkwODQ0MiwgLTY2Ljg3NjE3NV0sIFsxNDAuODA5NDIxLCAtNjYuODE3MzY3XSwgWzE0Mi4xMjE2OTIsIC02Ni44MTczNjddLCBbMTQzLjA2MTg0MiwgLTY2Ljc5Nzc4Ml0sIFsxNDQuMzc0MDYxLCAtNjYuODM3MDA0XSwgWzE0NS40OTA0MjcsIC02Ni45MTUzNDZdLCBbMTQ2LjE5NTU1MiwgLTY3LjIyODg2N10sIFsxNDUuOTk5Njk5LCAtNjcuNjAxMTk2XSwgWzE0Ni42NDYwNjcsIC02Ny44OTUxMzFdLCBbMTQ3LjcyMzI2MywgLTY4LjEzMDI1OV0sIFsxNDguODM5NjI5LCAtNjguMzg1MDI0XSwgWzE1MC4xMzIzMTQsIC02OC41NjEyOTJdLCBbMTUxLjQ4MzcwNSwgLTY4LjcxODEzXSwgWzE1Mi41MDIyNDcsIC02OC44NzQ4MTNdLCBbMTUzLjYzODE5OSwgLTY4Ljg5NDUwMl0sIFsxNTQuMjg0NTY3LCAtNjguNTYxMjkyXSwgWzE1NS4xNjU4NTcsIC02OC44MzU2NDJdLCBbMTU1LjkyOTc5LCAtNjkuMTQ5MjE1XSwgWzE1Ni44MTExMzIsIC02OS4zODQyOTFdLCBbMTU4LjAyNTUyOCwgLTY5LjQ4MjI2OV0sIFsxNTkuMTgxMDEzLCAtNjkuNTk5ODMzXSwgWzE1OS42NzA2OTksIC02OS45OTE3NDddLCBbMTYwLjgwNjY1LCAtNzAuMjI2ODc1XSwgWzE2MS41NzA0NzksIC03MC41Nzk2MThdLCBbMTYyLjY4Njg5NywgLTcwLjczNjM1M10sIFsxNjMuODQyNDM0LCAtNzAuNzE2NzY4XSwgWzE2NC45MTk2ODEsIC03MC43NzU1MjRdLCBbMTY2LjExNDQ0LCAtNzAuNzU1OTM4XSwgWzE2Ny4zMDkwOTUsIC03MC44MzQzMzJdLCBbMTY4LjQyNTYxNiwgLTcwLjk3MTQ4MV0sIFsxNjkuNDYzNTg5LCAtNzEuMjA2NjZdLCBbMTcwLjUwMTY2NSwgLTcxLjQwMjYxN10sIFsxNzEuMjA2NzksIC03MS42OTY1MDFdLCBbMTcxLjA4OTIyNywgLTcyLjA4ODQxNV0sIFsxNzAuNTYwNDIyLCAtNzIuNDQxMTU5XSwgWzE3MC4xMDk5NTgsIC03Mi44OTE4MjldLCBbMTY5Ljc1NzM3LCAtNzMuMjQ0NTJdLCBbMTY5LjI4NzMyMSwgLTczLjY1NjAyXSwgWzE2Ny45NzUxMDEsIC03My44MTI4MDZdLCBbMTY3LjM4NzQ4OSwgLTc0LjE2NTQ5OF0sIFsxNjYuMDk0ODAzLCAtNzQuMzgxMDRdLCBbMTY1LjY0NDM5MSwgLTc0Ljc3Mjk1NF0sIFsxNjQuOTU4ODUxLCAtNzUuMTQ1MjgzXSwgWzE2NC4yMzQxOTMsIC03NS40NTg4MDRdLCBbMTYzLjgyMjc5NywgLTc1Ljg3MDMwM10sIFsxNjMuNTY4MjM5LCAtNzYuMjQyNThdLCBbMTYzLjQ3MDI2LCAtNzYuNjkzMzAyXSwgWzE2My40ODk4OTcsIC03Ny4wNjU1NzldLCBbMTY0LjA1Nzg3MywgLTc3LjQ1NzQ0Ml0sIFsxNjQuMjczMzYzLCAtNzcuODI5NzddLCBbMTY0Ljc0MzQ2NCwgLTc4LjE4MjUxNF0sIFsxNjYuNjA0MTI2LCAtNzguMzE5NjExXSwgWzE2Ni45OTU3ODEsIC03OC43NTA3NDhdLCBbMTY1LjE5Mzg3NiwgLTc4LjkwNzQ4M10sIFsxNjMuNjY2MjE3LCAtNzkuMTIzMDI1XSwgWzE2MS43NjYzODUsIC03OS4xNjIyNDhdLCBbMTYwLjkyNDE2MiwgLTc5LjczMDQ4Ml0sIFsxNjAuNzQ3ODk0LCAtODAuMjAwNzM3XSwgWzE2MC4zMTY5NjQsIC04MC41NzMwNjZdLCBbMTU5Ljc4ODIxMSwgLTgwLjk0NTM5NV0sIFsxNjEuMTIwMDE2LCAtODEuMjc4NTAxXSwgWzE2MS42MjkyODcsIC04MS42OTAwMDFdLCBbMTYyLjQ5MDk5MiwgLTgyLjA2MjI3OF0sIFsxNjMuNzA1MzM2LCAtODIuMzk1NDM1XSwgWzE2NS4wOTU5NDksIC04Mi43MDg5NTZdLCBbMTY2LjYwNDEyNiwgLTgzLjAyMjQ3N10sIFsxNjguODk1NjY1LCAtODMuMzM1OTk4XSwgWzE2OS40MDQ3ODIsIC04My44MjU4OTFdLCBbMTcyLjI4MzkzNCwgLTg0LjA0MTQzM10sIFsxNzIuNDc3MDQ5LCAtODQuMTE3OTE0XSwgWzE3My4yMjQwODMsIC04NC40MTM3MV0sIFsxNzUuOTg1NjcyLCAtODQuMTU4OTk3XSwgWzE3OC4yNzcyMTIsIC04NC40NzI1MThdLCBbMTgwLCAtODQuNzEzMzhdLCBbLTE3OS45NDI0OTksIC04NC43MjE0NDNdLCBbLTE3OS4wNTg2NzcsIC04NC4xMzk0MTJdLCBbLTE3Ny4yNTY3NzIsIC04NC40NTI5MzNdLCBbLTE3Ny4xNDA4MDcsIC04NC40MTc5NDFdLCBbLTE3Ni4wODQ2NzMsIC04NC4wOTkyNTldLCBbLTE3NS45NDcyMzUsIC04NC4xMTA0NDldLCBbLTE3NS44Mjk4ODIsIC04NC4xMTc5MTRdLCBbLTE3NC4zODI1MDMsIC04NC41MzQzMjNdLCBbLTE3My4xMTY1NTksIC04NC4xMTc5MTRdLCBbLTE3Mi44ODkxMDYsIC04NC4wNjEwMTldLCBbLTE2OS45NTEyMjMsIC04My44ODQ2NDddLCBbLTE2OC45OTk5ODksIC04NC4xMTc5MTRdLCBbLTE2OC41MzAxOTksIC04NC4yMzczOV0sIFstMTY3LjAyMjA5OSwgLTg0LjU3MDQ5N10sIFstMTY0LjE4MjE0NCwgLTg0LjgyNTIxXSwgWy0xNjEuOTI5Nzc1LCAtODUuMTM4NzMxXSwgWy0xNTguMDcxMzgsIC04NS4zNzM5MV0sIFstMTU1LjE5MjI1MywgLTg1LjA5OTU2XSwgWy0xNTAuOTQyMDk5LCAtODUuMjk1NTE3XSwgWy0xNDguNTMzMDczLCAtODUuNjA5MDM4XSwgWy0xNDUuODg4OTE4LCAtODUuMzE1MTAyXSwgWy0xNDMuMTA3NzE4LCAtODUuMDQwNzUyXSwgWy0xNDIuODkyMjc5LCAtODQuNTcwNDk3XSwgWy0xNDYuODI5MDY4LCAtODQuNTMxMjc0XSwgWy0xNTAuMDYwNzMyLCAtODQuMjk2MTQ2XSwgWy0xNTAuOTAyOTI4LCAtODMuOTA0MjMyXSwgWy0xNTMuNTg2MjAxLCAtODMuNjg4NjldLCBbLTE1My40MDk5MDcsIC04My4yMzgwMl0sIFstMTUzLjAzNzc1OSwgLTgyLjgyNjUyXSwgWy0xNTIuNjY1NjM3LCAtODIuNDU0MTkyXSwgWy0xNTIuODYxNTE3LCAtODIuMDQyNjkyXSwgWy0xNTQuNTI2Mjk5LCAtODEuNzY4Mzk0XSwgWy0xNTUuMjkwMTgsIC04MS40MTU2NV0sIFstMTU2LjgzNzQ1LCAtODEuMTAyMTI5XSwgWy0xNTQuNDA4Nzg3LCAtODEuMTYwOTM3XSwgWy0xNTIuMDk3NjYyLCAtODEuMDA0MTUxXSwgWy0xNTAuNjQ4MjkzLCAtODEuMzM3MzA5XSwgWy0xNDguODY1OTk4LCAtODEuMDQzMzczXSwgWy0xNDcuMjIwNzUsIC04MC42NzEwNDVdLCBbLTE0Ni40MTc3NDksIC04MC4zMzc5MzhdLCBbLTE0Ni43NzAyODYsIC03OS45MjY0MzldLCBbLTE0OC4wNjI5NDcsIC03OS42NTIwODldLCBbLTE0OS41MzE5MDEsIC03OS4zNTgyMDVdLCBbLTE1MS41ODg0MTYsIC03OS4yOTkzOTddLCBbLTE1My4zOTAzMjIsIC03OS4xNjIyNDhdLCBbLTE1NS4zMjkzNzYsIC03OS4wNjQyNjldLCBbLTE1NS45NzU2NjgsIC03OC42OTE5NF0sIFstMTU3LjI2ODMwMiwgLTc4LjM3ODQxOV0sIFstMTU4LjA1MTc2OCwgLTc4LjAyNTY3Nl0sIFstMTU4LjM2NTEzNCwgLTc2Ljg4OTIwN10sIFstMTU3Ljg3NTQ3NCwgLTc2Ljk4NzIzOF0sIFstMTU2Ljk3NDU3MywgLTc3LjMwMDc1OV0sIFstMTU1LjMyOTM3NiwgLTc3LjIwMjcyOF0sIFstMTUzLjc0MjgzMiwgLTc3LjA2NTU3OV0sIFstMTUyLjkyMDI0NywgLTc3LjQ5NjY2NF0sIFstMTUxLjMzMzc4LCAtNzcuMzk4NzM3XSwgWy0xNTAuMDAxOTUsIC03Ny4xODMxNDNdLCBbLTE0OC43NDg0ODYsIC03Ni45MDg4NDVdLCBbLTE0Ny42MTI0ODMsIC03Ni41NzU3MzhdLCBbLTE0Ni4xMDQ0MDksIC03Ni40Nzc3Nl0sIFstMTQ2LjE0MzUyOCwgLTc2LjEwNTQzMV0sIFstMTQ2LjQ5NjA5MSwgLTc1LjczMzE1NF0sIFstMTQ2LjIwMjMxLCAtNzUuMzgwNDExXSwgWy0xNDQuOTA5NjI0LCAtNzUuMjA0MDM5XSwgWy0xNDQuMzIyMDM3LCAtNzUuNTM3MTk3XSwgWy0xNDIuNzk0MzUzLCAtNzUuMzQxMjRdLCBbLTE0MS42Mzg3NjQsIC03NS4wODY0NzVdLCBbLTE0MC4yMDkwMDcsIC03NS4wNjY4OV0sIFstMTM4Ljg1NzU5LCAtNzQuOTY4OTExXSwgWy0xMzcuNTA2MiwgLTc0LjczMzc4M10sIFstMTM2LjQyODkwMSwgLTc0LjUxODI0MV0sIFstMTM1LjIxNDU4MywgLTc0LjMwMjY5OV0sIFstMTM0LjQzMTE5NCwgLTc0LjM2MTQ1NV0sIFstMTMzLjc0NTY1NCwgLTc0LjQzOTg0OF0sIFstMTMyLjI1NzE2OCwgLTc0LjMwMjY5OV0sIFstMTMwLjkyNTMxMSwgLTc0LjQ3OTAxOV0sIFstMTI5LjU1NDI4NCwgLTc0LjQ1OTQzM10sIFstMTI4LjI0MjAzOCwgLTc0LjMyMjI4NF0sIFstMTI2Ljg5MDYyMiwgLTc0LjQyMDI2M10sIFstMTI1LjQwMjA4MiwgLTc0LjUxODI0MV0sIFstMTI0LjAxMTQ5NiwgLTc0LjQ3OTAxOV0sIFstMTIyLjU2MjE1MiwgLTc0LjQ5ODYwNF0sIFstMTIxLjA3MzYxMywgLTc0LjUxODI0MV0sIFstMTE5LjcwMjU2LCAtNzQuNDc5MDE5XSwgWy0xMTguNjg0MTQ1LCAtNzQuMTg1MDgzXSwgWy0xMTcuNDY5ODAxLCAtNzQuMDI4MzQ4XSwgWy0xMTYuMjE2MzEyLCAtNzQuMjQzODkxXSwgWy0xMTUuMDIxNTUyLCAtNzQuMDY3NTE5XSwgWy0xMTMuOTQ0MzMxLCAtNzMuNzE0ODI4XSwgWy0xMTMuMjk3OTg4LCAtNzQuMDI4MzQ4XSwgWy0xMTIuOTQ1NDUyLCAtNzQuMzgxMDRdLCBbLTExMi4yOTkwODMsIC03NC43MTQxOThdLCBbLTExMS4yNjEwNTksIC03NC40MjAyNjNdLCBbLTExMC4wNjYzMjUsIC03NC43OTI1NF0sIFstMTA4LjcxNDkwOSwgLTc0LjkxMDEwM10sIFstMTA3LjU1OTM0NiwgLTc1LjE4NDQ1NF0sIFstMTA2LjE0OTE0OCwgLTc1LjEyNTY5OF0sIFstMTA0Ljg3NjA3NCwgLTc0Ljk0OTMyNl0sIFstMTAzLjM2Nzk0OSwgLTc0Ljk4ODQ5N10sIFstMTAyLjAxNjUwNywgLTc1LjEyNTY5OF0sIFstMTAwLjY0NTUzMSwgLTc1LjMwMjAxOF0sIFstMTAwLjExNjcsIC03NC44NzA5MzNdLCBbLTEwMC43NjMwNDMsIC03NC41Mzc4MjZdLCBbLTEwMS4yNTI3MDMsIC03NC4xODUwODNdLCBbLTEwMi41NDUzMzcsIC03NC4xMDY3NDJdLCBbLTEwMy4xMTMzMTMsIC03My43MzQ0MTNdLCBbLTEwMy4zMjg3NTIsIC03My4zNjIwODRdLCBbLTEwMy42ODEyODksIC03Mi42MTc1M10sIFstMTAyLjkxNzQ4NSwgLTcyLjc1NDY3OV0sIFstMTAxLjYwNTI0LCAtNzIuODEzNDM2XSwgWy0xMDAuMzEyNTI4LCAtNzIuNzU0Njc5XSwgWy05OS4xMzczOCwgLTcyLjkxMTQxNF0sIFstOTguMTE4ODg5LCAtNzMuMjA1MzVdLCBbLTk3LjY4ODAzNywgLTczLjU1ODA0MV0sIFstOTYuMzM2NTk1LCAtNzMuNjE2ODQ5XSwgWy05NS4wNDM5NjEsIC03My40Nzk3XSwgWy05My42NzI5MDcsIC03My4yODM3NDNdLCBbLTkyLjQzOTAwMywgLTczLjE2NjE3OV0sIFstOTEuNDIwNTY0LCAtNzMuNDAxMzA3XSwgWy05MC4wODg3MzMsIC03My4zMjI5MTRdLCBbLTg5LjIyNjk1MSwgLTcyLjU1ODcyMl0sIFstODguNDIzOTUxLCAtNzMuMDA5MzkzXSwgWy04Ny4yNjgzMzcsIC03My4xODU3NjRdLCBbLTg2LjAxNDgyMiwgLTczLjA4Nzc4Nl0sIFstODUuMTkyMjM2LCAtNzMuNDc5N10sIFstODMuODc5OTkxLCAtNzMuNTE4ODcxXSwgWy04Mi42NjU2NDYsIC03My42MzY0MzRdLCBbLTgxLjQ3MDkxMywgLTczLjg1MTk3N10sIFstODAuNjg3NDQ3LCAtNzMuNDc5N10sIFstODAuMjk1NzkxLCAtNzMuMTI2OTU2XSwgWy03OS4yOTY4ODYsIC03My41MTg4NzFdLCBbLTc3LjkyNTg1OCwgLTczLjQyMDg5Ml0sIFstNzYuOTA3MzY3LCAtNzMuNjM2NDM0XSwgWy03Ni4yMjE4NzksIC03My45Njk1NDFdLCBbLTc0Ljg5MDA0OSwgLTczLjg3MTYxNF0sIFstNzMuODUyMDI0LCAtNzMuNjU2MDJdLCBbLTcyLjgzMzUzMywgLTczLjQwMTMwN10sIFstNzEuNjE5MjE1LCAtNzMuMjY0MTU3XSwgWy03MC4yMDkwNDIsIC03My4xNDY1NDJdLCBbLTY4LjkzNTkxNiwgLTczLjAwOTM5M10sIFstNjcuOTU2NjIyLCAtNzIuNzkzODVdLCBbLTY3LjM2OTA2MSwgLTcyLjQ4MDMyOV0sIFstNjcuMTM0MDM2LCAtNzIuMDQ5MjQ0XSwgWy02Ny4yNTE1NDgsIC03MS42Mzc3NDVdLCBbLTY3LjU2NDk0LCAtNzEuMjQ1ODMxXSwgWy02Ny45MTc0NzcsIC03MC44NTM5MTddLCBbLTY4LjIzMDg0MywgLTcwLjQ2MjA1NV0sIFstNjguNDg1NDUyLCAtNzAuMTA5MzExXSwgWy02OC41NDQyMDksIC02OS43MTczOTddLCBbLTY4LjQ0NjI4MiwgLTY5LjMyNTUzNV0sIFstNjcuOTc2MjMzLCAtNjguOTUzMjA2XSwgWy02Ny41ODQ1LCAtNjguNTQxNzA3XSwgWy02Ny40Mjc4NDMsIC02OC4xNDk4NDRdLCBbLTY3LjYyMzY3LCAtNjcuNzE4NzU5XSwgWy02Ny43NDExODMsIC02Ny4zMjY4NDVdLCBbLTY3LjI1MTU0OCwgLTY2Ljg3NjE3NV0sIFstNjYuNzAzMTg0LCAtNjYuNTgyMjRdLCBbLTY2LjA1NjgxNSwgLTY2LjIwOTk2M10sIFstNjUuMzcxMzI3LCAtNjUuODk2MzldLCBbLTY0LjU2ODI3NiwgLTY1LjYwMjUwNl0sIFstNjQuMTc2NTQyLCAtNjUuMTcxNDIzXSwgWy02My42MjgxNTIsIC02NC44OTcwNzNdLCBbLTYzLjAwMTM5NCwgLTY0LjY0MjMwOF0sIFstNjIuMDQxNjg2LCAtNjQuNTgzNTUyXSwgWy02MS40MTQ5MjgsIC02NC4yNzAwMzFdLCBbLTYwLjcwOTg1NSwgLTY0LjA3NDA3NF0sIFstNTkuODg3MjY5LCAtNjMuOTU2NTFdLCBbLTU5LjE2MjU4NSwgLTYzLjcwMTc0NV0sIFstNTguNTk0NTU3LCAtNjMuMzg4MjI0XSwgWy01Ny44MTExNDMsIC02My4yNzA2Nl0sIFstNTcuMjIzNTgyLCAtNjMuNTI1NDI1XSwgWy01Ny41OTU3MywgLTYzLjg1ODUzMl0sIFstNTguNjE0MTQzLCAtNjQuMTUyNDY3XV1dXSwgInR5cGUiOiAiTXVsdGlQb2x5Z29uIn0sICJpZCI6ICJBVEEiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkFudGFyY3RpY2EiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICJibGFjayIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s2OC45MzUsIC00OC42MjVdLCBbNjkuNTgsIC00OC45NF0sIFs3MC41MjUsIC00OS4wNjVdLCBbNzAuNTYsIC00OS4yNTVdLCBbNzAuMjgsIC00OS43MV0sIFs2OC43NDUsIC00OS43NzVdLCBbNjguNzIsIC00OS4yNDI1XSwgWzY4Ljg2NzUsIC00OC44M10sIFs2OC45MzUsIC00OC42MjVdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkFURiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRnJlbmNoIFNvdXRoZXJuIGFuZCBBbnRhcmN0aWMgTGFuZHMiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICJibGFjayIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbMTQ1LjM5Nzk3OCwgLTQwLjc5MjU0OV0sIFsxNDYuMzY0MTIxLCAtNDEuMTM3Njk1XSwgWzE0Ni45MDg1ODQsIC00MS4wMDA1NDZdLCBbMTQ3LjY4OTI1OSwgLTQwLjgwODI1OF0sIFsxNDguMjg5MDY4LCAtNDAuODc1NDM4XSwgWzE0OC4zNTk4NjUsIC00Mi4wNjI0NDVdLCBbMTQ4LjAxNzMwMSwgLTQyLjQwNzAyNF0sIFsxNDcuOTE0MDUyLCAtNDMuMjExNTIyXSwgWzE0Ny41NjQ1NjQsIC00Mi45Mzc2ODldLCBbMTQ2Ljg3MDM0MywgLTQzLjYzNDU5N10sIFsxNDYuNjYzMzI3LCAtNDMuNTgwODU0XSwgWzE0Ni4wNDgzNzgsIC00My41NDk3NDVdLCBbMTQ1LjQzMTkzLCAtNDIuNjkzNzc2XSwgWzE0NS4yOTUwOSwgLTQyLjAzMzYxXSwgWzE0NC43MTgwNzEsIC00MS4xNjI1NTJdLCBbMTQ0Ljc0Mzc1NSwgLTQwLjcwMzk3NV0sIFsxNDUuMzk3OTc4LCAtNDAuNzkyNTQ5XV1dLCBbW1sxNDMuNTYxODExLCAtMTMuNzYzNjU2XSwgWzE0My45MjIwOTksIC0xNC41NDgzMTFdLCBbMTQ0LjU2MzcxNCwgLTE0LjE3MTE3Nl0sIFsxNDQuODk0OTA4LCAtMTQuNTk0NDU4XSwgWzE0NS4zNzQ3MjQsIC0xNC45ODQ5NzZdLCBbMTQ1LjI3MTk5MSwgLTE1LjQyODIwNV0sIFsxNDUuNDg1MjYsIC0xNi4yODU2NzJdLCBbMTQ1LjYzNzAzMywgLTE2Ljc4NDkxOF0sIFsxNDUuODg4OTA0LCAtMTYuOTA2OTI2XSwgWzE0Ni4xNjAzMDksIC0xNy43NjE2NTVdLCBbMTQ2LjA2MzY3NCwgLTE4LjI4MDA3M10sIFsxNDYuMzg3NDc4LCAtMTguOTU4Mjc0XSwgWzE0Ny40NzEwODIsIC0xOS40ODA3MjNdLCBbMTQ4LjE3NzYwMiwgLTE5Ljk1NTkzOV0sIFsxNDguODQ4NDE0LCAtMjAuMzkxMjFdLCBbMTQ4LjcxNzQ2NSwgLTIwLjYzMzQ2OV0sIFsxNDkuMjg5NDIsIC0yMS4yNjA1MTFdLCBbMTQ5LjY3ODMzNywgLTIyLjM0MjUxMl0sIFsxNTAuMDc3MzgyLCAtMjIuMTIyNzg0XSwgWzE1MC40ODI5MzksIC0yMi41NTYxNDJdLCBbMTUwLjcyNzI2NSwgLTIyLjQwMjQwNV0sIFsxNTAuODk5NTU0LCAtMjMuNDYyMjM3XSwgWzE1MS42MDkxNzUsIC0yNC4wNzYyNTZdLCBbMTUyLjA3MzU0LCAtMjQuNDU3ODg3XSwgWzE1Mi44NTUxOTcsIC0yNS4yNjc1MDFdLCBbMTUzLjEzNjE2MiwgLTI2LjA3MTE3M10sIFsxNTMuMTYxOTQ5LCAtMjYuNjQxMzE5XSwgWzE1My4wOTI5MDksIC0yNy4yNjAzXSwgWzE1My41Njk0NjksIC0yOC4xMTAwNjddLCBbMTUzLjUxMjEwOCwgLTI4Ljk5NTA3N10sIFsxNTMuMzM5MDk1LCAtMjkuNDU4MjAyXSwgWzE1My4wNjkyNDEsIC0zMC4zNTAyNF0sIFsxNTMuMDg5NjAyLCAtMzAuOTIzNjQyXSwgWzE1Mi44OTE1NzgsIC0zMS42NDA0NDZdLCBbMTUyLjQ1MDAwMiwgLTMyLjU1MDAwM10sIFsxNTEuNzA5MTE3LCAtMzMuMDQxMzQyXSwgWzE1MS4zNDM5NzIsIC0zMy44MTYwMjNdLCBbMTUxLjAxMDU1NSwgLTM0LjMxMDM2XSwgWzE1MC43MTQxMzksIC0zNS4xNzM0Nl0sIFsxNTAuMzI4MjIsIC0zNS42NzE4NzldLCBbMTUwLjA3NTIxMiwgLTM2LjQyMDIwNl0sIFsxNDkuOTQ2MTI0LCAtMzcuMTA5MDUyXSwgWzE0OS45OTcyODQsIC0zNy40MjUyNjFdLCBbMTQ5LjQyMzg4MiwgLTM3Ljc3MjY4MV0sIFsxNDguMzA0NjIyLCAtMzcuODA5MDYxXSwgWzE0Ny4zODE3MzMsIC0zOC4yMTkyMTddLCBbMTQ2LjkyMjEyMywgLTM4LjYwNjUzMl0sIFsxNDYuMzE3OTIyLCAtMzkuMDM1NzU3XSwgWzE0NS40ODk2NTIsIC0zOC41OTM3NjhdLCBbMTQ0Ljg3Njk3NiwgLTM4LjQxNzQ0OF0sIFsxNDUuMDMyMjEyLCAtMzcuODk2MTg4XSwgWzE0NC40ODU2ODIsIC0zOC4wODUzMjRdLCBbMTQzLjYwOTk3NCwgLTM4LjgwOTQ2NV0sIFsxNDIuNzQ1NDI3LCAtMzguNTM4MjY4XSwgWzE0Mi4xNzgzMywgLTM4LjM4MDAzNF0sIFsxNDEuNjA2NTgyLCAtMzguMzA4NTE0XSwgWzE0MC42Mzg1NzksIC0zOC4wMTkzMzNdLCBbMTM5Ljk5MjE1OCwgLTM3LjQwMjkzNl0sIFsxMzkuODA2NTg4LCAtMzYuNjQzNjAzXSwgWzEzOS41NzQxNDgsIC0zNi4xMzgzNjJdLCBbMTM5LjA4MjgwOCwgLTM1LjczMjc1NF0sIFsxMzguMTIwNzQ4LCAtMzUuNjEyMjk2XSwgWzEzOC40NDk0NjIsIC0zNS4xMjcyNjFdLCBbMTM4LjIwNzU2NCwgLTM0LjM4NDcyM10sIFsxMzcuNzE5MTcsIC0zNS4wNzY4MjVdLCBbMTM2LjgyOTQwNiwgLTM1LjI2MDUzNV0sIFsxMzcuMzUyMzcxLCAtMzQuNzA3MzM5XSwgWzEzNy41MDM4ODYsIC0zNC4xMzAyNjhdLCBbMTM3Ljg5MDExNiwgLTMzLjY0MDQ3OV0sIFsxMzcuODEwMzI4LCAtMzIuOTAwMDA3XSwgWzEzNi45OTY4MzcsIC0zMy43NTI3NzFdLCBbMTM2LjM3MjA2OSwgLTM0LjA5NDc2Nl0sIFsxMzUuOTg5MDQzLCAtMzQuODkwMTE4XSwgWzEzNS4yMDgyMTMsIC0zNC40Nzg2N10sIFsxMzUuMjM5MjE4LCAtMzMuOTQ3OTUzXSwgWzEzNC42MTM0MTcsIC0zMy4yMjI3NzhdLCBbMTM0LjA4NTkwNCwgLTMyLjg0ODA3Ml0sIFsxMzQuMjczOTAzLCAtMzIuNjE3MjM0XSwgWzEzMi45OTA3NzcsIC0zMi4wMTEyMjRdLCBbMTMyLjI4ODA4MSwgLTMxLjk4MjY0N10sIFsxMzEuMzI2MzMxLCAtMzEuNDk1ODAzXSwgWzEyOS41MzU3OTQsIC0zMS41OTA0MjNdLCBbMTI4LjI0MDkzOCwgLTMxLjk0ODQ4OV0sIFsxMjcuMTAyODY3LCAtMzIuMjgyMjY3XSwgWzEyNi4xNDg3MTQsIC0zMi4yMTU5NjZdLCBbMTI1LjA4ODYyMywgLTMyLjcyODc1MV0sIFsxMjQuMjIxNjQ4LCAtMzIuOTU5NDg3XSwgWzEyNC4wMjg5NDcsIC0zMy40ODM4NDddLCBbMTIzLjY1OTY2NywgLTMzLjg5MDE3OV0sIFsxMjIuODExMDM2LCAtMzMuOTE0NDY3XSwgWzEyMi4xODMwNjQsIC0zNC4wMDM0MDJdLCBbMTIxLjI5OTE5MSwgLTMzLjgyMTAzNl0sIFsxMjAuNTgwMjY4LCAtMzMuOTMwMTc3XSwgWzExOS44OTM2OTUsIC0zMy45NzYwNjVdLCBbMTE5LjI5ODg5OSwgLTM0LjUwOTM2Nl0sIFsxMTkuMDA3MzQxLCAtMzQuNDY0MTQ5XSwgWzExOC41MDU3MTgsIC0zNC43NDY4MTldLCBbMTE4LjAyNDk3MiwgLTM1LjA2NDczM10sIFsxMTcuMjk1NTA3LCAtMzUuMDI1NDU5XSwgWzExNi42MjUxMDksIC0zNS4wMjUwOTddLCBbMTE1LjU2NDM0NywgLTM0LjM4NjQyOF0sIFsxMTUuMDI2ODA5LCAtMzQuMTk2NTE3XSwgWzExNS4wNDg2MTYsIC0zMy42MjM0MjVdLCBbMTE1LjU0NTEyMywgLTMzLjQ4NzI1OF0sIFsxMTUuNzE0Njc0LCAtMzMuMjU5NTcyXSwgWzExNS42NzkzNzksIC0zMi45MDAzNjldLCBbMTE1LjgwMTY0NSwgLTMyLjIwNTA2Ml0sIFsxMTUuNjg5NjExLCAtMzEuNjEyNDM3XSwgWzExNS4xNjA5MDksIC0zMC42MDE1OTRdLCBbMTE0Ljk5NzA0MywgLTMwLjAzMDcyNV0sIFsxMTUuMDQwMDM4LCAtMjkuNDYxMDk1XSwgWzExNC42NDE5NzQsIC0yOC44MTAyMzFdLCBbMTE0LjYxNjQ5OCwgLTI4LjUxNjM5OV0sIFsxMTQuMTczNTc5LCAtMjguMTE4MDc3XSwgWzExNC4wNDg4ODQsIC0yNy4zMzQ3NjVdLCBbMTEzLjQ3NzQ5OCwgLTI2LjU0MzEzNF0sIFsxMTMuMzM4OTUzLCAtMjYuMTE2NTQ1XSwgWzExMy43NzgzNTgsIC0yNi41NDkwMjVdLCBbMTEzLjQ0MDk2MiwgLTI1LjYyMTI3OF0sIFsxMTMuOTM2OTAxLCAtMjUuOTExMjM1XSwgWzExNC4yMzI4NTIsIC0yNi4yOTg0NDZdLCBbMTE0LjIxNjE2MSwgLTI1Ljc4NjI4MV0sIFsxMTMuNzIxMjU1LCAtMjQuOTk4OTM5XSwgWzExMy42MjUzNDQsIC0yNC42ODM5NzFdLCBbMTEzLjM5MzUyMywgLTI0LjM4NDc2NF0sIFsxMTMuNTAyMDQ0LCAtMjMuODA2MzVdLCBbMTEzLjcwNjk5MywgLTIzLjU2MDIxNV0sIFsxMTMuODQzNDE4LCAtMjMuMDU5OTg3XSwgWzExMy43MzY1NTIsIC0yMi40NzU0NzVdLCBbMTE0LjE0OTc1NiwgLTIxLjc1NTg4MV0sIFsxMTQuMjI1MzA3LCAtMjIuNTE3NDg4XSwgWzExNC42NDc3NjIsIC0yMS44Mjk1Ml0sIFsxMTUuNDYwMTY3LCAtMjEuNDk1MTczXSwgWzExNS45NDczNzMsIC0yMS4wNjg2ODhdLCBbMTE2LjcxMTYxNSwgLTIwLjcwMTY4Ml0sIFsxMTcuMTY2MzE2LCAtMjAuNjIzNTk5XSwgWzExNy40NDE1NDUsIC0yMC43NDY4OTldLCBbMTE4LjIyOTU1OSwgLTIwLjM3NDIwOF0sIFsxMTguODM2MDg1LCAtMjAuMjYzMzExXSwgWzExOC45ODc4MDcsIC0yMC4wNDQyMDNdLCBbMTE5LjI1MjQ5NCwgLTE5Ljk1Mjk0Ml0sIFsxMTkuODA1MjI1LCAtMTkuOTc2NTA2XSwgWzEyMC44NTYyMiwgLTE5LjY4MzcwOF0sIFsxMjEuMzk5ODU2LCAtMTkuMjM5NzU2XSwgWzEyMS42NTUxMzgsIC0xOC43MDUzMThdLCBbMTIyLjI0MTY2NSwgLTE4LjE5NzY0OV0sIFsxMjIuMjg2NjI0LCAtMTcuNzk4NjAzXSwgWzEyMi4zMTI3NzIsIC0xNy4yNTQ5NjddLCBbMTIzLjAxMjU3NCwgLTE2LjQwNTJdLCBbMTIzLjQzMzc4OSwgLTE3LjI2ODU1OF0sIFsxMjMuODU5MzQ1LCAtMTcuMDY5MDM1XSwgWzEyMy41MDMyNDIsIC0xNi41OTY1MDZdLCBbMTIzLjgxNzA3MywgLTE2LjExMTMxNl0sIFsxMjQuMjU4Mjg3LCAtMTYuMzI3OTQ0XSwgWzEyNC4zNzk3MjYsIC0xNS41NjcwNl0sIFsxMjQuOTI2MTUzLCAtMTUuMDc1MV0sIFsxMjUuMTY3Mjc1LCAtMTQuNjgwMzk2XSwgWzEyNS42NzAwODcsIC0xNC41MTAwN10sIFsxMjUuNjg1Nzk2LCAtMTQuMjMwNjU2XSwgWzEyNi4xMjUxNDksIC0xNC4zNDczNDFdLCBbMTI2LjE0MjgyMywgLTE0LjA5NTk4N10sIFsxMjYuNTgyNTg5LCAtMTMuOTUyNzkxXSwgWzEyNy4wNjU4NjcsIC0xMy44MTc5NjhdLCBbMTI3LjgwNDYzMywgLTE0LjI3NjkwNl0sIFsxMjguMzU5NjksIC0xNC44NjkxN10sIFsxMjguOTg1NTQzLCAtMTQuODc1OTkxXSwgWzEyOS42MjE0NzMsIC0xNC45Njk3ODRdLCBbMTI5LjQwOTYsIC0xNC40MjA2N10sIFsxMjkuODg4NjQxLCAtMTMuNjE4NzAzXSwgWzEzMC4zMzk0NjYsIC0xMy4zNTczNzZdLCBbMTMwLjE4MzUwNiwgLTEzLjEwNzUyXSwgWzEzMC42MTc3OTUsIC0xMi41MzYzOTJdLCBbMTMxLjIyMzQ5NSwgLTEyLjE4MzY0OV0sIFsxMzEuNzM1MDkxLCAtMTIuMzAyNDUzXSwgWzEzMi41NzUyOTgsIC0xMi4xMTQwNDFdLCBbMTMyLjU1NzIxMiwgLTExLjYwMzAxMl0sIFsxMzEuODI0Njk4LCAtMTEuMjczNzgyXSwgWzEzMi4zNTcyMjQsIC0xMS4xMjg1MTldLCBbMTMzLjAxOTU2MSwgLTExLjM3NjQxMV0sIFsxMzMuNTUwODQ2LCAtMTEuNzg2NTE1XSwgWzEzNC4zOTMwNjgsIC0xMi4wNDIzNjVdLCBbMTM0LjY3ODYzMiwgLTExLjk0MTE4M10sIFsxMzUuMjk4NDkxLCAtMTIuMjQ4NjA2XSwgWzEzNS44ODI2OTMsIC0xMS45NjIyNjddLCBbMTM2LjI1ODM4MSwgLTEyLjA0OTM0Ml0sIFsxMzYuNDkyNDc1LCAtMTEuODU3MjA5XSwgWzEzNi45NTE2MiwgLTEyLjM1MTk1OV0sIFsxMzYuNjg1MTI1LCAtMTIuODg3MjIzXSwgWzEzNi4zMDU0MDcsIC0xMy4yOTEyM10sIFsxMzUuOTYxNzU4LCAtMTMuMzI0NTA5XSwgWzEzNi4wNzc2MTcsIC0xMy43MjQyNzhdLCBbMTM1Ljc4MzgzNiwgLTE0LjIyMzk4OV0sIFsxMzUuNDI4NjY0LCAtMTQuNzE1NDMyXSwgWzEzNS41MDAxODQsIC0xNC45OTc3NDFdLCBbMTM2LjI5NTE3NSwgLTE1LjU1MDI2NV0sIFsxMzcuMDY1MzYsIC0xNS44NzA3NjJdLCBbMTM3LjU4MDQ3MSwgLTE2LjIxNTA4Ml0sIFsxMzguMzAzMjE3LCAtMTYuODA3NjA0XSwgWzEzOC41ODUxNjQsIC0xNi44MDY2MjJdLCBbMTM5LjEwODU0MywgLTE3LjA2MjY3OV0sIFsxMzkuMjYwNTc1LCAtMTcuMzcxNjAxXSwgWzE0MC4yMTUyNDUsIC0xNy43MTA4MDVdLCBbMTQwLjg3NTQ2MywgLTE3LjM2OTA2OV0sIFsxNDEuMDcxMTEsIC0xNi44MzIwNDddLCBbMTQxLjI3NDA5NSwgLTE2LjM4ODg3XSwgWzE0MS4zOTgyMjIsIC0xNS44NDA1MzJdLCBbMTQxLjcwMjE4MywgLTE1LjA0NDkyMV0sIFsxNDEuNTYzMzgsIC0xNC41NjEzMzNdLCBbMTQxLjYzNTUyLCAtMTQuMjcwMzk1XSwgWzE0MS41MTk4NjksIC0xMy42OTgwNzhdLCBbMTQxLjY1MDkyLCAtMTIuOTQ0Njg4XSwgWzE0MS44NDI2OTEsIC0xMi43NDE1NDhdLCBbMTQxLjY4Njk5LCAtMTIuNDA3NjE0XSwgWzE0MS45Mjg2MjksIC0xMS44Nzc0NjZdLCBbMTQyLjExODQ4OCwgLTExLjMyODA0Ml0sIFsxNDIuMTQzNzA2LCAtMTEuMDQyNzM3XSwgWzE0Mi41MTUyNiwgLTEwLjY2ODE4Nl0sIFsxNDIuNzk3MzEsIC0xMS4xNTczNTVdLCBbMTQyLjg2Njc2MywgLTExLjc4NDcwN10sIFsxNDMuMTE1OTQ3LCAtMTEuOTA1NjNdLCBbMTQzLjE1ODYzMiwgLTEyLjMyNTY1Nl0sIFsxNDMuNTIyMTI0LCAtMTIuODM0MzU4XSwgWzE0My41OTcxNTgsIC0xMy40MDA0MjJdLCBbMTQzLjU2MTgxMSwgLTEzLjc2MzY1Nl1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiQVVTIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJBdXN0cmFsaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzE2Ljk3OTY2NywgNDguMTIzNDk3XSwgWzE2LjkwMzc1NCwgNDcuNzE0ODY2XSwgWzE2LjM0MDU4NCwgNDcuNzEyOTAyXSwgWzE2LjUzNDI2OCwgNDcuNDk2MTcxXSwgWzE2LjIwMjI5OCwgNDYuODUyMzg2XSwgWzE2LjAxMTY2NCwgNDYuNjgzNjExXSwgWzE1LjEzNzA5MiwgNDYuNjU4NzAzXSwgWzE0LjYzMjQ3MiwgNDYuNDMxODE3XSwgWzEzLjgwNjQ3NSwgNDYuNTA5MzA2XSwgWzEyLjM3NjQ4NSwgNDYuNzY3NTU5XSwgWzEyLjE1MzA4OCwgNDcuMTE1MzkzXSwgWzExLjE2NDgyOCwgNDYuOTQxNTc5XSwgWzExLjA0ODU1NiwgNDYuNzUxMzU5XSwgWzEwLjQ0MjcwMSwgNDYuODkzNTQ2XSwgWzkuOTMyNDQ4LCA0Ni45MjA3MjhdLCBbOS40Nzk5NywgNDcuMTAyODFdLCBbOS42MzI5MzIsIDQ3LjM0NzYwMV0sIFs5LjU5NDIyNiwgNDcuNTI1MDU4XSwgWzkuODk2MDY4LCA0Ny41ODAxOTddLCBbMTAuNDAyMDg0LCA0Ny4zMDI0ODhdLCBbMTAuNTQ0NTA0LCA0Ny41NjYzOTldLCBbMTEuNDI2NDE0LCA0Ny41MjM3NjZdLCBbMTIuMTQxMzU3LCA0Ny43MDMwODNdLCBbMTIuNjIwNzYsIDQ3LjY3MjM4OF0sIFsxMi45MzI2MjcsIDQ3LjQ2NzY0Nl0sIFsxMy4wMjU4NTEsIDQ3LjYzNzU4NF0sIFsxMi44ODQxMDMsIDQ4LjI4OTE0Nl0sIFsxMy4yNDMzNTcsIDQ4LjQxNjExNV0sIFsxMy41OTU5NDYsIDQ4Ljg3NzE3Ml0sIFsxNC4zMzg4OTgsIDQ4LjU1NTMwNV0sIFsxNC45MDE0NDcsIDQ4Ljk2NDQwMl0sIFsxNS4yNTM0MTYsIDQ5LjAzOTA3NF0sIFsxNi4wMjk2NDcsIDQ4LjczMzg5OV0sIFsxNi40OTkyODMsIDQ4Ljc4NTgwOF0sIFsxNi45NjAyODgsIDQ4LjU5Njk4Ml0sIFsxNi44Nzk5ODMsIDQ4LjQ3MDAxM10sIFsxNi45Nzk2NjcsIDQ4LjEyMzQ5N11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQVVUIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJBdXN0cmlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbNDUuMDAxOTg3LCAzOS43NDAwMDRdLCBbNDUuMjk4MTQ1LCAzOS40NzE3NTFdLCBbNDUuNzM5OTc4LCAzOS40NzM5OTldLCBbNDUuNzM1Mzc5LCAzOS4zMTk3MTldLCBbNDYuMTQzNjIzLCAzOC43NDEyMDFdLCBbNDUuNDU3NzIyLCAzOC44NzQxMzldLCBbNDQuOTUyNjg4LCAzOS4zMzU3NjVdLCBbNDQuNzkzOTksIDM5LjcxMzAwM10sIFs0NS4wMDE5ODcsIDM5Ljc0MDAwNF1dXSwgW1tbNDcuMzczMzE1LCA0MS4yMTk3MzJdLCBbNDcuODE1NjY2LCA0MS4xNTE0MTZdLCBbNDcuOTg3MjgzLCA0MS40MDU4MTldLCBbNDguNTg0MzUzLCA0MS44MDg4N10sIFs0OS4xMTAyNjQsIDQxLjI4MjI4N10sIFs0OS42MTg5MTUsIDQwLjU3MjkyNF0sIFs1MC4wODQ4MywgNDAuNTI2MTU3XSwgWzUwLjM5MjgyMSwgNDAuMjU2NTYxXSwgWzQ5LjU2OTIwMiwgNDAuMTc2MTAxXSwgWzQ5LjM5NTI1OSwgMzkuMzk5NDgyXSwgWzQ5LjIyMzIyOCwgMzkuMDQ5MjE5XSwgWzQ4Ljg1NjUzMiwgMzguODE1NDg2XSwgWzQ4Ljg4MzI0OSwgMzguMzIwMjQ1XSwgWzQ4LjYzNDM3NSwgMzguMjcwMzc4XSwgWzQ4LjAxMDc0NCwgMzguNzk0MDE1XSwgWzQ4LjM1NTUyOSwgMzkuMjg4NzY1XSwgWzQ4LjA2MDA5NSwgMzkuNTgyMjM1XSwgWzQ3LjY4NTA3OSwgMzkuNTA4MzY0XSwgWzQ2LjUwNTcyLCAzOC43NzA2MDVdLCBbNDYuNDgzNDk5LCAzOS40NjQxNTVdLCBbNDYuMDM0NTM0LCAzOS42MjgwMjFdLCBbNDUuNjEwMDEyLCAzOS44OTk5OTRdLCBbNDUuODkxOTA3LCA0MC4yMTg0NzZdLCBbNDUuMzU5MTc1LCA0MC41NjE1MDRdLCBbNDUuNTYwMzUxLCA0MC44MTIyOV0sIFs0NS4xNzk0OTYsIDQwLjk4NTM1NF0sIFs0NC45NzI0OCwgNDEuMjQ4MTI5XSwgWzQ1LjIxNzQyNiwgNDEuNDExNDUyXSwgWzQ1Ljk2MjYwMSwgNDEuMTIzODczXSwgWzQ2LjUwMTYzNywgNDEuMDY0NDQ1XSwgWzQ2LjYzNzkwOCwgNDEuMTgxNjczXSwgWzQ2LjE0NTQzMiwgNDEuNzIyODAyXSwgWzQ2LjQwNDk1MSwgNDEuODYwNjc1XSwgWzQ2LjY4NjA3MSwgNDEuODI3MTM3XSwgWzQ3LjM3MzMxNSwgNDEuMjE5NzMyXV1dXSwgInR5cGUiOiAiTXVsdGlQb2x5Z29uIn0sICJpZCI6ICJBWkUiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkF6ZXJiYWlqYW4iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzI5LjMzOTk5OCwgLTQuNDk5OTgzXSwgWzI5LjI3NjM4NCwgLTMuMjkzOTA3XSwgWzI5LjAyNDkyNiwgLTIuODM5MjU4XSwgWzI5LjYzMjE3NiwgLTIuOTE3ODU4XSwgWzI5LjkzODM1OSwgLTIuMzQ4NDg3XSwgWzMwLjQ2OTY5NiwgLTIuNDEzODU4XSwgWzMwLjUyNzY3NywgLTIuODA3NjMyXSwgWzMwLjc0MzAxMywgLTMuMDM0Mjg1XSwgWzMwLjc1MjI2MywgLTMuMzU5MzNdLCBbMzAuNTA1NTYsIC0zLjU2ODU2N10sIFszMC4xMTYzMzMsIC00LjA5MDEzOF0sIFsyOS43NTM1MTIsIC00LjQ1MjM4OV0sIFsyOS4zMzk5OTgsIC00LjQ5OTk4M11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQkRJIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJCdXJ1bmRpIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1szLjMxNDk3MSwgNTEuMzQ1NzgxXSwgWzQuMDQ3MDcxLCA1MS4yNjcyNTldLCBbNC45NzM5OTEsIDUxLjQ3NTAyNF0sIFs1LjYwNjk3NiwgNTEuMDM3Mjk4XSwgWzYuMTU2NjU4LCA1MC44MDM3MjFdLCBbNi4wNDMwNzMsIDUwLjEyODA1Ml0sIFs1Ljc4MjQxNywgNTAuMDkwMzI4XSwgWzUuNjc0MDUyLCA0OS41Mjk0ODRdLCBbNC43OTkyMjIsIDQ5Ljk4NTM3M10sIFs0LjI4NjAyMywgNDkuOTA3NDk3XSwgWzMuNTg4MTg0LCA1MC4zNzg5OTJdLCBbMy4xMjMyNTIsIDUwLjc4MDM2M10sIFsyLjY1ODQyMiwgNTAuNzk2ODQ4XSwgWzIuNTEzNTczLCA1MS4xNDg1MDZdLCBbMy4zMTQ5NzEsIDUxLjM0NTc4MV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQkVMIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJCZWxnaXVtIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1syLjY5MTcwMiwgNi4yNTg4MTddLCBbMS44NjUyNDEsIDYuMTQyMTU4XSwgWzEuNjE4OTUxLCA2LjgzMjAzOF0sIFsxLjY2NDQ3OCwgOS4xMjg1OV0sIFsxLjQ2MzA0MywgOS4zMzQ2MjRdLCBbMS40MjUwNjEsIDkuODI1Mzk1XSwgWzEuMDc3Nzk1LCAxMC4xNzU2MDddLCBbMC43NzIzMzYsIDEwLjQ3MDgwOF0sIFswLjg5OTU2MywgMTAuOTk3MzM5XSwgWzEuMjQzNDcsIDExLjExMDUxMV0sIFsxLjQ0NzE3OCwgMTEuNTQ3NzE5XSwgWzEuOTM1OTg2LCAxMS42NDExNV0sIFsyLjE1NDQ3NCwgMTEuOTQwMTVdLCBbMi40OTAxNjQsIDEyLjIzMzA1Ml0sIFsyLjg0ODY0MywgMTIuMjM1NjM2XSwgWzMuNjExMTgsIDExLjY2MDE2N10sIFszLjU3MjIxNiwgMTEuMzI3OTM5XSwgWzMuNzk3MTEyLCAxMC43MzQ3NDZdLCBbMy42MDAwNywgMTAuMzMyMTg2XSwgWzMuNzA1NDM4LCAxMC4wNjMyMV0sIFszLjIyMDM1MiwgOS40NDQxNTNdLCBbMi45MTIzMDgsIDkuMTM3NjA4XSwgWzIuNzIzNzkzLCA4LjUwNjg0NV0sIFsyLjc0OTA2MywgNy44NzA3MzRdLCBbMi42OTE3MDIsIDYuMjU4ODE3XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJCRU4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkJlbmluIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stMi44Mjc0OTYsIDkuNjQyNDYxXSwgWy0zLjUxMTg5OSwgOS45MDAzMjZdLCBbLTMuOTgwNDQ5LCA5Ljg2MjM0NF0sIFstNC4zMzAyNDcsIDkuNjEwODM1XSwgWy00Ljc3OTg4NCwgOS44MjE5ODVdLCBbLTQuOTU0NjUzLCAxMC4xNTI3MTRdLCBbLTUuNDA0MzQyLCAxMC4zNzA3MzddLCBbLTUuNDcwNTY1LCAxMC45NTEyN10sIFstNS4xOTc4NDMsIDExLjM3NTE0Nl0sIFstNS4yMjA5NDIsIDExLjcxMzg1OV0sIFstNC40MjcxNjYsIDEyLjU0MjY0Nl0sIFstNC4yODA0MDUsIDEzLjIyODQ0NF0sIFstNC4wMDYzOTEsIDEzLjQ3MjQ4NV0sIFstMy41MjI4MDMsIDEzLjMzNzY2Ml0sIFstMy4xMDM3MDcsIDEzLjU0MTI2N10sIFstMi45Njc2OTQsIDEzLjc5ODE1XSwgWy0yLjE5MTgyNSwgMTQuMjQ2NDE4XSwgWy0yLjAwMTAzNSwgMTQuNTU5MDA4XSwgWy0xLjA2NjM2MywgMTQuOTczODE1XSwgWy0wLjUxNTg1NCwgMTUuMTE2MTU4XSwgWy0wLjI2NjI1NywgMTQuOTI0MzA5XSwgWzAuMzc0ODkyLCAxNC45Mjg5MDhdLCBbMC4yOTU2NDYsIDE0LjQ0NDIzNV0sIFswLjQyOTkyOCwgMTMuOTg4NzMzXSwgWzAuOTkzMDQ2LCAxMy4zMzU3NV0sIFsxLjAyNDEwMywgMTIuODUxODI2XSwgWzIuMTc3MTA4LCAxMi42MjUwMThdLCBbMi4xNTQ0NzQsIDExLjk0MDE1XSwgWzEuOTM1OTg2LCAxMS42NDExNV0sIFsxLjQ0NzE3OCwgMTEuNTQ3NzE5XSwgWzEuMjQzNDcsIDExLjExMDUxMV0sIFswLjg5OTU2MywgMTAuOTk3MzM5XSwgWzAuMDIzODAzLCAxMS4wMTg2ODJdLCBbLTAuNDM4NzAyLCAxMS4wOTgzNDFdLCBbLTAuNzYxNTc2LCAxMC45MzY5M10sIFstMS4yMDMzNTgsIDExLjAwOTgxOV0sIFstMi45NDA0MDksIDEwLjk2MjY5XSwgWy0yLjk2Mzg5NiwgMTAuMzk1MzM1XSwgWy0yLjgyNzQ5NiwgOS42NDI0NjFdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkJGQSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQnVya2luYSBGYXNvIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s5Mi42NzI3MjEsIDIyLjA0MTIzOV0sIFs5Mi42NTIyNTcsIDIxLjMyNDA0OF0sIFs5Mi4zMDMyMzQsIDIxLjQ3NTQ4NV0sIFs5Mi4zNjg1NTQsIDIwLjY3MDg4M10sIFs5Mi4wODI4ODYsIDIxLjE5MjE5NV0sIFs5Mi4wMjUyMTUsIDIxLjcwMTU3XSwgWzkxLjgzNDg5MSwgMjIuMTgyOTM2XSwgWzkxLjQxNzA4NywgMjIuNzY1MDE5XSwgWzkwLjQ5NjAwNiwgMjIuODA1MDE3XSwgWzkwLjU4Njk1NywgMjIuMzkyNzk0XSwgWzkwLjI3Mjk3MSwgMjEuODM2MzY4XSwgWzg5Ljg0NzQ2NywgMjIuMDM5MTQ2XSwgWzg5LjcwMjA1LCAyMS44NTcxMTZdLCBbODkuNDE4ODYzLCAyMS45NjYxNzldLCBbODkuMDMxOTYxLCAyMi4wNTU3MDhdLCBbODguODc2MzEyLCAyMi44NzkxNDZdLCBbODguNTI5NzcsIDIzLjYzMTE0Ml0sIFs4OC42OTk5NCwgMjQuMjMzNzE1XSwgWzg4LjA4NDQyMiwgMjQuNTAxNjU3XSwgWzg4LjMwNjM3MywgMjQuODY2MDc5XSwgWzg4LjkzMTU1NCwgMjUuMjM4NjkyXSwgWzg4LjIwOTc4OSwgMjUuNzY4MDY2XSwgWzg4LjU2MzA0OSwgMjYuNDQ2NTI2XSwgWzg5LjM1NTA5NCwgMjYuMDE0NDA3XSwgWzg5LjgzMjQ4MSwgMjUuOTY1MDgyXSwgWzg5LjkyMDY5MywgMjUuMjY5NzVdLCBbOTAuODcyMjExLCAyNS4xMzI2MDFdLCBbOTEuNzk5NTk2LCAyNS4xNDc0MzJdLCBbOTIuMzc2MjAyLCAyNC45NzY2OTNdLCBbOTEuOTE1MDkzLCAyNC4xMzA0MTRdLCBbOTEuNDY3NzMsIDI0LjA3MjYzOV0sIFs5MS4xNTg5NjMsIDIzLjUwMzUyN10sIFs5MS43MDY0NzUsIDIyLjk4NTI2NF0sIFs5MS44Njk5MjgsIDIzLjYyNDM0Nl0sIFs5Mi4xNDYwMzUsIDIzLjYyNzQ5OV0sIFs5Mi42NzI3MjEsIDIyLjA0MTIzOV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQkdEIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJCYW5nbGFkZXNoIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1syMi42NTcxNSwgNDQuMjM0OTIzXSwgWzIyLjk0NDgzMiwgNDMuODIzNzg1XSwgWzIzLjMzMjMwMiwgNDMuODk3MDExXSwgWzI0LjEwMDY3OSwgNDMuNzQxMDUxXSwgWzI1LjU2OTI3MiwgNDMuNjg4NDQ1XSwgWzI2LjA2NTE1OSwgNDMuOTQzNDk0XSwgWzI3LjI0MjQsIDQ0LjE3NTk4Nl0sIFsyNy45NzAxMDcsIDQzLjgxMjQ2OF0sIFsyOC41NTgwODEsIDQzLjcwNzQ2Ml0sIFsyOC4wMzkwOTUsIDQzLjI5MzE3Ml0sIFsyNy42NzM4OTgsIDQyLjU3Nzg5Ml0sIFsyNy45OTY3MiwgNDIuMDA3MzU5XSwgWzI3LjEzNTczOSwgNDIuMTQxNDg1XSwgWzI2LjExNzA0MiwgNDEuODI2OTA1XSwgWzI2LjEwNjEzOCwgNDEuMzI4ODk5XSwgWzI1LjE5NzIwMSwgNDEuMjM0NDg2XSwgWzI0LjQ5MjY0NSwgNDEuNTgzODk2XSwgWzIzLjY5MjA3NCwgNDEuMzA5MDgxXSwgWzIyLjk1MjM3NywgNDEuMzM3OTk0XSwgWzIyLjg4MTM3NCwgNDEuOTk5Mjk3XSwgWzIyLjM4MDUyNiwgNDIuMzIwMjZdLCBbMjIuNTQ1MDEyLCA0Mi40NjEzNjJdLCBbMjIuNDM2NTk1LCA0Mi41ODAzMjFdLCBbMjIuNjA0ODAxLCA0Mi44OTg1MTldLCBbMjIuOTg2MDE5LCA0My4yMTExNjFdLCBbMjIuNTAwMTU3LCA0My42NDI4MTRdLCBbMjIuNDEwNDQ2LCA0NC4wMDgwNjNdLCBbMjIuNjU3MTUsIDQ0LjIzNDkyM11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQkdSIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJCdWxnYXJpYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbWy03Ny41MzQ2NiwgMjMuNzU5NzVdLCBbLTc3Ljc4LCAyMy43MV0sIFstNzguMDM0MDUsIDI0LjI4NjE1XSwgWy03OC40MDg0OCwgMjQuNTc1NjRdLCBbLTc4LjE5MDg3LCAyNS4yMTAzXSwgWy03Ny44OSwgMjUuMTddLCBbLTc3LjU0LCAyNC4zNF0sIFstNzcuNTM0NjYsIDIzLjc1OTc1XV1dLCBbW1stNzcuODIsIDI2LjU4XSwgWy03OC45MSwgMjYuNDJdLCBbLTc4Ljk4LCAyNi43OV0sIFstNzguNTEsIDI2Ljg3XSwgWy03Ny44NSwgMjYuODRdLCBbLTc3LjgyLCAyNi41OF1dXSwgW1tbLTc3LCAyNi41OV0sIFstNzcuMTcyNTUsIDI1Ljg3OTE4XSwgWy03Ny4zNTY0MSwgMjYuMDA3MzVdLCBbLTc3LjM0LCAyNi41M10sIFstNzcuNzg4MDIsIDI2LjkyNTE2XSwgWy03Ny43OSwgMjcuMDRdLCBbLTc3LCAyNi41OV1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiQkhTIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJUaGUgQmFoYW1hcyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzE5LjAwNTQ4NiwgNDQuODYwMjM0XSwgWzE5LjM2ODAzLCA0NC44NjNdLCBbMTkuMTE3NjEsIDQ0LjQyMzA3XSwgWzE5LjU5OTc2LCA0NC4wMzg0N10sIFsxOS40NTQsIDQzLjU2ODFdLCBbMTkuMjE4NTIsIDQzLjUyMzg0XSwgWzE5LjAzMTY1LCA0My40MzI1M10sIFsxOC43MDY0OCwgNDMuMjAwMTFdLCBbMTguNTYsIDQyLjY1XSwgWzE3LjY3NDkyMiwgNDMuMDI4NTYzXSwgWzE3LjI5NzM3MywgNDMuNDQ2MzQxXSwgWzE2LjkxNjE1NiwgNDMuNjY3NzIyXSwgWzE2LjQ1NjQ0MywgNDQuMDQxMjRdLCBbMTYuMjM5NjYsIDQ0LjM1MTE0M10sIFsxNS43NTAwMjYsIDQ0LjgxODcxMl0sIFsxNS45NTkzNjcsIDQ1LjIzMzc3N10sIFsxNi4zMTgxNTcsIDQ1LjAwNDEyN10sIFsxNi41MzQ5MzksIDQ1LjIxMTYwOF0sIFsxNy4wMDIxNDYsIDQ1LjIzMzc3N10sIFsxNy44NjE3ODMsIDQ1LjA2Nzc0XSwgWzE4LjU1MzIxNCwgNDUuMDgxNTldLCBbMTkuMDA1NDg2LCA0NC44NjAyMzRdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkJJSCIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQm9zbmlhIGFuZCBIZXJ6ZWdvdmluYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMjMuNDg0MTI4LCA1My45MTI0OThdLCBbMjQuNDUwNjg0LCA1My45MDU3MDJdLCBbMjUuNTM2MzU0LCA1NC4yODI0MjNdLCBbMjUuNzY4NDMzLCA1NC44NDY5NjNdLCBbMjYuNTg4Mjc5LCA1NS4xNjcxNzZdLCBbMjYuNDk0MzMxLCA1NS42MTUxMDddLCBbMjcuMTAyNDYsIDU1Ljc4MzMxNF0sIFsyOC4xNzY3MDksIDU2LjE2OTEzXSwgWzI5LjIyOTUxMywgNTUuOTE4MzQ0XSwgWzI5LjM3MTU3MiwgNTUuNjcwMDkxXSwgWzI5Ljg5NjI5NCwgNTUuNzg5NDYzXSwgWzMwLjg3MzkwOSwgNTUuNTUwOTc2XSwgWzMwLjk3MTgzNiwgNTUuMDgxNTQ4XSwgWzMwLjc1NzUzNCwgNTQuODExNzcxXSwgWzMxLjM4NDQ3MiwgNTQuMTU3MDU2XSwgWzMxLjc5MTQyNCwgNTMuOTc0NjM5XSwgWzMxLjczMTI3MywgNTMuNzk0MDI5XSwgWzMyLjQwNTU5OSwgNTMuNjE4MDQ1XSwgWzMyLjY5MzY0MywgNTMuMzUxNDIxXSwgWzMyLjMwNDUxOSwgNTMuMTMyNzI2XSwgWzMxLjQ5NzY0NCwgNTMuMTY3NDI3XSwgWzMxLjMwNTIwMSwgNTMuMDczOTk2XSwgWzMxLjU0MDAxOCwgNTIuNzQyMDUyXSwgWzMxLjc4NTk5OCwgNTIuMTAxNjc4XSwgWzMwLjkyNzU0OSwgNTIuMDQyMzUzXSwgWzMwLjYxOTQ1NCwgNTEuODIyODA2XSwgWzMwLjU1NTExNywgNTEuMzE5NTAzXSwgWzMwLjE1NzM2NCwgNTEuNDE2MTM4XSwgWzI5LjI1NDkzOCwgNTEuMzY4MjM0XSwgWzI4Ljk5MjgzNSwgNTEuNjAyMDQ0XSwgWzI4LjYxNzYxMywgNTEuNDI3NzE0XSwgWzI4LjI0MTYxNSwgNTEuNTcyMjI3XSwgWzI3LjQ1NDA2NiwgNTEuNTkyMzAzXSwgWzI2LjMzNzk1OSwgNTEuODMyMjg5XSwgWzI1LjMyNzc4OCwgNTEuOTEwNjU2XSwgWzI0LjU1MzEwNiwgNTEuODg4NDYxXSwgWzI0LjAwNTA3OCwgNTEuNjE3NDQ0XSwgWzIzLjUyNzA3MSwgNTEuNTc4NDU0XSwgWzIzLjUwODAwMiwgNTIuMDIzNjQ3XSwgWzIzLjE5OTQ5NCwgNTIuNDg2OTc3XSwgWzIzLjc5OTE5OSwgNTIuNjkxMDk5XSwgWzIzLjgwNDkzNSwgNTMuMDg5NzMxXSwgWzIzLjUyNzUzNiwgNTMuNDcwMTIyXSwgWzIzLjQ4NDEyOCwgNTMuOTEyNDk4XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJCTFIiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkJlbGFydXMiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy04OS4xNDMwOCwgMTcuODA4MzE5XSwgWy04OS4xNTA5MDksIDE3Ljk1NTQ2OF0sIFstODkuMDI5ODU3LCAxOC4wMDE1MTFdLCBbLTg4Ljg0ODM0NCwgMTcuODgzMTk4XSwgWy04OC40OTAxMjMsIDE4LjQ4NjgzMV0sIFstODguMzAwMDMxLCAxOC40OTk5ODJdLCBbLTg4LjI5NjMzNiwgMTguMzUzMjczXSwgWy04OC4xMDY4MTMsIDE4LjM0ODY3NF0sIFstODguMTIzNDc5LCAxOC4wNzY2NzVdLCBbLTg4LjI4NTM1NSwgMTcuNjQ0MTQzXSwgWy04OC4xOTc4NjcsIDE3LjQ4OTQ3NV0sIFstODguMzAyNjQxLCAxNy4xMzE2OTRdLCBbLTg4LjIzOTUxOCwgMTcuMDM2MDY2XSwgWy04OC4zNTU0MjgsIDE2LjUzMDc3NF0sIFstODguNTUxODI1LCAxNi4yNjU0NjddLCBbLTg4LjczMjQzNCwgMTYuMjMzNjM1XSwgWy04OC45MzA2MTMsIDE1Ljg4NzI3M10sIFstODkuMjI5MTIyLCAxNS44ODY5MzhdLCBbLTg5LjE1MDgwNiwgMTcuMDE1NTc3XSwgWy04OS4xNDMwOCwgMTcuODA4MzE5XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJCTFoiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkJlbGl6ZSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTYyLjg0NjQ2OCwgLTIyLjAzNDk4NV0sIFstNjMuOTg2ODM4LCAtMjEuOTkzNjQ0XSwgWy02NC4zNzcwMjEsIC0yMi43OTgwOTFdLCBbLTY0Ljk2NDg5MiwgLTIyLjA3NTg2Ml0sIFstNjYuMjczMzM5LCAtMjEuODMyMzFdLCBbLTY3LjEwNjY3NCwgLTIyLjczNTkyNV0sIFstNjcuODI4MTgsIC0yMi44NzI5MTldLCBbLTY4LjIxOTkxMywgLTIxLjQ5NDM0N10sIFstNjguNzU3MTY3LCAtMjAuMzcyNjU4XSwgWy02OC40NDIyMjUsIC0xOS40MDUwNjhdLCBbLTY4Ljk2NjgxOCwgLTE4Ljk4MTY4M10sIFstNjkuMTAwMjQ3LCAtMTguMjYwMTI1XSwgWy02OS41OTA0MjQsIC0xNy41ODAwMTJdLCBbLTY4Ljk1OTYzNSwgLTE2LjUwMDY5OF0sIFstNjkuMzg5NzY0LCAtMTUuNjYwMTI5XSwgWy02OS4xNjAzNDcsIC0xNS4zMjM5NzRdLCBbLTY5LjMzOTUzNSwgLTE0Ljk1MzE5NV0sIFstNjguOTQ4ODg3LCAtMTQuNDUzNjM5XSwgWy02OC45MjkyMjQsIC0xMy42MDI2ODRdLCBbLTY4Ljg4MDA4LCAtMTIuODk5NzI5XSwgWy02OC42NjUwOCwgLTEyLjU2MTNdLCBbLTY5LjUyOTY3OCwgLTEwLjk1MTczNF0sIFstNjguNzg2MTU4LCAtMTEuMDM2MzhdLCBbLTY4LjI3MTI1NCwgLTExLjAxNDUyMV0sIFstNjguMDQ4MTkyLCAtMTAuNzEyMDU5XSwgWy02Ny4xNzM4MDEsIC0xMC4zMDY4MTJdLCBbLTY2LjY0NjkwOCwgLTkuOTMxMzMxXSwgWy02NS4zMzg0MzUsIC05Ljc2MTk4OF0sIFstNjUuNDQ0ODM3LCAtMTAuNTExNDUxXSwgWy02NS4zMjE4OTksIC0xMC44OTU4NzJdLCBbLTY1LjQwMjI4MSwgLTExLjU2NjI3XSwgWy02NC4zMTYzNTMsIC0xMi40NjE5NzhdLCBbLTYzLjE5NjQ5OSwgLTEyLjYyNzAzM10sIFstNjIuODAzMDYsIC0xMy4wMDA2NTNdLCBbLTYyLjEyNzA4MSwgLTEzLjE5ODc4MV0sIFstNjEuNzEzMjA0LCAtMTMuNDg5MjAyXSwgWy02MS4wODQxMjEsIC0xMy40NzkzODRdLCBbLTYwLjUwMzMwNCwgLTEzLjc3NTk1NV0sIFstNjAuNDU5MTk4LCAtMTQuMzU0MDA3XSwgWy02MC4yNjQzMjYsIC0xNC42NDU5NzldLCBbLTYwLjI1MTE0OSwgLTE1LjA3NzIxOV0sIFstNjAuNTQyOTY2LCAtMTUuMDkzOTFdLCBbLTYwLjE1ODM5LCAtMTYuMjU4Mjg0XSwgWy01OC4yNDEyMiwgLTE2LjI5OTU3M10sIFstNTguMzg4MDU4LCAtMTYuODc3MTA5XSwgWy01OC4yODA4MDQsIC0xNy4yNzE3MV0sIFstNTcuNzM0NTU4LCAtMTcuNTUyNDY4XSwgWy01Ny40OTgzNzEsIC0xOC4xNzQxODhdLCBbLTU3LjY3NjAwOSwgLTE4Ljk2MTg0XSwgWy01Ny45NDk5OTcsIC0xOS40MDAwMDRdLCBbLTU3Ljg1MzgwMiwgLTE5Ljk2OTk5NV0sIFstNTguMTY2MzkyLCAtMjAuMTc2NzAxXSwgWy01OC4xODM0NzEsIC0xOS44NjgzOTldLCBbLTU5LjExNTA0MiwgLTE5LjM1NjkwNl0sIFstNjAuMDQzNTY1LCAtMTkuMzQyNzQ3XSwgWy02MS43ODYzMjYsIC0xOS42MzM3MzddLCBbLTYyLjI2NTk2MSwgLTIwLjUxMzczNV0sIFstNjIuMjkxMTc5LCAtMjEuMDUxNjM1XSwgWy02Mi42ODUwNTcsIC0yMi4yNDkwMjldLCBbLTYyLjg0NjQ2OCwgLTIyLjAzNDk4NV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQk9MIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJCb2xpdmlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stNTcuNjI1MTMzLCAtMzAuMjE2Mjk1XSwgWy01Ni4yOTA5LCAtMjguODUyNzYxXSwgWy01NS4xNjIyODYsIC0yNy44ODE5MTVdLCBbLTU0LjQ5MDcyNSwgLTI3LjQ3NDc1N10sIFstNTMuNjQ4NzM1LCAtMjYuOTIzNDczXSwgWy01My42MjgzNDksIC0yNi4xMjQ4NjVdLCBbLTU0LjEzMDA1LCAtMjUuNTQ3NjM5XSwgWy01NC42MjUyOTEsIC0yNS43MzkyNTVdLCBbLTU0LjQyODk0NiwgLTI1LjE2MjE4NV0sIFstNTQuMjkzNDc2LCAtMjQuNTcwOF0sIFstNTQuMjkyOTYsIC0yNC4wMjEwMTRdLCBbLTU0LjY1MjgzNCwgLTIzLjgzOTU3OF0sIFstNTUuMDI3OTAyLCAtMjQuMDAxMjc0XSwgWy01NS40MDA3NDcsIC0yMy45NTY5MzVdLCBbLTU1LjUxNzYzOSwgLTIzLjU3MTk5OF0sIFstNTUuNjEwNjgzLCAtMjIuNjU1NjE5XSwgWy01NS43OTc5NTgsIC0yMi4zNTY5M10sIFstNTYuNDczMzE3LCAtMjIuMDg2M10sIFstNTYuODgxNTEsIC0yMi4yODIxNTRdLCBbLTU3LjkzNzE1NiwgLTIyLjA5MDE3Nl0sIFstNTcuODcwNjc0LCAtMjAuNzMyNjg4XSwgWy01OC4xNjYzOTIsIC0yMC4xNzY3MDFdLCBbLTU3Ljg1MzgwMiwgLTE5Ljk2OTk5NV0sIFstNTcuOTQ5OTk3LCAtMTkuNDAwMDA0XSwgWy01Ny42NzYwMDksIC0xOC45NjE4NF0sIFstNTcuNDk4MzcxLCAtMTguMTc0MTg4XSwgWy01Ny43MzQ1NTgsIC0xNy41NTI0NjhdLCBbLTU4LjI4MDgwNCwgLTE3LjI3MTcxXSwgWy01OC4zODgwNTgsIC0xNi44NzcxMDldLCBbLTU4LjI0MTIyLCAtMTYuMjk5NTczXSwgWy02MC4xNTgzOSwgLTE2LjI1ODI4NF0sIFstNjAuNTQyOTY2LCAtMTUuMDkzOTFdLCBbLTYwLjI1MTE0OSwgLTE1LjA3NzIxOV0sIFstNjAuMjY0MzI2LCAtMTQuNjQ1OTc5XSwgWy02MC40NTkxOTgsIC0xNC4zNTQwMDddLCBbLTYwLjUwMzMwNCwgLTEzLjc3NTk1NV0sIFstNjEuMDg0MTIxLCAtMTMuNDc5Mzg0XSwgWy02MS43MTMyMDQsIC0xMy40ODkyMDJdLCBbLTYyLjEyNzA4MSwgLTEzLjE5ODc4MV0sIFstNjIuODAzMDYsIC0xMy4wMDA2NTNdLCBbLTYzLjE5NjQ5OSwgLTEyLjYyNzAzM10sIFstNjQuMzE2MzUzLCAtMTIuNDYxOTc4XSwgWy02NS40MDIyODEsIC0xMS41NjYyN10sIFstNjUuMzIxODk5LCAtMTAuODk1ODcyXSwgWy02NS40NDQ4MzcsIC0xMC41MTE0NTFdLCBbLTY1LjMzODQzNSwgLTkuNzYxOTg4XSwgWy02Ni42NDY5MDgsIC05LjkzMTMzMV0sIFstNjcuMTczODAxLCAtMTAuMzA2ODEyXSwgWy02OC4wNDgxOTIsIC0xMC43MTIwNTldLCBbLTY4LjI3MTI1NCwgLTExLjAxNDUyMV0sIFstNjguNzg2MTU4LCAtMTEuMDM2MzhdLCBbLTY5LjUyOTY3OCwgLTEwLjk1MTczNF0sIFstNzAuMDkzNzUyLCAtMTEuMTIzOTcyXSwgWy03MC41NDg2ODYsIC0xMS4wMDkxNDddLCBbLTcwLjQ4MTg5NCwgLTkuNDkwMTE4XSwgWy03MS4zMDI0MTIsIC0xMC4wNzk0MzZdLCBbLTcyLjE4NDg5MSwgLTEwLjA1MzU5OF0sIFstNzIuNTYzMDMzLCAtOS41MjAxOTRdLCBbLTczLjIyNjcxMywgLTkuNDYyMjEzXSwgWy03My4wMTUzODMsIC05LjAzMjgzM10sIFstNzMuNTcxMDU5LCAtOC40MjQ0NDddLCBbLTczLjk4NzIzNSwgLTcuNTIzODNdLCBbLTczLjcyMzQwMSwgLTcuMzQwOTk5XSwgWy03My43MjQ0ODcsIC02LjkxODU5NV0sIFstNzMuMTIwMDI3LCAtNi42Mjk5MzFdLCBbLTczLjIxOTcxMSwgLTYuMDg5MTg5XSwgWy03Mi45NjQ1MDcsIC01Ljc0MTI1MV0sIFstNzIuODkxOTI4LCAtNS4yNzQ1NjFdLCBbLTcxLjc0ODQwNiwgLTQuNTkzOTgzXSwgWy03MC45Mjg4NDMsIC00LjQwMTU5MV0sIFstNzAuNzk0NzY5LCAtNC4yNTEyNjVdLCBbLTY5Ljg5MzYzNSwgLTQuMjk4MTg3XSwgWy02OS40NDQxMDIsIC0xLjU1NjI4N10sIFstNjkuNDIwNDg2LCAtMS4xMjI2MTldLCBbLTY5LjU3NzA2NSwgLTAuNTQ5OTkyXSwgWy03MC4wMjA2NTYsIC0wLjE4NTE1Nl0sIFstNzAuMDE1NTY2LCAwLjU0MTQxNF0sIFstNjkuNDUyMzk2LCAwLjcwNjE1OV0sIFstNjkuMjUyNDM0LCAwLjYwMjY1MV0sIFstNjkuMjE4NjM4LCAwLjk4NTY3N10sIFstNjkuODA0NTk3LCAxLjA4OTA4MV0sIFstNjkuODE2OTczLCAxLjcxNDgwNV0sIFstNjcuODY4NTY1LCAxLjY5MjQ1NV0sIFstNjcuNTM3ODEsIDIuMDM3MTYzXSwgWy02Ny4yNTk5OTgsIDEuNzE5OTk5XSwgWy02Ny4wNjUwNDgsIDEuMTMwMTEyXSwgWy02Ni44NzYzMjYsIDEuMjUzMzYxXSwgWy02Ni4zMjU3NjUsIDAuNzI0NDUyXSwgWy02NS41NDgyNjcsIDAuNzg5MjU0XSwgWy02NS4zNTQ3MTMsIDEuMDk1MjgyXSwgWy02NC42MTEwMTIsIDEuMzI4NzMxXSwgWy02NC4xOTkzMDYsIDEuNDkyODU1XSwgWy02NC4wODMwODUsIDEuOTE2MzY5XSwgWy02My4zNjg3ODgsIDIuMjAwOV0sIFstNjMuNDIyODY3LCAyLjQxMTA2OF0sIFstNjQuMjY5OTk5LCAyLjQ5NzAwNl0sIFstNjQuNDA4ODI4LCAzLjEyNjc4Nl0sIFstNjQuMzY4NDk0LCAzLjc5NzIxXSwgWy02NC44MTYwNjQsIDQuMDU2NDQ1XSwgWy02NC42Mjg2NTksIDQuMTQ4NDgxXSwgWy02My44ODgzNDMsIDQuMDIwNTNdLCBbLTYzLjA5MzE5OCwgMy43NzA1NzFdLCBbLTYyLjgwNDUzMywgNC4wMDY5NjVdLCBbLTYyLjA4NTQzLCA0LjE2MjEyNF0sIFstNjAuOTY2ODkzLCA0LjUzNjQ2OF0sIFstNjAuNjAxMTc5LCA0LjkxODA5OF0sIFstNjAuNzMzNTc0LCA1LjIwMDI3N10sIFstNjAuMjEzNjgzLCA1LjI0NDQ4Nl0sIFstNTkuOTgwOTU5LCA1LjAxNDA2MV0sIFstNjAuMTExMDAyLCA0LjU3NDk2N10sIFstNTkuNzY3NDA2LCA0LjQyMzUwM10sIFstNTkuNTM4MDQsIDMuOTU4ODAzXSwgWy01OS44MTU0MTMsIDMuNjA2NDk5XSwgWy01OS45NzQ1MjUsIDIuNzU1MjMzXSwgWy01OS43MTg1NDYsIDIuMjQ5NjNdLCBbLTU5LjY0NjA0NCwgMS43ODY4OTRdLCBbLTU5LjAzMDg2MiwgMS4zMTc2OThdLCBbLTU4LjU0MDAxMywgMS4yNjgwODhdLCBbLTU4LjQyOTQ3NywgMS40NjM5NDJdLCBbLTU4LjExMzQ1LCAxLjUwNzE5NV0sIFstNTcuNjYwOTcxLCAxLjY4MjU4NV0sIFstNTcuMzM1ODIzLCAxLjk0ODUzOF0sIFstNTYuNzgyNzA0LCAxLjg2MzcxMV0sIFstNTYuNTM5Mzg2LCAxLjg5OTUyM10sIFstNTUuOTk1Njk4LCAxLjgxNzY2N10sIFstNTUuOTA1NiwgMi4wMjE5OTZdLCBbLTU2LjA3MzM0MiwgMi4yMjA3OTVdLCBbLTU1Ljk3MzMyMiwgMi41MTAzNjRdLCBbLTU1LjU2OTc1NSwgMi40MjE1MDZdLCBbLTU1LjA5NzU4NywgMi41MjM3NDhdLCBbLTU0LjUyNDc1NCwgMi4zMTE4NDldLCBbLTU0LjA4ODA2MywgMi4xMDU1NTddLCBbLTUzLjc3ODUyMSwgMi4zNzY3MDNdLCBbLTUzLjU1NDgzOSwgMi4zMzQ4OTddLCBbLTUzLjQxODQ2NSwgMi4wNTMzODldLCBbLTUyLjkzOTY1NywgMi4xMjQ4NThdLCBbLTUyLjU1NjQyNSwgMi41MDQ3MDVdLCBbLTUyLjI0OTMzOCwgMy4yNDEwOTRdLCBbLTUxLjY1Nzc5NywgNC4xNTYyMzJdLCBbLTUxLjMxNzE0NiwgNC4yMDM0OTFdLCBbLTUxLjA2OTc3MSwgMy42NTAzOThdLCBbLTUwLjUwODg3NSwgMS45MDE1NjRdLCBbLTQ5Ljk3NDA3NiwgMS43MzY0ODNdLCBbLTQ5Ljk0NzEwMSwgMS4wNDYxOV0sIFstNTAuNjk5MjUxLCAwLjIyMjk4NF0sIFstNTAuMzg4MjExLCAtMC4wNzg0NDVdLCBbLTQ4LjYyMDU2NywgLTAuMjM1NDg5XSwgWy00OC41ODQ0OTcsIC0xLjIzNzgwNV0sIFstNDcuODI0OTU2LCAtMC41ODE2MThdLCBbLTQ2LjU2NjU4NCwgLTAuOTQxMDI4XSwgWy00NC45MDU3MDMsIC0xLjU1MTc0XSwgWy00NC40MTc2MTksIC0yLjEzNzc1XSwgWy00NC41ODE1ODksIC0yLjY5MTMwOF0sIFstNDMuNDE4NzkxLCAtMi4zODMxMV0sIFstNDEuNDcyNjU3LCAtMi45MTIwMThdLCBbLTM5Ljk3ODY2NSwgLTIuODczMDU0XSwgWy0zOC41MDAzODMsIC0zLjcwMDY1Ml0sIFstMzcuMjIzMjUyLCAtNC44MjA5NDZdLCBbLTM2LjQ1MjkzNywgLTUuMTA5NDA0XSwgWy0zNS41OTc3OTYsIC01LjE0OTUwNF0sIFstMzUuMjM1Mzg5LCAtNS40NjQ5MzddLCBbLTM0Ljg5NjAzLCAtNi43MzgxOTNdLCBbLTM0LjcyOTk5MywgLTcuMzQzMjIxXSwgWy0zNS4xMjgyMTIsIC04Ljk5NjQwMV0sIFstMzUuNjM2OTY3LCAtOS42NDkyODJdLCBbLTM3LjA0NjUxOSwgLTExLjA0MDcyMV0sIFstMzcuNjgzNjEyLCAtMTIuMTcxMTk1XSwgWy0zOC40MjM4NzcsIC0xMy4wMzgxMTldLCBbLTM4LjY3Mzg4NywgLTEzLjA1NzY1Ml0sIFstMzguOTUzMjc2LCAtMTMuNzkzMzddLCBbLTM4Ljg4MjI5OCwgLTE1LjY2NzA1NF0sIFstMzkuMTYxMDkyLCAtMTcuMjA4NDA3XSwgWy0zOS4yNjczMzksIC0xNy44Njc3NDZdLCBbLTM5LjU4MzUyMSwgLTE4LjI2MjI5Nl0sIFstMzkuNzYwODIzLCAtMTkuNTk5MTEzXSwgWy00MC43NzQ3NDEsIC0yMC45MDQ1MTJdLCBbLTQwLjk0NDc1NiwgLTIxLjkzNzMxN10sIFstNDEuNzU0MTY0LCAtMjIuMzcwNjc2XSwgWy00MS45ODgyODQsIC0yMi45NzAwN10sIFstNDMuMDc0NzA0LCAtMjIuOTY3NjkzXSwgWy00NC42NDc4MTIsIC0yMy4zNTE5NTldLCBbLTQ1LjM1MjEzNiwgLTIzLjc5Njg0Ml0sIFstNDYuNDcyMDkzLCAtMjQuMDg4OTY5XSwgWy00Ny42NDg5NzIsIC0yNC44ODUxOTldLCBbLTQ4LjQ5NTQ1OCwgLTI1Ljg3NzAyNV0sIFstNDguNjQxMDA1LCAtMjYuNjIzNjk4XSwgWy00OC40NzQ3MzYsIC0yNy4xNzU5MTJdLCBbLTQ4LjY2MTUyLCAtMjguMTg2MTM1XSwgWy00OC44ODg0NTcsIC0yOC42NzQxMTVdLCBbLTQ5LjU4NzMyOSwgLTI5LjIyNDQ2OV0sIFstNTAuNjk2ODc0LCAtMzAuOTg0NDY1XSwgWy01MS41NzYyMjYsIC0zMS43Nzc2OThdLCBbLTUyLjI1NjA4MSwgLTMyLjI0NTM3XSwgWy01Mi43MTIxLCAtMzMuMTk2NTc4XSwgWy01My4zNzM2NjIsIC0zMy43NjgzNzhdLCBbLTUzLjY1MDU0NCwgLTMzLjIwMjAwNF0sIFstNTMuMjA5NTg5LCAtMzIuNzI3NjY2XSwgWy01My43ODc5NTIsIC0zMi4wNDcyNDNdLCBbLTU0LjU3MjQ1MiwgLTMxLjQ5NDUxMV0sIFstNTUuNjAxNTEsIC0zMC44NTM4NzldLCBbLTU1Ljk3MzI0NSwgLTMwLjg4MzA3Nl0sIFstNTYuOTc2MDI2LCAtMzAuMTA5Njg2XSwgWy01Ny42MjUxMzMsIC0zMC4yMTYyOTVdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkJSQSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQnJhemlsIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxMTQuMjA0MDE3LCA0LjUyNTg3NF0sIFsxMTQuNTk5OTYxLCA0LjkwMDAxMV0sIFsxMTUuNDUwNzEsIDUuNDQ3NzNdLCBbMTE1LjQwNTcsIDQuOTU1MjI4XSwgWzExNS4zNDc0NjEsIDQuMzE2NjM2XSwgWzExNC44Njk1NTcsIDQuMzQ4MzE0XSwgWzExNC42NTk1OTYsIDQuMDA3NjM3XSwgWzExNC4yMDQwMTcsIDQuNTI1ODc0XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJCUk4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkJydW5laSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzkxLjY5NjY1NywgMjcuNzcxNzQyXSwgWzkyLjEwMzcxMiwgMjcuNDUyNjE0XSwgWzkyLjAzMzQ4NCwgMjYuODM4MzFdLCBbOTEuMjE3NTEzLCAyNi44MDg2NDhdLCBbOTAuMzczMjc1LCAyNi44NzU3MjRdLCBbODkuNzQ0NTI4LCAyNi43MTk0MDNdLCBbODguODM1NjQzLCAyNy4wOTg5NjZdLCBbODguODE0MjQ4LCAyNy4yOTkzMTZdLCBbODkuNDc1ODEsIDI4LjA0Mjc1OV0sIFs5MC4wMTU4MjksIDI4LjI5NjQzOV0sIFs5MC43MzA1MTQsIDI4LjA2NDk1NF0sIFs5MS4yNTg4NTQsIDI4LjA0MDYxNF0sIFs5MS42OTY2NTcsIDI3Ljc3MTc0Ml1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQlROIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJCaHV0YW4iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzI1LjY0OTE2MywgLTE4LjUzNjAyNl0sIFsyNS44NTAzOTEsIC0xOC43MTQ0MTNdLCBbMjYuMTY0NzkxLCAtMTkuMjkzMDg2XSwgWzI3LjI5NjUwNSwgLTIwLjM5MTUyXSwgWzI3LjcyNDc0NywgLTIwLjQ5OTA1OV0sIFsyNy43MjcyMjgsIC0yMC44NTE4MDJdLCBbMjguMDIxMzcsIC0yMS40ODU5NzVdLCBbMjguNzk0NjU2LCAtMjEuNjM5NDU0XSwgWzI5LjQzMjE4OCwgLTIyLjA5MTMxM10sIFsyOC4wMTcyMzYsIC0yMi44Mjc3NTRdLCBbMjcuMTE5NDEsIC0yMy41NzQzMjNdLCBbMjYuNzg2NDA3LCAtMjQuMjQwNjkxXSwgWzI2LjQ4NTc1MywgLTI0LjYxNjMyN10sIFsyNS45NDE2NTIsIC0yNC42OTYzNzNdLCBbMjUuNzY1ODQ5LCAtMjUuMTc0ODQ1XSwgWzI1LjY2NDY2NiwgLTI1LjQ4NjgxNl0sIFsyNS4wMjUxNzEsIC0yNS43MTk2N10sIFsyNC4yMTEyNjcsIC0yNS42NzAyMTZdLCBbMjMuNzMzNTcsIC0yNS4zOTAxMjldLCBbMjMuMzEyMDk3LCAtMjUuMjY4NjldLCBbMjIuODI0MjcxLCAtMjUuNTAwNDU5XSwgWzIyLjU3OTUzMiwgLTI1Ljk3OTQ0OF0sIFsyMi4xMDU5NjksIC0yNi4yODAyNTZdLCBbMjEuNjA1ODk2LCAtMjYuNzI2NTM0XSwgWzIwLjg4OTYwOSwgLTI2LjgyODU0M10sIFsyMC42NjY0NywgLTI2LjQ3NzQ1M10sIFsyMC43NTg2MDksIC0yNS44NjgxMzZdLCBbMjAuMTY1NzI2LCAtMjQuOTE3OTYyXSwgWzE5Ljg5NTc2OCwgLTI0Ljc2Nzc5XSwgWzE5Ljg5NTQ1OCwgLTIxLjg0OTE1N10sIFsyMC44ODExMzQsIC0yMS44MTQzMjddLCBbMjAuOTEwNjQxLCAtMTguMjUyMjE5XSwgWzIxLjY1NTA0LCAtMTguMjE5MTQ2XSwgWzIzLjE5Njg1OCwgLTE3Ljg2OTAzOF0sIFsyMy41NzkwMDYsIC0xOC4yODEyNjFdLCBbMjQuMjE3MzY1LCAtMTcuODg5MzQ3XSwgWzI0LjUyMDcwNSwgLTE3Ljg4NzEyNV0sIFsyNS4wODQ0NDMsIC0xNy42NjE4MTZdLCBbMjUuMjY0MjI2LCAtMTcuNzM2NTRdLCBbMjUuNjQ5MTYzLCAtMTguNTM2MDI2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJCV0EiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkJvdHN3YW5hIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxNS4yNzk0NiwgNy40MjE5MjVdLCBbMTYuMTA2MjMyLCA3LjQ5NzA4OF0sIFsxNi4yOTA1NjIsIDcuNzU0MzA3XSwgWzE2LjQ1NjE4NSwgNy43MzQ3NzRdLCBbMTYuNzA1OTg4LCA3LjUwODMyOF0sIFsxNy45NjQ5MywgNy44OTA5MTRdLCBbMTguMzg5NTU1LCA4LjI4MTMwNF0sIFsxOC45MTEwMjIsIDguNjMwODk1XSwgWzE4LjgxMjAxLCA4Ljk4MjkxNV0sIFsxOS4wOTQwMDgsIDkuMDc0ODQ3XSwgWzIwLjA1OTY4NSwgOS4wMTI3MDZdLCBbMjEuMDAwODY4LCA5LjQ3NTk4NV0sIFsyMS43MjM4MjIsIDEwLjU2NzA1Nl0sIFsyMi4yMzExMjksIDEwLjk3MTg4OV0sIFsyMi44NjQxNjUsIDExLjE0MjM5NV0sIFsyMi45Nzc1NDQsIDEwLjcxNDQ2M10sIFsyMy41NTQzMDQsIDEwLjA4OTI1NV0sIFsyMy41NTcyNSwgOS42ODEyMThdLCBbMjMuMzk0Nzc5LCA5LjI2NTA2OF0sIFsyMy40NTkwMTMsIDguOTU0Mjg2XSwgWzIzLjgwNTgxMywgOC42NjYzMTldLCBbMjQuNTY3MzY5LCA4LjIyOTE4OF0sIFsyNS4xMTQ5MzIsIDcuODI1MTA0XSwgWzI1LjEyNDEzMSwgNy41MDAwODVdLCBbMjUuNzk2NjQ4LCA2Ljk3OTMxNl0sIFsyNi4yMTM0MTgsIDYuNTQ2NjAzXSwgWzI2LjQ2NTkwOSwgNS45NDY3MTddLCBbMjcuMjEzNDA5LCA1LjU1MDk1M10sIFsyNy4zNzQyMjYsIDUuMjMzOTQ0XSwgWzI3LjA0NDA2NSwgNS4xMjc4NTNdLCBbMjYuNDAyNzYxLCA1LjE1MDg3NV0sIFsyNS42NTA0NTUsIDUuMjU2MDg4XSwgWzI1LjI3ODc5OCwgNS4xNzA0MDhdLCBbMjUuMTI4ODMzLCA0LjkyNzI0NV0sIFsyNC44MDUwMjksIDQuODk3MjQ3XSwgWzI0LjQxMDUzMSwgNS4xMDg3ODRdLCBbMjMuMjk3MjE0LCA0LjYwOTY5M10sIFsyMi44NDE0OCwgNC43MTAxMjZdLCBbMjIuNzA0MTI0LCA0LjYzMzA1MV0sIFsyMi40MDUxMjQsIDQuMDI5MTZdLCBbMjEuNjU5MTIzLCA0LjIyNDM0Ml0sIFsyMC45Mjc1OTEsIDQuMzIyNzg2XSwgWzIwLjI5MDY3OSwgNC42OTE2NzhdLCBbMTkuNDY3Nzg0LCA1LjAzMTUyOF0sIFsxOC45MzIzMTIsIDQuNzA5NTA2XSwgWzE4LjU0Mjk4MiwgNC4yMDE3ODVdLCBbMTguNDUzMDY1LCAzLjUwNDM4Nl0sIFsxNy44MDk5LCAzLjU2MDE5Nl0sIFsxNy4xMzMwNDIsIDMuNzI4MTk3XSwgWzE2LjUzNzA1OCwgMy4xOTgyNTVdLCBbMTYuMDEyODUyLCAyLjI2NzY0XSwgWzE1LjkwNzM4MSwgMi41NTczODldLCBbMTUuODYyNzMyLCAzLjAxMzUzN10sIFsxNS40MDUzOTYsIDMuMzM1MzAxXSwgWzE1LjAzNjIyLCAzLjg1MTM2N10sIFsxNC45NTA5NTMsIDQuMjEwMzg5XSwgWzE0LjQ3ODM3MiwgNC43MzI2MDVdLCBbMTQuNTU4OTM2LCA1LjAzMDU5OF0sIFsxNC40NTk0MDcsIDUuNDUxNzYxXSwgWzE0LjUzNjU2LCA2LjIyNjk1OV0sIFsxNC43NzY1NDUsIDYuNDA4NDk4XSwgWzE1LjI3OTQ2LCA3LjQyMTkyNV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQ0FGIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJDZW50cmFsIEFmcmljYW4gUmVwdWJsaWMiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1stNjMuNjY0NSwgNDYuNTUwMDFdLCBbLTYyLjkzOTMsIDQ2LjQxNTg3XSwgWy02Mi4wMTIwOCwgNDYuNDQzMTRdLCBbLTYyLjUwMzkxLCA0Ni4wMzMzOV0sIFstNjIuODc0MzMsIDQ1Ljk2ODE4XSwgWy02NC4xNDI4LCA0Ni4zOTI2NV0sIFstNjQuMzkyNjEsIDQ2LjcyNzQ3XSwgWy02NC4wMTQ4NiwgNDcuMDM2MDFdLCBbLTYzLjY2NDUsIDQ2LjU1MDAxXV1dLCBbW1stNjEuODA2MzA1LCA0OS4xMDUwNl0sIFstNjIuMjkzMTgsIDQ5LjA4NzE3XSwgWy02My41ODkyNiwgNDkuNDAwNjldLCBbLTY0LjUxOTEyLCA0OS44NzMwNF0sIFstNjQuMTczMjIsIDQ5Ljk1NzE4XSwgWy02Mi44NTgyOSwgNDkuNzA2NDFdLCBbLTYxLjgzNTU4NSwgNDkuMjg4NTVdLCBbLTYxLjgwNjMwNSwgNDkuMTA1MDZdXV0sIFtbWy0xMjMuNTEwMDAyLCA0OC41MTAwMTFdLCBbLTEyNC4wMTI4OTEsIDQ4LjM3MDg0Nl0sIFstMTI1LjY1NTAxMywgNDguODI1MDA1XSwgWy0xMjUuOTU0OTk0LCA0OS4xNzk5OTZdLCBbLTEyNi44NTAwMDQsIDQ5LjUzXSwgWy0xMjcuMDI5OTkzLCA0OS44MTQ5OTZdLCBbLTEyOC4wNTkzMzYsIDQ5Ljk5NDk1OV0sIFstMTI4LjQ0NDU4NCwgNTAuNTM5MTM4XSwgWy0xMjguMzU4NDE0LCA1MC43NzA2NDhdLCBbLTEyNy4zMDg1ODEsIDUwLjU1MjU3NF0sIFstMTI2LjY5NTAwMSwgNTAuNDAwOTAzXSwgWy0xMjUuNzU1MDA3LCA1MC4yOTUwMThdLCBbLTEyNS40MTUwMDIsIDQ5Ljk1MDAwMV0sIFstMTI0LjkyMDc2OCwgNDkuNDc1Mjc1XSwgWy0xMjMuOTIyNTA5LCA0OS4wNjI0ODRdLCBbLTEyMy41MTAwMDIsIDQ4LjUxMDAxMV1dXSwgW1tbLTU2LjEzNDAzNiwgNTAuNjg3MDFdLCBbLTU2Ljc5NTg4MiwgNDkuODEyMzA5XSwgWy01Ni4xNDMxMDUsIDUwLjE1MDExN10sIFstNTUuNDcxNDkyLCA0OS45MzU4MTVdLCBbLTU1LjgyMjQwMSwgNDkuNTg3MTI5XSwgWy01NC45MzUxNDMsIDQ5LjMxMzAxMV0sIFstNTQuNDczNzc1LCA0OS41NTY2OTFdLCBbLTUzLjQ3NjU0OSwgNDkuMjQ5MTM5XSwgWy01My43ODYwMTQsIDQ4LjUxNjc4MV0sIFstNTMuMDg2MTM0LCA0OC42ODc4MDRdLCBbLTUyLjk1ODY0OCwgNDguMTU3MTY0XSwgWy01Mi42NDgwOTksIDQ3LjUzNTU0OF0sIFstNTMuMDY5MTU4LCA0Ni42NTU0OTldLCBbLTUzLjUyMTQ1NiwgNDYuNjE4MjkyXSwgWy01NC4xNzg5MzYsIDQ2LjgwNzA2Nl0sIFstNTMuOTYxODY5LCA0Ny42MjUyMDddLCBbLTU0LjI0MDQ4MiwgNDcuNzUyMjc5XSwgWy01NS40MDA3NzMsIDQ2Ljg4NDk5NF0sIFstNTUuOTk3NDgxLCA0Ni45MTk3Ml0sIFstNTUuMjkxMjE5LCA0Ny4zODk1NjJdLCBbLTU2LjI1MDc5OSwgNDcuNjMyNTQ1XSwgWy01Ny4zMjUyMjksIDQ3LjU3MjgwN10sIFstNTkuMjY2MDE1LCA0Ny42MDMzNDhdLCBbLTU5LjQxOTQ5NCwgNDcuODk5NDU0XSwgWy01OC43OTY1ODYsIDQ4LjI1MTUyNV0sIFstNTkuMjMxNjI1LCA0OC41MjMxODhdLCBbLTU4LjM5MTgwNSwgNDkuMTI1NTgxXSwgWy01Ny4zNTg2OSwgNTAuNzE4Mjc0XSwgWy01Ni43Mzg2NSwgNTEuMjg3NDM4XSwgWy01NS44NzA5NzcsIDUxLjYzMjA5NF0sIFstNTUuNDA2OTc0LCA1MS41ODgyNzNdLCBbLTU1LjYwMDIxOCwgNTEuMzE3MDc1XSwgWy01Ni4xMzQwMzYsIDUwLjY4NzAxXV1dLCBbW1stMTMyLjcxMDAwOCwgNTQuMDQwMDA5XSwgWy0xMzIuNzEwMDA5LCA1NC4wNDAwMDldLCBbLTEzMi43MTAwMDgsIDU0LjA0MDAwOV0sIFstMTMyLjcxMDAwOCwgNTQuMDQwMDA5XSwgWy0xMzEuNzQ5OTksIDU0LjEyMDAwNF0sIFstMTMyLjA0OTQ4LCA1Mi45ODQ2MjFdLCBbLTEzMS4xNzkwNDMsIDUyLjE4MDQzM10sIFstMTMxLjU3NzgzLCA1Mi4xODIzNzFdLCBbLTEzMi4xODA0MjgsIDUyLjYzOTcwN10sIFstMTMyLjU0OTk5MiwgNTMuMTAwMDE1XSwgWy0xMzMuMDU0NjExLCA1My40MTE0NjldLCBbLTEzMy4yMzk2NjQsIDUzLjg1MTA4XSwgWy0xMzMuMTgwMDA0LCA1NC4xNjk5NzVdLCBbLTEzMi43MTAwMDgsIDU0LjA0MDAwOV1dXSwgW1tbLTc5LjI2NTgyLCA2Mi4xNTg2NzVdLCBbLTc5LjY1NzUyLCA2MS42MzMwOF0sIFstODAuMDk5NTYsIDYxLjcxODFdLCBbLTgwLjM2MjE1LCA2Mi4wMTY0OV0sIFstODAuMzE1Mzk1LCA2Mi4wODU1NjVdLCBbLTc5LjkyOTM5LCA2Mi4zODU2XSwgWy03OS41MjAwMiwgNjIuMzYzNzFdLCBbLTc5LjI2NTgyLCA2Mi4xNTg2NzVdXV0sIFtbWy04MS44OTgyNSwgNjIuNzEwOF0sIFstODMuMDY4NTcsIDYyLjE1OTIyXSwgWy04My43NzQ2MiwgNjIuMTgyMzFdLCBbLTgzLjk5MzY3LCA2Mi40NTI4XSwgWy04My4yNTA0OCwgNjIuOTE0MDldLCBbLTgxLjg3Njk5LCA2Mi45MDQ1OF0sIFstODEuODk4MjUsIDYyLjcxMDhdXV0sIFtbWy04NS4xNjEzMDgsIDY1LjY1NzI4NV0sIFstODQuOTc1NzY0LCA2NS4yMTc1MThdLCBbLTg0LjQ2NDAxMiwgNjUuMzcxNzcyXSwgWy04My44ODI2MjYsIDY1LjEwOTYxOF0sIFstODIuNzg3NTc3LCA2NC43NjY2OTNdLCBbLTgxLjY0MjAxNCwgNjQuNDU1MTM2XSwgWy04MS41NTM0NCwgNjMuOTc5NjA5XSwgWy04MC44MTczNjEsIDY0LjA1NzQ4Nl0sIFstODAuMTAzNDUxLCA2My43MjU5ODFdLCBbLTgwLjk5MTAyLCA2My40MTEyNDZdLCBbLTgyLjU0NzE3OCwgNjMuNjUxNzIyXSwgWy04My4xMDg3OTgsIDY0LjEwMTg3Nl0sIFstODQuMTAwNDE3LCA2My41Njk3MTJdLCBbLTg1LjUyMzQwNSwgNjMuMDUyMzc5XSwgWy04NS44NjY3NjksIDYzLjYzNzI1M10sIFstODcuMjIxOTgzLCA2My41NDEyMzhdLCBbLTg2LjM1Mjc2LCA2NC4wMzU4MzNdLCBbLTg2LjIyNDg4NiwgNjQuODIyOTE3XSwgWy04NS44ODM4NDgsIDY1LjczODc3OF0sIFstODUuMTYxMzA4LCA2NS42NTcyODVdXV0sIFtbWy03NS44NjU4OCwgNjcuMTQ4ODZdLCBbLTc2Ljk4Njg3LCA2Ny4wOTg3M10sIFstNzcuMjM2NCwgNjcuNTg4MDldLCBbLTc2LjgxMTY2LCA2OC4xNDg1Nl0sIFstNzUuODk1MjEsIDY4LjI4NzIxXSwgWy03NS4xMTQ1LCA2OC4wMTAzNl0sIFstNzUuMTAzMzMsIDY3LjU4MjAyXSwgWy03NS4yMTU5NywgNjcuNDQ0MjVdLCBbLTc1Ljg2NTg4LCA2Ny4xNDg4Nl1dXSwgW1tbLTk1LjY0NzY4MSwgNjkuMTA3NjldLCBbLTk2LjI2OTUyMSwgNjguNzU3MDRdLCBbLTk3LjYxNzQwMSwgNjkuMDYwMDNdLCBbLTk4LjQzMTgwMSwgNjguOTUwN10sIFstOTkuNzk3NDAxLCA2OS40MDAwM10sIFstOTguOTE3NDAxLCA2OS43MTAwM10sIFstOTguMjE4MjYxLCA3MC4xNDM1NF0sIFstOTcuMTU3NDAxLCA2OS44NjAwM10sIFstOTYuNTU3NDAxLCA2OS42ODAwM10sIFstOTYuMjU3NDAxLCA2OS40OTAwM10sIFstOTUuNjQ3NjgxLCA2OS4xMDc2OV1dXSwgW1tbLTkwLjU0NzEsIDY5LjQ5NzY2XSwgWy05MC41NTE1MSwgNjguNDc0OTldLCBbLTg5LjIxNTE1LCA2OS4yNTg3M10sIFstODguMDE5NjYsIDY4LjYxNTA4XSwgWy04OC4zMTc0OSwgNjcuODczMzhdLCBbLTg3LjM1MDE3LCA2Ny4xOTg3Ml0sIFstODYuMzA2MDcsIDY3LjkyMTQ2XSwgWy04NS41NzY2NCwgNjguNzg0NTZdLCBbLTg1LjUyMTk3LCA2OS44ODIxMV0sIFstODQuMTAwODEsIDY5LjgwNTM5XSwgWy04Mi42MjI1OCwgNjkuNjU4MjZdLCBbLTgxLjI4MDQzLCA2OS4xNjIwMl0sIFstODEuMjIwMiwgNjguNjY1NjddLCBbLTgxLjk2NDM2LCA2OC4xMzI1M10sIFstODEuMjU5MjgsIDY3LjU5NzE2XSwgWy04MS4zODY1MywgNjcuMTEwNzhdLCBbLTgzLjM0NDU2LCA2Ni40MTE1NF0sIFstODQuNzM1NDIsIDY2LjI1NzNdLCBbLTg1Ljc2OTQzLCA2Ni41NTgzM10sIFstODYuMDY3NiwgNjYuMDU2MjVdLCBbLTg3LjAzMTQzLCA2NS4yMTI5N10sIFstODcuMzIzMjQsIDY0Ljc3NTYzXSwgWy04OC40ODI5NiwgNjQuMDk4OTddLCBbLTg5LjkxNDQ0LCA2NC4wMzI3M10sIFstOTAuNzAzOTgsIDYzLjYxMDE3XSwgWy05MC43NzAwNCwgNjIuOTYwMjFdLCBbLTkxLjkzMzQyLCA2Mi44MzUwOF0sIFstOTMuMTU2OTgsIDYyLjAyNDY5XSwgWy05NC4yNDE1MywgNjAuODk4NjVdLCBbLTk0LjYyOTMxLCA2MC4xMTAyMV0sIFstOTQuNjg0NiwgNTguOTQ4ODJdLCBbLTkzLjIxNTAyLCA1OC43ODIxMl0sIFstOTIuNzY0NjIsIDU3Ljg0NTcxXSwgWy05Mi4yOTcwMywgNTcuMDg3MDldLCBbLTkwLjg5NzY5LCA1Ny4yODQ2OF0sIFstODkuMDM5NTMsIDU2Ljg1MTcyXSwgWy04OC4wMzk3OCwgNTYuNDcxNjJdLCBbLTg3LjMyNDIxLCA1NS45OTkxNF0sIFstODYuMDcxMjEsIDU1LjcyMzgzXSwgWy04NS4wMTE4MSwgNTUuMzAyNl0sIFstODMuMzYwNTUsIDU1LjI0NDg5XSwgWy04Mi4yNzI4NSwgNTUuMTQ4MzJdLCBbLTgyLjQzNjIsIDU0LjI4MjI3XSwgWy04Mi4xMjUwMiwgNTMuMjc3MDNdLCBbLTgxLjQwMDc1LCA1Mi4xNTc4OF0sIFstNzkuOTEyODksIDUxLjIwODQyXSwgWy03OS4xNDMwMSwgNTEuNTMzOTNdLCBbLTc4LjYwMTkxLCA1Mi41NjIwOF0sIFstNzkuMTI0MjEsIDU0LjE0MTQ1XSwgWy03OS44Mjk1OCwgNTQuNjY3NzJdLCBbLTc4LjIyODc0LCA1NS4xMzY0NV0sIFstNzcuMDk1NiwgNTUuODM3NDFdLCBbLTc2LjU0MTM3LCA1Ni41MzQyM10sIFstNzYuNjIzMTksIDU3LjIwMjYzXSwgWy03Ny4zMDIyNiwgNTguMDUyMDldLCBbLTc4LjUxNjg4LCA1OC44MDQ1OF0sIFstNzcuMzM2NzYsIDU5Ljg1MjYxXSwgWy03Ny43NzI3MiwgNjAuNzU3ODhdLCBbLTc4LjEwNjg3LCA2Mi4zMTk2NF0sIFstNzcuNDEwNjcsIDYyLjU1MDUzXSwgWy03NS42OTYyMSwgNjIuMjc4NF0sIFstNzQuNjY4MiwgNjIuMTgxMTFdLCBbLTczLjgzOTg4LCA2Mi40NDM4XSwgWy03Mi45MDg1MywgNjIuMTA1MDddLCBbLTcxLjY3NzA4LCA2MS41MjUzNV0sIFstNzEuMzczNjksIDYxLjEzNzE3XSwgWy02OS41OTA0MiwgNjEuMDYxNDFdLCBbLTY5LjYyMDMzLCA2MC4yMjEyNV0sIFstNjkuMjg3OSwgNTguOTU3MzZdLCBbLTY4LjM3NDU1LCA1OC44MDEwNl0sIFstNjcuNjQ5NzYsIDU4LjIxMjA2XSwgWy02Ni4yMDE3OCwgNTguNzY3MzFdLCBbLTY1LjI0NTE3LCA1OS44NzA3MV0sIFstNjQuNTgzNTIsIDYwLjMzNTU4XSwgWy02My44MDQ3NSwgNTkuNDQyNl0sIFstNjIuNTAyMzYsIDU4LjE2NzA4XSwgWy02MS4zOTY1NSwgNTYuOTY3NDVdLCBbLTYxLjc5ODY2LCA1Ni4zMzk0NV0sIFstNjAuNDY4NTMsIDU1Ljc3NTQ4XSwgWy01OS41Njk2MiwgNTUuMjA0MDddLCBbLTU3Ljk3NTA4LCA1NC45NDU0OV0sIFstNTcuMzMzMiwgNTQuNjI2NV0sIFstNTYuOTM2ODksIDUzLjc4MDMyXSwgWy01Ni4xNTgxMSwgNTMuNjQ3NDldLCBbLTU1Ljc1NjMyLCA1My4yNzAzNl0sIFstNTUuNjgzMzgsIDUyLjE0NjY0XSwgWy01Ni40MDkxNiwgNTEuNzcwN10sIFstNTcuMTI2OTEsIDUxLjQxOTcyXSwgWy01OC43NzQ4MiwgNTEuMDY0M10sIFstNjAuMDMzMDksIDUwLjI0Mjc3XSwgWy02MS43MjM2NiwgNTAuMDgwNDZdLCBbLTYzLjg2MjUxLCA1MC4yOTA5OV0sIFstNjUuMzYzMzEsIDUwLjI5ODJdLCBbLTY2LjM5OTA1LCA1MC4yMjg5N10sIFstNjcuMjM2MzEsIDQ5LjUxMTU2XSwgWy02OC41MTExNCwgNDkuMDY4MzZdLCBbLTY5Ljk1MzYyLCA0Ny43NDQ4OF0sIFstNzEuMTA0NTgsIDQ2LjgyMTcxXSwgWy03MC4yNTUyMiwgNDYuOTg2MDZdLCBbLTY4LjY1LCA0OC4zXSwgWy02Ni41NTI0MywgNDkuMTMzMV0sIFstNjUuMDU2MjYsIDQ5LjIzMjc4XSwgWy02NC4xNzA5OSwgNDguNzQyNDhdLCBbLTY1LjExNTQ1LCA0OC4wNzA4NV0sIFstNjQuNzk4NTQsIDQ2Ljk5Mjk3XSwgWy02NC40NzIxOSwgNDYuMjM4NDldLCBbLTYzLjE3MzI5LCA0NS43MzkwMl0sIFstNjEuNTIwNzIsIDQ1Ljg4Mzc3XSwgWy02MC41MTgxNSwgNDcuMDA3OTNdLCBbLTYwLjQ0ODYsIDQ2LjI4MjY0XSwgWy01OS44MDI4NywgNDUuOTIwNF0sIFstNjEuMDM5ODgsIDQ1LjI2NTI1XSwgWy02My4yNTQ3MSwgNDQuNjcwMTRdLCBbLTY0LjI0NjU2LCA0NC4yNjU1M10sIFstNjUuMzY0MDYsIDQzLjU0NTIzXSwgWy02Ni4xMjM0LCA0My42MTg2N10sIFstNjYuMTYxNzMsIDQ0LjQ2NTEyXSwgWy02NC40MjU0OSwgNDUuMjkyMDRdLCBbLTY2LjAyNjA1LCA0NS4yNTkzMV0sIFstNjcuMTM3NDEsIDQ1LjEzNzUzXSwgWy02Ny43OTEzNCwgNDUuNzAyODFdLCBbLTY3Ljc5MDQ2LCA0Ny4wNjYzNl0sIFstNjguMjM0NDQsIDQ3LjM1NDg2XSwgWy02OC45MDUsIDQ3LjE4NV0sIFstNjkuMjM3MjE2LCA0Ny40NDc3ODFdLCBbLTY5Ljk5OTk3LCA0Ni42OTMwN10sIFstNzAuMzA1LCA0NS45MTVdLCBbLTcwLjY2LCA0NS40Nl0sIFstNzEuMDg0ODIsIDQ1LjMwNTI0XSwgWy03MS40MDUsIDQ1LjI1NV0sIFstNzEuNTA1MDYsIDQ1LjAwODJdLCBbLTczLjM0NzgzLCA0NS4wMDczOF0sIFstNzQuODY3LCA0NS4wMDA0OF0sIFstNzUuMzE4MjEsIDQ0LjgxNjQ1XSwgWy03Ni4zNzUsIDQ0LjA5NjMxXSwgWy03Ni41LCA0NC4wMTg0NTldLCBbLTc2LjgyMDAzNCwgNDMuNjI4Nzg0XSwgWy03Ny43Mzc4ODUsIDQzLjYyOTA1Nl0sIFstNzguNzIwMjgsIDQzLjYyNTA4OV0sIFstNzkuMTcxNjc0LCA0My40NjYzMzldLCBbLTc5LjAxLCA0My4yN10sIFstNzguOTIsIDQyLjk2NV0sIFstNzguOTM5MzYyLCA0Mi44NjM2MTFdLCBbLTgwLjI0NzQ0OCwgNDIuMzY2Ml0sIFstODEuMjc3NzQ3LCA0Mi4yMDkwMjZdLCBbLTgyLjQzOTI3OCwgNDEuNjc1MTA1XSwgWy04Mi42OTAwODksIDQxLjY3NTEwNV0sIFstODMuMDI5ODEsIDQxLjgzMjc5Nl0sIFstODMuMTQyLCA0MS45NzU2ODFdLCBbLTgzLjEyLCA0Mi4wOF0sIFstODIuOSwgNDIuNDNdLCBbLTgyLjQzLCA0Mi45OF0sIFstODIuMTM3NjQyLCA0My41NzEwODhdLCBbLTgyLjMzNzc2MywgNDQuNDRdLCBbLTgyLjU1MDkyNSwgNDUuMzQ3NTE3XSwgWy04My41OTI4NTEsIDQ1LjgxNjg5NF0sIFstODMuNDY5NTUxLCA0NS45OTQ2ODZdLCBbLTgzLjYxNjEzMSwgNDYuMTE2OTI3XSwgWy04My44OTA3NjUsIDQ2LjExNjkyN10sIFstODQuMDkxODUxLCA0Ni4yNzU0MTldLCBbLTg0LjE0MjEyLCA0Ni41MTIyMjZdLCBbLTg0LjMzNjcsIDQ2LjQwODc3XSwgWy04NC42MDQ5LCA0Ni40Mzk2XSwgWy04NC41NDM3NDksIDQ2LjUzODY4NF0sIFstODQuNzc5MjM4LCA0Ni42MzcxMDJdLCBbLTg0Ljg3NjA4LCA0Ni45MDAwODNdLCBbLTg1LjY1MjM2MywgNDcuMjIwMjE5XSwgWy04Ni40NjE5OTEsIDQ3LjU1MzMzOF0sIFstODcuNDM5NzkzLCA0Ny45NF0sIFstODguMzc4MTE0LCA0OC4zMDI5MThdLCBbLTg5LjI3MjkxNywgNDguMDE5ODA4XSwgWy04OS42LCA0OC4wMV0sIFstOTAuODMsIDQ4LjI3XSwgWy05MS42NCwgNDguMTRdLCBbLTkyLjYxLCA0OC40NV0sIFstOTMuNjMwODcsIDQ4LjYwOTI2XSwgWy05NC4zMjkxNCwgNDguNjcwNzRdLCBbLTk0LjY0LCA0OC44NF0sIFstOTQuODE3NTgsIDQ5LjM4OTA1XSwgWy05NS4xNTYwOSwgNDkuMzg0MjVdLCBbLTk1LjE1OTA3LCA0OV0sIFstOTcuMjI4NzIsIDQ5LjAwMDddLCBbLTEwMC42NSwgNDldLCBbLTEwNC4wNDgyNiwgNDguOTk5ODZdLCBbLTEwNy4wNSwgNDldLCBbLTExMC4wNSwgNDldLCBbLTExMywgNDldLCBbLTExNi4wNDgxOCwgNDldLCBbLTExNy4wMzEyMSwgNDldLCBbLTEyMCwgNDldLCBbLTEyMi44NCwgNDldLCBbLTEyMi45NzQyMSwgNDkuMDAyNTM4XSwgWy0xMjQuOTEwMjQsIDQ5Ljk4NDU2XSwgWy0xMjUuNjI0NjEsIDUwLjQxNjU2XSwgWy0xMjcuNDM1NjEsIDUwLjgzMDYxXSwgWy0xMjcuOTkyNzYsIDUxLjcxNTgzXSwgWy0xMjcuODUwMzIsIDUyLjMyOTYxXSwgWy0xMjkuMTI5NzksIDUyLjc1NTM4XSwgWy0xMjkuMzA1MjMsIDUzLjU2MTU5XSwgWy0xMzAuNTE0OTcsIDU0LjI4NzU3XSwgWy0xMzAuNTM2MTEsIDU0LjgwMjc4XSwgWy0xMjkuOTgsIDU1LjI4NV0sIFstMTMwLjAwNzc4LCA1NS45MTU4M10sIFstMTMxLjcwNzgxLCA1Ni41NTIxMl0sIFstMTMyLjczMDQyLCA1Ny42OTI4OV0sIFstMTMzLjM1NTU2LCA1OC40MTAyOF0sIFstMTM0LjI3MTExLCA1OC44NjExMV0sIFstMTM0Ljk0NSwgNTkuMjcwNTZdLCBbLTEzNS40NzU4MywgNTkuNzg3NzhdLCBbLTEzNi40Nzk3MiwgNTkuNDYzODldLCBbLTEzNy40NTI1LCA1OC45MDVdLCBbLTEzOC4zNDA4OSwgNTkuNTYyMTFdLCBbLTEzOS4wMzksIDYwXSwgWy0xNDAuMDEzLCA2MC4yNzY4Ml0sIFstMTQwLjk5Nzc4LCA2MC4zMDYzOV0sIFstMTQwLjk5MjUsIDY2LjAwMDAzXSwgWy0xNDAuOTg2LCA2OS43MTJdLCBbLTEzOS4xMjA1MiwgNjkuNDcxMDJdLCBbLTEzNy41NDYzNiwgNjguOTkwMDJdLCBbLTEzNi41MDM1OCwgNjguODk4MDRdLCBbLTEzNS42MjU3NiwgNjkuMzE1MTJdLCBbLTEzNC40MTQ2NCwgNjkuNjI3NDNdLCBbLTEzMi45MjkyNSwgNjkuNTA1MzRdLCBbLTEzMS40MzEzNiwgNjkuOTQ0NTFdLCBbLTEyOS43OTQ3MSwgNzAuMTkzNjldLCBbLTEyOS4xMDc3MywgNjkuNzc5MjddLCBbLTEyOC4zNjE1NiwgNzAuMDEyODZdLCBbLTEyOC4xMzgxNywgNzAuNDgzODRdLCBbLTEyNy40NDcxMiwgNzAuMzc3MjFdLCBbLTEyNS43NTYzMiwgNjkuNDgwNThdLCBbLTEyNC40MjQ4MywgNzAuMTU4NF0sIFstMTI0LjI4OTY4LCA2OS4zOTk2OV0sIFstMTIzLjA2MTA4LCA2OS41NjM3Ml0sIFstMTIyLjY4MzUsIDY5Ljg1NTUzXSwgWy0xMjEuNDcyMjYsIDY5Ljc5Nzc4XSwgWy0xMTkuOTQyODgsIDY5LjM3Nzg2XSwgWy0xMTcuNjAyNjgsIDY5LjAxMTI4XSwgWy0xMTYuMjI2NDMsIDY4Ljg0MTUxXSwgWy0xMTUuMjQ2OSwgNjguOTA1OTFdLCBbLTExMy44OTc5NCwgNjguMzk4OV0sIFstMTE1LjMwNDg5LCA2Ny45MDI2MV0sIFstMTEzLjQ5NzI3LCA2Ny42ODgxNV0sIFstMTEwLjc5OCwgNjcuODA2MTJdLCBbLTEwOS45NDYxOSwgNjcuOTgxMDRdLCBbLTEwOC44ODAyLCA2Ny4zODE0NF0sIFstMTA3Ljc5MjM5LCA2Ny44ODczNl0sIFstMTA4LjgxMjk5LCA2OC4zMTE2NF0sIFstMTA4LjE2NzIxLCA2OC42NTM5Ml0sIFstMTA2Ljk1LCA2OC43XSwgWy0xMDYuMTUsIDY4LjhdLCBbLTEwNS4zNDI4MiwgNjguNTYxMjJdLCBbLTEwNC4zMzc5MSwgNjguMDE4XSwgWy0xMDMuMjIxMTUsIDY4LjA5Nzc1XSwgWy0xMDEuNDU0MzMsIDY3LjY0Njg5XSwgWy05OS45MDE5NSwgNjcuODA1NjZdLCBbLTk4LjQ0MzIsIDY3Ljc4MTY1XSwgWy05OC41NTg2LCA2OC40MDM5NF0sIFstOTcuNjY5NDgsIDY4LjU3ODY0XSwgWy05Ni4xMTk5MSwgNjguMjM5MzldLCBbLTk2LjEyNTg4LCA2Ny4yOTMzOF0sIFstOTUuNDg5NDMsIDY4LjA5MDddLCBbLTk0LjY4NSwgNjguMDYzODNdLCBbLTk0LjIzMjgyLCA2OS4wNjkwM10sIFstOTUuMzA0MDgsIDY5LjY4NTcxXSwgWy05Ni40NzEzMSwgNzAuMDg5NzZdLCBbLTk2LjM5MTE1LCA3MS4xOTQ4Ml0sIFstOTUuMjA4OCwgNzEuOTIwNTNdLCBbLTkzLjg4OTk3LCA3MS43NjAxNV0sIFstOTIuODc4MTgsIDcxLjMxODY5XSwgWy05MS41MTk2NCwgNzAuMTkxMjldLCBbLTkyLjQwNjkyLCA2OS42OTk5N10sIFstOTAuNTQ3MSwgNjkuNDk3NjZdXV0sIFtbWy0xMTQuMTY3MTcsIDczLjEyMTQ1XSwgWy0xMTQuNjY2MzQsIDcyLjY1Mjc3XSwgWy0xMTIuNDQxMDIsIDcyLjk1NTRdLCBbLTExMS4wNTAzOSwgNzIuNDUwNF0sIFstMTA5LjkyMDM1LCA3Mi45NjExM10sIFstMTA5LjAwNjU0LCA3Mi42MzMzNV0sIFstMTA4LjE4ODM1LCA3MS42NTA4OV0sIFstMTA3LjY4NTk5LCA3Mi4wNjU0OF0sIFstMTA4LjM5NjM5LCA3My4wODk1M10sIFstMTA3LjUxNjQ1LCA3My4yMzU5OF0sIFstMTA2LjUyMjU5LCA3My4wNzYwMV0sIFstMTA1LjQwMjQ2LCA3Mi42NzI1OV0sIFstMTA0Ljc3NDg0LCA3MS42OTg0XSwgWy0xMDQuNDY0NzYsIDcwLjk5Mjk3XSwgWy0xMDIuNzg1MzcsIDcwLjQ5Nzc2XSwgWy0xMDAuOTgwNzgsIDcwLjAyNDMyXSwgWy0xMDEuMDg5MjksIDY5LjU4NDQ3XSwgWy0xMDIuNzMxMTYsIDY5LjUwNDAyXSwgWy0xMDIuMDkzMjksIDY5LjExOTYyXSwgWy0xMDIuNDMwMjQsIDY4Ljc1MjgyXSwgWy0xMDQuMjQsIDY4LjkxXSwgWy0xMDUuOTYsIDY5LjE4XSwgWy0xMDcuMTIyNTQsIDY5LjExOTIyXSwgWy0xMDksIDY4Ljc4XSwgWy0xMTEuNTM0MTQ5LCA2OC42MzAwNTldLCBbLTExMy4zMTMyLCA2OC41MzU1NF0sIFstMTEzLjg1NDk2LCA2OS4wMDc0NF0sIFstMTE1LjIyLCA2OS4yOF0sIFstMTE2LjEwNzk0LCA2OS4xNjgyMV0sIFstMTE3LjM0LCA2OS45Nl0sIFstMTE2LjY3NDczLCA3MC4wNjY1NV0sIFstMTE1LjEzMTEyLCA3MC4yMzczXSwgWy0xMTMuNzIxNDEsIDcwLjE5MjM3XSwgWy0xMTIuNDE2MSwgNzAuMzY2MzhdLCBbLTExNC4zNSwgNzAuNl0sIFstMTE2LjQ4Njg0LCA3MC41MjA0NV0sIFstMTE3LjkwNDgsIDcwLjU0MDU2XSwgWy0xMTguNDMyMzgsIDcwLjkwOTJdLCBbLTExNi4xMTMxMSwgNzEuMzA5MThdLCBbLTExNy42NTU2OCwgNzEuMjk1Ml0sIFstMTE5LjQwMTk5LCA3MS41NTg1OV0sIFstMTE4LjU2MjY3LCA3Mi4zMDc4NV0sIFstMTE3Ljg2NjQyLCA3Mi43MDU5NF0sIFstMTE1LjE4OTA5LCA3My4zMTQ1OV0sIFstMTE0LjE2NzE3LCA3My4xMjE0NV1dXSwgW1tbLTEwNC41LCA3My40Ml0sIFstMTA1LjM4LCA3Mi43Nl0sIFstMTA2Ljk0LCA3My40Nl0sIFstMTA2LjYsIDczLjZdLCBbLTEwNS4yNiwgNzMuNjRdLCBbLTEwNC41LCA3My40Ml1dXSwgW1tbLTc2LjM0LCA3My4xMDI2ODVdLCBbLTc2LjI1MTQwNCwgNzIuODI2Mzg1XSwgWy03Ny4zMTQ0MzgsIDcyLjg1NTU0NV0sIFstNzguMzkxNjcsIDcyLjg3NjY1Nl0sIFstNzkuNDg2MjUyLCA3Mi43NDIyMDNdLCBbLTc5Ljc3NTgzMywgNzIuODAyOTAyXSwgWy04MC44NzYwOTksIDczLjMzMzE4M10sIFstODAuODMzODg1LCA3My42OTMxODRdLCBbLTgwLjM1MzA1OCwgNzMuNzU5NzJdLCBbLTc4LjA2NDQzOCwgNzMuNjUxOTMyXSwgWy03Ni4zNCwgNzMuMTAyNjg1XV1dLCBbW1stODYuNTYyMTc5LCA3My4xNTc0NDddLCBbLTg1Ljc3NDM3MSwgNzIuNTM0MTI2XSwgWy04NC44NTAxMTIsIDczLjM0MDI3OF0sIFstODIuMzE1NTksIDczLjc1MDk1MV0sIFstODAuNjAwMDg4LCA3Mi43MTY1NDRdLCBbLTgwLjc0ODk0MiwgNzIuMDYxOTA3XSwgWy03OC43NzA2MzksIDcyLjM1MjE3M10sIFstNzcuODI0NjI0LCA3Mi43NDk2MTddLCBbLTc1LjYwNTg0NSwgNzIuMjQzNjc4XSwgWy03NC4yMjg2MTYsIDcxLjc2NzE0NF0sIFstNzQuMDk5MTQxLCA3MS4zMzA4NF0sIFstNzIuMjQyMjI2LCA3MS41NTY5MjVdLCBbLTcxLjIwMDAxNSwgNzAuOTIwMDEzXSwgWy02OC43ODYwNTQsIDcwLjUyNTAyNF0sIFstNjcuOTE0OTcsIDcwLjEyMTk0OF0sIFstNjYuOTY5MDMzLCA2OS4xODYwODddLCBbLTY4LjgwNTEyMywgNjguNzIwMTk4XSwgWy02Ni40NDk4NjYsIDY4LjA2NzE2M10sIFstNjQuODYyMzE0LCA2Ny44NDc1MzldLCBbLTYzLjQyNDkzNCwgNjYuOTI4NDczXSwgWy02MS44NTE5ODEsIDY2Ljg2MjEyMV0sIFstNjIuMTYzMTc3LCA2Ni4xNjAyNTFdLCBbLTYzLjkxODQ0NCwgNjQuOTk4NjY5XSwgWy02NS4xNDg4NiwgNjUuNDI2MDMzXSwgWy02Ni43MjEyMTksIDY2LjM4ODA0MV0sIFstNjguMDE1MDE2LCA2Ni4yNjI3MjZdLCBbLTY4LjE0MTI4NywgNjUuNjg5Nzg5XSwgWy02Ny4wODk2NDYsIDY1LjEwODQ1NV0sIFstNjUuNzMyMDgsIDY0LjY0ODQwNl0sIFstNjUuMzIwMTY4LCA2NC4zODI3MzddLCBbLTY0LjY2OTQwNiwgNjMuMzkyOTI3XSwgWy02NS4wMTM4MDQsIDYyLjY3NDE4NV0sIFstNjYuMjc1MDQ1LCA2Mi45NDUwOTldLCBbLTY4Ljc4MzE4NiwgNjMuNzQ1NjddLCBbLTY3LjM2OTY4MSwgNjIuODgzOTY2XSwgWy02Ni4zMjgyOTcsIDYyLjI4MDA3NV0sIFstNjYuMTY1NTY4LCA2MS45MzA4OTddLCBbLTY4Ljg3NzM2NywgNjIuMzMwMTQ5XSwgWy03MS4wMjM0MzcsIDYyLjkxMDcwOF0sIFstNzIuMjM1Mzc5LCA2My4zOTc4MzZdLCBbLTcxLjg4NjI3OCwgNjMuNjc5OTg5XSwgWy03My4zNzgzMDYsIDY0LjE5Mzk2M10sIFstNzQuODM0NDE5LCA2NC42NzkwNzZdLCBbLTc0LjgxODUwMywgNjQuMzg5MDkzXSwgWy03Ny43MDk5OCwgNjQuMjI5NTQyXSwgWy03OC41NTU5NDksIDY0LjU3MjkwNl0sIFstNzcuODk3MjgxLCA2NS4zMDkxOTJdLCBbLTc2LjAxODI3NCwgNjUuMzI2OTY5XSwgWy03My45NTk3OTUsIDY1LjQ1NDc2NV0sIFstNzQuMjkzODgzLCA2NS44MTE3NzFdLCBbLTczLjk0NDkxMiwgNjYuMzEwNTc4XSwgWy03Mi42NTExNjcsIDY3LjI4NDU3Nl0sIFstNzIuOTI2MDYsIDY3LjcyNjkyNl0sIFstNzMuMzExNjE4LCA2OC4wNjk0MzddLCBbLTc0Ljg0MzMwNywgNjguNTU0NjI3XSwgWy03Ni44NjkxMDEsIDY4Ljg5NDczNl0sIFstNzYuMjI4NjQ5LCA2OS4xNDc3NjldLCBbLTc3LjI4NzM3LCA2OS43Njk1NF0sIFstNzguMTY4NjM0LCA2OS44MjY0ODhdLCBbLTc4Ljk1NzI0MiwgNzAuMTY2ODhdLCBbLTc5LjQ5MjQ1NSwgNjkuODcxODA4XSwgWy04MS4zMDU0NzEsIDY5Ljc0MzE4NV0sIFstODQuOTQ0NzA2LCA2OS45NjY2MzRdLCBbLTg3LjA2MDAwMywgNzAuMjYwMDAxXSwgWy04OC42ODE3MTMsIDcwLjQxMDc0MV0sIFstODkuNTEzNDIsIDcwLjc2MjAzOF0sIFstODguNDY3NzIxLCA3MS4yMTgxODZdLCBbLTg5Ljg4ODE1MSwgNzEuMjIyNTUyXSwgWy05MC4yMDUxNiwgNzIuMjM1MDc0XSwgWy04OS40MzY1NzcsIDczLjEyOTQ2NF0sIFstODguNDA4MjQyLCA3My41Mzc4ODldLCBbLTg1LjgyNjE1MSwgNzMuODAzODE2XSwgWy04Ni41NjIxNzksIDczLjE1NzQ0N11dXSwgW1tbLTEwMC4zNTY0MiwgNzMuODQzODldLCBbLTk5LjE2Mzg3LCA3My42MzMzOV0sIFstOTcuMzgsIDczLjc2XSwgWy05Ny4xMiwgNzMuNDddLCBbLTk4LjA1MzU5LCA3Mi45OTA1Ml0sIFstOTYuNTQsIDcyLjU2XSwgWy05Ni43MiwgNzEuNjZdLCBbLTk4LjM1OTY2LCA3MS4yNzI4NV0sIFstOTkuMzIyODYsIDcxLjM1NjM5XSwgWy0xMDAuMDE0ODIsIDcxLjczODI3XSwgWy0xMDIuNSwgNzIuNTFdLCBbLTEwMi40OCwgNzIuODNdLCBbLTEwMC40MzgzNiwgNzIuNzA1ODhdLCBbLTEwMS41NCwgNzMuMzZdLCBbLTEwMC4zNTY0MiwgNzMuODQzODldXV0sIFtbWy05My4xOTYyOTYsIDcyLjc3MTk5Ml0sIFstOTQuMjY5MDQ3LCA3Mi4wMjQ1OTZdLCBbLTk1LjQwOTg1NiwgNzIuMDYxODgxXSwgWy05Ni4wMzM3NDUsIDcyLjk0MDI3N10sIFstOTYuMDE4MjY4LCA3My40Mzc0M10sIFstOTUuNDk1NzkzLCA3My44NjI0MTddLCBbLTk0LjUwMzY1OCwgNzQuMTM0OTA3XSwgWy05Mi40MjAwMTIsIDc0LjEwMDAyNV0sIFstOTAuNTA5NzkzLCA3My44NTY3MzJdLCBbLTkyLjAwMzk2NSwgNzIuOTY2MjQ0XSwgWy05My4xOTYyOTYsIDcyLjc3MTk5Ml1dXSwgW1tbLTEyMC40NiwgNzEuMzgzNjAyXSwgWy0xMjMuMDkyMTksIDcwLjkwMTY0XSwgWy0xMjMuNjIsIDcxLjM0XSwgWy0xMjUuOTI4OTQ5LCA3MS44Njg2ODhdLCBbLTEyNS41LCA3Mi4yOTIyNjFdLCBbLTEyNC44MDcyOSwgNzMuMDIyNTZdLCBbLTEyMy45NCwgNzMuNjhdLCBbLTEyNC45MTc3NSwgNzQuMjkyNzVdLCBbLTEyMS41Mzc4OCwgNzQuNDQ4OTNdLCBbLTEyMC4xMDk3OCwgNzQuMjQxMzVdLCBbLTExNy41NTU2NCwgNzQuMTg1NzddLCBbLTExNi41ODQ0MiwgNzMuODk2MDddLCBbLTExNS41MTA4MSwgNzMuNDc1MTldLCBbLTExNi43Njc5NCwgNzMuMjIyOTJdLCBbLTExOS4yMiwgNzIuNTJdLCBbLTEyMC40NiwgNzEuODJdLCBbLTEyMC40NiwgNzEuMzgzNjAyXV1dLCBbW1stOTMuNjEyNzU2LCA3NC45Nzk5OTddLCBbLTk0LjE1NjkwOSwgNzQuNTkyMzQ3XSwgWy05NS42MDg2ODEsIDc0LjY2Njg2NF0sIFstOTYuODIwOTMyLCA3NC45Mjc2MjNdLCBbLTk2LjI4ODU4NywgNzUuMzc3ODI4XSwgWy05NC44NTA4MiwgNzUuNjQ3MjE4XSwgWy05My45Nzc3NDcsIDc1LjI5NjQ5XSwgWy05My42MTI3NTYsIDc0Ljk3OTk5N11dXSwgW1tbLTk4LjUsIDc2LjcyXSwgWy05Ny43MzU1ODUsIDc2LjI1NjU2XSwgWy05Ny43MDQ0MTUsIDc1Ljc0MzQ0XSwgWy05OC4xNiwgNzVdLCBbLTk5LjgwODc0LCA3NC44OTc0NF0sIFstMTAwLjg4MzY2LCA3NS4wNTczNl0sIFstMTAwLjg2MjkyLCA3NS42NDA3NV0sIFstMTAyLjUwMjA5LCA3NS41NjM4XSwgWy0xMDIuNTY1NTIsIDc2LjMzNjZdLCBbLTEwMS40ODk3MywgNzYuMzA1MzddLCBbLTk5Ljk4MzQ5LCA3Ni42NDYzNF0sIFstOTguNTc2OTksIDc2LjU4ODU5XSwgWy05OC41LCA3Ni43Ml1dXSwgW1tbLTEwOC4yMTE0MSwgNzYuMjAxNjhdLCBbLTEwNy44MTk0MywgNzUuODQ1NTJdLCBbLTEwNi45Mjg5MywgNzYuMDEyODJdLCBbLTEwNS44ODEsIDc1Ljk2OTRdLCBbLTEwNS43MDQ5OCwgNzUuNDc5NTFdLCBbLTEwNi4zMTM0NywgNzUuMDA1MjddLCBbLTEwOS43LCA3NC44NV0sIFstMTEyLjIyMzA3LCA3NC40MTY5Nl0sIFstMTEzLjc0MzgxLCA3NC4zOTQyN10sIFstMTEzLjg3MTM1LCA3NC43MjAyOV0sIFstMTExLjc5NDIxLCA3NS4xNjI1XSwgWy0xMTYuMzEyMjEsIDc1LjA0MzQzXSwgWy0xMTcuNzEwNCwgNzUuMjIyMl0sIFstMTE2LjM0NjAyLCA3Ni4xOTkwM10sIFstMTE1LjQwNDg3LCA3Ni40Nzg4N10sIFstMTEyLjU5MDU2LCA3Ni4xNDEzNF0sIFstMTEwLjgxNDIyLCA3NS41NDkxOV0sIFstMTA5LjA2NzEsIDc1LjQ3MzIxXSwgWy0xMTAuNDk3MjYsIDc2LjQyOTgyXSwgWy0xMDkuNTgxMSwgNzYuNzk0MTddLCBbLTEwOC41NDg1OSwgNzYuNjc4MzJdLCBbLTEwOC4yMTE0MSwgNzYuMjAxNjhdXV0sIFtbWy05NC42ODQwODYsIDc3LjA5Nzg3OF0sIFstOTMuNTczOTIxLCA3Ni43NzYyOTZdLCBbLTkxLjYwNTAyMywgNzYuNzc4NTE4XSwgWy05MC43NDE4NDYsIDc2LjQ0OTU5N10sIFstOTAuOTY5NjYxLCA3Ni4wNzQwMTNdLCBbLTg5LjgyMjIzOCwgNzUuODQ3Nzc0XSwgWy04OS4xODcwODMsIDc1LjYxMDE2Nl0sIFstODcuODM4Mjc2LCA3NS41NjYxODldLCBbLTg2LjM3OTE5MiwgNzUuNDgyNDIxXSwgWy04NC43ODk2MjUsIDc1LjY5OTIwNF0sIFstODIuNzUzNDQ1LCA3NS43ODQzMTVdLCBbLTgxLjEyODUzMSwgNzUuNzEzOTgzXSwgWy04MC4wNTc1MTEsIDc1LjMzNjg0OV0sIFstNzkuODMzOTMzLCA3NC45MjMxMjddLCBbLTgwLjQ1Nzc3MSwgNzQuNjU3MzA0XSwgWy04MS45NDg4NDMsIDc0LjQ0MjQ1OV0sIFstODMuMjI4ODk0LCA3NC41NjQwMjhdLCBbLTg2LjA5NzQ1MiwgNzQuNDEwMDMyXSwgWy04OC4xNTAzNSwgNzQuMzkyMzA3XSwgWy04OS43NjQ3MjIsIDc0LjUxNTU1NV0sIFstOTIuNDIyNDQxLCA3NC44Mzc3NThdLCBbLTkyLjc2ODI4NSwgNzUuMzg2ODJdLCBbLTkyLjg4OTkwNiwgNzUuODgyNjU1XSwgWy05My44OTM4MjQsIDc2LjMxOTI0NF0sIFstOTUuOTYyNDU3LCA3Ni40NDEzODFdLCBbLTk3LjEyMTM3OSwgNzYuNzUxMDc4XSwgWy05Ni43NDUxMjMsIDc3LjE2MTM4OV0sIFstOTQuNjg0MDg2LCA3Ny4wOTc4NzhdXV0sIFtbWy0xMTYuMTk4NTg3LCA3Ny42NDUyODddLCBbLTExNi4zMzU4MTMsIDc2Ljg3Njk2Ml0sIFstMTE3LjEwNjA1MSwgNzYuNTMwMDMyXSwgWy0xMTguMDQwNDEyLCA3Ni40ODExNzJdLCBbLTExOS44OTkzMTgsIDc2LjA1MzIxM10sIFstMTIxLjQ5OTk5NSwgNzUuOTAwMDE5XSwgWy0xMjIuODU0OTI0LCA3Ni4xMTY1NDNdLCBbLTEyMi44NTQ5MjUsIDc2LjExNjU0M10sIFstMTIxLjE1NzUzNSwgNzYuODY0NTA4XSwgWy0xMTkuMTAzOTM5LCA3Ny41MTIyMl0sIFstMTE3LjU3MDEzMSwgNzcuNDk4MzE5XSwgWy0xMTYuMTk4NTg3LCA3Ny42NDUyODddXV0sIFtbWy05My44NDAwMDMsIDc3LjUxOTk5N10sIFstOTQuMjk1NjA4LCA3Ny40OTEzNDNdLCBbLTk2LjE2OTY1NCwgNzcuNTU1MTExXSwgWy05Ni40MzYzMDQsIDc3LjgzNDYyOV0sIFstOTQuNDIyNTc3LCA3Ny44MjAwMDVdLCBbLTkzLjcyMDY1NiwgNzcuNjM0MzMxXSwgWy05My44NDAwMDMsIDc3LjUxOTk5N11dXSwgW1tbLTExMC4xODY5MzgsIDc3LjY5NzAxNV0sIFstMTEyLjA1MTE5MSwgNzcuNDA5MjI5XSwgWy0xMTMuNTM0Mjc5LCA3Ny43MzIyMDddLCBbLTExMi43MjQ1ODcsIDc4LjA1MTA1XSwgWy0xMTEuMjY0NDQzLCA3OC4xNTI5NTZdLCBbLTEwOS44NTQ0NTIsIDc3Ljk5NjMyNV0sIFstMTEwLjE4NjkzOCwgNzcuNjk3MDE1XV1dLCBbW1stMTA5LjY2MzE0NiwgNzguNjAxOTczXSwgWy0xMTAuODgxMzE0LCA3OC40MDY5Ml0sIFstMTEyLjU0MjA5MSwgNzguNDA3OTAyXSwgWy0xMTIuNTI1ODkxLCA3OC41NTA1NTVdLCBbLTExMS41MDAwMSwgNzguODQ5OTk0XSwgWy0xMTAuOTYzNjYxLCA3OC44MDQ0NDFdLCBbLTEwOS42NjMxNDYsIDc4LjYwMTk3M11dXSwgW1tbLTk1LjgzMDI5NSwgNzguMDU2OTQxXSwgWy05Ny4zMDk4NDMsIDc3Ljg1MDU5N10sIFstOTguMTI0Mjg5LCA3OC4wODI4NTddLCBbLTk4LjU1Mjg2OCwgNzguNDU4MTA1XSwgWy05OC42MzE5ODQsIDc4Ljg3MTkzXSwgWy05Ny4zMzcyMzEsIDc4LjgzMTk4NF0sIFstOTYuNzU0Mzk5LCA3OC43NjU4MTNdLCBbLTk1LjU1OTI3OCwgNzguNDE4MzE1XSwgWy05NS44MzAyOTUsIDc4LjA1Njk0MV1dXSwgW1tbLTEwMC4wNjAxOTIsIDc4LjMyNDc1NF0sIFstOTkuNjcwOTM5LCA3Ny45MDc1NDVdLCBbLTEwMS4zMDM5NCwgNzguMDE4OTg1XSwgWy0xMDIuOTQ5ODA5LCA3OC4zNDMyMjldLCBbLTEwNS4xNzYxMzMsIDc4LjM4MDMzMl0sIFstMTA0LjIxMDQyOSwgNzguNjc3NDJdLCBbLTEwNS40MTk1OCwgNzguOTE4MzM2XSwgWy0xMDUuNDkyMjg5LCA3OS4zMDE1OTRdLCBbLTEwMy41MjkyODIsIDc5LjE2NTM0OV0sIFstMTAwLjgyNTE1OCwgNzguODAwNDYyXSwgWy0xMDAuMDYwMTkyLCA3OC4zMjQ3NTRdXV0sIFtbWy04Ny4wMiwgNzkuNjZdLCBbLTg1LjgxNDM1LCA3OS4zMzY5XSwgWy04Ny4xODc1NiwgNzkuMDM5M10sIFstODkuMDM1MzUsIDc4LjI4NzIzXSwgWy05MC44MDQzNiwgNzguMjE1MzNdLCBbLTkyLjg3NjY5LCA3OC4zNDMzM10sIFstOTMuOTUxMTYsIDc4Ljc1MDk5XSwgWy05My45MzU3NCwgNzkuMTEzNzNdLCBbLTkzLjE0NTI0LCA3OS4zODAxXSwgWy05NC45NzQsIDc5LjM3MjQ4XSwgWy05Ni4wNzYxNCwgNzkuNzA1MDJdLCBbLTk2LjcwOTcyLCA4MC4xNTc3N10sIFstOTYuMDE2NDQsIDgwLjYwMjMzXSwgWy05NS4zMjM0NSwgODAuOTA3MjldLCBbLTk0LjI5ODQzLCA4MC45NzcyN10sIFstOTQuNzM1NDIsIDgxLjIwNjQ2XSwgWy05Mi40MDk4NCwgODEuMjU3MzldLCBbLTkxLjEzMjg5LCA4MC43MjM0NV0sIFstODkuNDUsIDgwLjUwOTMyMl0sIFstODcuODEsIDgwLjMyXSwgWy04Ny4wMiwgNzkuNjZdXV0sIFtbWy02OC41LCA4My4xMDYzMjJdLCBbLTY1LjgyNzM1LCA4My4wMjgwMV0sIFstNjMuNjgsIDgyLjldLCBbLTYxLjg1LCA4Mi42Mjg2XSwgWy02MS44OTM4OCwgODIuMzYxNjVdLCBbLTY0LjMzNCwgODEuOTI3NzVdLCBbLTY2Ljc1MzQyLCA4MS43MjUyN10sIFstNjcuNjU3NTUsIDgxLjUwMTQxXSwgWy02NS40ODAzMSwgODEuNTA2NTddLCBbLTY3Ljg0LCA4MC45XSwgWy02OS40Njk3LCA4MC42MTY4M10sIFstNzEuMTgsIDc5LjhdLCBbLTczLjI0MjgsIDc5LjYzNDE1XSwgWy03My44OCwgNzkuNDMwMTYyXSwgWy03Ni45MDc3MywgNzkuMzIzMDldLCBbLTc1LjUyOTI0LCA3OS4xOTc2Nl0sIFstNzYuMjIwNDYsIDc5LjAxOTA3XSwgWy03NS4zOTM0NSwgNzguNTI1ODFdLCBbLTc2LjM0MzU0LCA3OC4xODI5Nl0sIFstNzcuODg4NTEsIDc3Ljg5OTkxXSwgWy03OC4zNjI2OSwgNzcuNTA4NTldLCBbLTc5Ljc1OTUxLCA3Ny4yMDk2OF0sIFstNzkuNjE5NjUsIDc2Ljk4MzM2XSwgWy03Ny45MTA4OSwgNzcuMDIyMDQ1XSwgWy03Ny44ODkxMSwgNzYuNzc3OTU1XSwgWy04MC41NjEyNSwgNzYuMTc4MTJdLCBbLTgzLjE3NDM5LCA3Ni40NTQwM10sIFstODYuMTExODQsIDc2LjI5OTAxXSwgWy04Ny42LCA3Ni40Ml0sIFstODkuNDkwNjgsIDc2LjQ3MjM5XSwgWy04OS42MTYxLCA3Ni45NTIxM10sIFstODcuNzY3MzksIDc3LjE3ODMzXSwgWy04OC4yNiwgNzcuOV0sIFstODcuNjUsIDc3Ljk3MDIyMl0sIFstODQuOTc2MzQsIDc3LjUzODczXSwgWy04Ni4zNCwgNzguMThdLCBbLTg3Ljk2MTkyLCA3OC4zNzE4MV0sIFstODcuMTUxOTgsIDc4Ljc1ODY3XSwgWy04NS4zNzg2OCwgNzguOTk2OV0sIFstODUuMDk0OTUsIDc5LjM0NTQzXSwgWy04Ni41MDczNCwgNzkuNzM2MjRdLCBbLTg2LjkzMTc5LCA4MC4yNTE0NV0sIFstODQuMTk4NDQsIDgwLjIwODM2XSwgWy04My40MDg2OTYsIDgwLjFdLCBbLTgxLjg0ODIzLCA4MC40NjQ0Ml0sIFstODQuMSwgODAuNThdLCBbLTg3LjU5ODk1LCA4MC41MTYyN10sIFstODkuMzY2NjMsIDgwLjg1NTY5XSwgWy05MC4yLCA4MS4yNl0sIFstOTEuMzY3ODYsIDgxLjU1MzFdLCBbLTkxLjU4NzAyLCA4MS44OTQyOV0sIFstOTAuMSwgODIuMDg1XSwgWy04OC45MzIyNywgODIuMTE3NTFdLCBbLTg2Ljk3MDI0LCA4Mi4yNzk2MV0sIFstODUuNSwgODIuNjUyMjczXSwgWy04NC4yNjAwMDUsIDgyLjZdLCBbLTgzLjE4LCA4Mi4zMl0sIFstODIuNDIsIDgyLjg2XSwgWy04MS4xLCA4My4wMl0sIFstNzkuMzA2NjQsIDgzLjEzMDU2XSwgWy03Ni4yNSwgODMuMTcyMDU5XSwgWy03NS43MTg3OCwgODMuMDY0MDRdLCBbLTcyLjgzMTUzLCA4My4yMzMyNF0sIFstNzAuNjY1NzY1LCA4My4xNjk3ODFdLCBbLTY4LjUsIDgzLjEwNjMyMl1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiQ0FOIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJDYW5hZGEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzkuNTk0MjI2LCA0Ny41MjUwNThdLCBbOS42MzI5MzIsIDQ3LjM0NzYwMV0sIFs5LjQ3OTk3LCA0Ny4xMDI4MV0sIFs5LjkzMjQ0OCwgNDYuOTIwNzI4XSwgWzEwLjQ0MjcwMSwgNDYuODkzNTQ2XSwgWzEwLjM2MzM3OCwgNDYuNDgzNTcxXSwgWzkuOTIyODM3LCA0Ni4zMTQ4OTldLCBbOS4xODI4ODIsIDQ2LjQ0MDIxNV0sIFs4Ljk2NjMwNiwgNDYuMDM2OTMyXSwgWzguNDg5OTUyLCA0Ni4wMDUxNTFdLCBbOC4zMTY2MywgNDYuMTYzNjQyXSwgWzcuNzU1OTkyLCA0NS44MjQ0OV0sIFs3LjI3Mzg1MSwgNDUuNzc2OTQ4XSwgWzYuODQzNTkzLCA0NS45OTExNDddLCBbNi41MDAxLCA0Ni40Mjk2NzNdLCBbNi4wMjI2MDksIDQ2LjI3Mjk5XSwgWzYuMDM3Mzg5LCA0Ni43MjU3NzldLCBbNi43Njg3MTQsIDQ3LjI4NzcwOF0sIFs2LjczNjU3MSwgNDcuNTQxODAxXSwgWzcuMTkyMjAyLCA0Ny40NDk3NjZdLCBbNy40NjY3NTksIDQ3LjYyMDU4Ml0sIFs4LjMxNzMwMSwgNDcuNjEzNThdLCBbOC41MjI2MTIsIDQ3LjgzMDgyOF0sIFs5LjU5NDIyNiwgNDcuNTI1MDU4XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJDSEUiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlN3aXR6ZXJsYW5kIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbLTY4LjYzNDAxLCAtNTIuNjM2MzddLCBbLTY4LjYzMzM1LCAtNTQuODY5NV0sIFstNjcuNTYyNDQsIC01NC44NzAwMV0sIFstNjYuOTU5OTIsIC01NC44OTY4MV0sIFstNjcuMjkxMDMsIC01NS4zMDEyNF0sIFstNjguMTQ4NjMsIC01NS42MTE4M10sIFstNjguNjM5OTkxLCAtNTUuNTgwMDE4XSwgWy02OS4yMzIxLCAtNTUuNDk5MDZdLCBbLTY5Ljk1ODA5LCAtNTUuMTk4NDNdLCBbLTcxLjAwNTY4LCAtNTUuMDUzODNdLCBbLTcyLjI2MzksIC01NC40OTUxNF0sIFstNzMuMjg1MiwgLTUzLjk1NzUyXSwgWy03NC42NjI1MywgLTUyLjgzNzQ5XSwgWy03My44MzgxLCAtNTMuMDQ3NDNdLCBbLTcyLjQzNDE4LCAtNTMuNzE1NF0sIFstNzEuMTA3NzMsIC01NC4wNzQzM10sIFstNzAuNTkxNzgsIC01My42MTU4M10sIFstNzAuMjY3NDgsIC01Mi45MzEyM10sIFstNjkuMzQ1NjUsIC01Mi41MTgzXSwgWy02OC42MzQwMSwgLTUyLjYzNjM3XV1dLCBbW1stNjguMjE5OTEzLCAtMjEuNDk0MzQ3XSwgWy02Ny44MjgxOCwgLTIyLjg3MjkxOV0sIFstNjcuMTA2Njc0LCAtMjIuNzM1OTI1XSwgWy02Ni45ODUyMzQsIC0yMi45ODYzNDldLCBbLTY3LjMyODQ0MywgLTI0LjAyNTMwM10sIFstNjguNDE3NjUzLCAtMjQuNTE4NTU1XSwgWy02OC4zODYwMDEsIC0yNi4xODUwMTZdLCBbLTY4LjU5NDgsIC0yNi41MDY5MDldLCBbLTY4LjI5NTU0MiwgLTI2Ljg5OTM0XSwgWy02OS4wMDEyMzUsIC0yNy41MjEyMTRdLCBbLTY5LjY1NjEzLCAtMjguNDU5MTQxXSwgWy03MC4wMTM1NSwgLTI5LjM2NzkyM10sIFstNjkuOTE5MDA4LCAtMzAuMzM2MzM5XSwgWy03MC41MzUwNjksIC0zMS4zNjUwMV0sIFstNzAuMDc0Mzk5LCAtMzMuMDkxMjFdLCBbLTY5LjgxNDc3NywgLTMzLjI3Mzg4Nl0sIFstNjkuODE3MzA5LCAtMzQuMTkzNTcxXSwgWy03MC4zODgwNDksIC0zNS4xNjk2ODhdLCBbLTcwLjM2NDc2OSwgLTM2LjAwNTA4OV0sIFstNzEuMTIxODgxLCAtMzYuNjU4MTI0XSwgWy03MS4xMTg2MjUsIC0zNy41NzY4MjddLCBbLTcwLjgxNDY2NCwgLTM4LjU1Mjk5NV0sIFstNzEuNDEzNTE3LCAtMzguOTE2MDIyXSwgWy03MS42ODA3NjEsIC0zOS44MDgxNjRdLCBbLTcxLjkxNTczNCwgLTQwLjgzMjMzOV0sIFstNzEuNzQ2ODA0LCAtNDIuMDUxMzg2XSwgWy03Mi4xNDg4OTgsIC00Mi4yNTQ4ODhdLCBbLTcxLjkxNTQyNCwgLTQzLjQwODU2NV0sIFstNzEuNDY0MDU2LCAtNDMuNzg3NjExXSwgWy03MS43OTM2MjMsIC00NC4yMDcxNzJdLCBbLTcxLjMyOTgwMSwgLTQ0LjQwNzUyMl0sIFstNzEuMjIyNzc5LCAtNDQuNzg0MjQzXSwgWy03MS42NTkzMTYsIC00NC45NzM2ODldLCBbLTcxLjU1MjAwOSwgLTQ1LjU2MDczM10sIFstNzEuOTE3MjU4LCAtNDYuODg0ODM4XSwgWy03Mi40NDczNTUsIC00Ny43Mzg1MzNdLCBbLTcyLjMzMTE2MSwgLTQ4LjI0NDIzOF0sIFstNzIuNjQ4MjQ3LCAtNDguODc4NjE4XSwgWy03My40MTU0MzYsIC00OS4zMTg0MzZdLCBbLTczLjMyODA1MSwgLTUwLjM3ODc4NV0sIFstNzIuOTc1NzQ3LCAtNTAuNzQxNDVdLCBbLTcyLjMwOTk3NCwgLTUwLjY3NzAxXSwgWy03Mi4zMjk0MDQsIC01MS40MjU5NTZdLCBbLTcxLjkxNDgwNCwgLTUyLjAwOTAyMl0sIFstNjkuNDk4MzYyLCAtNTIuMTQyNzYxXSwgWy02OC41NzE1NDUsIC01Mi4yOTk0NDRdLCBbLTY5LjQ2MTI4NCwgLTUyLjI5MTk1MV0sIFstNjkuOTQyNzgsIC01Mi41Mzc5MzFdLCBbLTcwLjg0NTEwMiwgLTUyLjg5OTIwMV0sIFstNzEuMDA2MzMyLCAtNTMuODMzMjUyXSwgWy03MS40Mjk3OTUsIC01My44NTY0NTVdLCBbLTcyLjU1Nzk0MywgLTUzLjUzMTQxXSwgWy03My43MDI3NTcsIC01Mi44MzUwNjldLCBbLTczLjcwMjc1NywgLTUyLjgzNTA3XSwgWy03NC45NDY3NjMsIC01Mi4yNjI3NTRdLCBbLTc1LjI2MDAyNiwgLTUxLjYyOTM1NV0sIFstNzQuOTc2NjMyLCAtNTEuMDQzMzk2XSwgWy03NS40Nzk3NTQsIC01MC4zNzgzNzJdLCBbLTc1LjYwODAxNSwgLTQ4LjY3Mzc3M10sIFstNzUuMTgyNzcsIC00Ny43MTE5MTldLCBbLTc0LjEyNjU4MSwgLTQ2LjkzOTI1M10sIFstNzUuNjQ0Mzk1LCAtNDYuNjQ3NjQzXSwgWy03NC42OTIxNTQsIC00NS43NjM5NzZdLCBbLTc0LjM1MTcwOSwgLTQ0LjEwMzA0NF0sIFstNzMuMjQwMzU2LCAtNDQuNDU0OTYxXSwgWy03Mi43MTc4MDQsIC00Mi4zODMzNTZdLCBbLTczLjM4ODksIC00Mi4xMTc1MzJdLCBbLTczLjcwMTMzNiwgLTQzLjM2NTc3Nl0sIFstNzQuMzMxOTQzLCAtNDMuMjI0OTU4XSwgWy03NC4wMTc5NTcsIC00MS43OTQ4MTNdLCBbLTczLjY3NzA5OSwgLTM5Ljk0MjIxM10sIFstNzMuMjE3NTkzLCAtMzkuMjU4Njg5XSwgWy03My41MDU1NTksIC0zOC4yODI4ODNdLCBbLTczLjU4ODA2MSwgLTM3LjE1NjI4NV0sIFstNzMuMTY2NzE3LCAtMzcuMTIzNzhdLCBbLTcyLjU1MzEzNywgLTM1LjUwODg0XSwgWy03MS44NjE3MzIsIC0zMy45MDkwOTNdLCBbLTcxLjQzODQ1LCAtMzIuNDE4ODk5XSwgWy03MS42Njg3MjEsIC0zMC45MjA2NDVdLCBbLTcxLjM3MDA4MywgLTMwLjA5NTY4Ml0sIFstNzEuNDg5ODk0LCAtMjguODYxNDQyXSwgWy03MC45MDUxMjQsIC0yNy42NDAzOF0sIFstNzAuNzI0OTU0LCAtMjUuNzA1OTI0XSwgWy03MC40MDM5NjYsIC0yMy42Mjg5OTddLCBbLTcwLjA5MTI0NiwgLTIxLjM5MzMxOV0sIFstNzAuMTY0NDIsIC0xOS43NTY0NjhdLCBbLTcwLjM3MjU3MiwgLTE4LjM0Nzk3NV0sIFstNjkuODU4NDQ0LCAtMTguMDkyNjk0XSwgWy02OS41OTA0MjQsIC0xNy41ODAwMTJdLCBbLTY5LjEwMDI0NywgLTE4LjI2MDEyNV0sIFstNjguOTY2ODE4LCAtMTguOTgxNjgzXSwgWy02OC40NDIyMjUsIC0xOS40MDUwNjhdLCBbLTY4Ljc1NzE2NywgLTIwLjM3MjY1OF0sIFstNjguMjE5OTEzLCAtMjEuNDk0MzQ3XV1dXSwgInR5cGUiOiAiTXVsdGlQb2x5Z29uIn0sICJpZCI6ICJDSEwiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkNoaWxlIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbMTEwLjMzOTE4OCwgMTguNjc4Mzk1XSwgWzEwOS40NzUyMSwgMTguMTk3NzAxXSwgWzEwOC42NTUyMDgsIDE4LjUwNzY4Ml0sIFsxMDguNjI2MjE3LCAxOS4zNjc4ODhdLCBbMTA5LjExOTA1NiwgMTkuODIxMDM5XSwgWzExMC4yMTE1OTksIDIwLjEwMTI1NF0sIFsxMTAuNzg2NTUxLCAyMC4wNzc1MzRdLCBbMTExLjAxMDA1MSwgMTkuNjk1OTNdLCBbMTEwLjU3MDY0NywgMTkuMjU1ODc5XSwgWzExMC4zMzkxODgsIDE4LjY3ODM5NV1dXSwgW1tbMTI3LjY1NzQwNywgNDkuNzYwMjddLCBbMTI5LjM5NzgxOCwgNDkuNDQwNl0sIFsxMzAuNTgyMjkzLCA0OC43Mjk2ODddLCBbMTMwLjk4NzI4MiwgNDcuNzkwMTMyXSwgWzEzMi41MDY2NzIsIDQ3Ljc4ODk3XSwgWzEzMy4zNzM1OTYsIDQ4LjE4MzQ0Ml0sIFsxMzUuMDI2MzExLCA0OC40NzgyM10sIFsxMzQuNTAwODE0LCA0Ny41Nzg0NF0sIFsxMzQuMTEyMzYyLCA0Ny4yMTI0NjddLCBbMTMzLjc2OTY0NCwgNDYuMTE2OTI3XSwgWzEzMy4wOTcxMjcsIDQ1LjE0NDA2Nl0sIFsxMzEuODgzNDU0LCA0NS4zMjExNjJdLCBbMTMxLjAyNTIxMiwgNDQuOTY3OTUzXSwgWzEzMS4yODg1NTUsIDQ0LjExMTUyXSwgWzEzMS4xNDQ2ODgsIDQyLjkyOTk5XSwgWzEzMC42MzM4NjYsIDQyLjkwMzAxNV0sIFsxMzAuNjQwMDE2LCA0Mi4zOTUwMDldLCBbMTI5Ljk5NDI2NywgNDIuOTg1Mzg3XSwgWzEyOS41OTY2NjksIDQyLjQyNDk4Ml0sIFsxMjguMDUyMjE1LCA0MS45OTQyODVdLCBbMTI4LjIwODQzMywgNDEuNDY2NzcyXSwgWzEyNy4zNDM3ODMsIDQxLjUwMzE1Ml0sIFsxMjYuODY5MDgzLCA0MS44MTY1NjldLCBbMTI2LjE4MjA0NSwgNDEuMTA3MzM2XSwgWzEyNS4wNzk5NDIsIDQwLjU2OTgyNF0sIFsxMjQuMjY1NjI1LCAzOS45Mjg0OTNdLCBbMTIyLjg2NzU3LCAzOS42Mzc3ODhdLCBbMTIyLjEzMTM4OCwgMzkuMTcwNDUyXSwgWzEyMS4wNTQ1NTQsIDM4Ljg5NzQ3MV0sIFsxMjEuNTg1OTk1LCAzOS4zNjA4NTRdLCBbMTIxLjM3Njc1NywgMzkuNzUwMjYxXSwgWzEyMi4xNjg1OTUsIDQwLjQyMjQ0M10sIFsxMjEuNjQwMzU5LCA0MC45NDYzOV0sIFsxMjAuNzY4NjI5LCA0MC41OTMzODhdLCBbMTE5LjYzOTYwMiwgMzkuODk4MDU2XSwgWzExOS4wMjM0NjQsIDM5LjI1MjMzM10sIFsxMTguMDQyNzQ5LCAzOS4yMDQyNzRdLCBbMTE3LjUzMjcwMiwgMzguNzM3NjM2XSwgWzExOC4wNTk2OTksIDM4LjA2MTQ3Nl0sIFsxMTguODc4MTUsIDM3Ljg5NzMyNV0sIFsxMTguOTExNjM2LCAzNy40NDg0NjRdLCBbMTE5LjcwMjgwMiwgMzcuMTU2Mzg5XSwgWzEyMC44MjM0NTcsIDM3Ljg3MDQyOF0sIFsxMjEuNzExMjU5LCAzNy40ODExMjNdLCBbMTIyLjM1NzkzNywgMzcuNDU0NDg0XSwgWzEyMi41MTk5OTUsIDM2LjkzMDYxNF0sIFsxMjEuMTA0MTY0LCAzNi42NTEzMjldLCBbMTIwLjYzNzAwOSwgMzYuMTExNDRdLCBbMTE5LjY2NDU2MiwgMzUuNjA5NzkxXSwgWzExOS4xNTEyMDgsIDM0LjkwOTg1OV0sIFsxMjAuMjI3NTI1LCAzNC4zNjAzMzJdLCBbMTIwLjYyMDM2OSwgMzMuMzc2NzIzXSwgWzEyMS4yMjkwMTQsIDMyLjQ2MDMxOV0sIFsxMjEuOTA4MTQ2LCAzMS42OTIxNzRdLCBbMTIxLjg5MTkxOSwgMzAuOTQ5MzUyXSwgWzEyMS4yNjQyNTcsIDMwLjY3NjI2N10sIFsxMjEuNTAzNTE5LCAzMC4xNDI5MTVdLCBbMTIyLjA5MjExNCwgMjkuODMyNTJdLCBbMTIxLjkzODQyOCwgMjkuMDE4MDIyXSwgWzEyMS42ODQ0MzksIDI4LjIyNTUxM10sIFsxMjEuMTI1NjYxLCAyOC4xMzU2NzNdLCBbMTIwLjM5NTQ3MywgMjcuMDUzMjA3XSwgWzExOS41ODU0OTcsIDI1Ljc0MDc4MV0sIFsxMTguNjU2ODcxLCAyNC41NDczOTFdLCBbMTE3LjI4MTYwNiwgMjMuNjI0NTAxXSwgWzExNS44OTA3MzUsIDIyLjc4Mjg3M10sIFsxMTQuNzYzODI3LCAyMi42NjgwNzRdLCBbMTE0LjE1MjU0NywgMjIuMjIzNzZdLCBbMTEzLjgwNjc4LCAyMi41NDgzNF0sIFsxMTMuMjQxMDc4LCAyMi4wNTEzNjddLCBbMTExLjg0MzU5MiwgMjEuNTUwNDk0XSwgWzExMC43ODU0NjYsIDIxLjM5NzE0NF0sIFsxMTAuNDQ0MDM5LCAyMC4zNDEwMzNdLCBbMTA5Ljg4OTg2MSwgMjAuMjgyNDU3XSwgWzEwOS42Mjc2NTUsIDIxLjAwODIyN10sIFsxMDkuODY0NDg4LCAyMS4zOTUwNTFdLCBbMTA4LjUyMjgxMywgMjEuNzE1MjEyXSwgWzEwOC4wNTAxOCwgMjEuNTUyMzhdLCBbMTA3LjA0MzQyLCAyMS44MTE4OTldLCBbMTA2LjU2NzI3MywgMjIuMjE4MjA1XSwgWzEwNi43MjU0MDMsIDIyLjc5NDI2OF0sIFsxMDUuODExMjQ3LCAyMi45NzY4OTJdLCBbMTA1LjMyOTIwOSwgMjMuMzUyMDYzXSwgWzEwNC40NzY4NTgsIDIyLjgxOTE1XSwgWzEwMy41MDQ1MTUsIDIyLjcwMzc1N10sIFsxMDIuNzA2OTkyLCAyMi43MDg3OTVdLCBbMTAyLjE3MDQzNiwgMjIuNDY0NzUzXSwgWzEwMS42NTIwMTgsIDIyLjMxODE5OV0sIFsxMDEuODAzMTIsIDIxLjE3NDM2N10sIFsxMDEuMjcwMDI2LCAyMS4yMDE2NTJdLCBbMTAxLjE4MDAwNSwgMjEuNDM2NTczXSwgWzEwMS4xNTAwMzMsIDIxLjg0OTk4NF0sIFsxMDAuNDE2NTM4LCAyMS41NTg4MzldLCBbOTkuOTgzNDg5LCAyMS43NDI5MzddLCBbOTkuMjQwODk5LCAyMi4xMTgzMTRdLCBbOTkuNTMxOTkyLCAyMi45NDkwMzldLCBbOTguODk4NzQ5LCAyMy4xNDI3MjJdLCBbOTguNjYwMjYyLCAyNC4wNjMyODZdLCBbOTcuNjA0NzIsIDIzLjg5NzQwNV0sIFs5Ny43MjQ2MDksIDI1LjA4MzYzN10sIFs5OC42NzE4MzgsIDI1LjkxODcwM10sIFs5OC43MTIwOTQsIDI2Ljc0MzUzNl0sIFs5OC42ODI2OSwgMjcuNTA4ODEyXSwgWzk4LjI0NjIzMSwgMjcuNzQ3MjIxXSwgWzk3LjkxMTk4OCwgMjguMzM1OTQ1XSwgWzk3LjMyNzExNCwgMjguMjYxNTgzXSwgWzk2LjI0ODgzMywgMjguNDExMDMxXSwgWzk2LjU4NjU5MSwgMjguODMwOThdLCBbOTYuMTE3Njc5LCAyOS40NTI4MDJdLCBbOTUuNDA0ODAyLCAyOS4wMzE3MTddLCBbOTQuNTY1OTksIDI5LjI3NzQzOF0sIFs5My40MTMzNDgsIDI4LjY0MDYyOV0sIFs5Mi41MDMxMTksIDI3Ljg5Njg3Nl0sIFs5MS42OTY2NTcsIDI3Ljc3MTc0Ml0sIFs5MS4yNTg4NTQsIDI4LjA0MDYxNF0sIFs5MC43MzA1MTQsIDI4LjA2NDk1NF0sIFs5MC4wMTU4MjksIDI4LjI5NjQzOV0sIFs4OS40NzU4MSwgMjguMDQyNzU5XSwgWzg4LjgxNDI0OCwgMjcuMjk5MzE2XSwgWzg4LjczMDMyNiwgMjguMDg2ODY1XSwgWzg4LjEyMDQ0MSwgMjcuODc2NTQyXSwgWzg2Ljk1NDUxNywgMjcuOTc0MjYyXSwgWzg1LjgyMzMyLCAyOC4yMDM1NzZdLCBbODUuMDExNjM4LCAyOC42NDI3NzRdLCBbODQuMjM0NTgsIDI4LjgzOTg5NF0sIFs4My44OTg5OTMsIDI5LjMyMDIyNl0sIFs4My4zMzcxMTUsIDI5LjQ2MzczMl0sIFs4Mi4zMjc1MTMsIDMwLjExNTI2OF0sIFs4MS41MjU4MDQsIDMwLjQyMjcxN10sIFs4MS4xMTEyNTYsIDMwLjE4MzQ4MV0sIFs3OS43MjEzNjcsIDMwLjg4MjcxNV0sIFs3OC43Mzg4OTQsIDMxLjUxNTkwNl0sIFs3OC40NTg0NDYsIDMyLjYxODE2NF0sIFs3OS4xNzYxMjksIDMyLjQ4Mzc4XSwgWzc5LjIwODg5MiwgMzIuOTk0Mzk1XSwgWzc4LjgxMTA4NiwgMzMuNTA2MTk4XSwgWzc4LjkxMjI2OSwgMzQuMzIxOTM2XSwgWzc3LjgzNzQ1MSwgMzUuNDk0MDFdLCBbNzYuMTkyODQ4LCAzNS44OTg0MDNdLCBbNzUuODk2ODk3LCAzNi42NjY4MDZdLCBbNzUuMTU4MDI4LCAzNy4xMzMwMzFdLCBbNzQuOTgwMDAyLCAzNy40MTk5OV0sIFs3NC44Mjk5ODYsIDM3Ljk5MDAwN10sIFs3NC44NjQ4MTYsIDM4LjM3ODg0Nl0sIFs3NC4yNTc1MTQsIDM4LjYwNjUwN10sIFs3My45Mjg4NTIsIDM4LjUwNTgxNV0sIFs3My42NzUzNzksIDM5LjQzMTIzN10sIFs3My45NjAwMTMsIDM5LjY2MDAwOF0sIFs3My44MjIyNDQsIDM5Ljg5Mzk3M10sIFs3NC43NzY4NjIsIDQwLjM2NjQyNV0sIFs3NS40Njc4MjgsIDQwLjU2MjA3Ml0sIFs3Ni41MjYzNjgsIDQwLjQyNzk0Nl0sIFs3Ni45MDQ0ODQsIDQxLjA2NjQ4Nl0sIFs3OC4xODcxOTcsIDQxLjE4NTMxNl0sIFs3OC41NDM2NjEsIDQxLjU4MjI0M10sIFs4MC4xMTk0MywgNDIuMTIzOTQxXSwgWzgwLjI1OTk5LCA0Mi4zNDk5OTldLCBbODAuMTgwMTUsIDQyLjkyMDA2OF0sIFs4MC44NjYyMDYsIDQzLjE4MDM2Ml0sIFs3OS45NjYxMDYsIDQ0LjkxNzUxN10sIFs4MS45NDcwNzEsIDQ1LjMxNzAyN10sIFs4Mi40NTg5MjYsIDQ1LjUzOTY1XSwgWzgzLjE4MDQ4NCwgNDcuMzMwMDMxXSwgWzg1LjE2NDI5LCA0Ny4wMDA5NTZdLCBbODUuNzIwNDg0LCA0Ny40NTI5NjldLCBbODUuNzY4MjMzLCA0OC40NTU3NTFdLCBbODYuNTk4Nzc2LCA0OC41NDkxODJdLCBbODcuMzU5OTcsIDQ5LjIxNDk4MV0sIFs4Ny43NTEyNjQsIDQ5LjI5NzE5OF0sIFs4OC4wMTM4MzIsIDQ4LjU5OTQ2M10sIFs4OC44NTQyOTgsIDQ4LjA2OTA4Ml0sIFs5MC4yODA4MjYsIDQ3LjY5MzU0OV0sIFs5MC45NzA4MDksIDQ2Ljg4ODE0Nl0sIFs5MC41ODU3NjgsIDQ1LjcxOTcxNl0sIFs5MC45NDU1NCwgNDUuMjg2MDczXSwgWzkyLjEzMzg5MSwgNDUuMTE1MDc2XSwgWzkzLjQ4MDczNCwgNDQuOTc1NDcyXSwgWzk0LjY4ODkyOSwgNDQuMzUyMzMyXSwgWzk1LjMwNjg3NSwgNDQuMjQxMzMxXSwgWzk1Ljc2MjQ1NSwgNDMuMzE5NDQ5XSwgWzk2LjM0OTM5NiwgNDIuNzI1NjM1XSwgWzk3LjQ1MTc1NywgNDIuNzQ4ODldLCBbOTkuNTE1ODE3LCA0Mi41MjQ2OTFdLCBbMTAwLjg0NTg2NiwgNDIuNjYzODA0XSwgWzEwMS44MzMwNCwgNDIuNTE0ODczXSwgWzEwMy4zMTIyNzgsIDQxLjkwNzQ2OF0sIFsxMDQuNTIyMjgyLCA0MS45MDgzNDddLCBbMTA0Ljk2NDk5NCwgNDEuNTk3NDFdLCBbMTA2LjEyOTMxNiwgNDIuMTM0MzI4XSwgWzEwNy43NDQ3NzMsIDQyLjQ4MTUxNl0sIFsxMDkuMjQzNTk2LCA0Mi41MTk0NDZdLCBbMTEwLjQxMjEwMywgNDIuODcxMjM0XSwgWzExMS4xMjk2ODIsIDQzLjQwNjgzNF0sIFsxMTEuODI5NTg4LCA0My43NDMxMThdLCBbMTExLjY2NzczNywgNDQuMDczMTc2XSwgWzExMS4zNDgzNzcsIDQ0LjQ1NzQ0Ml0sIFsxMTEuODczMzA2LCA0NS4xMDIwNzldLCBbMTEyLjQzNjA2MiwgNDUuMDExNjQ2XSwgWzExMy40NjM5MDcsIDQ0LjgwODg5M10sIFsxMTQuNDYwMzMyLCA0NS4zMzk4MTddLCBbMTE1Ljk4NTA5NiwgNDUuNzI3MjM1XSwgWzExNi43MTc4NjgsIDQ2LjM4ODIwMl0sIFsxMTcuNDIxNzAxLCA0Ni42NzI3MzNdLCBbMTE4Ljg3NDMyNiwgNDYuODA1NDEyXSwgWzExOS42NjMyNywgNDYuNjkyNjhdLCBbMTE5Ljc3MjgyNCwgNDcuMDQ4MDU5XSwgWzExOC44NjY1NzQsIDQ3Ljc0NzA2XSwgWzExOC4wNjQxNDMsIDQ4LjA2NjczXSwgWzExNy4yOTU1MDcsIDQ3LjY5NzcwOV0sIFsxMTYuMzA4OTUzLCA0Ny44NTM0MV0sIFsxMTUuNzQyODM3LCA0Ny43MjY1NDVdLCBbMTE1LjQ4NTI4MiwgNDguMTM1MzgzXSwgWzExNi4xOTE4MDIsIDQ5LjEzNDU5OF0sIFsxMTYuNjc4ODAxLCA0OS44ODg1MzFdLCBbMTE3Ljg3OTI0NCwgNDkuNTEwOTgzXSwgWzExOS4yODg0NjEsIDUwLjE0Mjg4M10sIFsxMTkuMjc5MzY2LCA1MC41ODI5MDhdLCBbMTIwLjE4MjA1LCA1MS42NDM1NjZdLCBbMTIwLjczODE5MSwgNTEuOTY0MTE1XSwgWzEyMC43MjU3ODksIDUyLjUxNjIyNl0sIFsxMjAuMTc3MDg5LCA1Mi43NTM4ODZdLCBbMTIxLjAwMzA4NSwgNTMuMjUxNDAxXSwgWzEyMi4yNDU3NDgsIDUzLjQzMTcyNl0sIFsxMjMuNTcxNTA3LCA1My40NTg4MDRdLCBbMTI1LjA2ODIxMSwgNTMuMTYxMDQ1XSwgWzEyNS45NDYzNDksIDUyLjc5Mjc5OV0sIFsxMjYuNTY0Mzk5LCA1MS43ODQyNTVdLCBbMTI2LjkzOTE1NywgNTEuMzUzODk0XSwgWzEyNy4yODc0NTYsIDUwLjczOTc5N10sIFsxMjcuNjU3NDA3LCA0OS43NjAyN11dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiQ0hOIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJDaGluYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNiZDAwMjYiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTIuODU2MTI1LCA0Ljk5NDQ3Nl0sIFstMy4zMTEwODQsIDQuOTg0Mjk2XSwgWy00LjAwODgyLCA1LjE3OTgxM10sIFstNC42NDk5MTcsIDUuMTY4MjY0XSwgWy01LjgzNDQ5NiwgNC45OTM3MDFdLCBbLTYuNTI4NzY5LCA0LjcwNTA4OF0sIFstNy41MTg5NDEsIDQuMzM4Mjg4XSwgWy03LjcxMjE1OSwgNC4zNjQ1NjZdLCBbLTcuNjM1MzY4LCA1LjE4ODE1OV0sIFstNy41Mzk3MTUsIDUuMzEzMzQ1XSwgWy03LjU3MDE1MywgNS43MDczNTJdLCBbLTcuOTkzNjkzLCA2LjEyNjE5XSwgWy04LjMxMTM0OCwgNi4xOTMwMzNdLCBbLTguNjAyODgsIDYuNDY3NTY0XSwgWy04LjM4NTQ1MiwgNi45MTE4MDFdLCBbLTguNDg1NDQ2LCA3LjM5NTIwOF0sIFstOC40MzkyOTgsIDcuNjg2MDQzXSwgWy04LjI4MDcwMywgNy42ODcxOF0sIFstOC4yMjE3OTIsIDguMTIzMzI5XSwgWy04LjI5OTA0OSwgOC4zMTY0NDRdLCBbLTguMjAzNDk5LCA4LjQ1NTQ1M10sIFstNy44MzIxLCA4LjU3NTcwNF0sIFstOC4wNzkxMTQsIDkuMzc2MjI0XSwgWy04LjMwOTYxNiwgOS43ODk1MzJdLCBbLTguMjI5MzM3LCAxMC4xMjkwMl0sIFstOC4wMjk5NDQsIDEwLjIwNjUzNV0sIFstNy44OTk1OSwgMTAuMjk3MzgyXSwgWy03LjYyMjc1OSwgMTAuMTQ3MjM2XSwgWy02Ljg1MDUwNywgMTAuMTM4OTk0XSwgWy02LjY2NjQ2MSwgMTAuNDMwODExXSwgWy02LjQ5Mzk2NSwgMTAuNDExMzAzXSwgWy02LjIwNTIyMywgMTAuNTI0MDYxXSwgWy02LjA1MDQ1MiwgMTAuMDk2MzYxXSwgWy01LjgxNjkyNiwgMTAuMjIyNTU1XSwgWy01LjQwNDM0MiwgMTAuMzcwNzM3XSwgWy00Ljk1NDY1MywgMTAuMTUyNzE0XSwgWy00Ljc3OTg4NCwgOS44MjE5ODVdLCBbLTQuMzMwMjQ3LCA5LjYxMDgzNV0sIFstMy45ODA0NDksIDkuODYyMzQ0XSwgWy0zLjUxMTg5OSwgOS45MDAzMjZdLCBbLTIuODI3NDk2LCA5LjY0MjQ2MV0sIFstMi41NjIxOSwgOC4yMTk2MjhdLCBbLTIuOTgzNTg1LCA3LjM3OTcwNV0sIFstMy4yNDQzNywgNi4yNTA0NzJdLCBbLTIuODEwNzAxLCA1LjM4OTA1MV0sIFstMi44NTYxMjUsIDQuOTk0NDc2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJDSVYiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkl2b3J5IENvYXN0IiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiYmxhY2siLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMTMuMDc1ODIyLCAyLjI2NzA5N10sIFsxMi45NTEzMzQsIDIuMzIxNjE2XSwgWzEyLjM1OTM4LCAyLjE5MjgxMl0sIFsxMS43NTE2NjUsIDIuMzI2NzU4XSwgWzExLjI3NjQ0OSwgMi4yNjEwNTFdLCBbOS42NDkxNTgsIDIuMjgzODY2XSwgWzkuNzk1MTk2LCAzLjA3MzQwNF0sIFs5LjQwNDM2NywgMy43MzQ1MjddLCBbOC45NDgxMTYsIDMuOTA0MTI5XSwgWzguNzQ0OTI0LCA0LjM1MjIxNV0sIFs4LjQ4ODgxNiwgNC40OTU2MTddLCBbOC41MDAyODgsIDQuNzcxOTgzXSwgWzguNzU3NTMzLCA1LjQ3OTY2Nl0sIFs5LjIzMzE2MywgNi40NDQ0OTFdLCBbOS41MjI3MDYsIDYuNDUzNDgyXSwgWzEwLjExODI3NywgNy4wMzg3N10sIFsxMC40OTczNzUsIDcuMDU1MzU4XSwgWzExLjA1ODc4OCwgNi42NDQ0MjddLCBbMTEuNzQ1Nzc0LCA2Ljk4MTM4M10sIFsxMS44MzkzMDksIDcuMzk3MDQyXSwgWzEyLjA2Mzk0NiwgNy43OTk4MDhdLCBbMTIuMjE4ODcyLCA4LjMwNTgyNF0sIFsxMi43NTM2NzIsIDguNzE3NzYzXSwgWzEyLjk1NTQ2OCwgOS40MTc3NzJdLCBbMTMuMTY3NiwgOS42NDA2MjZdLCBbMTMuMzA4Njc2LCAxMC4xNjAzNjJdLCBbMTMuNTcyOTUsIDEwLjc5ODU2Nl0sIFsxNC40MTUzNzksIDExLjU3MjM2OV0sIFsxNC40NjgxOTIsIDExLjkwNDc1Ml0sIFsxNC41NzcxNzgsIDEyLjA4NTM2MV0sIFsxNC4xODEzMzYsIDEyLjQ4MzY1N10sIFsxNC4yMTM1MzEsIDEyLjgwMjAzNV0sIFsxNC40OTU3ODcsIDEyLjg1OTM5Nl0sIFsxNC44OTMzODYsIDEyLjIxOTA0OF0sIFsxNC45NjAxNTIsIDExLjU1NTU3NF0sIFsxNC45MjM1NjUsIDEwLjg5MTMyNV0sIFsxNS40Njc4NzMsIDkuOTgyMzM3XSwgWzE0LjkwOTM1NCwgOS45OTIxMjldLCBbMTQuNjI3MjAxLCA5LjkyMDkxOV0sIFsxNC4xNzE0NjYsIDEwLjAyMTM3OF0sIFsxMy45NTQyMTgsIDkuNTQ5NDk1XSwgWzE0LjU0NDQ2NywgOC45NjU4NjFdLCBbMTQuOTc5OTk2LCA4Ljc5NjEwNF0sIFsxNS4xMjA4NjYsIDguMzgyMTVdLCBbMTUuNDM2MDkyLCA3LjY5MjgxMl0sIFsxNS4yNzk0NiwgNy40MjE5MjVdLCBbMTQuNzc2NTQ1LCA2LjQwODQ5OF0sIFsxNC41MzY1NiwgNi4yMjY5NTldLCBbMTQuNDU5NDA3LCA1LjQ1MTc2MV0sIFsxNC41NTg5MzYsIDUuMDMwNTk4XSwgWzE0LjQ3ODM3MiwgNC43MzI2MDVdLCBbMTQuOTUwOTUzLCA0LjIxMDM4OV0sIFsxNS4wMzYyMiwgMy44NTEzNjddLCBbMTUuNDA1Mzk2LCAzLjMzNTMwMV0sIFsxNS44NjI3MzIsIDMuMDEzNTM3XSwgWzE1LjkwNzM4MSwgMi41NTczODldLCBbMTYuMDEyODUyLCAyLjI2NzY0XSwgWzE1Ljk0MDkxOSwgMS43Mjc2NzNdLCBbMTUuMTQ2MzQyLCAxLjk2NDAxNV0sIFsxNC4zMzc4MTMsIDIuMjI3ODc1XSwgWzEzLjA3NTgyMiwgMi4yNjcwOTddXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkNNUiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQ2FtZXJvb24iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzMwLjgzMzg2LCAzLjUwOTE2Nl0sIFszMC43NzMzNDcsIDIuMzM5ODgzXSwgWzMxLjE3NDE0OSwgMi4yMDQ0NjVdLCBbMzAuODUyNjcsIDEuODQ5Mzk2XSwgWzMwLjQ2ODUwOCwgMS41ODM4MDVdLCBbMzAuMDg2MTU0LCAxLjA2MjMxM10sIFsyOS44NzU3NzksIDAuNTk3MzhdLCBbMjkuODE5NTAzLCAtMC4yMDUzMV0sIFsyOS41ODc4MzgsIC0wLjU4NzQwNl0sIFsyOS41Nzk0NjYsIC0xLjM0MTMxM10sIFsyOS4yOTE4ODcsIC0xLjYyMDA1Nl0sIFsyOS4yNTQ4MzUsIC0yLjIxNTExXSwgWzI5LjExNzQ3OSwgLTIuMjkyMjExXSwgWzI5LjAyNDkyNiwgLTIuODM5MjU4XSwgWzI5LjI3NjM4NCwgLTMuMjkzOTA3XSwgWzI5LjMzOTk5OCwgLTQuNDk5OTgzXSwgWzI5LjUxOTk4NywgLTUuNDE5OTc5XSwgWzI5LjQxOTk5MywgLTUuOTM5OTk5XSwgWzI5LjYyMDAzMiwgLTYuNTIwMDE1XSwgWzMwLjE5OTk5NywgLTcuMDc5OTgxXSwgWzMwLjc0MDAxNSwgLTguMzQwMDA3XSwgWzMwLjM0NjA4NiwgLTguMjM4MjU3XSwgWzI5LjAwMjkxMiwgLTguNDA3MDMyXSwgWzI4LjczNDg2NywgLTguNTI2NTU5XSwgWzI4LjQ0OTg3MSwgLTkuMTY0OTE4XSwgWzI4LjY3MzY4MiwgLTkuNjA1OTI1XSwgWzI4LjQ5NjA3LCAtMTAuNzg5ODg0XSwgWzI4LjM3MjI1MywgLTExLjc5MzY0N10sIFsyOC42NDI0MTcsIC0xMS45NzE1NjldLCBbMjkuMzQxNTQ4LCAtMTIuMzYwNzQ0XSwgWzI5LjYxNjAwMSwgLTEyLjE3ODg5NV0sIFsyOS42OTk2MTQsIC0xMy4yNTcyMjddLCBbMjguOTM0Mjg2LCAtMTMuMjQ4OTU4XSwgWzI4LjUyMzU2MiwgLTEyLjY5ODYwNF0sIFsyOC4xNTUxMDksIC0xMi4yNzI0ODFdLCBbMjcuMzg4Nzk5LCAtMTIuMTMyNzQ3XSwgWzI3LjE2NDQyLCAtMTEuNjA4NzQ4XSwgWzI2LjU1MzA4OCwgLTExLjkyNDQ0XSwgWzI1Ljc1MjMxLCAtMTEuNzg0OTY1XSwgWzI1LjQxODExOCwgLTExLjMzMDkzNl0sIFsyNC43ODMxNywgLTExLjIzODY5NF0sIFsyNC4zMTQ1MTYsIC0xMS4yNjI4MjZdLCBbMjQuMjU3MTU1LCAtMTAuOTUxOTkzXSwgWzIzLjkxMjIxNSwgLTEwLjkyNjgyNl0sIFsyMy40NTY3OTEsIC0xMC44Njc4NjNdLCBbMjIuODM3MzQ1LCAtMTEuMDE3NjIyXSwgWzIyLjQwMjc5OCwgLTEwLjk5MzA3NV0sIFsyMi4xNTUyNjgsIC0xMS4wODQ4MDFdLCBbMjIuMjA4NzUzLCAtOS44OTQ3OTZdLCBbMjEuODc1MTgyLCAtOS41MjM3MDhdLCBbMjEuODAxODAxLCAtOC45MDg3MDddLCBbMjEuOTQ5MTMxLCAtOC4zMDU5MDFdLCBbMjEuNzQ2NDU2LCAtNy45MjAwODVdLCBbMjEuNzI4MTExLCAtNy4yOTA4NzJdLCBbMjAuNTE0NzQ4LCAtNy4yOTk2MDZdLCBbMjAuNjAxODIzLCAtNi45MzkzMThdLCBbMjAuMDkxNjIyLCAtNi45NDMwOV0sIFsyMC4wMzc3MjMsIC03LjExNjM2MV0sIFsxOS40MTc1MDIsIC03LjE1NTQyOV0sIFsxOS4xNjY2MTMsIC03LjczODE4NF0sIFsxOS4wMTY3NTIsIC03Ljk4ODI0Nl0sIFsxOC40NjQxNzYsIC03Ljg0NzAxNF0sIFsxOC4xMzQyMjIsIC03Ljk4NzY3OF0sIFsxNy40NzI5NywgLTguMDY4NTUxXSwgWzE3LjA4OTk5NiwgLTcuNTQ1Njg5XSwgWzE2Ljg2MDE5MSwgLTcuMjIyMjk4XSwgWzE2LjU3MzE4LCAtNi42MjI2NDVdLCBbMTYuMzI2NTI4LCAtNS44Nzc0N10sIFsxMy4zNzU1OTcsIC01Ljg2NDI0MV0sIFsxMy4wMjQ4NjksIC01Ljk4NDM4OV0sIFsxMi43MzUxNzEsIC01Ljk2NTY4Ml0sIFsxMi4zMjI0MzIsIC02LjEwMDA5Ml0sIFsxMi4xODIzMzcsIC01Ljc4OTkzMV0sIFsxMi40MzY2ODgsIC01LjY4NDMwNF0sIFsxMi40NjgwMDQsIC01LjI0ODM2Ml0sIFsxMi42MzE2MTIsIC00Ljk5MTI3MV0sIFsxMi45OTU1MTcsIC00Ljc4MTEwM10sIFsxMy4yNTgyNCwgLTQuODgyOTU3XSwgWzEzLjYwMDIzNSwgLTQuNTAwMTM4XSwgWzE0LjE0NDk1NiwgLTQuNTEwMDA5XSwgWzE0LjIwOTAzNSwgLTQuNzkzMDkyXSwgWzE0LjU4MjYwNCwgLTQuOTcwMjM5XSwgWzE1LjE3MDk5MiwgLTQuMzQzNTA3XSwgWzE1Ljc1MzU0LCAtMy44NTUxNjVdLCBbMTYuMDA2MjksIC0zLjUzNTEzM10sIFsxNS45NzI4MDMsIC0yLjcxMjM5Ml0sIFsxNi40MDcwOTIsIC0xLjc0MDkyN10sIFsxNi44NjUzMDcsIC0xLjIyNTgxNl0sIFsxNy41MjM3MTYsIC0wLjc0MzgzXSwgWzE3LjYzODY0NSwgLTAuNDI0ODMyXSwgWzE3LjY2MzU1MywgLTAuMDU4MDg0XSwgWzE3LjgyNjU0LCAwLjI4ODkyM10sIFsxNy43NzQxOTIsIDAuODU1NjU5XSwgWzE3Ljg5ODgzNSwgMS43NDE4MzJdLCBbMTguMDk0Mjc2LCAyLjM2NTcyMl0sIFsxOC4zOTM3OTIsIDIuOTAwNDQzXSwgWzE4LjQ1MzA2NSwgMy41MDQzODZdLCBbMTguNTQyOTgyLCA0LjIwMTc4NV0sIFsxOC45MzIzMTIsIDQuNzA5NTA2XSwgWzE5LjQ2Nzc4NCwgNS4wMzE1MjhdLCBbMjAuMjkwNjc5LCA0LjY5MTY3OF0sIFsyMC45Mjc1OTEsIDQuMzIyNzg2XSwgWzIxLjY1OTEyMywgNC4yMjQzNDJdLCBbMjIuNDA1MTI0LCA0LjAyOTE2XSwgWzIyLjcwNDEyNCwgNC42MzMwNTFdLCBbMjIuODQxNDgsIDQuNzEwMTI2XSwgWzIzLjI5NzIxNCwgNC42MDk2OTNdLCBbMjQuNDEwNTMxLCA1LjEwODc4NF0sIFsyNC44MDUwMjksIDQuODk3MjQ3XSwgWzI1LjEyODgzMywgNC45MjcyNDVdLCBbMjUuMjc4Nzk4LCA1LjE3MDQwOF0sIFsyNS42NTA0NTUsIDUuMjU2MDg4XSwgWzI2LjQwMjc2MSwgNS4xNTA4NzVdLCBbMjcuMDQ0MDY1LCA1LjEyNzg1M10sIFsyNy4zNzQyMjYsIDUuMjMzOTQ0XSwgWzI3Ljk3OTk3NywgNC40MDg0MTNdLCBbMjguNDI4OTk0LCA0LjI4NzE1NV0sIFsyOC42OTY2NzgsIDQuNDU1MDc3XSwgWzI5LjE1OTA3OCwgNC4zODkyNjddLCBbMjkuNzE1OTk1LCA0LjYwMDgwNV0sIFsyOS45NTM1LCA0LjE3MzY5OV0sIFszMC44MzM4NiwgMy41MDkxNjZdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkNPRCIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRGVtb2NyYXRpYyBSZXB1YmxpYyBvZiB0aGUgQ29uZ28iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzEyLjk5NTUxNywgLTQuNzgxMTAzXSwgWzEyLjYyMDc2LCAtNC40MzgwMjNdLCBbMTIuMzE4NjA4LCAtNC42MDYyM10sIFsxMS45MTQ5NjMsIC01LjAzNzk4N10sIFsxMS4wOTM3NzMsIC0zLjk3ODgyN10sIFsxMS44NTUxMjIsIC0zLjQyNjg3MV0sIFsxMS40NzgwMzksIC0yLjc2NTYxOV0sIFsxMS44MjA5NjQsIC0yLjUxNDE2MV0sIFsxMi40OTU3MDMsIC0yLjM5MTY4OF0sIFsxMi41NzUyODQsIC0xLjk0ODUxMV0sIFsxMy4xMDk2MTksIC0yLjQyODc0XSwgWzEzLjk5MjQwNywgLTIuNDcwODA1XSwgWzE0LjI5OTIxLCAtMS45OTgyNzZdLCBbMTQuNDI1NDU2LCAtMS4zMzM0MDddLCBbMTQuMzE2NDE4LCAtMC41NTI2MjddLCBbMTMuODQzMzIxLCAwLjAzODc1OF0sIFsxNC4yNzYyNjYsIDEuMTk2OTNdLCBbMTQuMDI2NjY5LCAxLjM5NTY3N10sIFsxMy4yODI2MzEsIDEuMzE0MTg0XSwgWzEzLjAwMzExNCwgMS44MzA4OTZdLCBbMTMuMDc1ODIyLCAyLjI2NzA5N10sIFsxNC4zMzc4MTMsIDIuMjI3ODc1XSwgWzE1LjE0NjM0MiwgMS45NjQwMTVdLCBbMTUuOTQwOTE5LCAxLjcyNzY3M10sIFsxNi4wMTI4NTIsIDIuMjY3NjRdLCBbMTYuNTM3MDU4LCAzLjE5ODI1NV0sIFsxNy4xMzMwNDIsIDMuNzI4MTk3XSwgWzE3LjgwOTksIDMuNTYwMTk2XSwgWzE4LjQ1MzA2NSwgMy41MDQzODZdLCBbMTguMzkzNzkyLCAyLjkwMDQ0M10sIFsxOC4wOTQyNzYsIDIuMzY1NzIyXSwgWzE3Ljg5ODgzNSwgMS43NDE4MzJdLCBbMTcuNzc0MTkyLCAwLjg1NTY1OV0sIFsxNy44MjY1NCwgMC4yODg5MjNdLCBbMTcuNjYzNTUzLCAtMC4wNTgwODRdLCBbMTcuNjM4NjQ1LCAtMC40MjQ4MzJdLCBbMTcuNTIzNzE2LCAtMC43NDM4M10sIFsxNi44NjUzMDcsIC0xLjIyNTgxNl0sIFsxNi40MDcwOTIsIC0xLjc0MDkyN10sIFsxNS45NzI4MDMsIC0yLjcxMjM5Ml0sIFsxNi4wMDYyOSwgLTMuNTM1MTMzXSwgWzE1Ljc1MzU0LCAtMy44NTUxNjVdLCBbMTUuMTcwOTkyLCAtNC4zNDM1MDddLCBbMTQuNTgyNjA0LCAtNC45NzAyMzldLCBbMTQuMjA5MDM1LCAtNC43OTMwOTJdLCBbMTQuMTQ0OTU2LCAtNC41MTAwMDldLCBbMTMuNjAwMjM1LCAtNC41MDAxMzhdLCBbMTMuMjU4MjQsIC00Ljg4Mjk1N10sIFsxMi45OTU1MTcsIC00Ljc4MTEwM11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQ09HIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJSZXB1YmxpYyBvZiB0aGUgQ29uZ28iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICJibGFjayIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stNzUuMzczMjIzLCAtMC4xNTIwMzJdLCBbLTc1LjgwMTQ2NiwgMC4wODQ4MDFdLCBbLTc2LjI5MjMxNCwgMC40MTYwNDddLCBbLTc2LjU3NjM4LCAwLjI1NjkzNl0sIFstNzcuNDI0OTg0LCAwLjM5NTY4N10sIFstNzcuNjY4NjEzLCAwLjgyNTg5M10sIFstNzcuODU1MDYxLCAwLjgwOTkyNV0sIFstNzguODU1MjU5LCAxLjM4MDkyNF0sIFstNzguOTkwOTM1LCAxLjY5MTM3XSwgWy03OC42MTc4MzEsIDEuNzY2NDA0XSwgWy03OC42NjIxMTgsIDIuMjY3MzU1XSwgWy03OC40Mjc2MSwgMi42Mjk1NTZdLCBbLTc3LjkzMTU0MywgMi42OTY2MDZdLCBbLTc3LjUxMDQzMSwgMy4zMjUwMTddLCBbLTc3LjEyNzY5LCAzLjg0OTYzNl0sIFstNzcuNDk2MjcyLCA0LjA4NzYwNl0sIFstNzcuMzA3NjAxLCA0LjY2Nzk4NF0sIFstNzcuNTMzMjIxLCA1LjU4MjgxMl0sIFstNzcuMzE4ODE1LCA1Ljg0NTM1NF0sIFstNzcuNDc2NjYxLCA2LjY5MTExNl0sIFstNzcuODgxNTcxLCA3LjIyMzc3MV0sIFstNzcuNzUzNDE0LCA3LjcwOTg0XSwgWy03Ny40MzExMDgsIDcuNjM4MDYxXSwgWy03Ny4yNDI1NjYsIDcuOTM1Mjc4XSwgWy03Ny40NzQ3MjMsIDguNTI0Mjg2XSwgWy03Ny4zNTMzNjEsIDguNjcwNTA1XSwgWy03Ni44MzY2NzQsIDguNjM4NzQ5XSwgWy03Ni4wODYzODQsIDkuMzM2ODIxXSwgWy03NS42NzQ2LCA5LjQ0MzI0OF0sIFstNzUuNjY0NzA0LCA5Ljc3NDAwM10sIFstNzUuNDgwNDI2LCAxMC42MTg5OV0sIFstNzQuOTA2ODk1LCAxMS4wODMwNDVdLCBbLTc0LjI3Njc1MywgMTEuMTAyMDM2XSwgWy03NC4xOTcyMjMsIDExLjMxMDQ3M10sIFstNzMuNDE0NzY0LCAxMS4yMjcwMTVdLCBbLTcyLjYyNzgzNSwgMTEuNzMxOTcyXSwgWy03Mi4yMzgxOTUsIDExLjk1NTU1XSwgWy03MS43NTQwOSwgMTIuNDM3MzAzXSwgWy03MS4zOTk4MjIsIDEyLjM3NjA0MV0sIFstNzEuMTM3NDYxLCAxMi4xMTI5ODJdLCBbLTcxLjMzMTU4NCwgMTEuNzc2Mjg0XSwgWy03MS45NzM5MjIsIDExLjYwODY3Ml0sIFstNzIuMjI3NTc1LCAxMS4xMDg3MDJdLCBbLTcyLjYxNDY1OCwgMTAuODIxOTc1XSwgWy03Mi45MDUyODYsIDEwLjQ1MDM0NF0sIFstNzMuMDI3NjA0LCA5LjczNjc3XSwgWy03My4zMDQ5NTIsIDkuMTUyXSwgWy03Mi43ODg3MywgOS4wODUwMjddLCBbLTcyLjY2MDQ5NSwgOC42MjUyODhdLCBbLTcyLjQzOTg2MiwgOC40MDUyNzVdLCBbLTcyLjM2MDkwMSwgOC4wMDI2MzhdLCBbLTcyLjQ3OTY3OSwgNy42MzI1MDZdLCBbLTcyLjQ0NDQ4NywgNy40MjM3ODVdLCBbLTcyLjE5ODM1MiwgNy4zNDA0MzFdLCBbLTcxLjk2MDE3NiwgNi45OTE2MTVdLCBbLTcwLjY3NDIzNCwgNy4wODc3ODVdLCBbLTcwLjA5MzMxMywgNi45NjAzNzZdLCBbLTY5LjM4OTQ4LCA2LjA5OTg2MV0sIFstNjguOTg1MzE5LCA2LjIwNjgwNV0sIFstNjguMjY1MDUyLCA2LjE1MzI2OF0sIFstNjcuNjk1MDg3LCA2LjI2NzMxOF0sIFstNjcuMzQxNDQsIDYuMDk1NDY4XSwgWy02Ny41MjE1MzIsIDUuNTU2ODddLCBbLTY3Ljc0NDY5NywgNS4yMjExMjldLCBbLTY3LjgyMzAxMiwgNC41MDM5MzddLCBbLTY3LjYyMTgzNiwgMy44Mzk0ODJdLCBbLTY3LjMzNzU2NCwgMy41NDIzNDJdLCBbLTY3LjMwMzE3MywgMy4zMTg0NTRdLCBbLTY3LjgwOTkzOCwgMi44MjA2NTVdLCBbLTY3LjQ0NzA5MiwgMi42MDAyODFdLCBbLTY3LjE4MTI5NCwgMi4yNTA2MzhdLCBbLTY2Ljg3NjMyNiwgMS4yNTMzNjFdLCBbLTY3LjA2NTA0OCwgMS4xMzAxMTJdLCBbLTY3LjI1OTk5OCwgMS43MTk5OTldLCBbLTY3LjUzNzgxLCAyLjAzNzE2M10sIFstNjcuODY4NTY1LCAxLjY5MjQ1NV0sIFstNjkuODE2OTczLCAxLjcxNDgwNV0sIFstNjkuODA0NTk3LCAxLjA4OTA4MV0sIFstNjkuMjE4NjM4LCAwLjk4NTY3N10sIFstNjkuMjUyNDM0LCAwLjYwMjY1MV0sIFstNjkuNDUyMzk2LCAwLjcwNjE1OV0sIFstNzAuMDE1NTY2LCAwLjU0MTQxNF0sIFstNzAuMDIwNjU2LCAtMC4xODUxNTZdLCBbLTY5LjU3NzA2NSwgLTAuNTQ5OTkyXSwgWy02OS40MjA0ODYsIC0xLjEyMjYxOV0sIFstNjkuNDQ0MTAyLCAtMS41NTYyODddLCBbLTY5Ljg5MzYzNSwgLTQuMjk4MTg3XSwgWy03MC4zOTQwNDQsIC0zLjc2NjU5MV0sIFstNzAuNjkyNjgyLCAtMy43NDI4NzJdLCBbLTcwLjA0NzcwOSwgLTIuNzI1MTU2XSwgWy03MC44MTM0NzYsIC0yLjI1Njg2NV0sIFstNzEuNDEzNjQ2LCAtMi4zNDI4MDJdLCBbLTcxLjc3NDc2MSwgLTIuMTY5NzldLCBbLTcyLjMyNTc4NywgLTIuNDM0MjE4XSwgWy03My4wNzAzOTIsIC0yLjMwODk1NF0sIFstNzMuNjU5NTA0LCAtMS4yNjA0OTFdLCBbLTc0LjEyMjM5NSwgLTEuMDAyODMzXSwgWy03NC40NDE2MDEsIC0wLjUzMDgyXSwgWy03NS4xMDY2MjUsIC0wLjA1NzIwNV0sIFstNzUuMzczMjIzLCAtMC4xNTIwMzJdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkNPTCIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQ29sb21iaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy04Mi45NjU3ODMsIDguMjI1MDI4XSwgWy04My41MDg0MzcsIDguNDQ2OTI3XSwgWy04My43MTE0NzQsIDguNjU2ODM2XSwgWy04My41OTYzMTMsIDguODMwNDQzXSwgWy04My42MzI2NDIsIDkuMDUxMzg2XSwgWy04My45MDk4ODYsIDkuMjkwODAzXSwgWy04NC4zMDM0MDIsIDkuNDg3MzU0XSwgWy04NC42NDc2NDQsIDkuNjE1NTM3XSwgWy04NC43MTMzNTEsIDkuOTA4MDUyXSwgWy04NC45NzU2NiwgMTAuMDg2NzIzXSwgWy04NC45MTEzNzUsIDkuNzk1OTkyXSwgWy04NS4xMTA5MjMsIDkuNTU3MDRdLCBbLTg1LjMzOTQ4OCwgOS44MzQ1NDJdLCBbLTg1LjY2MDc4NywgOS45MzMzNDddLCBbLTg1Ljc5NzQ0NSwgMTAuMTM0ODg2XSwgWy04NS43OTE3MDksIDEwLjQzOTMzN10sIFstODUuNjU5MzE0LCAxMC43NTQzMzFdLCBbLTg1Ljk0MTcyNSwgMTAuODk1Mjc4XSwgWy04NS43MTI1NCwgMTEuMDg4NDQ1XSwgWy04NS41NjE4NTIsIDExLjIxNzExOV0sIFstODQuOTAzMDAzLCAxMC45NTIzMDNdLCBbLTg0LjY3MzA2OSwgMTEuMDgyNjU3XSwgWy04NC4zNTU5MzEsIDEwLjk5OTIyNl0sIFstODQuMTkwMTc5LCAxMC43OTM0NV0sIFstODMuODk1MDU0LCAxMC43MjY4MzldLCBbLTgzLjY1NTYxMiwgMTAuOTM4NzY0XSwgWy04My40MDIzMiwgMTAuMzk1NDM4XSwgWy04My4wMTU2NzcsIDkuOTkyOTgyXSwgWy04Mi41NDYxOTYsIDkuNTY2MTM1XSwgWy04Mi45MzI4OTEsIDkuNDc2ODEyXSwgWy04Mi45MjcxNTUsIDkuMDc0MzNdLCBbLTgyLjcxOTE4MywgOC45MjU3MDldLCBbLTgyLjg2ODY1NywgOC44MDcyNjZdLCBbLTgyLjgyOTc3MSwgOC42MjYyOTVdLCBbLTgyLjkxMzE3NiwgOC40MjM1MTddLCBbLTgyLjk2NTc4MywgOC4yMjUwMjhdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkNSSSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQ29zdGEgUmljYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTgyLjI2ODE1MSwgMjMuMTg4NjExXSwgWy04MS40MDQ0NTcsIDIzLjExNzI3MV0sIFstODAuNjE4NzY5LCAyMy4xMDU5OF0sIFstNzkuNjc5NTI0LCAyMi43NjUzMDNdLCBbLTc5LjI4MTQ4NiwgMjIuMzk5MjAyXSwgWy03OC4zNDc0MzQsIDIyLjUxMjE2Nl0sIFstNzcuOTkzMjk2LCAyMi4yNzcxOTRdLCBbLTc3LjE0NjQyMiwgMjEuNjU3ODUxXSwgWy03Ni41MjM4MjUsIDIxLjIwNjgyXSwgWy03Ni4xOTQ2MiwgMjEuMjIwNTY1XSwgWy03NS41OTgyMjIsIDIxLjAxNjYyNF0sIFstNzUuNjcxMDYsIDIwLjczNTA5MV0sIFstNzQuOTMzODk2LCAyMC42OTM5MDVdLCBbLTc0LjE3ODAyNSwgMjAuMjg0NjI4XSwgWy03NC4yOTY2NDgsIDIwLjA1MDM3OV0sIFstNzQuOTYxNTk1LCAxOS45MjM0MzVdLCBbLTc1LjYzNDY4LCAxOS44NzM3NzRdLCBbLTc2LjMyMzY1NiwgMTkuOTUyODkxXSwgWy03Ny43NTU0ODEsIDE5Ljg1NTQ4MV0sIFstNzcuMDg1MTA4LCAyMC40MTMzNTRdLCBbLTc3LjQ5MjY1NSwgMjAuNjczMTA1XSwgWy03OC4xMzcyOTIsIDIwLjczOTk0OV0sIFstNzguNDgyODI3LCAyMS4wMjg2MTNdLCBbLTc4LjcxOTg2NywgMjEuNTk4MTE0XSwgWy03OS4yODUsIDIxLjU1OTE3NV0sIFstODAuMjE3NDc1LCAyMS44MjczMjRdLCBbLTgwLjUxNzUzNSwgMjIuMDM3MDc5XSwgWy04MS44MjA5NDMsIDIyLjE5MjA1N10sIFstODIuMTY5OTkyLCAyMi4zODcxMDldLCBbLTgxLjc5NTAwMiwgMjIuNjM2OTY1XSwgWy04Mi43NzU4OTgsIDIyLjY4ODE1XSwgWy04My40OTQ0NTksIDIyLjE2ODUxOF0sIFstODMuOTA4OCwgMjIuMTU0NTY1XSwgWy04NC4wNTIxNTEsIDIxLjkxMDU3NV0sIFstODQuNTQ3MDMsIDIxLjgwMTIyOF0sIFstODQuOTc0OTExLCAyMS44OTYwMjhdLCBbLTg0LjQ0NzA2MiwgMjIuMjA0OTVdLCBbLTg0LjIzMDM1NywgMjIuNTY1NzU1XSwgWy04My43NzgyNCwgMjIuNzg4MTE4XSwgWy04My4yNjc1NDgsIDIyLjk4MzA0Ml0sIFstODIuNTEwNDM2LCAyMy4wNzg3NDddLCBbLTgyLjI2ODE1MSwgMjMuMTg4NjExXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJDVUIiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkN1YmEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzMyLjczMTc4LCAzNS4xNDAwMjZdLCBbMzIuODAyNDc0LCAzNS4xNDU1MDRdLCBbMzIuOTQ2OTYxLCAzNS4zODY3MDNdLCBbMzMuNjY3MjI3LCAzNS4zNzMyMTZdLCBbMzQuNTc2NDc0LCAzNS42NzE1OTZdLCBbMzMuOTAwODA0LCAzNS4yNDU3NTZdLCBbMzMuOTczNjE3LCAzNS4wNTg1MDZdLCBbMzMuODY2NDQsIDM1LjA5MzU5NV0sIFszMy42NzUzOTIsIDM1LjAxNzg2M10sIFszMy41MjU2ODUsIDM1LjAzODY4OF0sIFszMy40NzU4MTcsIDM1LjAwMDM0NV0sIFszMy40NTU5MjIsIDM1LjEwMTQyNF0sIFszMy4zODM4MzMsIDM1LjE2MjcxMl0sIFszMy4xOTA5NzcsIDM1LjE3MzEyNV0sIFszMi45MTk1NzIsIDM1LjA4NzgzM10sIFszMi43MzE3OCwgMzUuMTQwMDI2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICItOTkiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIk5vcnRoZXJuIEN5cHJ1cyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzMzLjk3MzYxNywgMzUuMDU4NTA2XSwgWzM0LjAwNDg4MSwgMzQuOTc4MDk4XSwgWzMyLjk3OTgyNywgMzQuNTcxODY5XSwgWzMyLjQ5MDI5NiwgMzQuNzAxNjU1XSwgWzMyLjI1NjY2NywgMzUuMTAzMjMyXSwgWzMyLjczMTc4LCAzNS4xNDAwMjZdLCBbMzIuOTE5NTcyLCAzNS4wODc4MzNdLCBbMzMuMTkwOTc3LCAzNS4xNzMxMjVdLCBbMzMuMzgzODMzLCAzNS4xNjI3MTJdLCBbMzMuNDU1OTIyLCAzNS4xMDE0MjRdLCBbMzMuNDc1ODE3LCAzNS4wMDAzNDVdLCBbMzMuNTI1Njg1LCAzNS4wMzg2ODhdLCBbMzMuNjc1MzkyLCAzNS4wMTc4NjNdLCBbMzMuODY2NDQsIDM1LjA5MzU5NV0sIFszMy45NzM2MTcsIDM1LjA1ODUwNl1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQ1lQIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJDeXBydXMiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzE2Ljk2MDI4OCwgNDguNTk2OTgyXSwgWzE2LjQ5OTI4MywgNDguNzg1ODA4XSwgWzE2LjAyOTY0NywgNDguNzMzODk5XSwgWzE1LjI1MzQxNiwgNDkuMDM5MDc0XSwgWzE0LjkwMTQ0NywgNDguOTY0NDAyXSwgWzE0LjMzODg5OCwgNDguNTU1MzA1XSwgWzEzLjU5NTk0NiwgNDguODc3MTcyXSwgWzEzLjAzMTMyOSwgNDkuMzA3MDY4XSwgWzEyLjUyMTAyNCwgNDkuNTQ3NDE1XSwgWzEyLjQxNTE5MSwgNDkuOTY5MTIxXSwgWzEyLjI0MDExMSwgNTAuMjY2MzM4XSwgWzEyLjk2NjgzNywgNTAuNDg0MDc2XSwgWzEzLjMzODEzMiwgNTAuNzMzMjM0XSwgWzE0LjA1NjIyOCwgNTAuOTI2OTE4XSwgWzE0LjMwNzAxMywgNTEuMTE3MjY4XSwgWzE0LjU3MDcxOCwgNTEuMDAyMzM5XSwgWzE1LjAxNjk5NiwgNTEuMTA2Njc0XSwgWzE1LjQ5MDk3MiwgNTAuNzg0NzNdLCBbMTYuMjM4NjI3LCA1MC42OTc3MzNdLCBbMTYuMTc2MjUzLCA1MC40MjI2MDddLCBbMTYuNzE5NDc2LCA1MC4yMTU3NDddLCBbMTYuODY4NzY5LCA1MC40NzM5NzRdLCBbMTcuNTU0NTY3LCA1MC4zNjIxNDZdLCBbMTcuNjQ5NDQ1LCA1MC4wNDkwMzhdLCBbMTguMzkyOTE0LCA0OS45ODg2MjldLCBbMTguODUzMTQ0LCA0OS40OTYyM10sIFsxOC41NTQ5NzEsIDQ5LjQ5NTAxNV0sIFsxOC4zOTk5OTQsIDQ5LjMxNTAwMV0sIFsxOC4xNzA0OTgsIDQ5LjI3MTUxNV0sIFsxOC4xMDQ5NzMsIDQ5LjA0Mzk4M10sIFsxNy45MTM1MTIsIDQ4Ljk5NjQ5M10sIFsxNy44ODY0ODUsIDQ4LjkwMzQ3NV0sIFsxNy41NDUwMDcsIDQ4LjgwMDAxOV0sIFsxNy4xMDE5ODUsIDQ4LjgxNjk2OV0sIFsxNi45NjAyODgsIDQ4LjU5Njk4Ml1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiQ1pFIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJDemVjaCBSZXB1YmxpYyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbOS45MjE5MDYsIDU0Ljk4MzEwNF0sIFs5LjkzOTU4LCA1NC41OTY2NDJdLCBbMTAuOTUwMTEyLCA1NC4zNjM2MDddLCBbMTAuOTM5NDY3LCA1NC4wMDg2OTNdLCBbMTEuOTU2MjUyLCA1NC4xOTY0ODZdLCBbMTIuNTE4NDQsIDU0LjQ3MDM3MV0sIFsxMy42NDc0NjcsIDU0LjA3NTUxMV0sIFsxNC4xMTk2ODYsIDUzLjc1NzAyOV0sIFsxNC4zNTMzMTUsIDUzLjI0ODE3MV0sIFsxNC4wNzQ1MjEsIDUyLjk4MTI2M10sIFsxNC40Mzc2LCA1Mi42MjQ4NV0sIFsxNC42ODUwMjYsIDUyLjA4OTk0N10sIFsxNC42MDcwOTgsIDUxLjc0NTE4OF0sIFsxNS4wMTY5OTYsIDUxLjEwNjY3NF0sIFsxNC41NzA3MTgsIDUxLjAwMjMzOV0sIFsxNC4zMDcwMTMsIDUxLjExNzI2OF0sIFsxNC4wNTYyMjgsIDUwLjkyNjkxOF0sIFsxMy4zMzgxMzIsIDUwLjczMzIzNF0sIFsxMi45NjY4MzcsIDUwLjQ4NDA3Nl0sIFsxMi4yNDAxMTEsIDUwLjI2NjMzOF0sIFsxMi40MTUxOTEsIDQ5Ljk2OTEyMV0sIFsxMi41MjEwMjQsIDQ5LjU0NzQxNV0sIFsxMy4wMzEzMjksIDQ5LjMwNzA2OF0sIFsxMy41OTU5NDYsIDQ4Ljg3NzE3Ml0sIFsxMy4yNDMzNTcsIDQ4LjQxNjExNV0sIFsxMi44ODQxMDMsIDQ4LjI4OTE0Nl0sIFsxMy4wMjU4NTEsIDQ3LjYzNzU4NF0sIFsxMi45MzI2MjcsIDQ3LjQ2NzY0Nl0sIFsxMi42MjA3NiwgNDcuNjcyMzg4XSwgWzEyLjE0MTM1NywgNDcuNzAzMDgzXSwgWzExLjQyNjQxNCwgNDcuNTIzNzY2XSwgWzEwLjU0NDUwNCwgNDcuNTY2Mzk5XSwgWzEwLjQwMjA4NCwgNDcuMzAyNDg4XSwgWzkuODk2MDY4LCA0Ny41ODAxOTddLCBbOS41OTQyMjYsIDQ3LjUyNTA1OF0sIFs4LjUyMjYxMiwgNDcuODMwODI4XSwgWzguMzE3MzAxLCA0Ny42MTM1OF0sIFs3LjQ2Njc1OSwgNDcuNjIwNTgyXSwgWzcuNTkzNjc2LCA0OC4zMzMwMTldLCBbOC4wOTkyNzksIDQ5LjAxNzc4NF0sIFs2LjY1ODIzLCA0OS4yMDE5NThdLCBbNi4xODYzMiwgNDkuNDYzODAzXSwgWzYuMjQyNzUxLCA0OS45MDIyMjZdLCBbNi4wNDMwNzMsIDUwLjEyODA1Ml0sIFs2LjE1NjY1OCwgNTAuODAzNzIxXSwgWzUuOTg4NjU4LCA1MS44NTE2MTZdLCBbNi41ODkzOTcsIDUxLjg1MjAyOV0sIFs2Ljg0Mjg3LCA1Mi4yMjg0NF0sIFs3LjA5MjA1MywgNTMuMTQ0MDQzXSwgWzYuOTA1MTQsIDUzLjQ4MjE2Ml0sIFs3LjEwMDQyNSwgNTMuNjkzOTMyXSwgWzcuOTM2MjM5LCA1My43NDgyOTZdLCBbOC4xMjE3MDYsIDUzLjUyNzc5Ml0sIFs4LjgwMDczNCwgNTQuMDIwNzg2XSwgWzguNTcyMTE4LCA1NC4zOTU2NDZdLCBbOC41MjYyMjksIDU0Ljk2Mjc0NF0sIFs5LjI4MjA0OSwgNTQuODMwODY1XSwgWzkuOTIxOTA2LCA1NC45ODMxMDRdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkRFVSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiR2VybWFueSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbNDMuMDgxMjI2LCAxMi42OTk2MzldLCBbNDMuMzE3ODUyLCAxMi4zOTAxNDhdLCBbNDMuMjg2MzgxLCAxMS45NzQ5MjhdLCBbNDIuNzE1ODc0LCAxMS43MzU2NDFdLCBbNDMuMTQ1MzA1LCAxMS40NjIwNF0sIFs0Mi43NzY4NTIsIDEwLjkyNjg3OV0sIFs0Mi41NTQ5MywgMTEuMTA1MTFdLCBbNDIuMzE0MTQsIDExLjAzNDJdLCBbNDEuNzU1NTcsIDExLjA1MDkxXSwgWzQxLjczOTU5LCAxMS4zNTUxMV0sIFs0MS42NjE3NiwgMTEuNjMxMl0sIFs0MiwgMTIuMV0sIFs0Mi4zNTE1NiwgMTIuNTQyMjNdLCBbNDIuNzc5NjQyLCAxMi40NTU0MTZdLCBbNDMuMDgxMjI2LCAxMi42OTk2MzldXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkRKSSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRGppYm91dGkiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1sxMi42OTAwMDYsIDU1LjYwOTk5MV0sIFsxMi4wODk5OTEsIDU0LjgwMDAxNV0sIFsxMS4wNDM1NDMsIDU1LjM2NDg2NF0sIFsxMC45MDM5MTQsIDU1Ljc3OTk1NV0sIFsxMi4zNzA5MDQsIDU2LjExMTQwN10sIFsxMi42OTAwMDYsIDU1LjYwOTk5MV1dXSwgW1tbMTAuOTEyMTgyLCA1Ni40NTg2MjFdLCBbMTAuNjY3ODA0LCA1Ni4wODEzODNdLCBbMTAuMzY5OTkzLCA1Ni4xOTAwMDddLCBbOS42NDk5ODUsIDU1LjQ2OTk5OV0sIFs5LjkyMTkwNiwgNTQuOTgzMTA0XSwgWzkuMjgyMDQ5LCA1NC44MzA4NjVdLCBbOC41MjYyMjksIDU0Ljk2Mjc0NF0sIFs4LjEyMDMxMSwgNTUuNTE3NzIzXSwgWzguMDg5OTc3LCA1Ni41NDAwMTJdLCBbOC4yNTY1ODIsIDU2LjgwOTk2OV0sIFs4LjU0MzQzOCwgNTcuMTEwMDAzXSwgWzkuNDI0NDY5LCA1Ny4xNzIwNjZdLCBbOS43NzU1NTksIDU3LjQ0Nzk0MV0sIFsxMC41ODAwMDYsIDU3LjczMDAxN10sIFsxMC41NDYxMDYsIDU3LjIxNTczM10sIFsxMC4yNSwgNTYuODkwMDE2XSwgWzEwLjM2OTk5MywgNTYuNjA5OTgyXSwgWzEwLjkxMjE4MiwgNTYuNDU4NjIxXV1dXSwgInR5cGUiOiAiTXVsdGlQb2x5Z29uIn0sICJpZCI6ICJETksiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkRlbm1hcmsiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy03MS43MTIzNjEsIDE5LjcxNDQ1Nl0sIFstNzEuNTg3MzA0LCAxOS44ODQ5MTFdLCBbLTcwLjgwNjcwNiwgMTkuODgwMjg2XSwgWy03MC4yMTQzNjUsIDE5LjYyMjg4NV0sIFstNjkuOTUwODE1LCAxOS42NDhdLCBbLTY5Ljc2OTI1LCAxOS4yOTMyNjddLCBbLTY5LjIyMjEyNiwgMTkuMzEzMjE0XSwgWy02OS4yNTQzNDYsIDE5LjAxNTE5Nl0sIFstNjguODA5NDEyLCAxOC45NzkwNzRdLCBbLTY4LjMxNzk0MywgMTguNjEyMTk4XSwgWy02OC42ODkzMTYsIDE4LjIwNTE0Ml0sIFstNjkuMTY0OTQ2LCAxOC40MjI2NDhdLCBbLTY5LjYyMzk4OCwgMTguMzgwNzEzXSwgWy02OS45NTI5MzQsIDE4LjQyODMwN10sIFstNzAuMTMzMjMzLCAxOC4yNDU5MTVdLCBbLTcwLjUxNzEzNywgMTguMTg0MjkxXSwgWy03MC42NjkyOTgsIDE4LjQyNjg4Nl0sIFstNzAuOTk5OTUsIDE4LjI4MzMyOV0sIFstNzEuNDAwMjEsIDE3LjU5ODU2NF0sIFstNzEuNjU3NjYyLCAxNy43NTc1NzNdLCBbLTcxLjcwODMwNSwgMTguMDQ0OTk3XSwgWy03MS42ODc3MzgsIDE4LjMxNjY2XSwgWy03MS45NDUxMTIsIDE4LjYxNjldLCBbLTcxLjcwMTMwMywgMTguNzg1NDE3XSwgWy03MS42MjQ4NzMsIDE5LjE2OTgzOF0sIFstNzEuNzEyMzYxLCAxOS43MTQ0NTZdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkRPTSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRG9taW5pY2FuIFJlcHVibGljIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxMS45OTk1MDYsIDIzLjQ3MTY2OF0sIFs4LjU3Mjg5MywgMjEuNTY1NjYxXSwgWzUuNjc3NTY2LCAxOS42MDEyMDddLCBbNC4yNjc0MTksIDE5LjE1NTI2NV0sIFszLjE1ODEzMywgMTkuMDU3MzY0XSwgWzMuMTQ2NjYxLCAxOS42OTM1NzldLCBbMi42ODM1ODgsIDE5Ljg1NjIzXSwgWzIuMDYwOTkxLCAyMC4xNDIyMzNdLCBbMS44MjMyMjgsIDIwLjYxMDgwOV0sIFstMS41NTAwNTUsIDIyLjc5MjY2Nl0sIFstNC45MjMzMzcsIDI0Ljk3NDU3NF0sIFstOC42ODQ0LCAyNy4zOTU3NDRdLCBbLTguNjY1MTI0LCAyNy41ODk0NzldLCBbLTguNjY1NTksIDI3LjY1NjQyNl0sIFstOC42NzQxMTYsIDI4Ljg0MTI4OV0sIFstNy4wNTkyMjgsIDI5LjU3OTIyOF0sIFstNi4wNjA2MzIsIDI5LjczMTddLCBbLTUuMjQyMTI5LCAzMC4wMDA0NDNdLCBbLTQuODU5NjQ2LCAzMC41MDExODhdLCBbLTMuNjkwNDQxLCAzMC44OTY5NTJdLCBbLTMuNjQ3NDk4LCAzMS42MzcyOTRdLCBbLTMuMDY4OTgsIDMxLjcyNDQ5OF0sIFstMi42MTY2MDUsIDMyLjA5NDM0Nl0sIFstMS4zMDc4OTksIDMyLjI2Mjg4OV0sIFstMS4xMjQ1NTEsIDMyLjY1MTUyMl0sIFstMS4zODgwNDksIDMyLjg2NDAxNV0sIFstMS43MzM0NTUsIDMzLjkxOTcxM10sIFstMS43OTI5ODYsIDM0LjUyNzkxOV0sIFstMi4xNjk5MTQsIDM1LjE2ODM5Nl0sIFstMS4yMDg2MDMsIDM1LjcxNDg0OV0sIFstMC4xMjc0NTQsIDM1Ljg4ODY2Ml0sIFswLjUwMzg3NywgMzYuMzAxMjczXSwgWzEuNDY2OTE5LCAzNi42MDU2NDddLCBbMy4xNjE2OTksIDM2Ljc4MzkwNV0sIFs0LjgxNTc1OCwgMzYuODY1MDM3XSwgWzUuMzIwMTIsIDM2LjcxNjUxOV0sIFs2LjI2MTgyLCAzNy4xMTA2NTVdLCBbNy4zMzAzODUsIDM3LjExODM4MV0sIFs3LjczNzA3OCwgMzYuODg1NzA4XSwgWzguNDIwOTY0LCAzNi45NDY0MjddLCBbOC4yMTc4MjQsIDM2LjQzMzE3N10sIFs4LjM3NjM2OCwgMzUuNDc5ODc2XSwgWzguMTQwOTgxLCAzNC42NTUxNDZdLCBbNy41MjQ0ODIsIDM0LjA5NzM3Nl0sIFs3LjYxMjY0MiwgMzMuMzQ0MTE1XSwgWzguNDMwNDczLCAzMi43NDgzMzddLCBbOC40MzkxMDMsIDMyLjUwNjI4NV0sIFs5LjA1NTYwMywgMzIuMTAyNjkyXSwgWzkuNDgyMTQsIDMwLjMwNzU1Nl0sIFs5LjgwNTYzNCwgMjkuNDI0NjM4XSwgWzkuODU5OTk4LCAyOC45NTk5OV0sIFs5LjY4Mzg4NSwgMjguMTQ0MTc0XSwgWzkuNzU2MTI4LCAyNy42ODgyNTldLCBbOS42MjkwNTYsIDI3LjE0MDk1M10sIFs5LjcxNjI4NiwgMjYuNTEyMjA2XSwgWzkuMzE5NDExLCAyNi4wOTQzMjVdLCBbOS45MTA2OTMsIDI1LjM2NTQ1NV0sIFs5Ljk0ODI2MSwgMjQuOTM2OTU0XSwgWzEwLjMwMzg0NywgMjQuMzc5MzEzXSwgWzEwLjc3MTM2NCwgMjQuNTYyNTMyXSwgWzExLjU2MDY2OSwgMjQuMDk3OTA5XSwgWzExLjk5OTUwNiwgMjMuNDcxNjY4XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJEWkEiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkFsZ2VyaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy04MC4zMDI1NjEsIC0zLjQwNDg1Nl0sIFstNzkuNzcwMjkzLCAtMi42NTc1MTJdLCBbLTc5Ljk4NjU1OSwgLTIuMjIwNzk0XSwgWy04MC4zNjg3ODQsIC0yLjY4NTE1OV0sIFstODAuOTY3NzY1LCAtMi4yNDY5NDNdLCBbLTgwLjc2NDgwNiwgLTEuOTY1MDQ4XSwgWy04MC45MzM2NTksIC0xLjA1NzQ1NV0sIFstODAuNTgzMzcsIC0wLjkwNjY2M10sIFstODAuMzk5MzI1LCAtMC4yODM3MDNdLCBbLTgwLjAyMDg5OCwgMC4zNjAzNF0sIFstODAuMDkwNjEsIDAuNzY4NDI5XSwgWy03OS41NDI3NjIsIDAuOTgyOTM4XSwgWy03OC44NTUyNTksIDEuMzgwOTI0XSwgWy03Ny44NTUwNjEsIDAuODA5OTI1XSwgWy03Ny42Njg2MTMsIDAuODI1ODkzXSwgWy03Ny40MjQ5ODQsIDAuMzk1Njg3XSwgWy03Ni41NzYzOCwgMC4yNTY5MzZdLCBbLTc2LjI5MjMxNCwgMC40MTYwNDddLCBbLTc1LjgwMTQ2NiwgMC4wODQ4MDFdLCBbLTc1LjM3MzIyMywgLTAuMTUyMDMyXSwgWy03NS4yMzM3MjMsIC0wLjkxMTQxN10sIFstNzUuNTQ0OTk2LCAtMS41NjE2MV0sIFstNzYuNjM1Mzk0LCAtMi42MDg2NzhdLCBbLTc3LjgzNzkwNSwgLTMuMDAzMDIxXSwgWy03OC40NTA2ODQsIC0zLjg3MzA5N10sIFstNzguNjM5ODk3LCAtNC41NDc3ODRdLCBbLTc5LjIwNTI4OSwgLTQuOTU5MTI5XSwgWy03OS42MjQ5NzksIC00LjQ1NDE5OF0sIFstODAuMDI4OTA4LCAtNC4zNDYwOTFdLCBbLTgwLjQ0MjI0MiwgLTQuNDI1NzI0XSwgWy04MC40NjkyOTUsIC00LjA1OTI4N10sIFstODAuMTg0MDE1LCAtMy44MjExNjJdLCBbLTgwLjMwMjU2MSwgLTMuNDA0ODU2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJFQ1UiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkVjdWFkb3IiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzM0LjkyMjYsIDI5LjUwMTMzXSwgWzM0LjY0MTc0LCAyOS4wOTk0Ml0sIFszNC40MjY1NSwgMjguMzQzOTldLCBbMzQuMTU0NTEsIDI3LjgyMzNdLCBbMzMuOTIxMzYsIDI3LjY0ODddLCBbMzMuNTg4MTEsIDI3Ljk3MTM2XSwgWzMzLjEzNjc2LCAyOC40MTc2NV0sIFszMi40MjMyMywgMjkuODUxMDhdLCBbMzIuMzIwNDYsIDI5Ljc2MDQzXSwgWzMyLjczNDgyLCAyOC43MDUyM10sIFszMy4zNDg3NiwgMjcuNjk5ODldLCBbMzQuMTA0NTUsIDI2LjE0MjI3XSwgWzM0LjQ3Mzg3LCAyNS41OTg1Nl0sIFszNC43OTUwNywgMjUuMDMzNzVdLCBbMzUuNjkyNDEsIDIzLjkyNjcxXSwgWzM1LjQ5MzcyLCAyMy43NTIzN10sIFszNS41MjU5OCwgMjMuMTAyNDRdLCBbMzYuNjkwNjksIDIyLjIwNDg1XSwgWzM2Ljg2NjIzLCAyMl0sIFszMi45LCAyMl0sIFsyOS4wMiwgMjJdLCBbMjUsIDIyXSwgWzI1LCAyNS42ODI1XSwgWzI1LCAyOS4yMzg2NTVdLCBbMjQuNzAwMDcsIDMwLjA0NDE5XSwgWzI0Ljk1NzYyLCAzMC42NjE2XSwgWzI0LjgwMjg3LCAzMS4wODkyOV0sIFsyNS4xNjQ4MiwgMzEuNTY5MTVdLCBbMjYuNDk1MzMsIDMxLjU4NTY4XSwgWzI3LjQ1NzYyLCAzMS4zMjEyNl0sIFsyOC40NTA0OCwgMzEuMDI1NzddLCBbMjguOTEzNTMsIDMwLjg3MDA1XSwgWzI5LjY4MzQyLCAzMS4xODY4Nl0sIFszMC4wOTUwMywgMzEuNDczNF0sIFszMC45NzY5MywgMzEuNTU1ODZdLCBbMzEuNjg3OTYsIDMxLjQyOTZdLCBbMzEuOTYwNDEsIDMwLjkzMzZdLCBbMzIuMTkyNDcsIDMxLjI2MDM0XSwgWzMyLjk5MzkyLCAzMS4wMjQwN10sIFszMy43NzM0LCAzMC45Njc0Nl0sIFszNC4yNjU0NCwgMzEuMjE5MzZdLCBbMzQuOTIyNiwgMjkuNTAxMzNdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkVHWSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRWd5cHQiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzQyLjM1MTU2LCAxMi41NDIyM10sIFs0Mi4wMDk3NSwgMTIuODY1ODJdLCBbNDEuNTk4NTYsIDEzLjQ1MjA5XSwgWzQxLjE1NTE5NCwgMTMuNzczMzJdLCBbNDAuODk2NiwgMTQuMTE4NjRdLCBbNDAuMDI2MjE5LCAxNC41MTk1NzldLCBbMzkuMzQwNjEsIDE0LjUzMTU1XSwgWzM5LjA5OTQsIDE0Ljc0MDY0XSwgWzM4LjUxMjk1LCAxNC41MDU0N10sIFszNy45MDYwNywgMTQuOTU5NDNdLCBbMzcuNTkzNzcsIDE0LjIxMzFdLCBbMzYuNDI5NTEsIDE0LjQyMjExXSwgWzM2LjMyMzE4OSwgMTQuODIyNDgxXSwgWzM2Ljc1Mzg2LCAxNi4yOTE4NzRdLCBbMzYuODUyNTMsIDE2Ljk1NjU1XSwgWzM3LjE2NzQ3LCAxNy4yNjMxNF0sIFszNy45MDQsIDE3LjQyNzU0XSwgWzM4LjQxMDA5LCAxNy45OTgzMDddLCBbMzguOTkwNjIzLCAxNi44NDA2MjZdLCBbMzkuMjY2MTEsIDE1LjkyMjcyM10sIFszOS44MTQyOTQsIDE1LjQzNTY0N10sIFs0MS4xNzkyNzUsIDE0LjQ5MTA4XSwgWzQxLjczNDk1MiwgMTMuOTIxMDM3XSwgWzQyLjI3NjgzMSwgMTMuMzQzOTkyXSwgWzQyLjU4OTU3NiwgMTMuMDAwNDIxXSwgWzQzLjA4MTIyNiwgMTIuNjk5NjM5XSwgWzQyLjc3OTY0MiwgMTIuNDU1NDE2XSwgWzQyLjM1MTU2LCAxMi41NDIyM11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiRVJJIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJFcml0cmVhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stOS4wMzQ4MTgsIDQxLjg4MDU3MV0sIFstOC45ODQ0MzMsIDQyLjU5Mjc3NV0sIFstOS4zOTI4ODQsIDQzLjAyNjYyNV0sIFstNy45NzgxOSwgNDMuNzQ4MzM4XSwgWy02Ljc1NDQ5MiwgNDMuNTY3OTA5XSwgWy01LjQxMTg4NiwgNDMuNTc0MjRdLCBbLTQuMzQ3ODQzLCA0My40MDM0NDldLCBbLTMuNTE3NTMyLCA0My40NTU5MDFdLCBbLTEuOTAxMzUxLCA0My40MjI4MDJdLCBbLTEuNTAyNzcxLCA0My4wMzQwMTRdLCBbMC4zMzgwNDcsIDQyLjU3OTU0Nl0sIFswLjcwMTU5MSwgNDIuNzk1NzM0XSwgWzEuODI2NzkzLCA0Mi4zNDMzODVdLCBbMi45ODU5OTksIDQyLjQ3MzAxNV0sIFszLjAzOTQ4NCwgNDEuODkyMTJdLCBbMi4wOTE4NDIsIDQxLjIyNjA4OV0sIFswLjgxMDUyNSwgNDEuMDE0NzMyXSwgWzAuNzIxMzMxLCA0MC42NzgzMThdLCBbMC4xMDY2OTIsIDQwLjEyMzkzNF0sIFstMC4yNzg3MTEsIDM5LjMwOTk3OF0sIFswLjExMTI5MSwgMzguNzM4NTE0XSwgWy0wLjQ2NzEyNCwgMzguMjkyMzY2XSwgWy0wLjY4MzM4OSwgMzcuNjQyMzU0XSwgWy0xLjQzODM4MiwgMzcuNDQzMDY0XSwgWy0yLjE0NjQ1MywgMzYuNjc0MTQ0XSwgWy0zLjQxNTc4MSwgMzYuNjU4OV0sIFstNC4zNjg5MDEsIDM2LjY3NzgzOV0sIFstNC45OTUyMTksIDM2LjMyNDcwOF0sIFstNS4zNzcxNiwgMzUuOTQ2ODVdLCBbLTUuODY2NDMyLCAzNi4wMjk4MTddLCBbLTYuMjM2Njk0LCAzNi4zNjc2NzddLCBbLTYuNTIwMTkxLCAzNi45NDI5MTNdLCBbLTcuNDUzNzI2LCAzNy4wOTc3ODhdLCBbLTcuNTM3MTA1LCAzNy40Mjg5MDRdLCBbLTcuMTY2NTA4LCAzNy44MDM4OTRdLCBbLTcuMDI5MjgxLCAzOC4wNzU3NjRdLCBbLTcuMzc0MDkyLCAzOC4zNzMwNTldLCBbLTcuMDk4MDM3LCAzOS4wMzAwNzNdLCBbLTcuNDk4NjMyLCAzOS42Mjk1NzFdLCBbLTcuMDY2NTkyLCAzOS43MTE4OTJdLCBbLTcuMDI2NDEzLCA0MC4xODQ1MjRdLCBbLTYuODY0MDIsIDQwLjMzMDg3Ml0sIFstNi44NTExMjcsIDQxLjExMTA4M10sIFstNi4zODkwODgsIDQxLjM4MTgxNV0sIFstNi42Njg2MDYsIDQxLjg4MzM4N10sIFstNy4yNTEzMDksIDQxLjkxODM0Nl0sIFstNy40MjI1MTMsIDQxLjc5MjA3NV0sIFstOC4wMTMxNzUsIDQxLjc5MDg4Nl0sIFstOC4yNjM4NTcsIDQyLjI4MDQ2OV0sIFstOC42NzE5NDYsIDQyLjEzNDY4OV0sIFstOS4wMzQ4MTgsIDQxLjg4MDU3MV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiRVNQIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJTcGFpbiIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMjQuMzEyODYzLCA1Ny43OTM0MjRdLCBbMjQuNDI4OTI4LCA1OC4zODM0MTNdLCBbMjQuMDYxMTk4LCA1OC4yNTczNzVdLCBbMjMuNDI2NTYsIDU4LjYxMjc1M10sIFsyMy4zMzk3OTUsIDU5LjE4NzI0XSwgWzI0LjYwNDIxNCwgNTkuNDY1ODU0XSwgWzI1Ljg2NDE4OSwgNTkuNjExMDldLCBbMjYuOTQ5MTM2LCA1OS40NDU4MDNdLCBbMjcuOTgxMTE0LCA1OS40NzUzODhdLCBbMjguMTMxNjk5LCA1OS4zMDA4MjVdLCBbMjcuNDIwMTY2LCA1OC43MjQ1ODFdLCBbMjcuNzE2Njg2LCA1Ny43OTE4OTldLCBbMjcuMjg4MTg1LCA1Ny40NzQ1MjhdLCBbMjYuNDYzNTMyLCA1Ny40NzYzODldLCBbMjUuNjAyODEsIDU3Ljg0NzUyOV0sIFsyNS4xNjQ1OTQsIDU3Ljk3MDE1N10sIFsyNC4zMTI4NjMsIDU3Ljc5MzQyNF1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiRVNUIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJFc3RvbmlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1szNy45MDYwNywgMTQuOTU5NDNdLCBbMzguNTEyOTUsIDE0LjUwNTQ3XSwgWzM5LjA5OTQsIDE0Ljc0MDY0XSwgWzM5LjM0MDYxLCAxNC41MzE1NV0sIFs0MC4wMjYyNSwgMTQuNTE5NTldLCBbNDAuODk2NiwgMTQuMTE4NjRdLCBbNDEuMTU1MiwgMTMuNzczMzNdLCBbNDEuNTk4NTYsIDEzLjQ1MjA5XSwgWzQyLjAwOTc1LCAxMi44NjU4Ml0sIFs0Mi4zNTE1NiwgMTIuNTQyMjNdLCBbNDIsIDEyLjFdLCBbNDEuNjYxNzYsIDExLjYzMTJdLCBbNDEuNzM5NTksIDExLjM1NTExXSwgWzQxLjc1NTU3LCAxMS4wNTA5MV0sIFs0Mi4zMTQxNCwgMTEuMDM0Ml0sIFs0Mi41NTQ5MywgMTEuMTA1MTFdLCBbNDIuNzc2ODUyLCAxMC45MjY4NzldLCBbNDIuNTU4NzYsIDEwLjU3MjU4XSwgWzQyLjkyODEyLCAxMC4wMjE5NF0sIFs0My4yOTY5OSwgOS41NDA0OF0sIFs0My42Nzg3NSwgOS4xODM1OF0sIFs0Ni45NDgzNCwgNy45OTY4OF0sIFs0Ny43ODk0MiwgOC4wMDNdLCBbNDQuOTYzNiwgNS4wMDE2Ml0sIFs0My42NjA4NywgNC45NTc1NV0sIFs0Mi43Njk2NywgNC4yNTI1OV0sIFs0Mi4xMjg2MSwgNC4yMzQxM10sIFs0MS44NTUwODMsIDMuOTE4OTEyXSwgWzQxLjE3MTgsIDMuOTE5MDldLCBbNDAuNzY4NDgsIDQuMjU3MDJdLCBbMzkuODU0OTQsIDMuODM4NzldLCBbMzkuNTU5Mzg0LCAzLjQyMjA2XSwgWzM4Ljg5MjUxLCAzLjUwMDc0XSwgWzM4LjY3MTE0LCAzLjYxNjA3XSwgWzM4LjQzNjk3LCAzLjU4ODUxXSwgWzM4LjEyMDkxNSwgMy41OTg2MDVdLCBbMzYuODU1MDkzLCA0LjQ0Nzg2NF0sIFszNi4xNTkwNzksIDQuNDQ3ODY0XSwgWzM1LjgxNzQ0OCwgNC43NzY5NjZdLCBbMzUuODE3NDQ4LCA1LjMzODIzMl0sIFszNS4yOTgwMDcsIDUuNTA2XSwgWzM0LjcwNzAyLCA2LjU5NDIyXSwgWzM0LjI1MDMyLCA2LjgyNjA3XSwgWzM0LjA3NTEsIDcuMjI1OTVdLCBbMzMuNTY4MjksIDcuNzEzMzRdLCBbMzIuOTU0MTgsIDcuNzg0OTddLCBbMzMuMjk0OCwgOC4zNTQ1OF0sIFszMy44MjU1LCA4LjM3OTE2XSwgWzMzLjk3NDk4LCA4LjY4NDU2XSwgWzMzLjk2MTYyLCA5LjU4MzU4XSwgWzM0LjI1NzQ1LCAxMC42MzAwOV0sIFszNC43MzExNSwgMTAuOTEwMTddLCBbMzQuODMxNjMsIDExLjMxODk2XSwgWzM1LjI2MDQ5LCAxMi4wODI4Nl0sIFszNS44NjM2MywgMTIuNTc4MjhdLCBbMzYuMjcwMjIsIDEzLjU2MzMzXSwgWzM2LjQyOTUxLCAxNC40MjIxMV0sIFszNy41OTM3NywgMTQuMjEzMV0sIFszNy45MDYwNywgMTQuOTU5NDNdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkVUSCIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRXRoaW9waWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzI4LjU5MTkzLCA2OS4wNjQ3NzddLCBbMjguNDQ1OTQ0LCA2OC4zNjQ2MTNdLCBbMjkuOTc3NDI2LCA2Ny42OTgyOTddLCBbMjkuMDU0NTg5LCA2Ni45NDQyODZdLCBbMzAuMjE3NjUsIDY1LjgwNTk4XSwgWzI5LjU0NDQzLCA2NC45NDg2NzJdLCBbMzAuNDQ0Njg1LCA2NC4yMDQ0NTNdLCBbMzAuMDM1ODcyLCA2My41NTI4MTRdLCBbMzEuNTE2MDkyLCA2Mi44Njc2ODddLCBbMzEuMTM5OTkxLCA2Mi4zNTc2OTNdLCBbMzAuMjExMTA3LCA2MS43ODAwMjhdLCBbMjguMDY5OTk4LCA2MC41MDM1MTddLCBbMjYuMjU1MTczLCA2MC40MjM5NjFdLCBbMjQuNDk2NjI0LCA2MC4wNTczMTZdLCBbMjIuODY5Njk1LCA1OS44NDYzNzNdLCBbMjIuMjkwNzY0LCA2MC4zOTE5MjFdLCBbMjEuMzIyMjQ0LCA2MC43MjAxN10sIFsyMS41NDQ4NjYsIDYxLjcwNTMyOV0sIFsyMS4wNTkyMTEsIDYyLjYwNzM5M10sIFsyMS41MzYwMjksIDYzLjE4OTczNV0sIFsyMi40NDI3NDQsIDYzLjgxNzgxXSwgWzI0LjczMDUxMiwgNjQuOTAyMzQ0XSwgWzI1LjM5ODA2OCwgNjUuMTExNDI3XSwgWzI1LjI5NDA0MywgNjUuNTM0MzQ2XSwgWzIzLjkwMzM3OSwgNjYuMDA2OTI3XSwgWzIzLjU2NTg4LCA2Ni4zOTYwNTFdLCBbMjMuNTM5NDczLCA2Ny45MzYwMDldLCBbMjEuOTc4NTM1LCA2OC42MTY4NDZdLCBbMjAuNjQ1NTkzLCA2OS4xMDYyNDddLCBbMjEuMjQ0OTM2LCA2OS4zNzA0NDNdLCBbMjIuMzU2MjM4LCA2OC44NDE3NDFdLCBbMjMuNjYyMDUsIDY4Ljg5MTI0N10sIFsyNC43MzU2NzksIDY4LjY0OTU1N10sIFsyNS42ODkyMTMsIDY5LjA5MjExNF0sIFsyNi4xNzk2MjIsIDY5LjgyNTI5OV0sIFsyNy43MzIyOTIsIDcwLjE2NDE5M10sIFsyOS4wMTU1NzMsIDY5Ljc2NjQ5MV0sIFsyOC41OTE5MywgNjkuMDY0Nzc3XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJGSU4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkZpbmxhbmQiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1sxNzguMzczNiwgLTE3LjMzOTkyXSwgWzE3OC43MTgwNiwgLTE3LjYyODQ2XSwgWzE3OC41NTI3MSwgLTE4LjE1MDU5XSwgWzE3Ny45MzI2NiwgLTE4LjI4Nzk5XSwgWzE3Ny4zODE0NiwgLTE4LjE2NDMyXSwgWzE3Ny4yODUwNCwgLTE3LjcyNDY1XSwgWzE3Ny42NzA4NywgLTE3LjM4MTE0XSwgWzE3OC4xMjU1NywgLTE3LjUwNDgxXSwgWzE3OC4zNzM2LCAtMTcuMzM5OTJdXV0sIFtbWzE3OS4zNjQxNDMsIC0xNi44MDEzNTRdLCBbMTc4LjcyNTA1OSwgLTE3LjAxMjA0Ml0sIFsxNzguNTk2ODM5LCAtMTYuNjM5MTVdLCBbMTc5LjA5NjYwOSwgLTE2LjQzMzk4NF0sIFsxNzkuNDEzNTA5LCAtMTYuMzc5MDU0XSwgWzE4MCwgLTE2LjA2NzEzM10sIFsxODAsIC0xNi41NTUyMTddLCBbMTc5LjM2NDE0MywgLTE2LjgwMTM1NF1dXSwgW1tbLTE3OS45MTczNjksIC0xNi41MDE3ODNdLCBbLTE4MCwgLTE2LjU1NTIxN10sIFstMTgwLCAtMTYuMDY3MTMzXSwgWy0xNzkuNzkzMzIsIC0xNi4wMjA4ODJdLCBbLTE3OS45MTczNjksIC0xNi41MDE3ODNdXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIkZKSSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRmlqaSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTYxLjIsIC01MS44NV0sIFstNjAsIC01MS4yNV0sIFstNTkuMTUsIC01MS41XSwgWy01OC41NSwgLTUxLjFdLCBbLTU3Ljc1LCAtNTEuNTVdLCBbLTU4LjA1LCAtNTEuOV0sIFstNTkuNCwgLTUyLjJdLCBbLTU5Ljg1LCAtNTEuODVdLCBbLTYwLjcsIC01Mi4zXSwgWy02MS4yLCAtNTEuODVdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkZMSyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRmFsa2xhbmQgSXNsYW5kcyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1stNTIuNTU2NDI1LCAyLjUwNDcwNV0sIFstNTIuOTM5NjU3LCAyLjEyNDg1OF0sIFstNTMuNDE4NDY1LCAyLjA1MzM4OV0sIFstNTMuNTU0ODM5LCAyLjMzNDg5N10sIFstNTMuNzc4NTIxLCAyLjM3NjcwM10sIFstNTQuMDg4MDYzLCAyLjEwNTU1N10sIFstNTQuNTI0NzU0LCAyLjMxMTg0OV0sIFstNTQuMjcxMjMsIDIuNzM4NzQ4XSwgWy01NC4xODQyODQsIDMuMTk0MTcyXSwgWy01NC4wMTE1MDQsIDMuNjIyNTddLCBbLTU0LjM5OTU0MiwgNC4yMTI2MTFdLCBbLTU0LjQ3ODYzMywgNC44OTY3NTZdLCBbLTUzLjk1ODA0NSwgNS43NTY1NDhdLCBbLTUzLjYxODQ1MywgNS42NDY1MjldLCBbLTUyLjg4MjE0MSwgNS40MDk4NTFdLCBbLTUxLjgyMzM0MywgNC41NjU3NjhdLCBbLTUxLjY1Nzc5NywgNC4xNTYyMzJdLCBbLTUyLjI0OTMzOCwgMy4yNDEwOTRdLCBbLTUyLjU1NjQyNSwgMi41MDQ3MDVdXV0sIFtbWzkuNTYwMDE2LCA0Mi4xNTI0OTJdLCBbOS4yMjk3NTIsIDQxLjM4MDAwN10sIFs4Ljc3NTcyMywgNDEuNTgzNjEyXSwgWzguNTQ0MjEzLCA0Mi4yNTY1MTddLCBbOC43NDYwMDksIDQyLjYyODEyMl0sIFs5LjM5MDAwMSwgNDMuMDA5OTg1XSwgWzkuNTYwMDE2LCA0Mi4xNTI0OTJdXV0sIFtbWzMuNTg4MTg0LCA1MC4zNzg5OTJdLCBbNC4yODYwMjMsIDQ5LjkwNzQ5N10sIFs0Ljc5OTIyMiwgNDkuOTg1MzczXSwgWzUuNjc0MDUyLCA0OS41Mjk0ODRdLCBbNS44OTc3NTksIDQ5LjQ0MjY2N10sIFs2LjE4NjMyLCA0OS40NjM4MDNdLCBbNi42NTgyMywgNDkuMjAxOTU4XSwgWzguMDk5Mjc5LCA0OS4wMTc3ODRdLCBbNy41OTM2NzYsIDQ4LjMzMzAxOV0sIFs3LjQ2Njc1OSwgNDcuNjIwNTgyXSwgWzcuMTkyMjAyLCA0Ny40NDk3NjZdLCBbNi43MzY1NzEsIDQ3LjU0MTgwMV0sIFs2Ljc2ODcxNCwgNDcuMjg3NzA4XSwgWzYuMDM3Mzg5LCA0Ni43MjU3NzldLCBbNi4wMjI2MDksIDQ2LjI3Mjk5XSwgWzYuNTAwMSwgNDYuNDI5NjczXSwgWzYuODQzNTkzLCA0NS45OTExNDddLCBbNi44MDIzNTUsIDQ1LjcwODU4XSwgWzcuMDk2NjUyLCA0NS4zMzMwOTldLCBbNi43NDk5NTUsIDQ1LjAyODUxOF0sIFs3LjAwNzU2MiwgNDQuMjU0NzY3XSwgWzcuNTQ5NTk2LCA0NC4xMjc5MDFdLCBbNy40MzUxODUsIDQzLjY5Mzg0NV0sIFs2LjUyOTI0NSwgNDMuMTI4ODkyXSwgWzQuNTU2OTYzLCA0My4zOTk2NTFdLCBbMy4xMDA0MTEsIDQzLjA3NTIwMV0sIFsyLjk4NTk5OSwgNDIuNDczMDE1XSwgWzEuODI2NzkzLCA0Mi4zNDMzODVdLCBbMC43MDE1OTEsIDQyLjc5NTczNF0sIFswLjMzODA0NywgNDIuNTc5NTQ2XSwgWy0xLjUwMjc3MSwgNDMuMDM0MDE0XSwgWy0xLjkwMTM1MSwgNDMuNDIyODAyXSwgWy0xLjM4NDIyNSwgNDQuMDIyNjFdLCBbLTEuMTkzNzk4LCA0Ni4wMTQ5MThdLCBbLTIuMjI1NzI0LCA0Ny4wNjQzNjNdLCBbLTIuOTYzMjc2LCA0Ny41NzAzMjddLCBbLTQuNDkxNTU1LCA0Ny45NTQ5NTRdLCBbLTQuNTkyMzUsIDQ4LjY4NDE2XSwgWy0zLjI5NTgxNCwgNDguOTAxNjkyXSwgWy0xLjYxNjUxMSwgNDguNjQ0NDIxXSwgWy0xLjkzMzQ5NCwgNDkuNzc2MzQyXSwgWy0wLjk4OTQ2OSwgNDkuMzQ3Mzc2XSwgWzEuMzM4NzYxLCA1MC4xMjcxNzNdLCBbMS42MzkwMDEsIDUwLjk0NjYwNl0sIFsyLjUxMzU3MywgNTEuMTQ4NTA2XSwgWzIuNjU4NDIyLCA1MC43OTY4NDhdLCBbMy4xMjMyNTIsIDUwLjc4MDM2M10sIFszLjU4ODE4NCwgNTAuMzc4OTkyXV1dXSwgInR5cGUiOiAiTXVsdGlQb2x5Z29uIn0sICJpZCI6ICJGUkEiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkZyYW5jZSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMTEuMDkzNzczLCAtMy45Nzg4MjddLCBbMTAuMDY2MTM1LCAtMi45Njk0ODNdLCBbOS40MDUyNDUsIC0yLjE0NDMxM10sIFs4Ljc5Nzk5NiwgLTEuMTExMzAxXSwgWzguODMwMDg3LCAtMC43NzkwNzRdLCBbOS4wNDg0MiwgLTAuNDU5MzUxXSwgWzkuMjkxMzUxLCAwLjI2ODY2Nl0sIFs5LjQ5Mjg4OSwgMS4wMTAxMl0sIFs5LjgzMDI4NCwgMS4wNjc4OTRdLCBbMTEuMjg1MDc5LCAxLjA1NzY2Ml0sIFsxMS4yNzY0NDksIDIuMjYxMDUxXSwgWzExLjc1MTY2NSwgMi4zMjY3NThdLCBbMTIuMzU5MzgsIDIuMTkyODEyXSwgWzEyLjk1MTMzNCwgMi4zMjE2MTZdLCBbMTMuMDc1ODIyLCAyLjI2NzA5N10sIFsxMy4wMDMxMTQsIDEuODMwODk2XSwgWzEzLjI4MjYzMSwgMS4zMTQxODRdLCBbMTQuMDI2NjY5LCAxLjM5NTY3N10sIFsxNC4yNzYyNjYsIDEuMTk2OTNdLCBbMTMuODQzMzIxLCAwLjAzODc1OF0sIFsxNC4zMTY0MTgsIC0wLjU1MjYyN10sIFsxNC40MjU0NTYsIC0xLjMzMzQwN10sIFsxNC4yOTkyMSwgLTEuOTk4Mjc2XSwgWzEzLjk5MjQwNywgLTIuNDcwODA1XSwgWzEzLjEwOTYxOSwgLTIuNDI4NzRdLCBbMTIuNTc1Mjg0LCAtMS45NDg1MTFdLCBbMTIuNDk1NzAzLCAtMi4zOTE2ODhdLCBbMTEuODIwOTY0LCAtMi41MTQxNjFdLCBbMTEuNDc4MDM5LCAtMi43NjU2MTldLCBbMTEuODU1MTIyLCAtMy40MjY4NzFdLCBbMTEuMDkzNzczLCAtMy45Nzg4MjddXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkdBQiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiR2Fib24iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1stNS42NjE5NDksIDU0LjU1NDYwM10sIFstNi4xOTc4ODUsIDUzLjg2NzU2NV0sIFstNi45NTM3MywgNTQuMDczNzAyXSwgWy03LjU3MjE2OCwgNTQuMDU5OTU2XSwgWy03LjM2NjAzMSwgNTQuNTk1ODQxXSwgWy03LjU3MjE2OCwgNTUuMTMxNjIyXSwgWy02LjczMzg0NywgNTUuMTcyODZdLCBbLTUuNjYxOTQ5LCA1NC41NTQ2MDNdXV0sIFtbWy0zLjAwNTAwNSwgNTguNjM1XSwgWy00LjA3MzgyOCwgNTcuNTUzMDI1XSwgWy0zLjA1NTAwMiwgNTcuNjkwMDE5XSwgWy0xLjk1OTI4MSwgNTcuNjg0OF0sIFstMi4yMTk5ODgsIDU2Ljg3MDAxN10sIFstMy4xMTkwMDMsIDU1Ljk3Mzc5M10sIFstMi4wODUwMDksIDU1LjkwOTk5OF0sIFstMi4wMDU2NzYsIDU1LjgwNDkwM10sIFstMS4xMTQ5OTEsIDU0LjYyNDk4Nl0sIFstMC40MzA0ODUsIDU0LjQ2NDM3Nl0sIFswLjE4NDk4MSwgNTMuMzI1MDE0XSwgWzAuNDY5OTc3LCA1Mi45Mjk5OTldLCBbMS42ODE1MzEsIDUyLjczOTUyXSwgWzEuNTU5OTg4LCA1Mi4wOTk5OThdLCBbMS4wNTA1NjIsIDUxLjgwNjc2MV0sIFsxLjQ0OTg2NSwgNTEuMjg5NDI4XSwgWzAuNTUwMzM0LCA1MC43NjU3MzldLCBbLTAuNzg3NTE3LCA1MC43NzQ5ODldLCBbLTIuNDg5OTk4LCA1MC41MDAwMTldLCBbLTIuOTU2Mjc0LCA1MC42OTY4OF0sIFstMy42MTc0NDgsIDUwLjIyODM1Nl0sIFstNC41NDI1MDgsIDUwLjM0MTgzN10sIFstNS4yNDUwMjMsIDQ5Ljk2XSwgWy01Ljc3NjU2NywgNTAuMTU5Njc4XSwgWy00LjMwOTk5LCA1MS4yMTAwMDFdLCBbLTMuNDE0ODUxLCA1MS40MjYwMDldLCBbLTMuNDIyNzE5LCA1MS40MjY4NDhdLCBbLTQuOTg0MzY3LCA1MS41OTM0NjZdLCBbLTUuMjY3Mjk2LCA1MS45OTE0XSwgWy00LjIyMjM0NywgNTIuMzAxMzU2XSwgWy00Ljc3MDAxMywgNTIuODQwMDA1XSwgWy00LjU3OTk5OSwgNTMuNDk1MDA0XSwgWy0zLjA5MzgzMSwgNTMuNDA0NTQ3XSwgWy0zLjA5MjA4LCA1My40MDQ0NDFdLCBbLTIuOTQ1MDA5LCA1My45ODVdLCBbLTMuNjE0NzAxLCA1NC42MDA5MzddLCBbLTMuNjMwMDA1LCA1NC42MTUwMTNdLCBbLTQuODQ0MTY5LCA1NC43OTA5NzFdLCBbLTUuMDgyNTI3LCA1NS4wNjE2MDFdLCBbLTQuNzE5MTEyLCA1NS41MDg0NzNdLCBbLTUuMDQ3OTgxLCA1NS43ODM5ODZdLCBbLTUuNTg2Mzk4LCA1NS4zMTExNDZdLCBbLTUuNjQ0OTk5LCA1Ni4yNzUwMTVdLCBbLTYuMTQ5OTgxLCA1Ni43ODUwMV0sIFstNS43ODY4MjUsIDU3LjgxODg0OF0sIFstNS4wMDk5OTksIDU4LjYzMDAxM10sIFstNC4yMTE0OTUsIDU4LjU1MDg0NV0sIFstMy4wMDUwMDUsIDU4LjYzNV1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiR0JSIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJVbml0ZWQgS2luZ2RvbSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmMDNiMjAiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbNDEuNTU0MDg0LCA0MS41MzU2NTZdLCBbNDEuNzAzMTcxLCA0MS45NjI5NDNdLCBbNDEuNDUzNDcsIDQyLjY0NTEyM10sIFs0MC44NzU0NjksIDQzLjAxMzYyOF0sIFs0MC4zMjEzOTQsIDQzLjEyODYzNF0sIFszOS45NTUwMDksIDQzLjQzNDk5OF0sIFs0MC4wNzY5NjUsIDQzLjU1MzEwNF0sIFs0MC45MjIxODUsIDQzLjM4MjE1OV0sIFs0Mi4zOTQzOTUsIDQzLjIyMDMwOF0sIFs0My43NTYwMTcsIDQyLjc0MDgyOF0sIFs0My45MzEyLCA0Mi41NTQ5NzRdLCBbNDQuNTM3NjIzLCA0Mi43MTE5OTNdLCBbNDUuNDcwMjc5LCA0Mi41MDI3ODFdLCBbNDUuNzc2NDEsIDQyLjA5MjQ0NF0sIFs0Ni40MDQ5NTEsIDQxLjg2MDY3NV0sIFs0Ni4xNDU0MzIsIDQxLjcyMjgwMl0sIFs0Ni42Mzc5MDgsIDQxLjE4MTY3M10sIFs0Ni41MDE2MzcsIDQxLjA2NDQ0NV0sIFs0NS45NjI2MDEsIDQxLjEyMzg3M10sIFs0NS4yMTc0MjYsIDQxLjQxMTQ1Ml0sIFs0NC45NzI0OCwgNDEuMjQ4MTI5XSwgWzQzLjU4Mjc0NiwgNDEuMDkyMTQzXSwgWzQyLjYxOTU0OSwgNDEuNTgzMTczXSwgWzQxLjU1NDA4NCwgNDEuNTM1NjU2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJHRU8iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkdlb3JnaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzEuMDYwMTIyLCA1LjkyODgzN10sIFstMC41MDc2MzgsIDUuMzQzNDczXSwgWy0xLjA2MzYyNSwgNS4wMDA1NDhdLCBbLTEuOTY0NzA3LCA0LjcxMDQ2Ml0sIFstMi44NTYxMjUsIDQuOTk0NDc2XSwgWy0yLjgxMDcwMSwgNS4zODkwNTFdLCBbLTMuMjQ0MzcsIDYuMjUwNDcyXSwgWy0yLjk4MzU4NSwgNy4zNzk3MDVdLCBbLTIuNTYyMTksIDguMjE5NjI4XSwgWy0yLjgyNzQ5NiwgOS42NDI0NjFdLCBbLTIuOTYzODk2LCAxMC4zOTUzMzVdLCBbLTIuOTQwNDA5LCAxMC45NjI2OV0sIFstMS4yMDMzNTgsIDExLjAwOTgxOV0sIFstMC43NjE1NzYsIDEwLjkzNjkzXSwgWy0wLjQzODcwMiwgMTEuMDk4MzQxXSwgWzAuMDIzODAzLCAxMS4wMTg2ODJdLCBbLTAuMDQ5Nzg1LCAxMC43MDY5MThdLCBbMC4zNjc1OCwgMTAuMTkxMjEzXSwgWzAuMzY1OTAxLCA5LjQ2NTAwNF0sIFswLjQ2MTE5MiwgOC42NzcyMjNdLCBbMC43MTIwMjksIDguMzEyNDY1XSwgWzAuNDkwOTU3LCA3LjQxMTc0NF0sIFswLjU3MDM4NCwgNi45MTQzNTldLCBbMC44MzY5MzEsIDYuMjc5OTc5XSwgWzEuMDYwMTIyLCA1LjkyODgzN11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiR0hBIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJHaGFuYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTguNDM5Mjk4LCA3LjY4NjA0M10sIFstOC43MjIxMjQsIDcuNzExNjc0XSwgWy04LjkyNjA2NSwgNy4zMDkwMzddLCBbLTkuMjA4Nzg2LCA3LjMxMzkyMV0sIFstOS40MDMzNDgsIDcuNTI2OTA1XSwgWy05LjMzNzI4LCA3LjkyODUzNF0sIFstOS43NTUzNDIsIDguNTQxMDU1XSwgWy0xMC4wMTY1NjcsIDguNDI4NTA0XSwgWy0xMC4yMzAwOTQsIDguNDA2MjA2XSwgWy0xMC41MDU0NzcsIDguMzQ4ODk2XSwgWy0xMC40OTQzMTUsIDguNzE1NTQxXSwgWy0xMC42NTQ3NywgOC45NzcxNzhdLCBbLTEwLjYyMjM5NSwgOS4yNjc5MV0sIFstMTAuODM5MTUyLCA5LjY4ODI0Nl0sIFstMTEuMTE3NDgxLCAxMC4wNDU4NzNdLCBbLTExLjkxNzI3NywgMTAuMDQ2OTg0XSwgWy0xMi4xNTAzMzgsIDkuODU4NTcyXSwgWy0xMi40MjU5MjksIDkuODM1ODM0XSwgWy0xMi41OTY3MTksIDkuNjIwMTg4XSwgWy0xMi43MTE5NTgsIDkuMzQyNzEyXSwgWy0xMy4yNDY1NSwgOC45MDMwNDldLCBbLTEzLjY4NTE1NCwgOS40OTQ3NDRdLCBbLTE0LjA3NDA0NSwgOS44ODYxNjddLCBbLTE0LjMzMDA3NiwgMTAuMDE1NzJdLCBbLTE0LjU3OTY5OSwgMTAuMjE0NDY3XSwgWy0xNC42OTMyMzIsIDEwLjY1NjMwMV0sIFstMTQuODM5NTU0LCAxMC44NzY1NzJdLCBbLTE1LjEzMDMxMSwgMTEuMDQwNDEyXSwgWy0xNC42ODU2ODcsIDExLjUyNzgyNF0sIFstMTQuMzgyMTkyLCAxMS41MDkyNzJdLCBbLTE0LjEyMTQwNiwgMTEuNjc3MTE3XSwgWy0xMy45MDA4LCAxMS42Nzg3MTldLCBbLTEzLjc0MzE2MSwgMTEuODExMjY5XSwgWy0xMy44MjgyNzIsIDEyLjE0MjY0NF0sIFstMTMuNzE4NzQ0LCAxMi4yNDcxODZdLCBbLTEzLjcwMDQ3NiwgMTIuNTg2MTgzXSwgWy0xMy4yMTc4MTgsIDEyLjU3NTg3NF0sIFstMTIuNDk5MDUxLCAxMi4zMzIwOV0sIFstMTIuMjc4NTk5LCAxMi4zNTQ0NF0sIFstMTIuMjAzNTY1LCAxMi40NjU2NDhdLCBbLTExLjY1ODMwMSwgMTIuMzg2NTgzXSwgWy0xMS41MTM5NDMsIDEyLjQ0Mjk4OF0sIFstMTEuNDU2MTY5LCAxMi4wNzY4MzRdLCBbLTExLjI5NzU3NCwgMTIuMDc3OTcxXSwgWy0xMS4wMzY1NTYsIDEyLjIxMTI0NV0sIFstMTAuODcwODMsIDEyLjE3Nzg4N10sIFstMTAuNTkzMjI0LCAxMS45MjM5NzVdLCBbLTEwLjE2NTIxNCwgMTEuODQ0MDg0XSwgWy05Ljg5MDk5MywgMTIuMDYwNDc5XSwgWy05LjU2NzkxMiwgMTIuMTk0MjQzXSwgWy05LjMyNzYxNiwgMTIuMzM0Mjg2XSwgWy05LjEyNzQ3NCwgMTIuMzA4MDZdLCBbLTguOTA1MjY1LCAxMi4wODgzNThdLCBbLTguNzg2MDk5LCAxMS44MTI1NjFdLCBbLTguMzc2MzA1LCAxMS4zOTM2NDZdLCBbLTguNTgxMzA1LCAxMS4xMzYyNDZdLCBbLTguNjIwMzIxLCAxMC44MTA4OTFdLCBbLTguNDA3MzExLCAxMC45MDkyNTddLCBbLTguMjgyMzU3LCAxMC43OTI1OTddLCBbLTguMzM1Mzc3LCAxMC40OTQ4MTJdLCBbLTguMDI5OTQ0LCAxMC4yMDY1MzVdLCBbLTguMjI5MzM3LCAxMC4xMjkwMl0sIFstOC4zMDk2MTYsIDkuNzg5NTMyXSwgWy04LjA3OTExNCwgOS4zNzYyMjRdLCBbLTcuODMyMSwgOC41NzU3MDRdLCBbLTguMjAzNDk5LCA4LjQ1NTQ1M10sIFstOC4yOTkwNDksIDguMzE2NDQ0XSwgWy04LjIyMTc5MiwgOC4xMjMzMjldLCBbLTguMjgwNzAzLCA3LjY4NzE4XSwgWy04LjQzOTI5OCwgNy42ODYwNDNdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkdJTiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiR3VpbmVhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stMTYuODQxNTI1LCAxMy4xNTEzOTRdLCBbLTE2LjcxMzcyOSwgMTMuNTk0OTU5XSwgWy0xNS42MjQ1OTYsIDEzLjYyMzU4N10sIFstMTUuMzk4NzcsIDEzLjg2MDM2OV0sIFstMTUuMDgxNzM1LCAxMy44NzY0OTJdLCBbLTE0LjY4NzAzMSwgMTMuNjMwMzU3XSwgWy0xNC4zNzY3MTQsIDEzLjYyNTY4XSwgWy0xNC4wNDY5OTIsIDEzLjc5NDA2OF0sIFstMTMuODQ0OTYzLCAxMy41MDUwNDJdLCBbLTE0LjI3NzcwMiwgMTMuMjgwNTg1XSwgWy0xNC43MTIxOTcsIDEzLjI5ODIwN10sIFstMTUuMTQxMTYzLCAxMy41MDk1MTJdLCBbLTE1LjUxMTgxMywgMTMuMjc4NTddLCBbLTE1LjY5MTAwMSwgMTMuMjcwMzUzXSwgWy0xNS45MzEyOTYsIDEzLjEzMDI4NF0sIFstMTYuODQxNTI1LCAxMy4xNTEzOTRdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkdNQiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiR2FtYmlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stMTUuMTMwMzExLCAxMS4wNDA0MTJdLCBbLTE1LjY2NDE4LCAxMS40NTg0NzRdLCBbLTE2LjA4NTIxNCwgMTEuNTI0NTk0XSwgWy0xNi4zMTQ3ODcsIDExLjgwNjUxNV0sIFstMTYuMzA4OTQ3LCAxMS45NTg3MDJdLCBbLTE2LjYxMzgzOCwgMTIuMTcwOTExXSwgWy0xNi42Nzc0NTIsIDEyLjM4NDg1Ml0sIFstMTYuMTQ3NzE3LCAxMi41NDc3NjJdLCBbLTE1LjgxNjU3NCwgMTIuNTE1NTY3XSwgWy0xNS41NDg0NzcsIDEyLjYyODE3XSwgWy0xMy43MDA0NzYsIDEyLjU4NjE4M10sIFstMTMuNzE4NzQ0LCAxMi4yNDcxODZdLCBbLTEzLjgyODI3MiwgMTIuMTQyNjQ0XSwgWy0xMy43NDMxNjEsIDExLjgxMTI2OV0sIFstMTMuOTAwOCwgMTEuNjc4NzE5XSwgWy0xNC4xMjE0MDYsIDExLjY3NzExN10sIFstMTQuMzgyMTkyLCAxMS41MDkyNzJdLCBbLTE0LjY4NTY4NywgMTEuNTI3ODI0XSwgWy0xNS4xMzAzMTEsIDExLjA0MDQxMl1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiR05CIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJHdWluZWEgQmlzc2F1IiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiYmxhY2siLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbOS40OTI4ODksIDEuMDEwMTJdLCBbOS4zMDU2MTMsIDEuMTYwOTExXSwgWzkuNjQ5MTU4LCAyLjI4Mzg2Nl0sIFsxMS4yNzY0NDksIDIuMjYxMDUxXSwgWzExLjI4NTA3OSwgMS4wNTc2NjJdLCBbOS44MzAyODQsIDEuMDY3ODk0XSwgWzkuNDkyODg5LCAxLjAxMDEyXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJHTlEiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkVxdWF0b3JpYWwgR3VpbmVhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbMjMuNjk5OTgsIDM1LjcwNTAwNF0sIFsyNC4yNDY2NjUsIDM1LjM2ODAyMl0sIFsyNS4wMjUwMTUsIDM1LjQyNDk5Nl0sIFsyNS43NjkyMDgsIDM1LjM1NDAxOF0sIFsyNS43NDUwMjMsIDM1LjE3OTk5OF0sIFsyNi4yOTAwMDMsIDM1LjI5OTk5XSwgWzI2LjE2NDk5OCwgMzUuMDA0OTk1XSwgWzI0LjcyNDk4MiwgMzQuOTE5OTg4XSwgWzI0LjczNTAwNywgMzUuMDg0OTkxXSwgWzIzLjUxNDk3OCwgMzUuMjc5OTkyXSwgWzIzLjY5OTk4LCAzNS43MDUwMDRdXV0sIFtbWzI2LjYwNDE5NiwgNDEuNTYyMTE1XSwgWzI2LjI5NDYwMiwgNDAuOTM2MjYxXSwgWzI2LjA1Njk0MiwgNDAuODI0MTIzXSwgWzI1LjQ0NzY3NywgNDAuODUyNTQ1XSwgWzI0LjkyNTg0OCwgNDAuOTQ3MDYyXSwgWzIzLjcxNDgxMSwgNDAuNjg3MTI5XSwgWzI0LjQwNzk5OSwgNDAuMTI0OTkzXSwgWzIzLjg5OTk2OCwgMzkuOTYyMDA2XSwgWzIzLjM0Mjk5OSwgMzkuOTYwOTk4XSwgWzIyLjgxMzk4OCwgNDAuNDc2MDA1XSwgWzIyLjYyNjI5OSwgNDAuMjU2NTYxXSwgWzIyLjg0OTc0OCwgMzkuNjU5MzExXSwgWzIzLjM1MDAyNywgMzkuMTkwMDExXSwgWzIyLjk3MzA5OSwgMzguOTcwOTAzXSwgWzIzLjUzMDAxNiwgMzguNTEwMDAxXSwgWzI0LjAyNTAyNSwgMzguMjE5OTkzXSwgWzI0LjA0MDAxMSwgMzcuNjU1MDE1XSwgWzIzLjExNTAwMywgMzcuOTIwMDExXSwgWzIzLjQwOTk3MiwgMzcuNDA5OTkxXSwgWzIyLjc3NDk3MiwgMzcuMzA1MDFdLCBbMjMuMTU0MjI1LCAzNi40MjI1MDZdLCBbMjIuNDkwMDI4LCAzNi40MV0sIFsyMS42NzAwMjYsIDM2Ljg0NDk4Nl0sIFsyMS4yOTUwMTEsIDM3LjY0NDk4OV0sIFsyMS4xMjAwMzQsIDM4LjMxMDMyM10sIFsyMC43MzAwMzIsIDM4Ljc2OTk4NV0sIFsyMC4yMTc3MTIsIDM5LjM0MDIzNV0sIFsyMC4xNTAwMTYsIDM5LjYyNDk5OF0sIFsyMC42MTUsIDQwLjExMDAwN10sIFsyMC42NzQ5OTcsIDQwLjQzNV0sIFsyMC45OTk5OSwgNDAuNTgwMDA0XSwgWzIxLjAyMDA0LCA0MC44NDI3MjddLCBbMjEuNjc0MTYxLCA0MC45MzEyNzVdLCBbMjIuMDU1Mzc4LCA0MS4xNDk4NjZdLCBbMjIuNTk3MzA4LCA0MS4xMzA0ODddLCBbMjIuNzYxNzcsIDQxLjMwNDhdLCBbMjIuOTUyMzc3LCA0MS4zMzc5OTRdLCBbMjMuNjkyMDc0LCA0MS4zMDkwODFdLCBbMjQuNDkyNjQ1LCA0MS41ODM4OTZdLCBbMjUuMTk3MjAxLCA0MS4yMzQ0ODZdLCBbMjYuMTA2MTM4LCA0MS4zMjg4OTldLCBbMjYuMTE3MDQyLCA0MS44MjY5MDVdLCBbMjYuNjA0MTk2LCA0MS41NjIxMTVdXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIkdSQyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiR3JlZWNlIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stNDYuNzYzNzksIDgyLjYyNzk2XSwgWy00My40MDY0NCwgODMuMjI1MTZdLCBbLTM5Ljg5NzUzLCA4My4xODAxOF0sIFstMzguNjIyMTQsIDgzLjU0OTA1XSwgWy0zNS4wODc4NywgODMuNjQ1MTNdLCBbLTI3LjEwMDQ2LCA4My41MTk2Nl0sIFstMjAuODQ1MzksIDgyLjcyNjY5XSwgWy0yMi42OTE4MiwgODIuMzQxNjVdLCBbLTI2LjUxNzUzLCA4Mi4yOTc2NV0sIFstMzEuOSwgODIuMl0sIFstMzEuMzk2NDYsIDgyLjAyMTU0XSwgWy0yNy44NTY2NiwgODIuMTMxNzhdLCBbLTI0Ljg0NDQ4LCA4MS43ODY5N10sIFstMjIuOTAzMjgsIDgyLjA5MzE3XSwgWy0yMi4wNzE3NSwgODEuNzM0NDldLCBbLTIzLjE2OTYxLCA4MS4xNTI3MV0sIFstMjAuNjIzNjMsIDgxLjUyNDYyXSwgWy0xNS43NjgxOCwgODEuOTEyNDVdLCBbLTEyLjc3MDE4LCA4MS43MTg4NV0sIFstMTIuMjA4NTUsIDgxLjI5MTU0XSwgWy0xNi4yODUzMywgODAuNTgwMDRdLCBbLTE2Ljg1LCA4MC4zNV0sIFstMjAuMDQ2MjQsIDgwLjE3NzA4XSwgWy0xNy43MzAzNSwgODAuMTI5MTJdLCBbLTE4LjksIDc5LjRdLCBbLTE5LjcwNDk5LCA3OC43NTEyOF0sIFstMTkuNjczNTMsIDc3LjYzODU5XSwgWy0xOC40NzI4NSwgNzYuOTg1NjVdLCBbLTIwLjAzNTAzLCA3Ni45NDQzNF0sIFstMjEuNjc5NDQsIDc2LjYyNzk1XSwgWy0xOS44MzQwNywgNzYuMDk4MDhdLCBbLTE5LjU5ODk2LCA3NS4yNDgzOF0sIFstMjAuNjY4MTgsIDc1LjE1NTg1XSwgWy0xOS4zNzI4MSwgNzQuMjk1NjFdLCBbLTIxLjU5NDIyLCA3NC4yMjM4Ml0sIFstMjAuNDM0NTQsIDczLjgxNzEzXSwgWy0yMC43NjIzNCwgNzMuNDY0MzZdLCBbLTIyLjE3MjIxLCA3My4zMDk1NV0sIFstMjMuNTY1OTMsIDczLjMwNjYzXSwgWy0yMi4zMTMxMSwgNzIuNjI5MjhdLCBbLTIyLjI5OTU0LCA3Mi4xODQwOV0sIFstMjQuMjc4MzQsIDcyLjU5Nzg4XSwgWy0yNC43OTI5NiwgNzIuMzMwMl0sIFstMjMuNDQyOTYsIDcyLjA4MDE2XSwgWy0yMi4xMzI4MSwgNzEuNDY4OThdLCBbLTIxLjc1MzU2LCA3MC42NjM2OV0sIFstMjMuNTM2MDMsIDcwLjQ3MV0sIFstMjQuMzA3MDIsIDcwLjg1NjQ5XSwgWy0yNS41NDM0MSwgNzEuNDMwOTRdLCBbLTI1LjIwMTM1LCA3MC43NTIyNl0sIFstMjYuMzYyNzYsIDcwLjIyNjQ2XSwgWy0yMy43Mjc0MiwgNzAuMTg0MDFdLCBbLTIyLjM0OTAyLCA3MC4xMjk0Nl0sIFstMjUuMDI5MjcsIDY5LjI1ODhdLCBbLTI3Ljc0NzM3LCA2OC40NzA0Nl0sIFstMzAuNjczNzEsIDY4LjEyNTAzXSwgWy0zMS43NzY2NSwgNjguMTIwNzhdLCBbLTMyLjgxMTA1LCA2Ny43MzU0N10sIFstMzQuMjAxOTYsIDY2LjY3OTc0XSwgWy0zNi4zNTI4NCwgNjUuOTc4OV0sIFstMzcuMDQzNzgsIDY1LjkzNzY4XSwgWy0zOC4zNzUwNSwgNjUuNjkyMTNdLCBbLTM5LjgxMjIyLCA2NS40NTg0OF0sIFstNDAuNjY4OTksIDY0LjgzOTk3XSwgWy00MC42ODI4MSwgNjQuMTM5MDJdLCBbLTQxLjE4ODcsIDYzLjQ4MjQ2XSwgWy00Mi44MTkzOCwgNjIuNjgyMzNdLCBbLTQyLjQxNjY2LCA2MS45MDA5M10sIFstNDIuODY2MTksIDYxLjA3NDA0XSwgWy00My4zNzg0LCA2MC4wOTc3Ml0sIFstNDQuNzg3NSwgNjAuMDM2NzZdLCBbLTQ2LjI2MzY0LCA2MC44NTMyOF0sIFstNDguMjYyOTQsIDYwLjg1ODQzXSwgWy00OS4yMzMwOCwgNjEuNDA2ODFdLCBbLTQ5LjkwMDM5LCA2Mi4zODMzNl0sIFstNTEuNjMzMjUsIDYzLjYyNjkxXSwgWy01Mi4xNDAxNCwgNjQuMjc4NDJdLCBbLTUyLjI3NjU5LCA2NS4xNzY3XSwgWy01My42NjE2NiwgNjYuMDk5NTddLCBbLTUzLjMwMTYxLCA2Ni44MzY1XSwgWy01My45NjkxMSwgNjcuMTg4OTldLCBbLTUyLjk4MDQsIDY4LjM1NzU5XSwgWy01MS40NzUzNiwgNjguNzI5NThdLCBbLTUxLjA4MDQxLCA2OS4xNDc4MV0sIFstNTAuODcxMjIsIDY5LjkyOTFdLCBbLTUyLjAxMzU4NSwgNjkuNTc0OTI1XSwgWy01Mi41NTc5MiwgNjkuNDI2MTZdLCBbLTUzLjQ1NjI5LCA2OS4yODM2MjVdLCBbLTU0LjY4MzM2LCA2OS42MTAwM10sIFstNTQuNzUwMDEsIDcwLjI4OTMyXSwgWy01NC4zNTg4NCwgNzAuODIxMzE1XSwgWy01My40MzEzMTUsIDcwLjgzNTc1NV0sIFstNTEuMzkwMTQsIDcwLjU2OTc4XSwgWy01My4xMDkzNywgNzEuMjA0ODVdLCBbLTU0LjAwNDIyLCA3MS41NDcxOV0sIFstNTUsIDcxLjQwNjUzN10sIFstNTUuODM0NjgsIDcxLjY1NDQ0XSwgWy01NC43MTgxOSwgNzIuNTg2MjVdLCBbLTU1LjMyNjM0LCA3Mi45NTg2MV0sIFstNTYuMTIwMDMsIDczLjY0OTc3XSwgWy01Ny4zMjM2MywgNzQuNzEwMjZdLCBbLTU4LjU5Njc5LCA3NS4wOTg2MV0sIFstNTguNTg1MTYsIDc1LjUxNzI3XSwgWy02MS4yNjg2MSwgNzYuMTAyMzhdLCBbLTYzLjM5MTY1LCA3Ni4xNzUyXSwgWy02Ni4wNjQyNywgNzYuMTM0ODZdLCBbLTY4LjUwNDM4LCA3Ni4wNjE0MV0sIFstNjkuNjY0ODUsIDc2LjM3OTc1XSwgWy03MS40MDI1NywgNzcuMDA4NTddLCBbLTY4Ljc3NjcxLCA3Ny4zMjMxMl0sIFstNjYuNzYzOTcsIDc3LjM3NTk1XSwgWy03MS4wNDI5MywgNzcuNjM1OTVdLCBbLTczLjI5NywgNzguMDQ0MTldLCBbLTczLjE1OTM4LCA3OC40MzI3MV0sIFstNjkuMzczNDUsIDc4LjkxMzg4XSwgWy02NS43MTA3LCA3OS4zOTQzNl0sIFstNjUuMzIzOSwgNzkuNzU4MTRdLCBbLTY4LjAyMjk4LCA4MC4xMTcyMV0sIFstNjcuMTUxMjksIDgwLjUxNTgyXSwgWy02My42ODkyNSwgODEuMjEzOTZdLCBbLTYyLjIzNDQ0LCA4MS4zMjExXSwgWy02Mi42NTExNiwgODEuNzcwNDJdLCBbLTYwLjI4MjQ5LCA4Mi4wMzM2M10sIFstNTcuMjA3NDQsIDgyLjE5MDc0XSwgWy01NC4xMzQ0MiwgODIuMTk5NjJdLCBbLTUzLjA0MzI4LCA4MS44ODgzM10sIFstNTAuMzkwNjEsIDgyLjQzODgzXSwgWy00OC4wMDM4NiwgODIuMDY0ODFdLCBbLTQ2LjU5OTg0LCA4MS45ODU5NDVdLCBbLTQ0LjUyMywgODEuNjYwN10sIFstNDYuOTAwNywgODIuMTk5NzldLCBbLTQ2Ljc2Mzc5LCA4Mi42Mjc5Nl1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiR1JMIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJHcmVlbmxhbmQiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICJibGFjayIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stOTAuMDk1NTU1LCAxMy43MzUzMzhdLCBbLTkwLjYwODYyNCwgMTMuOTA5NzcxXSwgWy05MS4yMzI0MSwgMTMuOTI3ODMyXSwgWy05MS42ODk3NDcsIDE0LjEyNjIxOF0sIFstOTIuMjI3NzUsIDE0LjUzODgyOV0sIFstOTIuMjAzMjMsIDE0LjgzMDEwM10sIFstOTIuMDg3MjE2LCAxNS4wNjQ1ODVdLCBbLTkyLjIyOTI0OSwgMTUuMjUxNDQ3XSwgWy05MS43NDc5NiwgMTYuMDY2NTY1XSwgWy05MC40NjQ0NzMsIDE2LjA2OTU2Ml0sIFstOTAuNDM4ODY3LCAxNi40MTAxMV0sIFstOTAuNjAwODQ3LCAxNi40NzA3NzhdLCBbLTkwLjcxMTgyMiwgMTYuNjg3NDgzXSwgWy05MS4wODE2NywgMTYuOTE4NDc3XSwgWy05MS40NTM5MjEsIDE3LjI1MjE3N10sIFstOTEuMDAyMjY5LCAxNy4yNTQ2NThdLCBbLTkxLjAwMTUyLCAxNy44MTc1OTVdLCBbLTkwLjA2NzkzNCwgMTcuODE5MzI2XSwgWy04OS4xNDMwOCwgMTcuODA4MzE5XSwgWy04OS4xNTA4MDYsIDE3LjAxNTU3N10sIFstODkuMjI5MTIyLCAxNS44ODY5MzhdLCBbLTg4LjkzMDYxMywgMTUuODg3MjczXSwgWy04OC42MDQ1ODYsIDE1LjcwNjM4XSwgWy04OC41MTgzNjQsIDE1Ljg1NTM4OV0sIFstODguMjI1MDIzLCAxNS43Mjc3MjJdLCBbLTg4LjY4MDY4LCAxNS4zNDYyNDddLCBbLTg5LjE1NDgxMSwgMTUuMDY2NDE5XSwgWy04OS4yMjUyMiwgMTQuODc0Mjg2XSwgWy04OS4xNDU1MzUsIDE0LjY3ODAxOV0sIFstODkuMzUzMzI2LCAxNC40MjQxMzNdLCBbLTg5LjU4NzM0MywgMTQuMzYyNTg2XSwgWy04OS41MzQyMTksIDE0LjI0NDgxNl0sIFstODkuNzIxOTM0LCAxNC4xMzQyMjhdLCBbLTkwLjA2NDY3OCwgMTMuODgxOTddLCBbLTkwLjA5NTU1NSwgMTMuNzM1MzM4XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJHVE0iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkd1YXRlbWFsYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTU5Ljc1ODI4NSwgOC4zNjcwMzVdLCBbLTU5LjEwMTY4NCwgNy45OTkyMDJdLCBbLTU4LjQ4Mjk2MiwgNy4zNDc2OTFdLCBbLTU4LjQ1NDg3NiwgNi44MzI3ODddLCBbLTU4LjA3ODEwMywgNi44MDkwOTRdLCBbLTU3LjU0MjIxOSwgNi4zMjEyNjhdLCBbLTU3LjE0NzQzNiwgNS45NzMxNV0sIFstNTcuMzA3MjQ2LCA1LjA3MzU2N10sIFstNTcuOTE0Mjg5LCA0LjgxMjYyNl0sIFstNTcuODYwMjEsIDQuNTc2ODAxXSwgWy01OC4wNDQ2OTQsIDQuMDYwODY0XSwgWy01Ny42MDE1NjksIDMuMzM0NjU1XSwgWy01Ny4yODE0MzMsIDMuMzMzNDkyXSwgWy01Ny4xNTAwOTgsIDIuNzY4OTI3XSwgWy01Ni41MzkzODYsIDEuODk5NTIzXSwgWy01Ni43ODI3MDQsIDEuODYzNzExXSwgWy01Ny4zMzU4MjMsIDEuOTQ4NTM4XSwgWy01Ny42NjA5NzEsIDEuNjgyNTg1XSwgWy01OC4xMTM0NSwgMS41MDcxOTVdLCBbLTU4LjQyOTQ3NywgMS40NjM5NDJdLCBbLTU4LjU0MDAxMywgMS4yNjgwODhdLCBbLTU5LjAzMDg2MiwgMS4zMTc2OThdLCBbLTU5LjY0NjA0NCwgMS43ODY4OTRdLCBbLTU5LjcxODU0NiwgMi4yNDk2M10sIFstNTkuOTc0NTI1LCAyLjc1NTIzM10sIFstNTkuODE1NDEzLCAzLjYwNjQ5OV0sIFstNTkuNTM4MDQsIDMuOTU4ODAzXSwgWy01OS43Njc0MDYsIDQuNDIzNTAzXSwgWy02MC4xMTEwMDIsIDQuNTc0OTY3XSwgWy01OS45ODA5NTksIDUuMDE0MDYxXSwgWy02MC4yMTM2ODMsIDUuMjQ0NDg2XSwgWy02MC43MzM1NzQsIDUuMjAwMjc3XSwgWy02MS40MTAzMDMsIDUuOTU5MDY4XSwgWy02MS4xMzk0MTUsIDYuMjM0Mjk3XSwgWy02MS4xNTkzMzYsIDYuNjk2MDc3XSwgWy02MC41NDM5OTksIDYuODU2NTg0XSwgWy02MC4yOTU2NjgsIDcuMDQzOTExXSwgWy02MC42Mzc5NzMsIDcuNDE1XSwgWy02MC41NTA1ODgsIDcuNzc5NjAzXSwgWy01OS43NTgyODUsIDguMzY3MDM1XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJHVVkiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkd1eWFuYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTg3LjMxNjY1NCwgMTIuOTg0Njg2XSwgWy04Ny40ODk0MDksIDEzLjI5NzUzNV0sIFstODcuNzkzMTExLCAxMy4zODQ0OF0sIFstODcuNzIzNTAzLCAxMy43ODUwNV0sIFstODcuODU5NTE1LCAxMy44OTMzMTJdLCBbLTg4LjA2NTM0MywgMTMuOTY0NjI2XSwgWy04OC41MDM5OTgsIDEzLjg0NTQ4Nl0sIFstODguNTQxMjMxLCAxMy45ODAxNTVdLCBbLTg4Ljg0MzA3MywgMTQuMTQwNTA3XSwgWy04OS4wNTg1MTIsIDE0LjM0MDAyOV0sIFstODkuMzUzMzI2LCAxNC40MjQxMzNdLCBbLTg5LjE0NTUzNSwgMTQuNjc4MDE5XSwgWy04OS4yMjUyMiwgMTQuODc0Mjg2XSwgWy04OS4xNTQ4MTEsIDE1LjA2NjQxOV0sIFstODguNjgwNjgsIDE1LjM0NjI0N10sIFstODguMjI1MDIzLCAxNS43Mjc3MjJdLCBbLTg4LjEyMTE1MywgMTUuNjg4NjU1XSwgWy04Ny45MDE4MTMsIDE1Ljg2NDQ1OF0sIFstODcuNjE1NjgsIDE1Ljg3ODc5OV0sIFstODcuNTIyOTIxLCAxNS43OTcyNzldLCBbLTg3LjM2Nzc2MiwgMTUuODQ2OTRdLCBbLTg2LjkwMzE5MSwgMTUuNzU2NzEzXSwgWy04Ni40NDA5NDYsIDE1Ljc4MjgzNV0sIFstODYuMTE5MjM0LCAxNS44OTM0NDldLCBbLTg2LjAwMTk1NCwgMTYuMDA1NDA2XSwgWy04NS42ODMzMTcsIDE1Ljk1MzY1Ml0sIFstODUuNDQ0MDA0LCAxNS44ODU3NDldLCBbLTg1LjE4MjQ0NCwgMTUuOTA5MTU4XSwgWy04NC45ODM3MjIsIDE1Ljk5NTkyM10sIFstODQuNTI2OTgsIDE1Ljg1NzIyNF0sIFstODQuMzY4MjU2LCAxNS44MzUxNThdLCBbLTg0LjA2MzA1NSwgMTUuNjQ4MjQ0XSwgWy04My43NzM5NzcsIDE1LjQyNDA3Ml0sIFstODMuNDEwMzgxLCAxNS4yNzA5MDNdLCBbLTgzLjE0NzIxOSwgMTQuOTk1ODI5XSwgWy04My40ODk5ODksIDE1LjAxNjI2N10sIFstODMuNjI4NTg1LCAxNC44ODAwNzRdLCBbLTgzLjk3NTcyMSwgMTQuNzQ5NDM2XSwgWy04NC4yMjgzNDIsIDE0Ljc0ODc2NF0sIFstODQuNDQ5MzM2LCAxNC42MjE2MTRdLCBbLTg0LjY0OTU4MiwgMTQuNjY2ODA1XSwgWy04NC44MjAwMzcsIDE0LjgxOTU4N10sIFstODQuOTI0NTAxLCAxNC43OTA0OTNdLCBbLTg1LjA1Mjc4NywgMTQuNTUxNTQxXSwgWy04NS4xNDg3NTEsIDE0LjU2MDE5N10sIFstODUuMTY1MzY1LCAxNC4zNTQzN10sIFstODUuNTE0NDEzLCAxNC4wNzkwMTJdLCBbLTg1LjY5ODY2NSwgMTMuOTYwMDc4XSwgWy04NS44MDEyOTUsIDEzLjgzNjA1NV0sIFstODYuMDk2MjY0LCAxNC4wMzgxODddLCBbLTg2LjMxMjE0MiwgMTMuNzcxMzU2XSwgWy04Ni41MjA3MDgsIDEzLjc3ODQ4N10sIFstODYuNzU1MDg3LCAxMy43NTQ4NDVdLCBbLTg2LjczMzgyMiwgMTMuMjYzMDkzXSwgWy04Ni44ODA1NTcsIDEzLjI1NDIwNF0sIFstODcuMDA1NzY5LCAxMy4wMjU3OTRdLCBbLTg3LjMxNjY1NCwgMTIuOTg0Njg2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJITkQiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkhvbmR1cmFzIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxOC44Mjk4MzgsIDQ1LjkwODg3OF0sIFsxOS4wNzI3NjksIDQ1LjUyMTUxMV0sIFsxOS4zOTA0NzYsIDQ1LjIzNjUxNl0sIFsxOS4wMDU0ODYsIDQ0Ljg2MDIzNF0sIFsxOC41NTMyMTQsIDQ1LjA4MTU5XSwgWzE3Ljg2MTc4MywgNDUuMDY3NzRdLCBbMTcuMDAyMTQ2LCA0NS4yMzM3NzddLCBbMTYuNTM0OTM5LCA0NS4yMTE2MDhdLCBbMTYuMzE4MTU3LCA0NS4wMDQxMjddLCBbMTUuOTU5MzY3LCA0NS4yMzM3NzddLCBbMTUuNzUwMDI2LCA0NC44MTg3MTJdLCBbMTYuMjM5NjYsIDQ0LjM1MTE0M10sIFsxNi40NTY0NDMsIDQ0LjA0MTI0XSwgWzE2LjkxNjE1NiwgNDMuNjY3NzIyXSwgWzE3LjI5NzM3MywgNDMuNDQ2MzQxXSwgWzE3LjY3NDkyMiwgNDMuMDI4NTYzXSwgWzE4LjU2LCA0Mi42NV0sIFsxOC40NTAwMTYsIDQyLjQ3OTk5MV0sIFsxNy41MDk5NywgNDIuODQ5OTk1XSwgWzE2LjkzMDAwNiwgNDMuMjA5OTk4XSwgWzE2LjAxNTM4NSwgNDMuNTA3MjE1XSwgWzE1LjE3NDQ1NCwgNDQuMjQzMTkxXSwgWzE1LjM3NjI1LCA0NC4zMTc5MTVdLCBbMTQuOTIwMzA5LCA0NC43Mzg0ODRdLCBbMTQuOTAxNjAyLCA0NS4wNzYwNl0sIFsxNC4yNTg3NDgsIDQ1LjIzMzc3N10sIFsxMy45NTIyNTUsIDQ0LjgwMjEyNF0sIFsxMy42NTY5NzYsIDQ1LjEzNjkzNV0sIFsxMy42Nzk0MDMsIDQ1LjQ4NDE0OV0sIFsxMy43MTUwNiwgNDUuNTAwMzI0XSwgWzE0LjQxMTk2OCwgNDUuNDY2MTY2XSwgWzE0LjU5NTEwOSwgNDUuNjM0OTQxXSwgWzE0LjkzNTI0NCwgNDUuNDcxNjk1XSwgWzE1LjMyNzY3NSwgNDUuNDUyMzE2XSwgWzE1LjMyMzk1NCwgNDUuNzMxNzgzXSwgWzE1LjY3MTUzLCA0NS44MzQxNTRdLCBbMTUuNzY4NzMzLCA0Ni4yMzgxMDhdLCBbMTYuNTY0ODA4LCA0Ni41MDM3NTFdLCBbMTYuODgyNTE1LCA0Ni4zODA2MzJdLCBbMTcuNjMwMDY2LCA0NS45NTE3NjldLCBbMTguNDU2MDYyLCA0NS43NTk0ODFdLCBbMTguODI5ODM4LCA0NS45MDg4NzhdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkhSViIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQ3JvYXRpYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTczLjE4OTc5MSwgMTkuOTE1Njg0XSwgWy03Mi41Nzk2NzMsIDE5Ljg3MTUwMV0sIFstNzEuNzEyMzYxLCAxOS43MTQ0NTZdLCBbLTcxLjYyNDg3MywgMTkuMTY5ODM4XSwgWy03MS43MDEzMDMsIDE4Ljc4NTQxN10sIFstNzEuOTQ1MTEyLCAxOC42MTY5XSwgWy03MS42ODc3MzgsIDE4LjMxNjY2XSwgWy03MS43MDgzMDUsIDE4LjA0NDk5N10sIFstNzIuMzcyNDc2LCAxOC4yMTQ5NjFdLCBbLTcyLjg0NDQxMSwgMTguMTQ1NjExXSwgWy03My40NTQ1NTUsIDE4LjIxNzkwNl0sIFstNzMuOTIyNDMzLCAxOC4wMzA5OTNdLCBbLTc0LjQ1ODAzNCwgMTguMzQyNTVdLCBbLTc0LjM2OTkyNSwgMTguNjY0OTA4XSwgWy03My40NDk1NDIsIDE4LjUyNjA1M10sIFstNzIuNjk0OTM3LCAxOC40NDU3OTldLCBbLTcyLjMzNDg4MiwgMTguNjY4NDIyXSwgWy03Mi43OTE2NSwgMTkuMTAxNjI1XSwgWy03Mi43ODQxMDUsIDE5LjQ4MzU5MV0sIFstNzMuNDE1MDIyLCAxOS42Mzk1NTFdLCBbLTczLjE4OTc5MSwgMTkuOTE1Njg0XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJIVEkiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkhhaXRpIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxNi4yMDIyOTgsIDQ2Ljg1MjM4Nl0sIFsxNi41MzQyNjgsIDQ3LjQ5NjE3MV0sIFsxNi4zNDA1ODQsIDQ3LjcxMjkwMl0sIFsxNi45MDM3NTQsIDQ3LjcxNDg2Nl0sIFsxNi45Nzk2NjcsIDQ4LjEyMzQ5N10sIFsxNy40ODg0NzMsIDQ3Ljg2NzQ2Nl0sIFsxNy44NTcxMzMsIDQ3Ljc1ODQyOV0sIFsxOC42OTY1MTMsIDQ3Ljg4MDk1NF0sIFsxOC43NzcwMjUsIDQ4LjA4MTc2OF0sIFsxOS4xNzQzNjUsIDQ4LjExMTM3OV0sIFsxOS42NjEzNjQsIDQ4LjI2NjYxNV0sIFsxOS43Njk0NzEsIDQ4LjIwMjY5MV0sIFsyMC4yMzkwNTQsIDQ4LjMyNzU2N10sIFsyMC40NzM1NjIsIDQ4LjU2Mjg1XSwgWzIwLjgwMTI5NCwgNDguNjIzODU0XSwgWzIxLjg3MjIzNiwgNDguMzE5OTcxXSwgWzIyLjA4NTYwOCwgNDguNDIyMjY0XSwgWzIyLjY0MDgyLCA0OC4xNTAyNF0sIFsyMi43MTA1MzEsIDQ3Ljg4MjE5NF0sIFsyMi4wOTk3NjgsIDQ3LjY3MjQzOV0sIFsyMS42MjY1MTUsIDQ2Ljk5NDIzOF0sIFsyMS4wMjE5NTIsIDQ2LjMxNjA4OF0sIFsyMC4yMjAxOTIsIDQ2LjEyNzQ2OV0sIFsxOS41OTYwNDUsIDQ2LjE3MTczXSwgWzE4LjgyOTgzOCwgNDUuOTA4ODc4XSwgWzE4LjQ1NjA2MiwgNDUuNzU5NDgxXSwgWzE3LjYzMDA2NiwgNDUuOTUxNzY5XSwgWzE2Ljg4MjUxNSwgNDYuMzgwNjMyXSwgWzE2LjU2NDgwOCwgNDYuNTAzNzUxXSwgWzE2LjM3MDUwNSwgNDYuODQxMzI3XSwgWzE2LjIwMjI5OCwgNDYuODUyMzg2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJIVU4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkh1bmdhcnkiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1sxMjAuNzE1NjA5LCAtMTAuMjM5NTgxXSwgWzEyMC4yOTUwMTQsIC0xMC4yNTg2NV0sIFsxMTguOTY3ODA4LCAtOS41NTc5NjldLCBbMTE5LjkwMDMxLCAtOS4zNjEzNF0sIFsxMjAuNDI1NzU2LCAtOS42NjU5MjFdLCBbMTIwLjc3NTUwMiwgLTkuOTY5Njc1XSwgWzEyMC43MTU2MDksIC0xMC4yMzk1ODFdXV0sIFtbWzEyNC40MzU5NSwgLTEwLjE0MDAwMV0sIFsxMjMuNTc5OTgyLCAtMTAuMzU5OTg3XSwgWzEyMy40NTk5ODksIC0xMC4yMzk5OTVdLCBbMTIzLjU1MDAwOSwgLTkuOTAwMDE2XSwgWzEyMy45ODAwMDksIC05LjI5MDAyN10sIFsxMjQuOTY4NjgyLCAtOC44OTI3OV0sIFsxMjUuMDcwMDIsIC05LjA4OTk4N10sIFsxMjUuMDg4NTIsIC05LjM5MzE3M10sIFsxMjQuNDM1OTUsIC0xMC4xNDAwMDFdXV0sIFtbWzExNy45MDAwMTgsIC04LjA5NTY4MV0sIFsxMTguMjYwNjE2LCAtOC4zNjIzODNdLCBbMTE4Ljg3ODQ2LCAtOC4yODA2ODNdLCBbMTE5LjEyNjUwNywgLTguNzA1ODI1XSwgWzExNy45NzA0MDIsIC04LjkwNjYzOV0sIFsxMTcuMjc3NzMxLCAtOS4wNDA4OTVdLCBbMTE2Ljc0MDE0MSwgLTkuMDMyOTM3XSwgWzExNy4wODM3MzcsIC04LjQ1NzE1OF0sIFsxMTcuNjMyMDI0LCAtOC40NDkzMDNdLCBbMTE3LjkwMDAxOCwgLTguMDk1NjgxXV1dLCBbW1sxMjIuOTAzNTM3LCAtOC4wOTQyMzRdLCBbMTIyLjc1Njk4MywgLTguNjQ5ODA4XSwgWzEyMS4yNTQ0OTEsIC04LjkzMzY2Nl0sIFsxMTkuOTI0MzkxLCAtOC44MTA0MThdLCBbMTE5LjkyMDkyOSwgLTguNDQ0ODU5XSwgWzEyMC43MTUwOTIsIC04LjIzNjk2NV0sIFsxMjEuMzQxNjY5LCAtOC41MzY3NF0sIFsxMjIuMDA3MzY1LCAtOC40NjA2Ml0sIFsxMjIuOTAzNTM3LCAtOC4wOTQyMzRdXV0sIFtbWzEwOC42MjM0NzksIC02Ljc3NzY3NF0sIFsxMTAuNTM5MjI3LCAtNi44NzczNThdLCBbMTEwLjc1OTU3NiwgLTYuNDY1MTg2XSwgWzExMi42MTQ4MTEsIC02Ljk0NjAzNl0sIFsxMTIuOTc4NzY4LCAtNy41OTQyMTNdLCBbMTE0LjQ3ODkzNSwgLTcuNzc2NTI4XSwgWzExNS43MDU1MjcsIC04LjM3MDgwN10sIFsxMTQuNTY0NTExLCAtOC43NTE4MTddLCBbMTEzLjQ2NDczNCwgLTguMzQ4OTQ3XSwgWzExMi41NTk2NzIsIC04LjM3NjE4MV0sIFsxMTEuNTIyMDYxLCAtOC4zMDIxMjldLCBbMTEwLjU4NjE1LCAtOC4xMjI2MDVdLCBbMTA5LjQyNzY2NywgLTcuNzQwNjY0XSwgWzEwOC42OTM2NTUsIC03LjY0MTZdLCBbMTA4LjI3Nzc2MywgLTcuNzY2NjU3XSwgWzEwNi40NTQxMDIsIC03LjM1NDldLCBbMTA2LjI4MDYyNCwgLTYuOTI0OV0sIFsxMDUuMzY1NDg2LCAtNi44NTE0MTZdLCBbMTA2LjA1MTY0NiwgLTUuODk1OTE5XSwgWzEwNy4yNjUwMDksIC01Ljk1NDk4NV0sIFsxMDguMDcyMDkxLCAtNi4zNDU3NjJdLCBbMTA4LjQ4Njg0NiwgLTYuNDIxOTg1XSwgWzEwOC42MjM0NzksIC02Ljc3NzY3NF1dXSwgW1tbMTM0LjcyNDYyNCwgLTYuMjE0NDAxXSwgWzEzNC4yMTAxMzQsIC02Ljg5NTIzOF0sIFsxMzQuMTEyNzc2LCAtNi4xNDI0NjddLCBbMTM0LjI5MDMzNiwgLTUuNzgzMDU4XSwgWzEzNC40OTk2MjUsIC01LjQ0NTA0Ml0sIFsxMzQuNzI3MDAyLCAtNS43Mzc1ODJdLCBbMTM0LjcyNDYyNCwgLTYuMjE0NDAxXV1dLCBbW1sxMjcuMjQ5MjE1LCAtMy40NTkwNjVdLCBbMTI2Ljg3NDkyMywgLTMuNzkwOTgzXSwgWzEyNi4xODM4MDIsIC0zLjYwNzM3Nl0sIFsxMjUuOTg5MDM0LCAtMy4xNzcyNzNdLCBbMTI3LjAwMDY1MSwgLTMuMTI5MzE4XSwgWzEyNy4yNDkyMTUsIC0zLjQ1OTA2NV1dXSwgW1tbMTMwLjQ3MTM0NCwgLTMuMDkzNzY0XSwgWzEzMC44MzQ4MzYsIC0zLjg1ODQ3Ml0sIFsxMjkuOTkwNTQ3LCAtMy40NDYzMDFdLCBbMTI5LjE1NTI0OSwgLTMuMzYyNjM3XSwgWzEyOC41OTA2ODQsIC0zLjQyODY3OV0sIFsxMjcuODk4ODkxLCAtMy4zOTM0MzZdLCBbMTI4LjEzNTg3OSwgLTIuODQzNjVdLCBbMTI5LjM3MDk5OCwgLTIuODAyMTU0XSwgWzEzMC40NzEzNDQsIC0zLjA5Mzc2NF1dXSwgW1tbMTM0LjE0MzM2OCwgLTEuMTUxODY3XSwgWzEzNC40MjI2MjcsIC0yLjc2OTE4NV0sIFsxMzUuNDU3NjAzLCAtMy4zNjc3NTNdLCBbMTM2LjI5MzMxNCwgLTIuMzA3MDQyXSwgWzEzNy40NDA3MzgsIC0xLjcwMzUxM10sIFsxMzguMzI5NzI3LCAtMS43MDI2ODZdLCBbMTM5LjE4NDkyMSwgLTIuMDUxMjk2XSwgWzEzOS45MjY2ODQsIC0yLjQwOTA1Ml0sIFsxNDEuMDAwMjEsIC0yLjYwMDE1MV0sIFsxNDEuMDE3MDU3LCAtNS44NTkwMjJdLCBbMTQxLjAzMzg1MiwgLTkuMTE3ODkzXSwgWzE0MC4xNDM0MTUsIC04LjI5NzE2OF0sIFsxMzkuMTI3NzY3LCAtOC4wOTYwNDNdLCBbMTM4Ljg4MTQ3NywgLTguMzgwOTM1XSwgWzEzNy42MTQ0NzQsIC04LjQxMTY4M10sIFsxMzguMDM5MDk5LCAtNy41OTc4ODJdLCBbMTM4LjY2ODYyMSwgLTcuMzIwMjI1XSwgWzEzOC40MDc5MTQsIC02LjIzMjg0OV0sIFsxMzcuOTI3ODQsIC01LjM5MzM2Nl0sIFsxMzUuOTg5MjUsIC00LjU0NjU0NF0sIFsxMzUuMTY0NTk4LCAtNC40NjI5MzFdLCBbMTMzLjY2Mjg4LCAtMy41Mzg4NTNdLCBbMTMzLjM2NzcwNSwgLTQuMDI0ODE5XSwgWzEzMi45ODM5NTYsIC00LjExMjk3OV0sIFsxMzIuNzU2OTQxLCAtMy43NDYyODNdLCBbMTMyLjc1Mzc4OSwgLTMuMzExNzg3XSwgWzEzMS45ODk4MDQsIC0yLjgyMDU1MV0sIFsxMzMuMDY2ODQ1LCAtMi40NjA0MThdLCBbMTMzLjc4MDAzMSwgLTIuNDc5ODQ4XSwgWzEzMy42OTYyMTIsIC0yLjIxNDU0Ml0sIFsxMzIuMjMyMzczLCAtMi4yMTI1MjZdLCBbMTMxLjgzNjIyMiwgLTEuNjE3MTYyXSwgWzEzMC45NDI4NCwgLTEuNDMyNTIyXSwgWzEzMC41MTk1NTgsIC0wLjkzNzcyXSwgWzEzMS44Njc1MzgsIC0wLjY5NTQ2MV0sIFsxMzIuMzgwMTE2LCAtMC4zNjk1MzhdLCBbMTMzLjk4NTU0OCwgLTAuNzgwMjFdLCBbMTM0LjE0MzM2OCwgLTEuMTUxODY3XV1dLCBbW1sxMjUuMjQwNTAxLCAxLjQxOTgzNl0sIFsxMjQuNDM3MDM1LCAwLjQyNzg4MV0sIFsxMjMuNjg1NTA1LCAwLjIzNTU5M10sIFsxMjIuNzIzMDgzLCAwLjQzMTEzN10sIFsxMjEuMDU2NzI1LCAwLjM4MTIxN10sIFsxMjAuMTgzMDgzLCAwLjIzNzI0N10sIFsxMjAuMDQwODcsIC0wLjUxOTY1OF0sIFsxMjAuOTM1OTA1LCAtMS40MDg5MDZdLCBbMTIxLjQ3NTgyMSwgLTAuOTU1OTYyXSwgWzEyMy4zNDA1NjUsIC0wLjYxNTY3M10sIFsxMjMuMjU4Mzk5LCAtMS4wNzYyMTNdLCBbMTIyLjgyMjcxNSwgLTAuOTMwOTUxXSwgWzEyMi4zODg1MywgLTEuNTE2ODU4XSwgWzEyMS41MDgyNzQsIC0xLjkwNDQ4M10sIFsxMjIuNDU0NTcyLCAtMy4xODYwNThdLCBbMTIyLjI3MTg5NiwgLTMuNTI5NV0sIFsxMjMuMTcwOTYzLCAtNC42ODM2OTNdLCBbMTIzLjE2MjMzMywgLTUuMzQwNjA0XSwgWzEyMi42Mjg1MTUsIC01LjYzNDU5MV0sIFsxMjIuMjM2Mzk0LCAtNS4yODI5MzNdLCBbMTIyLjcxOTU2OSwgLTQuNDY0MTcyXSwgWzEyMS43MzgyMzQsIC00Ljg1MTMzMV0sIFsxMjEuNDg5NDYzLCAtNC41NzQ1NTNdLCBbMTIxLjYxOTE3MSwgLTQuMTg4NDc4XSwgWzEyMC44OTgxODIsIC0zLjYwMjEwNV0sIFsxMjAuOTcyMzg5LCAtMi42Mjc2NDNdLCBbMTIwLjMwNTQ1MywgLTIuOTMxNjA0XSwgWzEyMC4zOTAwNDcsIC00LjA5NzU3OV0sIFsxMjAuNDMwNzE3LCAtNS41MjgyNDFdLCBbMTE5Ljc5NjU0MywgLTUuNjczNF0sIFsxMTkuMzY2OTA2LCAtNS4zNzk4NzhdLCBbMTE5LjY1MzYwNiwgLTQuNDU5NDE3XSwgWzExOS40OTg4MzUsIC0zLjQ5NDQxMl0sIFsxMTkuMDc4MzQ0LCAtMy40ODcwMjJdLCBbMTE4Ljc2Nzc2OSwgLTIuODAxOTk5XSwgWzExOS4xODA5NzQsIC0yLjE0NzEwNF0sIFsxMTkuMzIzMzk0LCAtMS4zNTMxNDddLCBbMTE5LjgyNTk5OSwgMC4xNTQyNTRdLCBbMTIwLjAzNTcwMiwgMC41NjY0NzddLCBbMTIwLjg4NTc3OSwgMS4zMDkyMjNdLCBbMTIxLjY2NjgxNywgMS4wMTM5NDRdLCBbMTIyLjkyNzU2NywgMC44NzUxOTJdLCBbMTI0LjA3NzUyMiwgMC45MTcxMDJdLCBbMTI1LjA2NTk4OSwgMS42NDMyNTldLCBbMTI1LjI0MDUwMSwgMS40MTk4MzZdXV0sIFtbWzEyOC42ODgyNDksIDEuMTMyMzg2XSwgWzEyOC42MzU5NTIsIDAuMjU4NDg2XSwgWzEyOC4xMjAxNywgMC4zNTY0MTNdLCBbMTI3Ljk2ODAzNCwgLTAuMjUyMDc3XSwgWzEyOC4zNzk5OTksIC0wLjc4MDAwNF0sIFsxMjguMTAwMDE2LCAtMC44OTk5OTZdLCBbMTI3LjY5NjQ3NSwgLTAuMjY2NTk4XSwgWzEyNy4zOTk0OSwgMS4wMTE3MjJdLCBbMTI3LjYwMDUxMiwgMS44MTA2OTFdLCBbMTI3LjkzMjM3OCwgMi4xNzQ1OTZdLCBbMTI4LjAwNDE1NiwgMS42Mjg1MzFdLCBbMTI4LjU5NDU1OSwgMS41NDA4MTFdLCBbMTI4LjY4ODI0OSwgMS4xMzIzODZdXV0sIFtbWzExNy44NzU2MjcsIDEuODI3NjQxXSwgWzExOC45OTY3NDcsIDAuOTAyMjE5XSwgWzExNy44MTE4NTgsIDAuNzg0MjQyXSwgWzExNy40NzgzMzksIDAuMTAyNDc1XSwgWzExNy41MjE2NDQsIC0wLjgwMzcyM10sIFsxMTYuNTYwMDQ4LCAtMS40ODc2NjFdLCBbMTE2LjUzMzc5NywgLTIuNDgzNTE3XSwgWzExNi4xNDgwODQsIC00LjAxMjcyNl0sIFsxMTYuMDAwODU4LCAtMy42NTcwMzddLCBbMTE0Ljg2NDgwMywgLTQuMTA2OTg0XSwgWzExNC40Njg2NTIsIC0zLjQ5NTcwNF0sIFsxMTMuNzU1NjcyLCAtMy40MzkxN10sIFsxMTMuMjU2OTk0LCAtMy4xMTg3NzZdLCBbMTEyLjA2ODEyNiwgLTMuNDc4MzkyXSwgWzExMS43MDMyOTEsIC0yLjk5NDQ0Ml0sIFsxMTEuMDQ4MjQsIC0zLjA0OTQyNl0sIFsxMTAuMjIzODQ2LCAtMi45MzQwMzJdLCBbMTEwLjA3MDkzNiwgLTEuNTkyODc0XSwgWzEwOS41NzE5NDgsIC0xLjMxNDkwN10sIFsxMDkuMDkxODc0LCAtMC40NTk1MDddLCBbMTA4Ljk1MjY1OCwgMC40MTUzNzVdLCBbMTA5LjA2OTEzNiwgMS4zNDE5MzRdLCBbMTA5LjY2MzI2LCAyLjAwNjQ2N10sIFsxMDkuODMwMjI3LCAxLjMzODEzNl0sIFsxMTAuNTE0MDYxLCAwLjc3MzEzMV0sIFsxMTEuMTU5MTM4LCAwLjk3NjQ3OF0sIFsxMTEuNzk3NTQ4LCAwLjkwNDQ0MV0sIFsxMTIuMzgwMjUyLCAxLjQxMDEyMV0sIFsxMTIuODU5ODA5LCAxLjQ5Nzc5XSwgWzExMy44MDU4NSwgMS4yMTc1NDldLCBbMTE0LjYyMTM1NSwgMS40MzA2ODhdLCBbMTE1LjEzNDAzNywgMi44MjE0ODJdLCBbMTE1LjUxOTA3OCwgMy4xNjkyMzhdLCBbMTE1Ljg2NTUxNywgNC4zMDY1NTldLCBbMTE3LjAxNTIxNCwgNC4zMDYwOTRdLCBbMTE3Ljg4MjAzNSwgNC4xMzc1NTFdLCBbMTE3LjMxMzIzMiwgMy4yMzQ0MjhdLCBbMTE4LjA0ODMzLCAyLjI4NzY5XSwgWzExNy44NzU2MjcsIDEuODI3NjQxXV1dLCBbW1sxMDUuODE3NjU1LCAtNS44NTIzNTZdLCBbMTA0LjcxMDM4NCwgLTUuODczMjg1XSwgWzEwMy44NjgyMTMsIC01LjAzNzMxNV0sIFsxMDIuNTg0MjYxLCAtNC4yMjAyNTldLCBbMTAyLjE1NjE3MywgLTMuNjE0MTQ2XSwgWzEwMS4zOTkxMTMsIC0yLjc5OTc3N10sIFsxMDAuOTAyNTAzLCAtMi4wNTAyNjJdLCBbMTAwLjE0MTk4MSwgLTAuNjUwMzQ4XSwgWzk5LjI2Mzc0LCAwLjE4MzE0Ml0sIFs5OC45NzAwMTEsIDEuMDQyODgyXSwgWzk4LjYwMTM1MSwgMS44MjM1MDddLCBbOTcuNjk5NTk4LCAyLjQ1MzE4NF0sIFs5Ny4xNzY5NDIsIDMuMzA4NzkxXSwgWzk2LjQyNDAxNywgMy44Njg4Nl0sIFs5NS4zODA4NzYsIDQuOTcwNzgyXSwgWzk1LjI5MzAyNiwgNS40Nzk4MjFdLCBbOTUuOTM2ODYzLCA1LjQzOTUxM10sIFs5Ny40ODQ4ODIsIDUuMjQ2MzIxXSwgWzk4LjM2OTE2OSwgNC4yNjgzN10sIFs5OS4xNDI1NTksIDMuNTkwMzVdLCBbOTkuNjkzOTk4LCAzLjE3NDMyOV0sIFsxMDAuNjQxNDM0LCAyLjA5OTM4MV0sIFsxMDEuNjU4MDEyLCAyLjA4MzY5N10sIFsxMDIuNDk4MjcxLCAxLjM5ODddLCBbMTAzLjA3Njg0LCAwLjU2MTM2MV0sIFsxMDMuODM4Mzk2LCAwLjEwNDU0Ml0sIFsxMDMuNDM3NjQ1LCAtMC43MTE5NDZdLCBbMTA0LjAxMDc4OSwgLTEuMDU5MjEyXSwgWzEwNC4zNjk5OTEsIC0xLjA4NDg0M10sIFsxMDQuNTM5NDksIC0xLjc4MjM3Ml0sIFsxMDQuODg3ODkzLCAtMi4zNDA0MjVdLCBbMTA1LjYyMjExMSwgLTIuNDI4ODQ0XSwgWzEwNi4xMDg1OTMsIC0zLjA2MTc3N10sIFsxMDUuODU3NDQ2LCAtNC4zMDU1MjVdLCBbMTA1LjgxNzY1NSwgLTUuODUyMzU2XV1dXSwgInR5cGUiOiAiTXVsdGlQb2x5Z29uIn0sICJpZCI6ICJJRE4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkluZG9uZXNpYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbNzcuODM3NDUxLCAzNS40OTQwMV0sIFs3OC45MTIyNjksIDM0LjMyMTkzNl0sIFs3OC44MTEwODYsIDMzLjUwNjE5OF0sIFs3OS4yMDg4OTIsIDMyLjk5NDM5NV0sIFs3OS4xNzYxMjksIDMyLjQ4Mzc4XSwgWzc4LjQ1ODQ0NiwgMzIuNjE4MTY0XSwgWzc4LjczODg5NCwgMzEuNTE1OTA2XSwgWzc5LjcyMTM2NywgMzAuODgyNzE1XSwgWzgxLjExMTI1NiwgMzAuMTgzNDgxXSwgWzgwLjQ3NjcyMSwgMjkuNzI5ODY1XSwgWzgwLjA4ODQyNSwgMjguNzk0NDddLCBbODEuMDU3MjAzLCAyOC40MTYwOTVdLCBbODEuOTk5OTg3LCAyNy45MjU0NzldLCBbODMuMzA0MjQ5LCAyNy4zNjQ1MDZdLCBbODQuNjc1MDE4LCAyNy4yMzQ5MDFdLCBbODUuMjUxNzc5LCAyNi43MjYxOThdLCBbODYuMDI0MzkzLCAyNi42MzA5ODVdLCBbODcuMjI3NDcyLCAyNi4zOTc4OThdLCBbODguMDYwMjM4LCAyNi40MTQ2MTVdLCBbODguMTc0ODA0LCAyNi44MTA0MDVdLCBbODguMDQzMTMzLCAyNy40NDU4MTldLCBbODguMTIwNDQxLCAyNy44NzY1NDJdLCBbODguNzMwMzI2LCAyOC4wODY4NjVdLCBbODguODE0MjQ4LCAyNy4yOTkzMTZdLCBbODguODM1NjQzLCAyNy4wOTg5NjZdLCBbODkuNzQ0NTI4LCAyNi43MTk0MDNdLCBbOTAuMzczMjc1LCAyNi44NzU3MjRdLCBbOTEuMjE3NTEzLCAyNi44MDg2NDhdLCBbOTIuMDMzNDg0LCAyNi44MzgzMV0sIFs5Mi4xMDM3MTIsIDI3LjQ1MjYxNF0sIFs5MS42OTY2NTcsIDI3Ljc3MTc0Ml0sIFs5Mi41MDMxMTksIDI3Ljg5Njg3Nl0sIFs5My40MTMzNDgsIDI4LjY0MDYyOV0sIFs5NC41NjU5OSwgMjkuMjc3NDM4XSwgWzk1LjQwNDgwMiwgMjkuMDMxNzE3XSwgWzk2LjExNzY3OSwgMjkuNDUyODAyXSwgWzk2LjU4NjU5MSwgMjguODMwOThdLCBbOTYuMjQ4ODMzLCAyOC40MTEwMzFdLCBbOTcuMzI3MTE0LCAyOC4yNjE1ODNdLCBbOTcuNDAyNTYxLCAyNy44ODI1MzZdLCBbOTcuMDUxOTg5LCAyNy42OTkwNTldLCBbOTcuMTMzOTk5LCAyNy4wODM3NzRdLCBbOTYuNDE5MzY2LCAyNy4yNjQ1ODldLCBbOTUuMTI0NzY4LCAyNi41NzM1NzJdLCBbOTUuMTU1MTUzLCAyNi4wMDEzMDddLCBbOTQuNjAzMjQ5LCAyNS4xNjI0OTVdLCBbOTQuNTUyNjU4LCAyNC42NzUyMzhdLCBbOTQuMTA2NzQyLCAyMy44NTA3NDFdLCBbOTMuMzI1MTg4LCAyNC4wNzg1NTZdLCBbOTMuMjg2MzI3LCAyMy4wNDM2NThdLCBbOTMuMDYwMjk0LCAyMi43MDMxMTFdLCBbOTMuMTY2MTI4LCAyMi4yNzg0Nl0sIFs5Mi42NzI3MjEsIDIyLjA0MTIzOV0sIFs5Mi4xNDYwMzUsIDIzLjYyNzQ5OV0sIFs5MS44Njk5MjgsIDIzLjYyNDM0Nl0sIFs5MS43MDY0NzUsIDIyLjk4NTI2NF0sIFs5MS4xNTg5NjMsIDIzLjUwMzUyN10sIFs5MS40Njc3MywgMjQuMDcyNjM5XSwgWzkxLjkxNTA5MywgMjQuMTMwNDE0XSwgWzkyLjM3NjIwMiwgMjQuOTc2NjkzXSwgWzkxLjc5OTU5NiwgMjUuMTQ3NDMyXSwgWzkwLjg3MjIxMSwgMjUuMTMyNjAxXSwgWzg5LjkyMDY5MywgMjUuMjY5NzVdLCBbODkuODMyNDgxLCAyNS45NjUwODJdLCBbODkuMzU1MDk0LCAyNi4wMTQ0MDddLCBbODguNTYzMDQ5LCAyNi40NDY1MjZdLCBbODguMjA5Nzg5LCAyNS43NjgwNjZdLCBbODguOTMxNTU0LCAyNS4yMzg2OTJdLCBbODguMzA2MzczLCAyNC44NjYwNzldLCBbODguMDg0NDIyLCAyNC41MDE2NTddLCBbODguNjk5OTQsIDI0LjIzMzcxNV0sIFs4OC41Mjk3NywgMjMuNjMxMTQyXSwgWzg4Ljg3NjMxMiwgMjIuODc5MTQ2XSwgWzg5LjAzMTk2MSwgMjIuMDU1NzA4XSwgWzg4Ljg4ODc2NiwgMjEuNjkwNTg4XSwgWzg4LjIwODQ5NywgMjEuNzAzMTcyXSwgWzg2Ljk3NTcwNCwgMjEuNDk1NTYyXSwgWzg3LjAzMzE2OSwgMjAuNzQzMzA4XSwgWzg2LjQ5OTM1MSwgMjAuMTUxNjM4XSwgWzg1LjA2MDI2NiwgMTkuNDc4NTc5XSwgWzgzLjk0MTAwNiwgMTguMzAyMDFdLCBbODMuMTg5MjE3LCAxNy42NzEyMjFdLCBbODIuMTkyNzkyLCAxNy4wMTY2MzZdLCBbODIuMTkxMjQyLCAxNi41NTY2NjRdLCBbODEuNjkyNzE5LCAxNi4zMTAyMTldLCBbODAuNzkxOTk5LCAxNS45NTE5NzJdLCBbODAuMzI0ODk2LCAxNS44OTkxODVdLCBbODAuMDI1MDY5LCAxNS4xMzY0MTVdLCBbODAuMjMzMjc0LCAxMy44MzU3NzFdLCBbODAuMjg2Mjk0LCAxMy4wMDYyNjFdLCBbNzkuODYyNTQ3LCAxMi4wNTYyMTVdLCBbNzkuODU3OTk5LCAxMC4zNTcyNzVdLCBbNzkuMzQwNTEyLCAxMC4zMDg4NTRdLCBbNzguODg1MzQ1LCA5LjU0NjEzNl0sIFs3OS4xODk3MiwgOS4yMTY1NDRdLCBbNzguMjc3OTQxLCA4LjkzMzA0N10sIFs3Ny45NDExNjUsIDguMjUyOTU5XSwgWzc3LjUzOTg5OCwgNy45NjU1MzVdLCBbNzYuNTkyOTc5LCA4Ljg5OTI3Nl0sIFs3Ni4xMzAwNjEsIDEwLjI5OTYzXSwgWzc1Ljc0NjQ2NywgMTEuMzA4MjUxXSwgWzc1LjM5NjEwMSwgMTEuNzgxMjQ1XSwgWzc0Ljg2NDgxNiwgMTIuNzQxOTM2XSwgWzc0LjYxNjcxNywgMTMuOTkyNTgzXSwgWzc0LjQ0Mzg1OSwgMTQuNjE3MjIyXSwgWzczLjUzNDE5OSwgMTUuOTkwNjUyXSwgWzczLjExOTkwOSwgMTcuOTI4NTddLCBbNzIuODIwOTA5LCAxOS4yMDgyMzRdLCBbNzIuODI0NDc1LCAyMC40MTk1MDNdLCBbNzIuNjMwNTMzLCAyMS4zNTYwMDldLCBbNzEuMTc1MjczLCAyMC43NTc0NDFdLCBbNzAuNDcwNDU5LCAyMC44NzczMzFdLCBbNjkuMTY0MTMsIDIyLjA4OTI5OF0sIFs2OS42NDQ5MjgsIDIyLjQ1MDc3NV0sIFs2OS4zNDk1OTcsIDIyLjg0MzE4XSwgWzY4LjE3NjY0NSwgMjMuNjkxOTY1XSwgWzY4Ljg0MjU5OSwgMjQuMzU5MTM0XSwgWzcxLjA0MzI0LCAyNC4zNTY1MjRdLCBbNzAuODQ0Njk5LCAyNS4yMTUxMDJdLCBbNzAuMjgyODczLCAyNS43MjIyMjldLCBbNzAuMTY4OTI3LCAyNi40OTE4NzJdLCBbNjkuNTE0MzkzLCAyNi45NDA5NjZdLCBbNzAuNjE2NDk2LCAyNy45ODkxOTZdLCBbNzEuNzc3NjY2LCAyNy45MTMxOF0sIFs3Mi44MjM3NTIsIDI4Ljk2MTU5Ml0sIFs3My40NTA2MzgsIDI5Ljk3NjQxM10sIFs3NC40MjEzOCwgMzAuOTc5ODE1XSwgWzc0LjQwNTkyOSwgMzEuNjkyNjM5XSwgWzc1LjI1ODY0MiwgMzIuMjcxMTA1XSwgWzc0LjQ1MTU1OSwgMzIuNzY0OV0sIFs3NC4xMDQyOTQsIDMzLjQ0MTQ3M10sIFs3My43NDk5NDgsIDM0LjMxNzY5OV0sIFs3NC4yNDAyMDMsIDM0Ljc0ODg4N10sIFs3NS43NTcwNjEsIDM0LjUwNDkyM10sIFs3Ni44NzE3MjIsIDM0LjY1MzU0NF0sIFs3Ny44Mzc0NTEsIDM1LjQ5NDAxXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJJTkQiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkluZGlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2JkMDAyNiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stNi4xOTc4ODUsIDUzLjg2NzU2NV0sIFstNi4wMzI5ODUsIDUzLjE1MzE2NF0sIFstNi43ODg4NTcsIDUyLjI2MDExOF0sIFstOC41NjE2MTcsIDUxLjY2OTMwMV0sIFstOS45NzcwODYsIDUxLjgyMDQ1NV0sIFstOS4xNjYyODMsIDUyLjg2NDYyOV0sIFstOS42ODg1MjUsIDUzLjg4MTM2M10sIFstOC4zMjc5ODcsIDU0LjY2NDUxOV0sIFstNy41NzIxNjgsIDU1LjEzMTYyMl0sIFstNy4zNjYwMzEsIDU0LjU5NTg0MV0sIFstNy41NzIxNjgsIDU0LjA1OTk1Nl0sIFstNi45NTM3MywgNTQuMDczNzAyXSwgWy02LjE5Nzg4NSwgNTMuODY3NTY1XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJJUkwiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIklyZWxhbmQiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzUzLjkyMTU5OCwgMzcuMTk4OTE4XSwgWzU0LjgwMDMwNCwgMzcuMzkyNDIxXSwgWzU1LjUxMTU3OCwgMzcuOTY0MTE3XSwgWzU2LjE4MDM3NSwgMzcuOTM1MTI3XSwgWzU2LjYxOTM2NiwgMzguMTIxMzk0XSwgWzU3LjMzMDQzNCwgMzguMDI5MjI5XSwgWzU4LjQzNjE1NCwgMzcuNTIyMzA5XSwgWzU5LjIzNDc2MiwgMzcuNDEyOTg4XSwgWzYwLjM3NzYzOCwgMzYuNTI3MzgzXSwgWzYxLjEyMzA3MSwgMzYuNDkxNTk3XSwgWzYxLjIxMDgxNywgMzUuNjUwMDcyXSwgWzYwLjgwMzE5MywgMzQuNDA0MTAyXSwgWzYwLjUyODQzLCAzMy42NzY0NDZdLCBbNjAuOTYzNywgMzMuNTI4ODMyXSwgWzYwLjUzNjA3OCwgMzIuOTgxMjY5XSwgWzYwLjg2MzY1NSwgMzIuMTgyOTJdLCBbNjAuOTQxOTQ1LCAzMS41NDgwNzVdLCBbNjEuNjk5MzE0LCAzMS4zNzk1MDZdLCBbNjEuNzgxMjIyLCAzMC43MzU4NV0sIFs2MC44NzQyNDgsIDI5LjgyOTIzOV0sIFs2MS4zNjkzMDksIDI5LjMwMzI3Nl0sIFs2MS43NzE4NjgsIDI4LjY5OTMzNF0sIFs2Mi43Mjc4MywgMjguMjU5NjQ1XSwgWzYyLjc1NTQyNiwgMjcuMzc4OTIzXSwgWzYzLjIzMzg5OCwgMjcuMjE3MDQ3XSwgWzYzLjMxNjYzMiwgMjYuNzU2NTMyXSwgWzYxLjg3NDE4NywgMjYuMjM5OTc1XSwgWzYxLjQ5NzM2MywgMjUuMDc4MjM3XSwgWzU5LjYxNjEzNCwgMjUuMzgwMTU3XSwgWzU4LjUyNTc2MSwgMjUuNjA5OTYyXSwgWzU3LjM5NzI1MSwgMjUuNzM5OTAyXSwgWzU2Ljk3MDc2NiwgMjYuOTY2MTA2XSwgWzU2LjQ5MjEzOSwgMjcuMTQzMzA1XSwgWzU1LjcyMzcxLCAyNi45NjQ2MzNdLCBbNTQuNzE1MDksIDI2LjQ4MDY1OF0sIFs1My40OTMwOTcsIDI2LjgxMjM2OV0sIFs1Mi40ODM1OTgsIDI3LjU4MDg0OV0sIFs1MS41MjA3NjMsIDI3Ljg2NTY5XSwgWzUwLjg1Mjk0OCwgMjguODE0NTIxXSwgWzUwLjExNTAwOSwgMzAuMTQ3NzczXSwgWzQ5LjU3Njg1LCAyOS45ODU3MTVdLCBbNDguOTQxMzMzLCAzMC4zMTcwOV0sIFs0OC41Njc5NzEsIDI5LjkyNjc3OF0sIFs0OC4wMTQ1NjgsIDMwLjQ1MjQ1N10sIFs0OC4wMDQ2OTgsIDMwLjk4NTEzN10sIFs0Ny42ODUyODYsIDMwLjk4NDg1M10sIFs0Ny44NDkyMDQsIDMxLjcwOTE3Nl0sIFs0Ny4zMzQ2NjEsIDMyLjQ2OTE1NV0sIFs0Ni4xMDkzNjIsIDMzLjAxNzI4N10sIFs0NS40MTY2OTEsIDMzLjk2Nzc5OF0sIFs0NS42NDg0NiwgMzQuNzQ4MTM4XSwgWzQ2LjE1MTc4OCwgMzUuMDkzMjU5XSwgWzQ2LjA3NjM0LCAzNS42NzczODNdLCBbNDUuNDIwNjE4LCAzNS45Nzc1NDZdLCBbNDQuNzcyNjcsIDM3LjE3MDQ1XSwgWzQ0LjIyNTc1NiwgMzcuOTcxNTg0XSwgWzQ0LjQyMTQwMywgMzguMjgxMjgxXSwgWzQ0LjEwOTIyNSwgMzkuNDI4MTM2XSwgWzQ0Ljc5Mzk5LCAzOS43MTMwMDNdLCBbNDQuOTUyNjg4LCAzOS4zMzU3NjVdLCBbNDUuNDU3NzIyLCAzOC44NzQxMzldLCBbNDYuMTQzNjIzLCAzOC43NDEyMDFdLCBbNDYuNTA1NzIsIDM4Ljc3MDYwNV0sIFs0Ny42ODUwNzksIDM5LjUwODM2NF0sIFs0OC4wNjAwOTUsIDM5LjU4MjIzNV0sIFs0OC4zNTU1MjksIDM5LjI4ODc2NV0sIFs0OC4wMTA3NDQsIDM4Ljc5NDAxNV0sIFs0OC42MzQzNzUsIDM4LjI3MDM3OF0sIFs0OC44ODMyNDksIDM4LjMyMDI0NV0sIFs0OS4xOTk2MTIsIDM3LjU4Mjg3NF0sIFs1MC4xNDc3NzEsIDM3LjM3NDU2N10sIFs1MC44NDIzNTQsIDM2Ljg3MjgxNF0sIFs1Mi4yNjQwMjUsIDM2LjcwMDQyMl0sIFs1My44MjU3OSwgMzYuOTY1MDMxXSwgWzUzLjkyMTU5OCwgMzcuMTk4OTE4XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJJUk4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIklyYW4iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmVkOTc2IiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzQ1LjQyMDYxOCwgMzUuOTc3NTQ2XSwgWzQ2LjA3NjM0LCAzNS42NzczODNdLCBbNDYuMTUxNzg4LCAzNS4wOTMyNTldLCBbNDUuNjQ4NDYsIDM0Ljc0ODEzOF0sIFs0NS40MTY2OTEsIDMzLjk2Nzc5OF0sIFs0Ni4xMDkzNjIsIDMzLjAxNzI4N10sIFs0Ny4zMzQ2NjEsIDMyLjQ2OTE1NV0sIFs0Ny44NDkyMDQsIDMxLjcwOTE3Nl0sIFs0Ny42ODUyODYsIDMwLjk4NDg1M10sIFs0OC4wMDQ2OTgsIDMwLjk4NTEzN10sIFs0OC4wMTQ1NjgsIDMwLjQ1MjQ1N10sIFs0OC41Njc5NzEsIDI5LjkyNjc3OF0sIFs0Ny45NzQ1MTksIDI5Ljk3NTgxOV0sIFs0Ny4zMDI2MjIsIDMwLjA1OTA3XSwgWzQ2LjU2ODcxMywgMjkuMDk5MDI1XSwgWzQ0LjcwOTQ5OSwgMjkuMTc4ODkxXSwgWzQxLjg4OTk4MSwgMzEuMTkwMDA5XSwgWzQwLjM5OTk5NCwgMzEuODg5OTkyXSwgWzM5LjE5NTQ2OCwgMzIuMTYxMDA5XSwgWzM4Ljc5MjM0MSwgMzMuMzc4Njg2XSwgWzQxLjAwNjE1OSwgMzQuNDE5MzcyXSwgWzQxLjM4Mzk2NSwgMzUuNjI4MzE3XSwgWzQxLjI4OTcwNywgMzYuMzU4ODE1XSwgWzQxLjgzNzA2NCwgMzYuNjA1ODU0XSwgWzQyLjM0OTU5MSwgMzcuMjI5ODczXSwgWzQyLjc3OTEyNiwgMzcuMzg1MjY0XSwgWzQzLjk0MjI1OSwgMzcuMjU2MjI4XSwgWzQ0LjI5MzQ1MiwgMzcuMDAxNTE0XSwgWzQ0Ljc3MjY5OSwgMzcuMTcwNDQ1XSwgWzQ1LjQyMDYxOCwgMzUuOTc3NTQ2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJJUlEiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIklyYXEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy0xNC41MDg2OTUsIDY2LjQ1NTg5Ml0sIFstMTQuNzM5NjM3LCA2NS44MDg3NDhdLCBbLTEzLjYwOTczMiwgNjUuMTI2NjcxXSwgWy0xNC45MDk4MzQsIDY0LjM2NDA4Ml0sIFstMTcuNzk0NDM4LCA2My42Nzg3NDldLCBbLTE4LjY1NjI0NiwgNjMuNDk2MzgzXSwgWy0xOS45NzI3NTUsIDYzLjY0MzYzNV0sIFstMjIuNzYyOTcyLCA2My45NjAxNzldLCBbLTIxLjc3ODQ4NCwgNjQuNDAyMTE2XSwgWy0yMy45NTUwNDQsIDY0Ljg5MTEzXSwgWy0yMi4xODQ0MDMsIDY1LjA4NDk2OF0sIFstMjIuMjI3NDIzLCA2NS4zNzg1OTRdLCBbLTI0LjMyNjE4NCwgNjUuNjExMTg5XSwgWy0yMy42NTA1MTUsIDY2LjI2MjUxOV0sIFstMjIuMTM0OTIyLCA2Ni40MTA0NjldLCBbLTIwLjU3NjI4NCwgNjUuNzMyMTEyXSwgWy0xOS4wNTY4NDIsIDY2LjI3NjYwMV0sIFstMTcuNzk4NjI0LCA2NS45OTM4NTNdLCBbLTE2LjE2NzgxOSwgNjYuNTI2NzkyXSwgWy0xNC41MDg2OTUsIDY2LjQ1NTg5Ml1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiSVNMIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJJY2VsYW5kIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1szNS43MTk5MTgsIDMyLjcwOTE5Ml0sIFszNS41NDU2NjUsIDMyLjM5Mzk5Ml0sIFszNS4xODM5MywgMzIuNTMyNTExXSwgWzM0Ljk3NDY0MSwgMzEuODY2NTgyXSwgWzM1LjIyNTg5MiwgMzEuNzU0MzQxXSwgWzM0Ljk3MDUwNywgMzEuNjE2Nzc4XSwgWzM0LjkyNzQwOCwgMzEuMzUzNDM1XSwgWzM1LjM5NzU2MSwgMzEuNDg5MDg2XSwgWzM1LjQyMDkxOCwgMzEuMTAwMDY2XSwgWzM0LjkyMjYwMywgMjkuNTAxMzI2XSwgWzM0LjI2NTQzMywgMzEuMjE5MzYxXSwgWzM0LjU1NjM3MiwgMzEuNTQ4ODI0XSwgWzM0LjQ4ODEwNywgMzEuNjA1NTM5XSwgWzM0Ljc1MjU4NywgMzIuMDcyOTI2XSwgWzM0Ljk1NTQxNywgMzIuODI3Mzc2XSwgWzM1LjA5ODQ1NywgMzMuMDgwNTM5XSwgWzM1LjEyNjA1MywgMzMuMDkwOV0sIFszNS40NjA3MDksIDMzLjA4OTA0XSwgWzM1LjU1Mjc5NywgMzMuMjY0Mjc1XSwgWzM1LjgyMTEwMSwgMzMuMjc3NDI2XSwgWzM1LjgzNjM5NywgMzIuODY4MTIzXSwgWzM1LjcwMDc5OCwgMzIuNzE2MDE0XSwgWzM1LjcxOTkxOCwgMzIuNzA5MTkyXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJJU1IiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIklzcmFlbCIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbWzE1LjUyMDM3NiwgMzguMjMxMTU1XSwgWzE1LjE2MDI0MywgMzcuNDQ0MDQ2XSwgWzE1LjMwOTg5OCwgMzcuMTM0MjE5XSwgWzE1LjA5OTk4OCwgMzYuNjE5OTg3XSwgWzE0LjMzNTIyOSwgMzYuOTk2NjMxXSwgWzEzLjgyNjczMywgMzcuMTA0NTMxXSwgWzEyLjQzMTAwNCwgMzcuNjEyOTVdLCBbMTIuNTcwOTQ0LCAzOC4xMjYzODFdLCBbMTMuNzQxMTU2LCAzOC4wMzQ5NjZdLCBbMTQuNzYxMjQ5LCAzOC4xNDM4NzRdLCBbMTUuNTIwMzc2LCAzOC4yMzExNTVdXV0sIFtbWzkuMjEwMDEyLCA0MS4yMDk5OTFdLCBbOS44MDk5NzUsIDQwLjUwMDAwOV0sIFs5LjY2OTUxOSwgMzkuMTc3Mzc2XSwgWzkuMjE0ODE4LCAzOS4yNDA0NzNdLCBbOC44MDY5MzYsIDM4LjkwNjYxOF0sIFs4LjQyODMwMiwgMzkuMTcxODQ3XSwgWzguMzg4MjUzLCA0MC4zNzgzMTFdLCBbOC4xNTk5OTgsIDQwLjk1MDAwN10sIFs4LjcwOTk5MSwgNDAuODk5OTg0XSwgWzkuMjEwMDEyLCA0MS4yMDk5OTFdXV0sIFtbWzEyLjM3NjQ4NSwgNDYuNzY3NTU5XSwgWzEzLjgwNjQ3NSwgNDYuNTA5MzA2XSwgWzEzLjY5ODExLCA0Ni4wMTY3NzhdLCBbMTMuOTM3NjMsIDQ1LjU5MTAxNl0sIFsxMy4xNDE2MDYsIDQ1LjczNjY5Ml0sIFsxMi4zMjg1ODEsIDQ1LjM4MTc3OF0sIFsxMi4zODM4NzUsIDQ0Ljg4NTM3NF0sIFsxMi4yNjE0NTMsIDQ0LjYwMDQ4Ml0sIFsxMi41ODkyMzcsIDQ0LjA5MTM2Nl0sIFsxMy41MjY5MDYsIDQzLjU4NzcyN10sIFsxNC4wMjk4MjEsIDQyLjc2MTAwOF0sIFsxNS4xNDI1NywgNDEuOTU1MTRdLCBbMTUuOTI2MTkxLCA0MS45NjEzMTVdLCBbMTYuMTY5ODk3LCA0MS43NDAyOTVdLCBbMTUuODg5MzQ2LCA0MS41NDEwODJdLCBbMTYuNzg1MDAyLCA0MS4xNzk2MDZdLCBbMTcuNTE5MTY5LCA0MC44NzcxNDNdLCBbMTguMzc2Njg3LCA0MC4zNTU2MjVdLCBbMTguNDgwMjQ3LCA0MC4xNjg4NjZdLCBbMTguMjkzMzg1LCAzOS44MTA3NzRdLCBbMTcuNzM4MzgsIDQwLjI3NzY3MV0sIFsxNi44Njk1OTYsIDQwLjQ0MjIzNV0sIFsxNi40NDg3NDMsIDM5Ljc5NTQwMV0sIFsxNy4xNzE0OSwgMzkuNDI0N10sIFsxNy4wNTI4NDEsIDM4LjkwMjg3MV0sIFsxNi42MzUwODgsIDM4Ljg0MzU3Ml0sIFsxNi4xMDA5NjEsIDM3Ljk4NTg5OV0sIFsxNS42ODQwODcsIDM3LjkwODg0OV0sIFsxNS42ODc5NjMsIDM4LjIxNDU5M10sIFsxNS44OTE5ODEsIDM4Ljc1MDk0Ml0sIFsxNi4xMDkzMzIsIDM4Ljk2NDU0N10sIFsxNS43MTg4MTQsIDM5LjU0NDA3Ml0sIFsxNS40MTM2MTMsIDQwLjA0ODM1N10sIFsxNC45OTg0OTYsIDQwLjE3Mjk0OV0sIFsxNC43MDMyNjgsIDQwLjYwNDU1XSwgWzE0LjA2MDY3MiwgNDAuNzg2MzQ4XSwgWzEzLjYyNzk4NSwgNDEuMTg4Mjg3XSwgWzEyLjg4ODA4MiwgNDEuMjUzMDldLCBbMTIuMTA2NjgzLCA0MS43MDQ1MzVdLCBbMTEuMTkxOTA2LCA0Mi4zNTU0MjVdLCBbMTAuNTExOTQ4LCA0Mi45MzE0NjNdLCBbMTAuMjAwMDI5LCA0My45MjAwMDddLCBbOS43MDI0ODgsIDQ0LjAzNjI3OV0sIFs4Ljg4ODk0NiwgNDQuMzY2MzM2XSwgWzguNDI4NTYxLCA0NC4yMzEyMjhdLCBbNy44NTA3NjcsIDQzLjc2NzE0OF0sIFs3LjQzNTE4NSwgNDMuNjkzODQ1XSwgWzcuNTQ5NTk2LCA0NC4xMjc5MDFdLCBbNy4wMDc1NjIsIDQ0LjI1NDc2N10sIFs2Ljc0OTk1NSwgNDUuMDI4NTE4XSwgWzcuMDk2NjUyLCA0NS4zMzMwOTldLCBbNi44MDIzNTUsIDQ1LjcwODU4XSwgWzYuODQzNTkzLCA0NS45OTExNDddLCBbNy4yNzM4NTEsIDQ1Ljc3Njk0OF0sIFs3Ljc1NTk5MiwgNDUuODI0NDldLCBbOC4zMTY2MywgNDYuMTYzNjQyXSwgWzguNDg5OTUyLCA0Ni4wMDUxNTFdLCBbOC45NjYzMDYsIDQ2LjAzNjkzMl0sIFs5LjE4Mjg4MiwgNDYuNDQwMjE1XSwgWzkuOTIyODM3LCA0Ni4zMTQ4OTldLCBbMTAuMzYzMzc4LCA0Ni40ODM1NzFdLCBbMTAuNDQyNzAxLCA0Ni44OTM1NDZdLCBbMTEuMDQ4NTU2LCA0Ni43NTEzNTldLCBbMTEuMTY0ODI4LCA0Ni45NDE1NzldLCBbMTIuMTUzMDg4LCA0Ny4xMTUzOTNdLCBbMTIuMzc2NDg1LCA0Ni43Njc1NTldXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIklUQSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiSXRhbHkiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy03Ny41Njk2MDEsIDE4LjQ5MDUyNV0sIFstNzYuODk2NjE5LCAxOC40MDA4NjddLCBbLTc2LjM2NTM1OSwgMTguMTYwNzAxXSwgWy03Ni4xOTk2NTksIDE3Ljg4Njg2N10sIFstNzYuOTAyNTYxLCAxNy44NjgyMzhdLCBbLTc3LjIwNjM0MSwgMTcuNzAxMTE2XSwgWy03Ny43NjYwMjMsIDE3Ljg2MTU5N10sIFstNzguMzM3NzE5LCAxOC4yMjU5NjhdLCBbLTc4LjIxNzcyNywgMTguNDU0NTMzXSwgWy03Ny43OTczNjUsIDE4LjUyNDIxOF0sIFstNzcuNTY5NjAxLCAxOC40OTA1MjVdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkpBTSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiSmFtYWljYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMzUuNTQ1NjY1LCAzMi4zOTM5OTJdLCBbMzUuNzE5OTE4LCAzMi43MDkxOTJdLCBbMzYuODM0MDYyLCAzMi4zMTI5MzhdLCBbMzguNzkyMzQxLCAzMy4zNzg2ODZdLCBbMzkuMTk1NDY4LCAzMi4xNjEwMDldLCBbMzkuMDA0ODg2LCAzMi4wMTAyMTddLCBbMzcuMDAyMTY2LCAzMS41MDg0MTNdLCBbMzcuOTk4ODQ5LCAzMC41MDg1XSwgWzM3LjY2ODEyLCAzMC4zMzg2NjVdLCBbMzcuNTAzNTgyLCAzMC4wMDM3NzZdLCBbMzYuNzQwNTI4LCAyOS44NjUyODNdLCBbMzYuNTAxMjE0LCAyOS41MDUyNTRdLCBbMzYuMDY4OTQxLCAyOS4xOTc0OTVdLCBbMzQuOTU2MDM3LCAyOS4zNTY1NTVdLCBbMzQuOTIyNjAzLCAyOS41MDEzMjZdLCBbMzUuNDIwOTE4LCAzMS4xMDAwNjZdLCBbMzUuMzk3NTYxLCAzMS40ODkwODZdLCBbMzUuNTQ1MjUyLCAzMS43ODI1MDVdLCBbMzUuNTQ1NjY1LCAzMi4zOTM5OTJdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkpPUiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiSm9yZGFuIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbMTM0LjYzODQyOCwgMzQuMTQ5MjM0XSwgWzEzNC43NjYzNzksIDMzLjgwNjMzNV0sIFsxMzQuMjAzNDE2LCAzMy4yMDExNzhdLCBbMTMzLjc5Mjk1LCAzMy41MjE5ODVdLCBbMTMzLjI4MDI2OCwgMzMuMjg5NTddLCBbMTMzLjAxNDg1OCwgMzIuNzA0NTY3XSwgWzEzMi4zNjMxMTUsIDMyLjk4OTM4Ml0sIFsxMzIuMzcxMTc2LCAzMy40NjM2NDJdLCBbMTMyLjkyNDM3MywgMzQuMDYwMjk5XSwgWzEzMy40OTI5NjgsIDMzLjk0NDYyMV0sIFsxMzMuOTA0MTA2LCAzNC4zNjQ5MzFdLCBbMTM0LjYzODQyOCwgMzQuMTQ5MjM0XV1dLCBbW1sxNDAuOTc2Mzg4LCAzNy4xNDIwNzRdLCBbMTQwLjU5OTc3LCAzNi4zNDM5ODNdLCBbMTQwLjc3NDA3NCwgMzUuODQyODc3XSwgWzE0MC4yNTMyNzksIDM1LjEzODExNF0sIFsxMzguOTc1NTI4LCAzNC42Njc2XSwgWzEzNy4yMTc1OTksIDM0LjYwNjI4Nl0sIFsxMzUuNzkyOTgzLCAzMy40NjQ4MDVdLCBbMTM1LjEyMDk4MywgMzMuODQ5MDcxXSwgWzEzNS4wNzk0MzUsIDM0LjU5NjU0NV0sIFsxMzMuMzQwMzE2LCAzNC4zNzU5MzhdLCBbMTMyLjE1Njc3MSwgMzMuOTA0OTMzXSwgWzEzMC45ODYxNDUsIDMzLjg4NTc2MV0sIFsxMzIuMDAwMDM2LCAzMy4xNDk5OTJdLCBbMTMxLjMzMjc5LCAzMS40NTAzNTVdLCBbMTMwLjY4NjMxOCwgMzEuMDI5NTc5XSwgWzEzMC4yMDI0MiwgMzEuNDE4MjM4XSwgWzEzMC40NDc2NzYsIDMyLjMxOTQ3NV0sIFsxMjkuODE0NjkyLCAzMi42MTAzMV0sIFsxMjkuNDA4NDYzLCAzMy4yOTYwNTZdLCBbMTMwLjM1MzkzNSwgMzMuNjA0MTUxXSwgWzEzMC44Nzg0NTEsIDM0LjIzMjc0M10sIFsxMzEuODg0MjI5LCAzNC43NDk3MTRdLCBbMTMyLjYxNzY3MywgMzUuNDMzMzkzXSwgWzEzNC42MDgzMDEsIDM1LjczMTYxOF0sIFsxMzUuNjc3NTM4LCAzNS41MjcxMzRdLCBbMTM2LjcyMzgzMSwgMzcuMzA0OTg0XSwgWzEzNy4zOTA2MTIsIDM2LjgyNzM5MV0sIFsxMzguODU3NjAyLCAzNy44Mjc0ODVdLCBbMTM5LjQyNjQwNSwgMzguMjE1OTYyXSwgWzE0MC4wNTQ3OSwgMzkuNDM4ODA3XSwgWzEzOS44ODMzNzksIDQwLjU2MzMxMl0sIFsxNDAuMzA1NzgzLCA0MS4xOTUwMDVdLCBbMTQxLjM2ODk3MywgNDEuMzc4NTZdLCBbMTQxLjkxNDI2MywgMzkuOTkxNjE2XSwgWzE0MS44ODQ2MDEsIDM5LjE4MDg2NV0sIFsxNDAuOTU5NDg5LCAzOC4xNzQwMDFdLCBbMTQwLjk3NjM4OCwgMzcuMTQyMDc0XV1dLCBbW1sxNDMuOTEwMTYyLCA0NC4xNzQxXSwgWzE0NC42MTM0MjcsIDQzLjk2MDg4M10sIFsxNDUuMzIwODI1LCA0NC4zODQ3MzNdLCBbMTQ1LjU0MzEzNywgNDMuMjYyMDg4XSwgWzE0NC4wNTk2NjIsIDQyLjk4ODM1OF0sIFsxNDMuMTgzODUsIDQxLjk5NTIxNV0sIFsxNDEuNjExNDkxLCA0Mi42Nzg3OTFdLCBbMTQxLjA2NzI4NiwgNDEuNTg0NTk0XSwgWzEzOS45NTUxMDYsIDQxLjU2OTU1Nl0sIFsxMzkuODE3NTQ0LCA0Mi41NjM3NTldLCBbMTQwLjMxMjA4NywgNDMuMzMzMjczXSwgWzE0MS4zODA1NDksIDQzLjM4ODgyNV0sIFsxNDEuNjcxOTUyLCA0NC43NzIxMjVdLCBbMTQxLjk2NzY0NSwgNDUuNTUxNDgzXSwgWzE0My4xNDI4NywgNDQuNTEwMzU4XSwgWzE0My45MTAxNjIsIDQ0LjE3NDFdXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIkpQTiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiSmFwYW4iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzcwLjk2MjMxNSwgNDIuMjY2MTU0XSwgWzcwLjM4ODk2NSwgNDIuMDgxMzA4XSwgWzY5LjA3MDAyNywgNDEuMzg0MjQ0XSwgWzY4LjYzMjQ4MywgNDAuNjY4NjgxXSwgWzY4LjI1OTg5NiwgNDAuNjYyMzI1XSwgWzY3Ljk4NTg1NiwgNDEuMTM1OTkxXSwgWzY2LjcxNDA0NywgNDEuMTY4NDQ0XSwgWzY2LjUxMDY0OSwgNDEuOTg3NjQ0XSwgWzY2LjAyMzM5MiwgNDEuOTk0NjQ2XSwgWzY2LjA5ODAxMiwgNDIuOTk3NjZdLCBbNjQuOTAwODI0LCA0My43MjgwODFdLCBbNjMuMTg1Nzg3LCA0My42NTAwNzVdLCBbNjIuMDEzMywgNDMuNTA0NDc3XSwgWzYxLjA1ODMyLCA0NC40MDU4MTddLCBbNjAuMjM5OTcyLCA0NC43ODQwMzddLCBbNTguNjg5OTg5LCA0NS41MDAwMTRdLCBbNTguNTAzMTI3LCA0NS41ODY4MDRdLCBbNTUuOTI4OTE3LCA0NC45OTU4NThdLCBbNTUuOTY4MTkxLCA0MS4zMDg2NDJdLCBbNTUuNDU1MjUxLCA0MS4yNTk4NTldLCBbNTQuNzU1MzQ1LCA0Mi4wNDM5NzFdLCBbNTQuMDc5NDE4LCA0Mi4zMjQxMDldLCBbNTIuOTQ0MjkzLCA0Mi4xMTYwMzRdLCBbNTIuNTAyNDYsIDQxLjc4MzMxNl0sIFs1Mi40NDYzMzksIDQyLjAyNzE1MV0sIFs1Mi42OTIxMTIsIDQyLjQ0Mzg5NV0sIFs1Mi41MDE0MjYsIDQyLjc5MjI5OF0sIFs1MS4zNDI0MjcsIDQzLjEzMjk3NV0sIFs1MC44OTEyOTIsIDQ0LjAzMTAzNF0sIFs1MC4zMzkxMjksIDQ0LjI4NDAxNl0sIFs1MC4zMDU2NDMsIDQ0LjYwOTgzNl0sIFs1MS4yNzg1MDMsIDQ0LjUxNDg1NF0sIFs1MS4zMTY4OTksIDQ1LjI0NTk5OF0sIFs1Mi4xNjczOSwgNDUuNDA4MzkxXSwgWzUzLjA0MDg3NiwgNDUuMjU5MDQ3XSwgWzUzLjIyMDg2NiwgNDYuMjM0NjQ2XSwgWzUzLjA0MjczNywgNDYuODUzMDA2XSwgWzUyLjA0MjAyMywgNDYuODA0NjM3XSwgWzUxLjE5MTk0NSwgNDcuMDQ4NzA1XSwgWzUwLjAzNDA4MywgNDYuNjA4OTldLCBbNDkuMTAxMTYsIDQ2LjM5OTMzXSwgWzQ4LjU5MzI0MSwgNDYuNTYxMDM0XSwgWzQ4LjY5NDczNCwgNDcuMDc1NjI4XSwgWzQ4LjA1NzI1MywgNDcuNzQzNzUzXSwgWzQ3LjMxNTIzMSwgNDcuNzE1ODQ3XSwgWzQ2LjQ2NjQ0NiwgNDguMzk0MTUyXSwgWzQ3LjA0MzY3MiwgNDkuMTUyMDM5XSwgWzQ2Ljc1MTU5NiwgNDkuMzU2MDA2XSwgWzQ3LjU0OTQ4LCA1MC40NTQ2OThdLCBbNDguNTc3ODQxLCA0OS44NzQ3Nl0sIFs0OC43MDIzODIsIDUwLjYwNTEyOF0sIFs1MC43NjY2NDgsIDUxLjY5Mjc2Ml0sIFs1Mi4zMjg3MjQsIDUxLjcxODY1Ml0sIFs1NC41MzI4NzgsIDUxLjAyNjI0XSwgWzU1LjcxNjk0MSwgNTAuNjIxNzE3XSwgWzU2Ljc3Nzk2MSwgNTEuMDQzNTUxXSwgWzU4LjM2MzI5MSwgNTEuMDYzNjUzXSwgWzU5LjY0MjI4MiwgNTAuNTQ1NDQyXSwgWzU5LjkzMjgwNywgNTAuODQyMTk0XSwgWzYxLjMzNzQyNCwgNTAuNzk5MDddLCBbNjEuNTg4MDAzLCA1MS4yNzI2NTldLCBbNTkuOTY3NTM0LCA1MS45NjA0Ml0sIFs2MC45MjcyNjksIDUyLjQ0NzU0OF0sIFs2MC43Mzk5OTMsIDUyLjcxOTk4Nl0sIFs2MS42OTk5ODYsIDUyLjk3OTk5Nl0sIFs2MC45NzgwNjYsIDUzLjY2NDk5M10sIFs2MS40MzY1OTEsIDU0LjAwNjI2NV0sIFs2NS4xNzg1MzQsIDU0LjM1NDIyOF0sIFs2NS42NjY4NzYsIDU0LjYwMTI2N10sIFs2OC4xNjkxLCA1NC45NzAzOTJdLCBbNjkuMDY4MTY3LCA1NS4zODUyNV0sIFs3MC44NjUyNjcsIDU1LjE2OTczNF0sIFs3MS4xODAxMzEsIDU0LjEzMzI4NV0sIFs3Mi4yMjQxNSwgNTQuMzc2NjU1XSwgWzczLjUwODUxNiwgNTQuMDM1NjE3XSwgWzczLjQyNTY3OSwgNTMuNDg5ODFdLCBbNzQuMzg0ODQ1LCA1My41NDY4NjFdLCBbNzYuODkxMSwgNTQuNDkwNTI0XSwgWzc2LjUyNTE3OSwgNTQuMTc3MDAzXSwgWzc3LjgwMDkxNiwgNTMuNDA0NDE1XSwgWzgwLjAzNTU2LCA1MC44NjQ3NTFdLCBbODAuNTY4NDQ3LCA1MS4zODgzMzZdLCBbODEuOTQ1OTg2LCA1MC44MTIxOTZdLCBbODMuMzgzMDA0LCA1MS4wNjkxODNdLCBbODMuOTM1MTE1LCA1MC44ODkyNDZdLCBbODQuNDE2Mzc3LCA1MC4zMTE0XSwgWzg1LjExNTU2LCA1MC4xMTczMDNdLCBbODUuNTQxMjcsIDQ5LjY5Mjg1OV0sIFs4Ni44MjkzNTcsIDQ5LjgyNjY3NV0sIFs4Ny4zNTk5NywgNDkuMjE0OTgxXSwgWzg2LjU5ODc3NiwgNDguNTQ5MTgyXSwgWzg1Ljc2ODIzMywgNDguNDU1NzUxXSwgWzg1LjcyMDQ4NCwgNDcuNDUyOTY5XSwgWzg1LjE2NDI5LCA0Ny4wMDA5NTZdLCBbODMuMTgwNDg0LCA0Ny4zMzAwMzFdLCBbODIuNDU4OTI2LCA0NS41Mzk2NV0sIFs4MS45NDcwNzEsIDQ1LjMxNzAyN10sIFs3OS45NjYxMDYsIDQ0LjkxNzUxN10sIFs4MC44NjYyMDYsIDQzLjE4MDM2Ml0sIFs4MC4xODAxNSwgNDIuOTIwMDY4XSwgWzgwLjI1OTk5LCA0Mi4zNDk5OTldLCBbNzkuNjQzNjQ1LCA0Mi40OTY2ODNdLCBbNzkuMTQyMTc3LCA0Mi44NTYwOTJdLCBbNzcuNjU4MzkyLCA0Mi45NjA2ODZdLCBbNzYuMDAwMzU0LCA0Mi45ODgwMjJdLCBbNzUuNjM2OTY1LCA0Mi44Nzc5XSwgWzc0LjIxMjg2NiwgNDMuMjk4MzM5XSwgWzczLjY0NTMwNCwgNDMuMDkxMjcyXSwgWzczLjQ4OTc1OCwgNDIuNTAwODk0XSwgWzcxLjg0NDYzOCwgNDIuODQ1Mzk1XSwgWzcxLjE4NjI4MSwgNDIuNzA0MjkzXSwgWzcwLjk2MjMxNSwgNDIuMjY2MTU0XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJLQVoiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkthemFraHN0YW4iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzQwLjk5MywgLTAuODU4MjldLCBbNDEuNTg1MTMsIC0xLjY4MzI1XSwgWzQwLjg4NDc3LCAtMi4wODI1NV0sIFs0MC42Mzc4NSwgLTIuNDk5NzldLCBbNDAuMjYzMDQsIC0yLjU3MzA5XSwgWzQwLjEyMTE5LCAtMy4yNzc2OF0sIFszOS44MDAwNiwgLTMuNjgxMTZdLCBbMzkuNjA0ODksIC00LjM0NjUzXSwgWzM5LjIwMjIyLCAtNC42NzY3N10sIFszNy43NjY5LCAtMy42NzcxMl0sIFszNy42OTg2OSwgLTMuMDk2OTldLCBbMzQuMDcyNjIsIC0xLjA1OTgyXSwgWzMzLjkwMzcxMSwgLTAuOTVdLCBbMzMuODkzNTY5LCAwLjEwOTgxNF0sIFszNC4xOCwgMC41MTVdLCBbMzQuNjcyMSwgMS4xNzY5NF0sIFszNS4wMzU5OSwgMS45MDU4NF0sIFszNC41OTYwNywgMy4wNTM3NF0sIFszNC40NzkxMywgMy41NTU2XSwgWzM0LjAwNSwgNC4yNDk4ODVdLCBbMzQuNjIwMTk2LCA0Ljg0NzEyM10sIFszNS4yOTgwMDcsIDUuNTA2XSwgWzM1LjgxNzQ0OCwgNS4zMzgyMzJdLCBbMzUuODE3NDQ4LCA0Ljc3Njk2Nl0sIFszNi4xNTkwNzksIDQuNDQ3ODY0XSwgWzM2Ljg1NTA5MywgNC40NDc4NjRdLCBbMzguMTIwOTE1LCAzLjU5ODYwNV0sIFszOC40MzY5NywgMy41ODg1MV0sIFszOC42NzExNCwgMy42MTYwN10sIFszOC44OTI1MSwgMy41MDA3NF0sIFszOS41NTkzODQsIDMuNDIyMDZdLCBbMzkuODU0OTQsIDMuODM4NzldLCBbNDAuNzY4NDgsIDQuMjU3MDJdLCBbNDEuMTcxOCwgMy45MTkwOV0sIFs0MS44NTUwODMsIDMuOTE4OTEyXSwgWzQwLjk4MTA1LCAyLjc4NDUyXSwgWzQwLjk5MywgLTAuODU4MjldXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIktFTiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiS2VueWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzcwLjk2MjMxNSwgNDIuMjY2MTU0XSwgWzcxLjE4NjI4MSwgNDIuNzA0MjkzXSwgWzcxLjg0NDYzOCwgNDIuODQ1Mzk1XSwgWzczLjQ4OTc1OCwgNDIuNTAwODk0XSwgWzczLjY0NTMwNCwgNDMuMDkxMjcyXSwgWzc0LjIxMjg2NiwgNDMuMjk4MzM5XSwgWzc1LjYzNjk2NSwgNDIuODc3OV0sIFs3Ni4wMDAzNTQsIDQyLjk4ODAyMl0sIFs3Ny42NTgzOTIsIDQyLjk2MDY4Nl0sIFs3OS4xNDIxNzcsIDQyLjg1NjA5Ml0sIFs3OS42NDM2NDUsIDQyLjQ5NjY4M10sIFs4MC4yNTk5OSwgNDIuMzQ5OTk5XSwgWzgwLjExOTQzLCA0Mi4xMjM5NDFdLCBbNzguNTQzNjYxLCA0MS41ODIyNDNdLCBbNzguMTg3MTk3LCA0MS4xODUzMTZdLCBbNzYuOTA0NDg0LCA0MS4wNjY0ODZdLCBbNzYuNTI2MzY4LCA0MC40Mjc5NDZdLCBbNzUuNDY3ODI4LCA0MC41NjIwNzJdLCBbNzQuNzc2ODYyLCA0MC4zNjY0MjVdLCBbNzMuODIyMjQ0LCAzOS44OTM5NzNdLCBbNzMuOTYwMDEzLCAzOS42NjAwMDhdLCBbNzMuNjc1Mzc5LCAzOS40MzEyMzddLCBbNzEuNzg0Njk0LCAzOS4yNzk0NjNdLCBbNzAuNTQ5MTYyLCAzOS42MDQxOThdLCBbNjkuNDY0ODg3LCAzOS41MjY2ODNdLCBbNjkuNTU5NjEsIDQwLjEwMzIxMV0sIFs3MC42NDgwMTksIDM5LjkzNTc1NF0sIFs3MS4wMTQxOTgsIDQwLjI0NDM2Nl0sIFs3MS43NzQ4NzUsIDQwLjE0NTg0NF0sIFs3My4wNTU0MTcsIDQwLjg2NjAzM10sIFs3MS44NzAxMTUsIDQxLjM5MjldLCBbNzEuMTU3ODU5LCA0MS4xNDM1ODddLCBbNzAuNDIwMDIyLCA0MS41MTk5OThdLCBbNzEuMjU5MjQ4LCA0Mi4xNjc3MTFdLCBbNzAuOTYyMzE1LCA0Mi4yNjYxNTRdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIktHWiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiS3lyZ3l6c3RhbiIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMTAzLjQ5NzI4LCAxMC42MzI1NTVdLCBbMTAzLjA5MDY5LCAxMS4xNTM2NjFdLCBbMTAyLjU4NDkzMiwgMTIuMTg2NTk1XSwgWzEwMi4zNDgwOTksIDEzLjM5NDI0N10sIFsxMDIuOTg4NDIyLCAxNC4yMjU3MjFdLCBbMTA0LjI4MTQxOCwgMTQuNDE2NzQzXSwgWzEwNS4yMTg3NzcsIDE0LjI3MzIxMl0sIFsxMDYuMDQzOTQ2LCAxMy44ODEwOTFdLCBbMTA2LjQ5NjM3MywgMTQuNTcwNTg0XSwgWzEwNy4zODI3MjcsIDE0LjIwMjQ0MV0sIFsxMDcuNjE0NTQ4LCAxMy41MzU1MzFdLCBbMTA3LjQ5MTQwMywgMTIuMzM3MjA2XSwgWzEwNS44MTA1MjQsIDExLjU2NzYxNV0sIFsxMDYuMjQ5NjcsIDEwLjk2MTgxMl0sIFsxMDUuMTk5OTE1LCAxMC44ODkzMV0sIFsxMDQuMzM0MzM1LCAxMC40ODY1NDRdLCBbMTAzLjQ5NzI4LCAxMC42MzI1NTVdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIktITSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiQ2FtYm9kaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzEyOC4zNDk3MTYsIDM4LjYxMjI0M10sIFsxMjkuMjEyOTIsIDM3LjQzMjM5Ml0sIFsxMjkuNDYwNDUsIDM2Ljc4NDE4OV0sIFsxMjkuNDY4MzA0LCAzNS42MzIxNDFdLCBbMTI5LjA5MTM3NywgMzUuMDgyNDg0XSwgWzEyOC4xODU4NSwgMzQuODkwMzc3XSwgWzEyNy4zODY1MTksIDM0LjQ3NTY3NF0sIFsxMjYuNDg1NzQ4LCAzNC4zOTAwNDZdLCBbMTI2LjM3MzkyLCAzNC45MzQ1Nl0sIFsxMjYuNTU5MjMxLCAzNS42ODQ1NDFdLCBbMTI2LjExNzM5OCwgMzYuNzI1NDg1XSwgWzEyNi44NjAxNDMsIDM2Ljg5MzkyNF0sIFsxMjYuMTc0NzU5LCAzNy43NDk2ODZdLCBbMTI2LjIzNzMzOSwgMzcuODQwMzc4XSwgWzEyNi42ODM3MiwgMzcuODA0NzczXSwgWzEyNy4wNzMzMDksIDM4LjI1NjExNV0sIFsxMjcuNzgwMDM1LCAzOC4zMDQ1MzZdLCBbMTI4LjIwNTc0NiwgMzguMzcwMzk3XSwgWzEyOC4zNDk3MTYsIDM4LjYxMjI0M11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiS09SIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJTb3V0aCBLb3JlYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMjAuNzYyMTYsIDQyLjA1MTg2XSwgWzIwLjcxNzMxLCA0MS44NDcxMV0sIFsyMC41OTAyMywgNDEuODU1NDFdLCBbMjAuNTIyOTUsIDQyLjIxNzg3XSwgWzIwLjI4Mzc0LCA0Mi4zMjAyNV0sIFsyMC4wNzA3LCA0Mi41ODg2M10sIFsyMC4yNTc1OCwgNDIuODEyNzVdLCBbMjAuNDk2NzksIDQyLjg4NDY5XSwgWzIwLjYzNTA4LCA0My4yMTY3MV0sIFsyMC44MTQ0OCwgNDMuMjcyMDVdLCBbMjAuOTU2NTEsIDQzLjEzMDk0XSwgWzIxLjE0MzM5NSwgNDMuMDY4Njg1XSwgWzIxLjI3NDIxLCA0Mi45MDk1OV0sIFsyMS40Mzg2NiwgNDIuODYyNTVdLCBbMjEuNjMzMDIsIDQyLjY3NzE3XSwgWzIxLjc3NTA1LCA0Mi42ODI3XSwgWzIxLjY2MjkyLCA0Mi40MzkyMl0sIFsyMS41NDMzMiwgNDIuMzIwMjVdLCBbMjEuNTc2NjM2LCA0Mi4yNDUyMjRdLCBbMjEuMzUyNywgNDIuMjA2OF0sIFsyMC43NjIxNiwgNDIuMDUxODZdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIi05OSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiS29zb3ZvIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiYmxhY2siLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbNDcuOTc0NTE5LCAyOS45NzU4MTldLCBbNDguMTgzMTg5LCAyOS41MzQ0NzddLCBbNDguMDkzOTQzLCAyOS4zMDYyOTldLCBbNDguNDE2MDk0LCAyOC41NTIwMDRdLCBbNDcuNzA4ODUxLCAyOC41MjYwNjNdLCBbNDcuNDU5ODIyLCAyOS4wMDI1MTldLCBbNDYuNTY4NzEzLCAyOS4wOTkwMjVdLCBbNDcuMzAyNjIyLCAzMC4wNTkwN10sIFs0Ny45NzQ1MTksIDI5Ljk3NTgxOV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiS1dUIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJLdXdhaXQiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzEwNS4yMTg3NzcsIDE0LjI3MzIxMl0sIFsxMDUuNTQ0MzM4LCAxNC43MjM5MzRdLCBbMTA1LjU4OTAzOSwgMTUuNTcwMzE2XSwgWzEwNC43NzkzMjEsIDE2LjQ0MTg2NV0sIFsxMDQuNzE2OTQ3LCAxNy40Mjg4NTldLCBbMTAzLjk1NjQ3NywgMTguMjQwOTU0XSwgWzEwMy4yMDAxOTIsIDE4LjMwOTYzMl0sIFsxMDIuOTk4NzA2LCAxNy45NjE2OTVdLCBbMTAyLjQxMzAwNSwgMTcuOTMyNzgyXSwgWzEwMi4xMTM1OTIsIDE4LjEwOTEwMl0sIFsxMDEuMDU5NTQ4LCAxNy41MTI0OTddLCBbMTAxLjAzNTkzMSwgMTguNDA4OTI4XSwgWzEwMS4yODIwMTUsIDE5LjQ2MjU4NV0sIFsxMDAuNjA2Mjk0LCAxOS41MDgzNDRdLCBbMTAwLjU0ODg4MSwgMjAuMTA5MjM4XSwgWzEwMC4xMTU5ODgsIDIwLjQxNzg1XSwgWzEwMC4zMjkxMDEsIDIwLjc4NjEyMl0sIFsxMDEuMTgwMDA1LCAyMS40MzY1NzNdLCBbMTAxLjI3MDAyNiwgMjEuMjAxNjUyXSwgWzEwMS44MDMxMiwgMjEuMTc0MzY3XSwgWzEwMS42NTIwMTgsIDIyLjMxODE5OV0sIFsxMDIuMTcwNDM2LCAyMi40NjQ3NTNdLCBbMTAyLjc1NDg5NiwgMjEuNjc1MTM3XSwgWzEwMy4yMDM4NjEsIDIwLjc2NjU2Ml0sIFsxMDQuNDM1LCAyMC43NTg3MzNdLCBbMTA0LjgyMjU3NCwgMTkuODg2NjQyXSwgWzEwNC4xODMzODgsIDE5LjYyNDY2OF0sIFsxMDMuODk2NTMyLCAxOS4yNjUxODFdLCBbMTA1LjA5NDU5OCwgMTguNjY2OTc1XSwgWzEwNS45MjU3NjIsIDE3LjQ4NTMxNV0sIFsxMDYuNTU2MDA4LCAxNi42MDQyODRdLCBbMTA3LjMxMjcwNiwgMTUuOTA4NTM4XSwgWzEwNy41NjQ1MjUsIDE1LjIwMjE3M10sIFsxMDcuMzgyNzI3LCAxNC4yMDI0NDFdLCBbMTA2LjQ5NjM3MywgMTQuNTcwNTg0XSwgWzEwNi4wNDM5NDYsIDEzLjg4MTA5MV0sIFsxMDUuMjE4Nzc3LCAxNC4yNzMyMTJdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkxBTyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTGFvcyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzM1LjgyMTEwMSwgMzMuMjc3NDI2XSwgWzM1LjU1Mjc5NywgMzMuMjY0Mjc1XSwgWzM1LjQ2MDcwOSwgMzMuMDg5MDRdLCBbMzUuMTI2MDUzLCAzMy4wOTA5XSwgWzM1LjQ4MjIwNywgMzMuOTA1NDVdLCBbMzUuOTc5NTkyLCAzNC42MTAwNThdLCBbMzUuOTk4NDAzLCAzNC42NDQ5MTRdLCBbMzYuNDQ4MTk0LCAzNC41OTM5MzVdLCBbMzYuNjExNzUsIDM0LjIwMTc4OV0sIFszNi4wNjY0NiwgMzMuODI0OTEyXSwgWzM1LjgyMTEwMSwgMzMuMjc3NDI2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJMQk4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkxlYmFub24iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmVkOTc2IiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy03LjcxMjE1OSwgNC4zNjQ1NjZdLCBbLTcuOTc0MTA3LCA0LjM1NTc1NV0sIFstOS4wMDQ3OTQsIDQuODMyNDE5XSwgWy05LjkxMzQyLCA1LjU5MzU2MV0sIFstMTAuNzY1Mzg0LCA2LjE0MDcxMV0sIFstMTEuNDM4Nzc5LCA2Ljc4NTkxN10sIFstMTEuMTk5ODAyLCA3LjEwNTg0Nl0sIFstMTEuMTQ2NzA0LCA3LjM5NjcwNl0sIFstMTAuNjk1NTk1LCA3LjkzOTQ2NF0sIFstMTAuMjMwMDk0LCA4LjQwNjIwNl0sIFstMTAuMDE2NTY3LCA4LjQyODUwNF0sIFstOS43NTUzNDIsIDguNTQxMDU1XSwgWy05LjMzNzI4LCA3LjkyODUzNF0sIFstOS40MDMzNDgsIDcuNTI2OTA1XSwgWy05LjIwODc4NiwgNy4zMTM5MjFdLCBbLTguOTI2MDY1LCA3LjMwOTAzN10sIFstOC43MjIxMjQsIDcuNzExNjc0XSwgWy04LjQzOTI5OCwgNy42ODYwNDNdLCBbLTguNDg1NDQ2LCA3LjM5NTIwOF0sIFstOC4zODU0NTIsIDYuOTExODAxXSwgWy04LjYwMjg4LCA2LjQ2NzU2NF0sIFstOC4zMTEzNDgsIDYuMTkzMDMzXSwgWy03Ljk5MzY5MywgNi4xMjYxOV0sIFstNy41NzAxNTMsIDUuNzA3MzUyXSwgWy03LjUzOTcxNSwgNS4zMTMzNDVdLCBbLTcuNjM1MzY4LCA1LjE4ODE1OV0sIFstNy43MTIxNTksIDQuMzY0NTY2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJMQlIiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkxpYmVyaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzE0Ljg1MTMsIDIyLjg2Mjk1XSwgWzE0LjE0Mzg3MSwgMjIuNDkxMjg5XSwgWzEzLjU4MTQyNSwgMjMuMDQwNTA2XSwgWzExLjk5OTUwNiwgMjMuNDcxNjY4XSwgWzExLjU2MDY2OSwgMjQuMDk3OTA5XSwgWzEwLjc3MTM2NCwgMjQuNTYyNTMyXSwgWzEwLjMwMzg0NywgMjQuMzc5MzEzXSwgWzkuOTQ4MjYxLCAyNC45MzY5NTRdLCBbOS45MTA2OTMsIDI1LjM2NTQ1NV0sIFs5LjMxOTQxMSwgMjYuMDk0MzI1XSwgWzkuNzE2Mjg2LCAyNi41MTIyMDZdLCBbOS42MjkwNTYsIDI3LjE0MDk1M10sIFs5Ljc1NjEyOCwgMjcuNjg4MjU5XSwgWzkuNjgzODg1LCAyOC4xNDQxNzRdLCBbOS44NTk5OTgsIDI4Ljk1OTk5XSwgWzkuODA1NjM0LCAyOS40MjQ2MzhdLCBbOS40ODIxNCwgMzAuMzA3NTU2XSwgWzkuOTcwMDE3LCAzMC41MzkzMjVdLCBbMTAuMDU2NTc1LCAzMC45NjE4MzFdLCBbOS45NTAyMjUsIDMxLjM3NjA3XSwgWzEwLjYzNjkwMSwgMzEuNzYxNDIxXSwgWzEwLjk0NDc5LCAzMi4wODE4MTVdLCBbMTEuNDMyMjUzLCAzMi4zNjg5MDNdLCBbMTEuNDg4Nzg3LCAzMy4xMzY5OTZdLCBbMTIuNjYzMzEsIDMyLjc5Mjc4XSwgWzEzLjA4MzI2LCAzMi44Nzg4Ml0sIFsxMy45MTg2OCwgMzIuNzExOTZdLCBbMTUuMjQ1NjMsIDMyLjI2NTA4XSwgWzE1LjcxMzk0LCAzMS4zNzYyNl0sIFsxNi42MTE2MiwgMzEuMTgyMThdLCBbMTguMDIxMDksIDMwLjc2MzU3XSwgWzE5LjA4NjQxLCAzMC4yNjYzOV0sIFsxOS41NzQwNCwgMzAuNTI1ODJdLCBbMjAuMDUzMzUsIDMwLjk4NTc2XSwgWzE5LjgyMDMzLCAzMS43NTE3OV0sIFsyMC4xMzM5NywgMzIuMjM4Ml0sIFsyMC44NTQ1MiwgMzIuNzA2OF0sIFsyMS41NDI5OCwgMzIuODQzMl0sIFsyMi44OTU3NiwgMzIuNjM4NThdLCBbMjMuMjM2OCwgMzIuMTkxNDldLCBbMjMuNjA5MTMsIDMyLjE4NzI2XSwgWzIzLjkyNzUsIDMyLjAxNjY3XSwgWzI0LjkyMTE0LCAzMS44OTkzNl0sIFsyNS4xNjQ4MiwgMzEuNTY5MTVdLCBbMjQuODAyODcsIDMxLjA4OTI5XSwgWzI0Ljk1NzYyLCAzMC42NjE2XSwgWzI0LjcwMDA3LCAzMC4wNDQxOV0sIFsyNSwgMjkuMjM4NjU1XSwgWzI1LCAyNS42ODI1XSwgWzI1LCAyMl0sIFsyNSwgMjAuMDAzMDRdLCBbMjMuODUsIDIwXSwgWzIzLjgzNzY2LCAxOS41ODA0N10sIFsxOS44NDkyNiwgMjEuNDk1MDldLCBbMTUuODYwODUsIDIzLjQwOTcyXSwgWzE0Ljg1MTMsIDIyLjg2Mjk1XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJMQlkiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkxpYnlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s4MS43ODc5NTksIDcuNTIzMDU1XSwgWzgxLjYzNzMyMiwgNi40ODE3NzVdLCBbODEuMjE4MDIsIDYuMTk3MTQxXSwgWzgwLjM0ODM1NywgNS45NjgzN10sIFs3OS44NzI0NjksIDYuNzYzNDYzXSwgWzc5LjY5NTE2NywgOC4yMDA4NDNdLCBbODAuMTQ3ODAxLCA5LjgyNDA3OF0sIFs4MC44Mzg4MTgsIDkuMjY4NDI3XSwgWzgxLjMwNDMxOSwgOC41NjQyMDZdLCBbODEuNzg3OTU5LCA3LjUyMzA1NV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTEtBIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJTcmkgTGFua2EiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmVkOTc2IiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzI4Ljk3ODI2MywgLTI4Ljk1NTU5N10sIFsyOS4zMjUxNjYsIC0yOS4yNTczODddLCBbMjkuMDE4NDE1LCAtMjkuNzQzNzY2XSwgWzI4Ljg0ODQsIC0zMC4wNzAwNTFdLCBbMjguMjkxMDY5LCAtMzAuMjI2MjE3XSwgWzI4LjEwNzIwNSwgLTMwLjU0NTczMl0sIFsyNy43NDkzOTcsIC0zMC42NDUxMDZdLCBbMjYuOTk5MjYyLCAtMjkuODc1OTU0XSwgWzI3LjUzMjUxMSwgLTI5LjI0MjcxMV0sIFsyOC4wNzQzMzgsIC0yOC44NTE0NjldLCBbMjguNTQxNywgLTI4LjY0NzUwMl0sIFsyOC45NzgyNjMsIC0yOC45NTU1OTddXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIkxTTyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTGVzb3RobyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMjIuNzMxMDk5LCA1NC4zMjc1MzddLCBbMjIuNjUxMDUyLCA1NC41ODI3NDFdLCBbMjIuNzU3NzY0LCA1NC44NTY1NzRdLCBbMjIuMzE1NzI0LCA1NS4wMTUyOTldLCBbMjEuMjY4NDQ5LCA1NS4xOTA0ODJdLCBbMjEuMDU1OCwgNTYuMDMxMDc2XSwgWzIyLjIwMTE1NywgNTYuMzM3ODAyXSwgWzIzLjg3ODI2NCwgNTYuMjczNjcxXSwgWzI0Ljg2MDY4NCwgNTYuMzcyNTI4XSwgWzI1LjAwMDkzNCwgNTYuMTY0NTMxXSwgWzI1LjUzMzA0NywgNTYuMTAwMjk3XSwgWzI2LjQ5NDMzMSwgNTUuNjE1MTA3XSwgWzI2LjU4ODI3OSwgNTUuMTY3MTc2XSwgWzI1Ljc2ODQzMywgNTQuODQ2OTYzXSwgWzI1LjUzNjM1NCwgNTQuMjgyNDIzXSwgWzI0LjQ1MDY4NCwgNTMuOTA1NzAyXSwgWzIzLjQ4NDEyOCwgNTMuOTEyNDk4XSwgWzIzLjI0Mzk4NywgNTQuMjIwNTY3XSwgWzIyLjczMTA5OSwgNTQuMzI3NTM3XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJMVFUiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkxpdGh1YW5pYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbNi4wNDMwNzMsIDUwLjEyODA1Ml0sIFs2LjI0Mjc1MSwgNDkuOTAyMjI2XSwgWzYuMTg2MzIsIDQ5LjQ2MzgwM10sIFs1Ljg5Nzc1OSwgNDkuNDQyNjY3XSwgWzUuNjc0MDUyLCA0OS41Mjk0ODRdLCBbNS43ODI0MTcsIDUwLjA5MDMyOF0sIFs2LjA0MzA3MywgNTAuMTI4MDUyXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJMVVgiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkx1eGVtYm91cmciLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzIxLjA1NTgsIDU2LjAzMTA3Nl0sIFsyMS4wOTA0MjQsIDU2Ljc4Mzg3M10sIFsyMS41ODE4NjYsIDU3LjQxMTg3MV0sIFsyMi41MjQzNDEsIDU3Ljc1MzM3NF0sIFsyMy4zMTg0NTMsIDU3LjAwNjIzNl0sIFsyNC4xMjA3MywgNTcuMDI1NjkzXSwgWzI0LjMxMjg2MywgNTcuNzkzNDI0XSwgWzI1LjE2NDU5NCwgNTcuOTcwMTU3XSwgWzI1LjYwMjgxLCA1Ny44NDc1MjldLCBbMjYuNDYzNTMyLCA1Ny40NzYzODldLCBbMjcuMjg4MTg1LCA1Ny40NzQ1MjhdLCBbMjcuNzcwMDE2LCA1Ny4yNDQyNThdLCBbMjcuODU1MjgyLCA1Ni43NTkzMjZdLCBbMjguMTc2NzA5LCA1Ni4xNjkxM10sIFsyNy4xMDI0NiwgNTUuNzgzMzE0XSwgWzI2LjQ5NDMzMSwgNTUuNjE1MTA3XSwgWzI1LjUzMzA0NywgNTYuMTAwMjk3XSwgWzI1LjAwMDkzNCwgNTYuMTY0NTMxXSwgWzI0Ljg2MDY4NCwgNTYuMzcyNTI4XSwgWzIzLjg3ODI2NCwgNTYuMjczNjcxXSwgWzIyLjIwMTE1NywgNTYuMzM3ODAyXSwgWzIxLjA1NTgsIDU2LjAzMTA3Nl1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTFZBIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJMYXR2aWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy01LjE5Mzg2MywgMzUuNzU1MTgyXSwgWy00LjU5MTAwNiwgMzUuMzMwNzEyXSwgWy0zLjY0MDA1NywgMzUuMzk5ODU1XSwgWy0yLjYwNDMwNiwgMzUuMTc5MDkzXSwgWy0yLjE2OTkxNCwgMzUuMTY4Mzk2XSwgWy0xLjc5Mjk4NiwgMzQuNTI3OTE5XSwgWy0xLjczMzQ1NSwgMzMuOTE5NzEzXSwgWy0xLjM4ODA0OSwgMzIuODY0MDE1XSwgWy0xLjEyNDU1MSwgMzIuNjUxNTIyXSwgWy0xLjMwNzg5OSwgMzIuMjYyODg5XSwgWy0yLjYxNjYwNSwgMzIuMDk0MzQ2XSwgWy0zLjA2ODk4LCAzMS43MjQ0OThdLCBbLTMuNjQ3NDk4LCAzMS42MzcyOTRdLCBbLTMuNjkwNDQxLCAzMC44OTY5NTJdLCBbLTQuODU5NjQ2LCAzMC41MDExODhdLCBbLTUuMjQyMTI5LCAzMC4wMDA0NDNdLCBbLTYuMDYwNjMyLCAyOS43MzE3XSwgWy03LjA1OTIyOCwgMjkuNTc5MjI4XSwgWy04LjY3NDExNiwgMjguODQxMjg5XSwgWy04LjY2NTU5LCAyNy42NTY0MjZdLCBbLTguODE3ODA5LCAyNy42NTY0MjZdLCBbLTguODE3ODI4LCAyNy42NTY0MjZdLCBbLTguNzk0ODg0LCAyNy4xMjA2OTZdLCBbLTkuNDEzMDM3LCAyNy4wODg0NzZdLCBbLTkuNzM1MzQzLCAyNi44NjA5NDVdLCBbLTEwLjE4OTQyNCwgMjYuODYwOTQ1XSwgWy0xMC41NTEyNjMsIDI2Ljk5MDgwOF0sIFstMTEuMzkyNTU1LCAyNi44ODM0MjRdLCBbLTExLjcxODIyLCAyNi4xMDQwOTJdLCBbLTEyLjAzMDc1OSwgMjYuMDMwODY2XSwgWy0xMi41MDA5NjMsIDI0Ljc3MDExNl0sIFstMTMuODkxMTEsIDIzLjY5MTAwOV0sIFstMTQuMjIxMTY4LCAyMi4zMTAxNjNdLCBbLTE0LjYzMDgzMywgMjEuODYwOTRdLCBbLTE0Ljc1MDk1NSwgMjEuNTAwNl0sIFstMTcuMDAyOTYyLCAyMS40MjA3MzRdLCBbLTE3LjAyMDQyOCwgMjEuNDIyMzFdLCBbLTE2Ljk3MzI0OCwgMjEuODg1NzQ1XSwgWy0xNi41ODkxMzcsIDIyLjE1ODIzNF0sIFstMTYuMjYxOTIyLCAyMi42NzkzNF0sIFstMTYuMzI2NDE0LCAyMy4wMTc3NjhdLCBbLTE1Ljk4MjYxMSwgMjMuNzIzMzU4XSwgWy0xNS40MjYwMDQsIDI0LjM1OTEzNF0sIFstMTUuMDg5MzMyLCAyNC41MjAyNjFdLCBbLTE0LjgyNDY0NSwgMjUuMTAzNTMzXSwgWy0xNC44MDA5MjYsIDI1LjYzNjI2NV0sIFstMTQuNDM5OTQsIDI2LjI1NDQxOF0sIFstMTMuNzczODA1LCAyNi42MTg4OTJdLCBbLTEzLjEzOTk0MiwgMjcuNjQwMTQ4XSwgWy0xMy4xMjE2MTMsIDI3LjY1NDE0OF0sIFstMTIuNjE4ODM3LCAyOC4wMzgxODZdLCBbLTExLjY4ODkxOSwgMjguMTQ4NjQ0XSwgWy0xMC45MDA5NTcsIDI4LjgzMjE0Ml0sIFstMTAuMzk5NTkyLCAyOS4wOTg1ODZdLCBbLTkuNTY0ODExLCAyOS45MzM1NzRdLCBbLTkuODE0NzE4LCAzMS4xNzc3MzZdLCBbLTkuNDM0NzkzLCAzMi4wMzgwOTZdLCBbLTkuMzAwNjkzLCAzMi41NjQ2NzldLCBbLTguNjU3NDc2LCAzMy4yNDAyNDVdLCBbLTcuNjU0MTc4LCAzMy42OTcwNjVdLCBbLTYuOTEyNTQ0LCAzNC4xMTA0NzZdLCBbLTYuMjQ0MzQyLCAzNS4xNDU4NjVdLCBbLTUuOTI5OTk0LCAzNS43NTk5ODhdLCBbLTUuMTkzODYzLCAzNS43NTUxODJdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIk1BUiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTW9yb2NjbyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMjYuNjE5MzM3LCA0OC4yMjA3MjZdLCBbMjYuODU3ODI0LCA0OC4zNjgyMTFdLCBbMjcuNTIyNTM3LCA0OC40NjcxMTldLCBbMjguMjU5NTQ3LCA0OC4xNTU1NjJdLCBbMjguNjcwODkxLCA0OC4xMTgxNDldLCBbMjkuMTIyNjk4LCA0Ny44NDkwOTVdLCBbMjkuMDUwODY4LCA0Ny41MTAyMjddLCBbMjkuNDE1MTM1LCA0Ny4zNDY2NDVdLCBbMjkuNTU5Njc0LCA0Ni45Mjg1ODNdLCBbMjkuOTA4ODUyLCA0Ni42NzQzNjFdLCBbMjkuODM4MjEsIDQ2LjUyNTMyNl0sIFszMC4wMjQ2NTksIDQ2LjQyMzkzN10sIFsyOS43NTk5NzIsIDQ2LjM0OTk4OF0sIFsyOS4xNzA2NTQsIDQ2LjM3OTI2Ml0sIFsyOS4wNzIxMDcsIDQ2LjUxNzY3OF0sIFsyOC44NjI5NzIsIDQ2LjQzNzg4OV0sIFsyOC45MzM3MTcsIDQ2LjI1ODgzXSwgWzI4LjY1OTk4NywgNDUuOTM5OTg3XSwgWzI4LjQ4NTI2OSwgNDUuNTk2OTA3XSwgWzI4LjIzMzU1NCwgNDUuNDg4MjgzXSwgWzI4LjA1NDQ0MywgNDUuOTQ0NTg2XSwgWzI4LjE2MDAxOCwgNDYuMzcxNTYzXSwgWzI4LjEyODAzLCA0Ni44MTA0NzZdLCBbMjcuNTUxMTY2LCA0Ny40MDUxMTddLCBbMjcuMjMzODczLCA0Ny44MjY3NzFdLCBbMjYuOTI0MTc2LCA0OC4xMjMyNjRdLCBbMjYuNjE5MzM3LCA0OC4yMjA3MjZdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIk1EQSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTW9sZG92YSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbNDkuNTQzNTE5LCAtMTIuNDY5ODMzXSwgWzQ5LjgwODk4MSwgLTEyLjg5NTI4NV0sIFs1MC4wNTY1MTEsIC0xMy41NTU3NjFdLCBbNTAuMjE3NDMxLCAtMTQuNzU4Nzg5XSwgWzUwLjQ3NjUzNywgLTE1LjIyNjUxMl0sIFs1MC4zNzcxMTEsIC0xNS43MDYwNjldLCBbNTAuMjAwMjc1LCAtMTYuMDAwMjYzXSwgWzQ5Ljg2MDYwNiwgLTE1LjQxNDI1M10sIFs0OS42NzI2MDcsIC0xNS43MTAyMDRdLCBbNDkuODYzMzQ0LCAtMTYuNDUxMDM3XSwgWzQ5Ljc3NDU2NCwgLTE2Ljg3NTA0Ml0sIFs0OS40OTg2MTIsIC0xNy4xMDYwMzZdLCBbNDkuNDM1NjE5LCAtMTcuOTUzMDY0XSwgWzQ5LjA0MTc5MiwgLTE5LjExODc4MV0sIFs0OC41NDg1NDEsIC0yMC40OTY4ODhdLCBbNDcuOTMwNzQ5LCAtMjIuMzkxNTAxXSwgWzQ3LjU0NzcyMywgLTIzLjc4MTk1OV0sIFs0Ny4wOTU3NjEsIC0yNC45NDE2M10sIFs0Ni4yODI0NzgsIC0yNS4xNzg0NjNdLCBbNDUuNDA5NTA4LCAtMjUuNjAxNDM0XSwgWzQ0LjgzMzU3NCwgLTI1LjM0NjEwMV0sIFs0NC4wMzk3MiwgLTI0Ljk4ODM0NV0sIFs0My43NjM3NjgsIC0yNC40NjA2NzddLCBbNDMuNjk3Nzc4LCAtMjMuNTc0MTE2XSwgWzQzLjM0NTY1NCwgLTIyLjc3NjkwNF0sIFs0My4yNTQxODcsIC0yMi4wNTc0MTNdLCBbNDMuNDMzMjk4LCAtMjEuMzM2NDc1XSwgWzQzLjg5MzY4MywgLTIxLjE2MzMwN10sIFs0My44OTYzNywgLTIwLjgzMDQ1OV0sIFs0NC4zNzQzMjUsIC0yMC4wNzIzNjZdLCBbNDQuNDY0Mzk3LCAtMTkuNDM1NDU0XSwgWzQ0LjIzMjQyMiwgLTE4Ljk2MTk5NV0sIFs0NC4wNDI5NzYsIC0xOC4zMzEzODddLCBbNDMuOTYzMDg0LCAtMTcuNDA5OTQ1XSwgWzQ0LjMxMjQ2OSwgLTE2Ljg1MDQ5Nl0sIFs0NC40NDY1MTcsIC0xNi4yMTYyMTldLCBbNDQuOTQ0OTM3LCAtMTYuMTc5Mzc0XSwgWzQ1LjUwMjczMiwgLTE1Ljk3NDM3M10sIFs0NS44NzI5OTQsIC0xNS43OTM0NTRdLCBbNDYuMzEyMjQzLCAtMTUuNzgwMDE4XSwgWzQ2Ljg4MjE4MywgLTE1LjIxMDE4Ml0sIFs0Ny43MDUxMywgLTE0LjU5NDMwM10sIFs0OC4wMDUyMTUsIC0xNC4wOTEyMzNdLCBbNDcuODY5MDQ3LCAtMTMuNjYzODY5XSwgWzQ4LjI5MzgyOCwgLTEzLjc4NDA2OF0sIFs0OC44NDUwNiwgLTEzLjA4OTE3NV0sIFs0OC44NjM1MDksIC0xMi40ODc4NjhdLCBbNDkuMTk0NjUxLCAtMTIuMDQwNTU3XSwgWzQ5LjU0MzUxOSwgLTEyLjQ2OTgzM11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTURHIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJNYWRhZ2FzY2FyIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stOTcuMTQwMDA4LCAyNS44Njk5OTddLCBbLTk3LjUyODA3MiwgMjQuOTkyMTQ0XSwgWy05Ny43MDI5NDYsIDI0LjI3MjM0M10sIFstOTcuNzc2MDQyLCAyMi45MzI1OF0sIFstOTcuODcyMzY3LCAyMi40NDQyMTJdLCBbLTk3LjY5OTA0NCwgMjEuODk4Njg5XSwgWy05Ny4zODg5NiwgMjEuNDExMDE5XSwgWy05Ny4xODkzMzMsIDIwLjYzNTQzM10sIFstOTYuNTI1NTc2LCAxOS44OTA5MzFdLCBbLTk2LjI5MjEyNywgMTkuMzIwMzcxXSwgWy05NS45MDA4ODUsIDE4LjgyODAyNF0sIFstOTQuODM5MDYzLCAxOC41NjI3MTddLCBbLTk0LjQyNTczLCAxOC4xNDQzNzFdLCBbLTkzLjU0ODY1MSwgMTguNDIzODM3XSwgWy05Mi43ODYxMTQsIDE4LjUyNDgzOV0sIFstOTIuMDM3MzQ4LCAxOC43MDQ1NjldLCBbLTkxLjQwNzkwMywgMTguODc2MDgzXSwgWy05MC43NzE4NywgMTkuMjg0MTJdLCBbLTkwLjUzMzU5LCAxOS44Njc0MThdLCBbLTkwLjQ1MTQ3NiwgMjAuNzA3NTIyXSwgWy05MC4yNzg2MTgsIDIwLjk5OTg1NV0sIFstODkuNjAxMzIxLCAyMS4yNjE3MjZdLCBbLTg4LjU0Mzg2NiwgMjEuNDkzNjc1XSwgWy04Ny42NTg0MTcsIDIxLjQ1ODg0Nl0sIFstODcuMDUxODksIDIxLjU0MzU0M10sIFstODYuODExOTgyLCAyMS4zMzE1MTVdLCBbLTg2Ljg0NTkwOCwgMjAuODQ5ODY1XSwgWy04Ny4zODMyOTEsIDIwLjI1NTQwNV0sIFstODcuNjIxMDU0LCAxOS42NDY1NTNdLCBbLTg3LjQzNjc1LCAxOS40NzI0MDNdLCBbLTg3LjU4NjU2LCAxOS4wNDAxM10sIFstODcuODM3MTkxLCAxOC4yNTk4MTZdLCBbLTg4LjA5MDY2NCwgMTguNTE2NjQ4XSwgWy04OC4zMDAwMzEsIDE4LjQ5OTk4Ml0sIFstODguNDkwMTIzLCAxOC40ODY4MzFdLCBbLTg4Ljg0ODM0NCwgMTcuODgzMTk4XSwgWy04OS4wMjk4NTcsIDE4LjAwMTUxMV0sIFstODkuMTUwOTA5LCAxNy45NTU0NjhdLCBbLTg5LjE0MzA4LCAxNy44MDgzMTldLCBbLTkwLjA2NzkzNCwgMTcuODE5MzI2XSwgWy05MS4wMDE1MiwgMTcuODE3NTk1XSwgWy05MS4wMDIyNjksIDE3LjI1NDY1OF0sIFstOTEuNDUzOTIxLCAxNy4yNTIxNzddLCBbLTkxLjA4MTY3LCAxNi45MTg0NzddLCBbLTkwLjcxMTgyMiwgMTYuNjg3NDgzXSwgWy05MC42MDA4NDcsIDE2LjQ3MDc3OF0sIFstOTAuNDM4ODY3LCAxNi40MTAxMV0sIFstOTAuNDY0NDczLCAxNi4wNjk1NjJdLCBbLTkxLjc0Nzk2LCAxNi4wNjY1NjVdLCBbLTkyLjIyOTI0OSwgMTUuMjUxNDQ3XSwgWy05Mi4wODcyMTYsIDE1LjA2NDU4NV0sIFstOTIuMjAzMjMsIDE0LjgzMDEwM10sIFstOTIuMjI3NzUsIDE0LjUzODgyOV0sIFstOTMuMzU5NDY0LCAxNS42MTU0M10sIFstOTMuODc1MTY5LCAxNS45NDAxNjRdLCBbLTk0LjY5MTY1NiwgMTYuMjAwOTc1XSwgWy05NS4yNTAyMjcsIDE2LjEyODMxOF0sIFstOTYuMDUzMzgyLCAxNS43NTIwODhdLCBbLTk2LjU1NzQzNCwgMTUuNjUzNTE1XSwgWy05Ny4yNjM1OTIsIDE1LjkxNzA2NV0sIFstOTguMDEzMDMsIDE2LjEwNzMxMl0sIFstOTguOTQ3Njc2LCAxNi41NjYwNDNdLCBbLTk5LjY5NzM5NywgMTYuNzA2MTY0XSwgWy0xMDAuODI5NDk5LCAxNy4xNzEwNzFdLCBbLTEwMS42NjYwODksIDE3LjY0OTAyNl0sIFstMTAxLjkxODUyOCwgMTcuOTE2MDldLCBbLTEwMi40NzgxMzIsIDE3Ljk3NTc1MV0sIFstMTAzLjUwMDk5LCAxOC4yOTIyOTVdLCBbLTEwMy45MTc1MjcsIDE4Ljc0ODU3Ml0sIFstMTA0Ljk5MjAxLCAxOS4zMTYxMzRdLCBbLTEwNS40OTMwMzgsIDE5Ljk0Njc2N10sIFstMTA1LjczMTM5NiwgMjAuNDM0MTAyXSwgWy0xMDUuMzk3NzczLCAyMC41MzE3MTldLCBbLTEwNS41MDA2NjEsIDIwLjgxNjg5NV0sIFstMTA1LjI3MDc1MiwgMjEuMDc2Mjg1XSwgWy0xMDUuMjY1ODE3LCAyMS40MjIxMDRdLCBbLTEwNS42MDMxNjEsIDIxLjg3MTE0Nl0sIFstMTA1LjY5MzQxNCwgMjIuMjY5MDhdLCBbLTEwNi4wMjg3MTYsIDIyLjc3Mzc1Ml0sIFstMTA2LjkwOTk4LCAyMy43Njc3NzRdLCBbLTEwNy45MTU0NDksIDI0LjU0ODkxNV0sIFstMTA4LjQwMTkwNSwgMjUuMTcyMzE0XSwgWy0xMDkuMjYwMTk5LCAyNS41ODA2MDldLCBbLTEwOS40NDQwODksIDI1LjgyNDg4NF0sIFstMTA5LjI5MTY0NCwgMjYuNDQyOTM0XSwgWy0xMDkuODAxNDU4LCAyNi42NzYxNzZdLCBbLTExMC4zOTE3MzIsIDI3LjE2MjExNV0sIFstMTEwLjY0MTAxOSwgMjcuODU5ODc2XSwgWy0xMTEuMTc4OTE5LCAyNy45NDEyNDFdLCBbLTExMS43NTk2MDcsIDI4LjQ2Nzk1M10sIFstMTEyLjIyODIzNSwgMjguOTU0NDA5XSwgWy0xMTIuMjcxODI0LCAyOS4yNjY4NDRdLCBbLTExMi44MDk1OTQsIDMwLjAyMTExNF0sIFstMTEzLjE2MzgxMSwgMzAuNzg2ODgxXSwgWy0xMTMuMTQ4NjY5LCAzMS4xNzA5NjZdLCBbLTExMy44NzE4ODEsIDMxLjU2NzYwOF0sIFstMTE0LjIwNTczNywgMzEuNTI0MDQ1XSwgWy0xMTQuNzc2NDUxLCAzMS43OTk1MzJdLCBbLTExNC45MzY3LCAzMS4zOTM0ODVdLCBbLTExNC43NzEyMzIsIDMwLjkxMzYxN10sIFstMTE0LjY3Mzg5OSwgMzAuMTYyNjgxXSwgWy0xMTQuMzMwOTc0LCAyOS43NTA0MzJdLCBbLTExMy41ODg4NzUsIDI5LjA2MTYxMV0sIFstMTEzLjQyNDA1MywgMjguODI2MTc0XSwgWy0xMTMuMjcxOTY5LCAyOC43NTQ3ODNdLCBbLTExMy4xNDAwMzksIDI4LjQxMTI4OV0sIFstMTEyLjk2MjI5OCwgMjguNDI1MTldLCBbLTExMi43NjE1ODcsIDI3Ljc4MDIxN10sIFstMTEyLjQ1NzkxMSwgMjcuNTI1ODE0XSwgWy0xMTIuMjQ0OTUyLCAyNy4xNzE3MjddLCBbLTExMS42MTY0ODksIDI2LjY2MjgxN10sIFstMTExLjI4NDY3NSwgMjUuNzMyNTldLCBbLTExMC45ODc4MTksIDI1LjI5NDYwNl0sIFstMTEwLjcxMDAwNywgMjQuODI2MDA0XSwgWy0xMTAuNjU1MDQ5LCAyNC4yOTg1OTVdLCBbLTExMC4xNzI4NTYsIDI0LjI2NTU0OF0sIFstMTA5Ljc3MTg0NywgMjMuODExMTgzXSwgWy0xMDkuNDA5MTA0LCAyMy4zNjQ2NzJdLCBbLTEwOS40MzMzOTIsIDIzLjE4NTU4OF0sIFstMTA5Ljg1NDIxOSwgMjIuODE4MjcyXSwgWy0xMTAuMDMxMzkyLCAyMi44MjMwNzhdLCBbLTExMC4yOTUwNzEsIDIzLjQzMDk3M10sIFstMTEwLjk0OTUwMSwgMjQuMDAwOTY0XSwgWy0xMTEuNjcwNTY4LCAyNC40ODQ0MjNdLCBbLTExMi4xODIwMzYsIDI0LjczODQxM10sIFstMTEyLjE0ODk4OSwgMjUuNDcwMTI1XSwgWy0xMTIuMzAwNzExLCAyNi4wMTIwMDRdLCBbLTExMi43NzcyOTcsIDI2LjMyMTk2XSwgWy0xMTMuNDY0NjcxLCAyNi43NjgxODZdLCBbLTExMy41OTY3MywgMjYuNjM5NDZdLCBbLTExMy44NDg5MzcsIDI2LjkwMDA2NF0sIFstMTE0LjQ2NTc0NywgMjcuMTQyMDldLCBbLTExNS4wNTUxNDIsIDI3LjcyMjcyN10sIFstMTE0Ljk4MjI1MywgMjcuNzk4Ml0sIFstMTE0LjU3MDM2NiwgMjcuNzQxNDg1XSwgWy0xMTQuMTk5MzI5LCAyOC4xMTUwMDNdLCBbLTExNC4xNjIwMTgsIDI4LjU2NjExMl0sIFstMTE0LjkzMTg0MiwgMjkuMjc5NDc5XSwgWy0xMTUuNTE4NjU0LCAyOS41NTYzNjJdLCBbLTExNS44ODczNjUsIDMwLjE4MDc5NF0sIFstMTE2LjI1ODM1LCAzMC44MzY0NjRdLCBbLTExNi43MjE1MjYsIDMxLjYzNTc0NF0sIFstMTE3LjEyNzc2LCAzMi41MzUzNF0sIFstMTE1Ljk5MTM1LCAzMi42MTIzOV0sIFstMTE0LjcyMTM5LCAzMi43MjA4M10sIFstMTE0LjgxNSwgMzIuNTI1MjhdLCBbLTExMy4zMDQ5OCwgMzIuMDM5MTRdLCBbLTExMS4wMjM2MSwgMzEuMzM0NzJdLCBbLTEwOS4wMzUsIDMxLjM0MTk0XSwgWy0xMDguMjQxOTQsIDMxLjM0MjIyXSwgWy0xMDguMjQsIDMxLjc1NDg1NF0sIFstMTA2LjUwNzU5LCAzMS43NTQ1Ml0sIFstMTA2LjE0MjksIDMxLjM5OTk1XSwgWy0xMDUuNjMxNTksIDMxLjA4MzgzXSwgWy0xMDUuMDM3MzcsIDMwLjY0NDAyXSwgWy0xMDQuNzA1NzUsIDMwLjEyMTczXSwgWy0xMDQuNDU2OTcsIDI5LjU3MTk2XSwgWy0xMDMuOTQsIDI5LjI3XSwgWy0xMDMuMTEsIDI4Ljk3XSwgWy0xMDIuNDgsIDI5Ljc2XSwgWy0xMDEuNjYyNCwgMjkuNzc5M10sIFstMTAwLjk1NzYsIDI5LjM4MDcxXSwgWy0xMDAuNDU1ODQsIDI4LjY5NjEyXSwgWy0xMDAuMTEsIDI4LjExXSwgWy05OS41MiwgMjcuNTRdLCBbLTk5LjMsIDI2Ljg0XSwgWy05OS4wMiwgMjYuMzddLCBbLTk4LjI0LCAyNi4wNl0sIFstOTcuNTMsIDI1Ljg0XSwgWy05Ny4xNDAwMDgsIDI1Ljg2OTk5N11dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTUVYIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJNZXhpY28iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzIwLjU5MDIzLCA0MS44NTU0MV0sIFsyMC43MTczMSwgNDEuODQ3MTFdLCBbMjAuNzYyMTYsIDQyLjA1MTg2XSwgWzIxLjM1MjcsIDQyLjIwNjhdLCBbMjEuNTc2NjM2LCA0Mi4yNDUyMjRdLCBbMjEuOTE3MDgsIDQyLjMwMzY0XSwgWzIyLjM4MDUyNiwgNDIuMzIwMjZdLCBbMjIuODgxMzc0LCA0MS45OTkyOTddLCBbMjIuOTUyMzc3LCA0MS4zMzc5OTRdLCBbMjIuNzYxNzcsIDQxLjMwNDhdLCBbMjIuNTk3MzA4LCA0MS4xMzA0ODddLCBbMjIuMDU1Mzc4LCA0MS4xNDk4NjZdLCBbMjEuNjc0MTYxLCA0MC45MzEyNzVdLCBbMjEuMDIwMDQsIDQwLjg0MjcyN10sIFsyMC42MDUxOCwgNDEuMDg2MjJdLCBbMjAuNDYzMTUsIDQxLjUxNTA5XSwgWzIwLjU5MDIzLCA0MS44NTU0MV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTUtEIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJNYWNlZG9uaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICJibGFjayIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stMTIuMTcwNzUsIDE0LjYxNjgzNF0sIFstMTEuODM0MjA4LCAxNC43OTkwOTddLCBbLTExLjY2NjA3OCwgMTUuMzg4MjA4XSwgWy0xMS4zNDkwOTUsIDE1LjQxMTI1Nl0sIFstMTAuNjUwNzkxLCAxNS4xMzI3NDZdLCBbLTEwLjA4Njg0NiwgMTUuMzMwNDg2XSwgWy05LjcwMDI1NSwgMTUuMjY0MTA3XSwgWy05LjU1MDIzOCwgMTUuNDg2NDk3XSwgWy01LjUzNzc0NCwgMTUuNTAxNjldLCBbLTUuMzE1Mjc3LCAxNi4yMDE4NTRdLCBbLTUuNDg4NTIzLCAxNi4zMjUxMDJdLCBbLTUuOTcxMTI5LCAyMC42NDA4MzNdLCBbLTYuNDUzNzg3LCAyNC45NTY1OTFdLCBbLTQuOTIzMzM3LCAyNC45NzQ1NzRdLCBbLTEuNTUwMDU1LCAyMi43OTI2NjZdLCBbMS44MjMyMjgsIDIwLjYxMDgwOV0sIFsyLjA2MDk5MSwgMjAuMTQyMjMzXSwgWzIuNjgzNTg4LCAxOS44NTYyM10sIFszLjE0NjY2MSwgMTkuNjkzNTc5XSwgWzMuMTU4MTMzLCAxOS4wNTczNjRdLCBbNC4yNjc0MTksIDE5LjE1NTI2NV0sIFs0LjI3MDIxLCAxNi44NTIyMjddLCBbMy43MjM0MjIsIDE2LjE4NDI4NF0sIFszLjYzODI1OSwgMTUuNTY4MTJdLCBbMi43NDk5OTMsIDE1LjQwOTUyNV0sIFsxLjM4NTUyOCwgMTUuMzIzNTYxXSwgWzEuMDE1NzgzLCAxNC45NjgxODJdLCBbMC4zNzQ4OTIsIDE0LjkyODkwOF0sIFstMC4yNjYyNTcsIDE0LjkyNDMwOV0sIFstMC41MTU4NTQsIDE1LjExNjE1OF0sIFstMS4wNjYzNjMsIDE0Ljk3MzgxNV0sIFstMi4wMDEwMzUsIDE0LjU1OTAwOF0sIFstMi4xOTE4MjUsIDE0LjI0NjQxOF0sIFstMi45Njc2OTQsIDEzLjc5ODE1XSwgWy0zLjEwMzcwNywgMTMuNTQxMjY3XSwgWy0zLjUyMjgwMywgMTMuMzM3NjYyXSwgWy00LjAwNjM5MSwgMTMuNDcyNDg1XSwgWy00LjI4MDQwNSwgMTMuMjI4NDQ0XSwgWy00LjQyNzE2NiwgMTIuNTQyNjQ2XSwgWy01LjIyMDk0MiwgMTEuNzEzODU5XSwgWy01LjE5Nzg0MywgMTEuMzc1MTQ2XSwgWy01LjQ3MDU2NSwgMTAuOTUxMjddLCBbLTUuNDA0MzQyLCAxMC4zNzA3MzddLCBbLTUuODE2OTI2LCAxMC4yMjI1NTVdLCBbLTYuMDUwNDUyLCAxMC4wOTYzNjFdLCBbLTYuMjA1MjIzLCAxMC41MjQwNjFdLCBbLTYuNDkzOTY1LCAxMC40MTEzMDNdLCBbLTYuNjY2NDYxLCAxMC40MzA4MTFdLCBbLTYuODUwNTA3LCAxMC4xMzg5OTRdLCBbLTcuNjIyNzU5LCAxMC4xNDcyMzZdLCBbLTcuODk5NTksIDEwLjI5NzM4Ml0sIFstOC4wMjk5NDQsIDEwLjIwNjUzNV0sIFstOC4zMzUzNzcsIDEwLjQ5NDgxMl0sIFstOC4yODIzNTcsIDEwLjc5MjU5N10sIFstOC40MDczMTEsIDEwLjkwOTI1N10sIFstOC42MjAzMjEsIDEwLjgxMDg5MV0sIFstOC41ODEzMDUsIDExLjEzNjI0Nl0sIFstOC4zNzYzMDUsIDExLjM5MzY0Nl0sIFstOC43ODYwOTksIDExLjgxMjU2MV0sIFstOC45MDUyNjUsIDEyLjA4ODM1OF0sIFstOS4xMjc0NzQsIDEyLjMwODA2XSwgWy05LjMyNzYxNiwgMTIuMzM0Mjg2XSwgWy05LjU2NzkxMiwgMTIuMTk0MjQzXSwgWy05Ljg5MDk5MywgMTIuMDYwNDc5XSwgWy0xMC4xNjUyMTQsIDExLjg0NDA4NF0sIFstMTAuNTkzMjI0LCAxMS45MjM5NzVdLCBbLTEwLjg3MDgzLCAxMi4xNzc4ODddLCBbLTExLjAzNjU1NiwgMTIuMjExMjQ1XSwgWy0xMS4yOTc1NzQsIDEyLjA3Nzk3MV0sIFstMTEuNDU2MTY5LCAxMi4wNzY4MzRdLCBbLTExLjUxMzk0MywgMTIuNDQyOTg4XSwgWy0xMS40Njc4OTksIDEyLjc1NDUxOV0sIFstMTEuNTUzMzk4LCAxMy4xNDEyMTRdLCBbLTExLjkyNzcxNiwgMTMuNDIyMDc1XSwgWy0xMi4xMjQ4ODcsIDEzLjk5NDcyN10sIFstMTIuMTcwNzUsIDE0LjYxNjgzNF1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTUxJIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJNYWxpIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s5OS41NDMzMDksIDIwLjE4NjU5OF0sIFs5OC45NTk2NzYsIDE5Ljc1Mjk4MV0sIFs5OC4yNTM3MjQsIDE5LjcwODIwM10sIFs5Ny43OTc3ODMsIDE4LjYyNzA4XSwgWzk3LjM3NTg5NiwgMTguNDQ1NDM4XSwgWzk3Ljg1OTEyMywgMTcuNTY3OTQ2XSwgWzk4LjQ5Mzc2MSwgMTYuODM3ODM2XSwgWzk4LjkwMzM0OCwgMTYuMTc3ODI0XSwgWzk4LjUzNzM3NiwgMTUuMzA4NDk3XSwgWzk4LjE5MjA3NCwgMTUuMTIzNzAzXSwgWzk4LjQzMDgxOSwgMTQuNjIyMDI4XSwgWzk5LjA5Nzc1NSwgMTMuODI3NTAzXSwgWzk5LjIxMjAxMiwgMTMuMjY5Mjk0XSwgWzk5LjE5NjM1NCwgMTIuODA0NzQ4XSwgWzk5LjU4NzI4NiwgMTEuODkyNzYzXSwgWzk5LjAzODEyMSwgMTAuOTYwNTQ2XSwgWzk4LjU1MzU1MSwgOS45MzI5Nl0sIFs5OC40NTcxNzQsIDEwLjY3NTI2Nl0sIFs5OC43NjQ1NDYsIDExLjQ0MTI5Ml0sIFs5OC40MjgzMzksIDEyLjAzMjk4N10sIFs5OC41MDk1NzQsIDEzLjEyMjM3OF0sIFs5OC4xMDM2MDQsIDEzLjY0MDQ2XSwgWzk3Ljc3NzczMiwgMTQuODM3Mjg2XSwgWzk3LjU5NzA3MiwgMTYuMTAwNTY4XSwgWzk3LjE2NDU0LCAxNi45Mjg3MzRdLCBbOTYuNTA1NzY5LCAxNi40MjcyNDFdLCBbOTUuMzY5MzUyLCAxNS43MTQzOV0sIFs5NC44MDg0MDUsIDE1LjgwMzQ1NF0sIFs5NC4xODg4MDQsIDE2LjAzNzkzNl0sIFs5NC41MzM0ODYsIDE3LjI3NzI0XSwgWzk0LjMyNDgxNywgMTguMjEzNTE0XSwgWzkzLjU0MDk4OCwgMTkuMzY2NDkzXSwgWzkzLjY2MzI1NSwgMTkuNzI2OTYyXSwgWzkzLjA3ODI3OCwgMTkuODU1MTQ1XSwgWzkyLjM2ODU1NCwgMjAuNjcwODgzXSwgWzkyLjMwMzIzNCwgMjEuNDc1NDg1XSwgWzkyLjY1MjI1NywgMjEuMzI0MDQ4XSwgWzkyLjY3MjcyMSwgMjIuMDQxMjM5XSwgWzkzLjE2NjEyOCwgMjIuMjc4NDZdLCBbOTMuMDYwMjk0LCAyMi43MDMxMTFdLCBbOTMuMjg2MzI3LCAyMy4wNDM2NThdLCBbOTMuMzI1MTg4LCAyNC4wNzg1NTZdLCBbOTQuMTA2NzQyLCAyMy44NTA3NDFdLCBbOTQuNTUyNjU4LCAyNC42NzUyMzhdLCBbOTQuNjAzMjQ5LCAyNS4xNjI0OTVdLCBbOTUuMTU1MTUzLCAyNi4wMDEzMDddLCBbOTUuMTI0NzY4LCAyNi41NzM1NzJdLCBbOTYuNDE5MzY2LCAyNy4yNjQ1ODldLCBbOTcuMTMzOTk5LCAyNy4wODM3NzRdLCBbOTcuMDUxOTg5LCAyNy42OTkwNTldLCBbOTcuNDAyNTYxLCAyNy44ODI1MzZdLCBbOTcuMzI3MTE0LCAyOC4yNjE1ODNdLCBbOTcuOTExOTg4LCAyOC4zMzU5NDVdLCBbOTguMjQ2MjMxLCAyNy43NDcyMjFdLCBbOTguNjgyNjksIDI3LjUwODgxMl0sIFs5OC43MTIwOTQsIDI2Ljc0MzUzNl0sIFs5OC42NzE4MzgsIDI1LjkxODcwM10sIFs5Ny43MjQ2MDksIDI1LjA4MzYzN10sIFs5Ny42MDQ3MiwgMjMuODk3NDA1XSwgWzk4LjY2MDI2MiwgMjQuMDYzMjg2XSwgWzk4Ljg5ODc0OSwgMjMuMTQyNzIyXSwgWzk5LjUzMTk5MiwgMjIuOTQ5MDM5XSwgWzk5LjI0MDg5OSwgMjIuMTE4MzE0XSwgWzk5Ljk4MzQ4OSwgMjEuNzQyOTM3XSwgWzEwMC40MTY1MzgsIDIxLjU1ODgzOV0sIFsxMDEuMTUwMDMzLCAyMS44NDk5ODRdLCBbMTAxLjE4MDAwNSwgMjEuNDM2NTczXSwgWzEwMC4zMjkxMDEsIDIwLjc4NjEyMl0sIFsxMDAuMTE1OTg4LCAyMC40MTc4NV0sIFs5OS41NDMzMDksIDIwLjE4NjU5OF1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTU1SIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJNeWFubWFyIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxOS44MDE2MTMsIDQyLjUwMDA5M10sIFsxOS43MzgwNTEsIDQyLjY4ODI0N10sIFsxOS4zMDQ0OSwgNDIuMTk1NzRdLCBbMTkuMzcxNzcsIDQxLjg3NzU1XSwgWzE5LjE2MjQ2LCA0MS45NTUwMl0sIFsxOC44ODIxNCwgNDIuMjgxNTFdLCBbMTguNDUsIDQyLjQ4XSwgWzE4LjU2LCA0Mi42NV0sIFsxOC43MDY0OCwgNDMuMjAwMTFdLCBbMTkuMDMxNjUsIDQzLjQzMjUzXSwgWzE5LjIxODUyLCA0My41MjM4NF0sIFsxOS40ODM4OSwgNDMuMzUyMjldLCBbMTkuNjMsIDQzLjIxMzc4XSwgWzE5Ljk1ODU3LCA0My4xMDYwNF0sIFsyMC4zMzk4LCA0Mi44OTg1Ml0sIFsyMC4yNTc1OCwgNDIuODEyNzVdLCBbMjAuMDcwNywgNDIuNTg4NjNdLCBbMTkuODAxNjEzLCA0Mi41MDAwOTNdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIk1ORSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTW9udGVuZWdybyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbODcuNzUxMjY0LCA0OS4yOTcxOThdLCBbODguODA1NTY3LCA0OS40NzA1MjFdLCBbOTAuNzEzNjY3LCA1MC4zMzE4MTJdLCBbOTIuMjM0NzEyLCA1MC44MDIxNzFdLCBbOTMuMTA0MjE5LCA1MC40OTUyOV0sIFs5NC4xNDc1NjYsIDUwLjQ4MDUzN10sIFs5NC44MTU5NDksIDUwLjAxMzQzM10sIFs5NS44MTQwMjgsIDQ5Ljk3NzQ2N10sIFs5Ny4yNTk3MjgsIDQ5LjcyNjA2MV0sIFs5OC4yMzE3NjIsIDUwLjQyMjQwMV0sIFs5Ny44MjU3NCwgNTEuMDEwOTk1XSwgWzk4Ljg2MTQ5MSwgNTIuMDQ3MzY2XSwgWzk5Ljk4MTczMiwgNTEuNjM0MDA2XSwgWzEwMC44ODk0OCwgNTEuNTE2ODU2XSwgWzEwMi4wNjUyMjMsIDUxLjI1OTkyMV0sIFsxMDIuMjU1OTA5LCA1MC41MTA1NjFdLCBbMTAzLjY3NjU0NSwgNTAuMDg5OTY2XSwgWzEwNC42MjE1NTIsIDUwLjI3NTMyOV0sIFsxMDUuODg2NTkxLCA1MC40MDYwMTldLCBbMTA2Ljg4ODgwNCwgNTAuMjc0Mjk2XSwgWzEwNy44NjgxNzYsIDQ5Ljc5MzcwNV0sIFsxMDguNDc1MTY3LCA0OS4yODI1NDhdLCBbMTA5LjQwMjQ0OSwgNDkuMjkyOTYxXSwgWzExMC42NjIwMTEsIDQ5LjEzMDEyOF0sIFsxMTEuNTgxMjMxLCA0OS4zNzc5NjhdLCBbMTEyLjg5Nzc0LCA0OS41NDM1NjVdLCBbMTE0LjM2MjQ1NiwgNTAuMjQ4MzAzXSwgWzExNC45NjIxMSwgNTAuMTQwMjQ3XSwgWzExNS40ODU2OTUsIDQ5LjgwNTE3N10sIFsxMTYuNjc4ODAxLCA0OS44ODg1MzFdLCBbMTE2LjE5MTgwMiwgNDkuMTM0NTk4XSwgWzExNS40ODUyODIsIDQ4LjEzNTM4M10sIFsxMTUuNzQyODM3LCA0Ny43MjY1NDVdLCBbMTE2LjMwODk1MywgNDcuODUzNDFdLCBbMTE3LjI5NTUwNywgNDcuNjk3NzA5XSwgWzExOC4wNjQxNDMsIDQ4LjA2NjczXSwgWzExOC44NjY1NzQsIDQ3Ljc0NzA2XSwgWzExOS43NzI4MjQsIDQ3LjA0ODA1OV0sIFsxMTkuNjYzMjcsIDQ2LjY5MjY4XSwgWzExOC44NzQzMjYsIDQ2LjgwNTQxMl0sIFsxMTcuNDIxNzAxLCA0Ni42NzI3MzNdLCBbMTE2LjcxNzg2OCwgNDYuMzg4MjAyXSwgWzExNS45ODUwOTYsIDQ1LjcyNzIzNV0sIFsxMTQuNDYwMzMyLCA0NS4zMzk4MTddLCBbMTEzLjQ2MzkwNywgNDQuODA4ODkzXSwgWzExMi40MzYwNjIsIDQ1LjAxMTY0Nl0sIFsxMTEuODczMzA2LCA0NS4xMDIwNzldLCBbMTExLjM0ODM3NywgNDQuNDU3NDQyXSwgWzExMS42Njc3MzcsIDQ0LjA3MzE3Nl0sIFsxMTEuODI5NTg4LCA0My43NDMxMThdLCBbMTExLjEyOTY4MiwgNDMuNDA2ODM0XSwgWzExMC40MTIxMDMsIDQyLjg3MTIzNF0sIFsxMDkuMjQzNTk2LCA0Mi41MTk0NDZdLCBbMTA3Ljc0NDc3MywgNDIuNDgxNTE2XSwgWzEwNi4xMjkzMTYsIDQyLjEzNDMyOF0sIFsxMDQuOTY0OTk0LCA0MS41OTc0MV0sIFsxMDQuNTIyMjgyLCA0MS45MDgzNDddLCBbMTAzLjMxMjI3OCwgNDEuOTA3NDY4XSwgWzEwMS44MzMwNCwgNDIuNTE0ODczXSwgWzEwMC44NDU4NjYsIDQyLjY2MzgwNF0sIFs5OS41MTU4MTcsIDQyLjUyNDY5MV0sIFs5Ny40NTE3NTcsIDQyLjc0ODg5XSwgWzk2LjM0OTM5NiwgNDIuNzI1NjM1XSwgWzk1Ljc2MjQ1NSwgNDMuMzE5NDQ5XSwgWzk1LjMwNjg3NSwgNDQuMjQxMzMxXSwgWzk0LjY4ODkyOSwgNDQuMzUyMzMyXSwgWzkzLjQ4MDczNCwgNDQuOTc1NDcyXSwgWzkyLjEzMzg5MSwgNDUuMTE1MDc2XSwgWzkwLjk0NTU0LCA0NS4yODYwNzNdLCBbOTAuNTg1NzY4LCA0NS43MTk3MTZdLCBbOTAuOTcwODA5LCA0Ni44ODgxNDZdLCBbOTAuMjgwODI2LCA0Ny42OTM1NDldLCBbODguODU0Mjk4LCA0OC4wNjkwODJdLCBbODguMDEzODMyLCA0OC41OTk0NjNdLCBbODcuNzUxMjY0LCA0OS4yOTcxOThdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIk1ORyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTW9uZ29saWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzM0LjU1OTk4OSwgLTExLjUyMDAyXSwgWzM1LjMxMjM5OCwgLTExLjQzOTE0Nl0sIFszNi41MTQwODIsIC0xMS43MjA5MzhdLCBbMzYuNzc1MTUxLCAtMTEuNTk0NTM3XSwgWzM3LjQ3MTI4NCwgLTExLjU2ODc1MV0sIFszNy44Mjc2NDUsIC0xMS4yNjg3NjldLCBbMzguNDI3NTU3LCAtMTEuMjg1MjAyXSwgWzM5LjUyMTAzLCAtMTAuODk2ODU0XSwgWzQwLjMxNjU4OSwgLTEwLjMxNzA5Nl0sIFs0MC40NzgzODcsIC0xMC43NjU0NDFdLCBbNDAuNDM3MjUzLCAtMTEuNzYxNzExXSwgWzQwLjU2MDgxMSwgLTEyLjYzOTE3N10sIFs0MC41OTk2MiwgLTE0LjIwMTk3NV0sIFs0MC43NzU0NzUsIC0xNC42OTE3NjRdLCBbNDAuNDc3MjUxLCAtMTUuNDA2Mjk0XSwgWzQwLjA4OTI2NCwgLTE2LjEwMDc3NF0sIFszOS40NTI1NTksIC0xNi43MjA4OTFdLCBbMzguNTM4MzUxLCAtMTcuMTAxMDIzXSwgWzM3LjQxMTEzMywgLTE3LjU4NjM2OF0sIFszNi4yODEyNzksIC0xOC42NTk2ODhdLCBbMzUuODk2NDk3LCAtMTguODQyMjZdLCBbMzUuMTk4NCwgLTE5LjU1MjgxMV0sIFszNC43ODYzODMsIC0xOS43ODQwMTJdLCBbMzQuNzAxODkzLCAtMjAuNDk3MDQzXSwgWzM1LjE3NjEyNywgLTIxLjI1NDM2MV0sIFszNS4zNzM0MjgsIC0yMS44NDA4MzddLCBbMzUuMzg1ODQ4LCAtMjIuMTRdLCBbMzUuNTYyNTQ2LCAtMjIuMDldLCBbMzUuNTMzOTM1LCAtMjMuMDcwNzg4XSwgWzM1LjM3MTc3NCwgLTIzLjUzNTM1OV0sIFszNS42MDc0NywgLTIzLjcwNjU2M10sIFszNS40NTg3NDYsIC0yNC4xMjI2MV0sIFszNS4wNDA3MzUsIC0yNC40NzgzNTFdLCBbMzQuMjE1ODI0LCAtMjQuODE2MzE0XSwgWzMzLjAxMzIxLCAtMjUuMzU3NTczXSwgWzMyLjU3NDYzMiwgLTI1LjcyNzMxOF0sIFszMi42NjAzNjMsIC0yNi4xNDg1ODRdLCBbMzIuOTE1OTU1LCAtMjYuMjE1ODY3XSwgWzMyLjgzMDEyLCAtMjYuNzQyMTkyXSwgWzMyLjA3MTY2NSwgLTI2LjczMzgyXSwgWzMxLjk4NTc3OSwgLTI2LjI5MTc4XSwgWzMxLjgzNzc3OCwgLTI1Ljg0MzMzMl0sIFszMS43NTI0MDgsIC0yNS40ODQyODRdLCBbMzEuOTMwNTg5LCAtMjQuMzY5NDE3XSwgWzMxLjY3MDM5OCwgLTIzLjY1ODk2OV0sIFszMS4xOTE0MDksIC0yMi4yNTE1MV0sIFszMi4yNDQ5ODgsIC0yMS4xMTY0ODldLCBbMzIuNTA4NjkzLCAtMjAuMzk1MjkyXSwgWzMyLjY1OTc0MywgLTIwLjMwNDI5XSwgWzMyLjc3MjcwOCwgLTE5LjcxNTU5Ml0sIFszMi42MTE5OTQsIC0xOS40MTkzODNdLCBbMzIuNjU0ODg2LCAtMTguNjcyMDldLCBbMzIuODQ5ODYxLCAtMTcuOTc5MDU3XSwgWzMyLjg0NzYzOSwgLTE2LjcxMzM5OF0sIFszMi4zMjgyMzksIC0xNi4zOTIwNzRdLCBbMzEuODUyMDQxLCAtMTYuMzE5NDE3XSwgWzMxLjYzNjQ5OCwgLTE2LjA3MTk5XSwgWzMxLjE3MzA2NCwgLTE1Ljg2MDk0NF0sIFszMC4zMzg5NTUsIC0xNS44ODA4MzldLCBbMzAuMjc0MjU2LCAtMTUuNTA3Nzg3XSwgWzMwLjE3OTQ4MSwgLTE0Ljc5NjA5OV0sIFszMy4yMTQwMjUsIC0xMy45NzE4Nl0sIFszMy43ODk3LCAtMTQuNDUxODMxXSwgWzM0LjA2NDgyNSwgLTE0LjM1OTk1XSwgWzM0LjQ1OTYzMywgLTE0LjYxMzAxXSwgWzM0LjUxNzY2NiwgLTE1LjAxMzcwOV0sIFszNC4zMDcyOTEsIC0xNS40Nzg2NDFdLCBbMzQuMzgxMjkyLCAtMTYuMTgzNTZdLCBbMzUuMDMzODEsIC0xNi44MDEzXSwgWzM1LjMzOTA2MywgLTE2LjEwNzQ0XSwgWzM1Ljc3MTkwNSwgLTE1Ljg5Njg1OV0sIFszNS42ODY4NDUsIC0xNC42MTEwNDZdLCBbMzUuMjY3OTU2LCAtMTMuODg3ODM0XSwgWzM0LjkwNzE1MSwgLTEzLjU2NTQyNV0sIFszNC41NTk5ODksIC0xMy41Nzk5OThdLCBbMzQuMjgwMDA2LCAtMTIuMjgwMDI1XSwgWzM0LjU1OTk4OSwgLTExLjUyMDAyXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJNT1oiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIk1vemFtYmlxdWUiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy0xMi4xNzA3NSwgMTQuNjE2ODM0XSwgWy0xMi44MzA2NTgsIDE1LjMwMzY5Ml0sIFstMTMuNDM1NzM4LCAxNi4wMzkzODNdLCBbLTE0LjA5OTUyMSwgMTYuMzA0MzAyXSwgWy0xNC41NzczNDgsIDE2LjU5ODI2NF0sIFstMTUuMTM1NzM3LCAxNi41ODcyODJdLCBbLTE1LjYyMzY2NiwgMTYuMzY5MzM3XSwgWy0xNi4xMjA2OSwgMTYuNDU1NjYzXSwgWy0xNi40NjMwOTgsIDE2LjEzNTAzNl0sIFstMTYuNTQ5NzA4LCAxNi42NzM4OTJdLCBbLTE2LjI3MDU1MiwgMTcuMTY2OTYzXSwgWy0xNi4xNDYzNDcsIDE4LjEwODQ4Ml0sIFstMTYuMjU2ODgzLCAxOS4wOTY3MTZdLCBbLTE2LjM3NzY1MSwgMTkuNTkzODE3XSwgWy0xNi4yNzc4MzgsIDIwLjA5MjUyMV0sIFstMTYuNTM2MzI0LCAyMC41Njc4NjZdLCBbLTE3LjA2MzQyMywgMjAuOTk5NzUyXSwgWy0xNi44NDUxOTQsIDIxLjMzMzMyM10sIFstMTIuOTI5MTAyLCAyMS4zMjcwNzFdLCBbLTEzLjExODc1NCwgMjIuNzcxMjJdLCBbLTEyLjg3NDIyMiwgMjMuMjg0ODMyXSwgWy0xMS45MzcyMjQsIDIzLjM3NDU5NF0sIFstMTEuOTY5NDE5LCAyNS45MzMzNTNdLCBbLTguNjg3Mjk0LCAyNS44ODEwNTZdLCBbLTguNjg0NCwgMjcuMzk1NzQ0XSwgWy00LjkyMzMzNywgMjQuOTc0NTc0XSwgWy02LjQ1Mzc4NywgMjQuOTU2NTkxXSwgWy01Ljk3MTEyOSwgMjAuNjQwODMzXSwgWy01LjQ4ODUyMywgMTYuMzI1MTAyXSwgWy01LjMxNTI3NywgMTYuMjAxODU0XSwgWy01LjUzNzc0NCwgMTUuNTAxNjldLCBbLTkuNTUwMjM4LCAxNS40ODY0OTddLCBbLTkuNzAwMjU1LCAxNS4yNjQxMDddLCBbLTEwLjA4Njg0NiwgMTUuMzMwNDg2XSwgWy0xMC42NTA3OTEsIDE1LjEzMjc0Nl0sIFstMTEuMzQ5MDk1LCAxNS40MTEyNTZdLCBbLTExLjY2NjA3OCwgMTUuMzg4MjA4XSwgWy0xMS44MzQyMDgsIDE0Ljc5OTA5N10sIFstMTIuMTcwNzUsIDE0LjYxNjgzNF1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTVJUIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJNYXVyaXRhbmlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1szNC41NTk5ODksIC0xMS41MjAwMl0sIFszNC4yODAwMDYsIC0xMi4yODAwMjVdLCBbMzQuNTU5OTg5LCAtMTMuNTc5OTk4XSwgWzM0LjkwNzE1MSwgLTEzLjU2NTQyNV0sIFszNS4yNjc5NTYsIC0xMy44ODc4MzRdLCBbMzUuNjg2ODQ1LCAtMTQuNjExMDQ2XSwgWzM1Ljc3MTkwNSwgLTE1Ljg5Njg1OV0sIFszNS4zMzkwNjMsIC0xNi4xMDc0NF0sIFszNS4wMzM4MSwgLTE2LjgwMTNdLCBbMzQuMzgxMjkyLCAtMTYuMTgzNTZdLCBbMzQuMzA3MjkxLCAtMTUuNDc4NjQxXSwgWzM0LjUxNzY2NiwgLTE1LjAxMzcwOV0sIFszNC40NTk2MzMsIC0xNC42MTMwMV0sIFszNC4wNjQ4MjUsIC0xNC4zNTk5NV0sIFszMy43ODk3LCAtMTQuNDUxODMxXSwgWzMzLjIxNDAyNSwgLTEzLjk3MTg2XSwgWzMyLjY4ODE2NSwgLTEzLjcxMjg1OF0sIFszMi45OTE3NjQsIC0xMi43ODM4NzFdLCBbMzMuMzA2NDIyLCAtMTIuNDM1Nzc4XSwgWzMzLjExNDI4OSwgLTExLjYwNzE5OF0sIFszMy4zMTUzMSwgLTEwLjc5NjU1XSwgWzMzLjQ4NTY4OCwgLTEwLjUyNTU1OV0sIFszMy4yMzEzODgsIC05LjY3NjcyMl0sIFszMi43NTkzNzUsIC05LjIzMDU5OV0sIFszMy43Mzk3MjksIC05LjQxNzE1MV0sIFszMy45NDA4MzgsIC05LjY5MzY3NF0sIFszNC4yODAwMDYsIC0xMC4xNl0sIFszNC41NTk5ODksIC0xMS41MjAwMl1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTVdJIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJNYWxhd2kiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1sxMDEuMDc1NTE2LCA2LjIwNDg2N10sIFsxMDEuMTU0MjE5LCA1LjY5MTM4NF0sIFsxMDEuODE0MjgyLCA1LjgxMDgwOF0sIFsxMDIuMTQxMTg3LCA2LjIyMTYzNl0sIFsxMDIuMzcxMTQ3LCA2LjEyODIwNV0sIFsxMDIuOTYxNzA1LCA1LjUyNDQ5NV0sIFsxMDMuMzgxMjE1LCA0Ljg1NTAwMV0sIFsxMDMuNDM4NTc1LCA0LjE4MTYwNl0sIFsxMDMuMzMyMTIyLCAzLjcyNjY5OF0sIFsxMDMuNDI5NDI5LCAzLjM4Mjg2OV0sIFsxMDMuNTAyNDQ4LCAyLjc5MTAxOV0sIFsxMDMuODU0Njc0LCAyLjUxNTQ1NF0sIFsxMDQuMjQ3OTMyLCAxLjYzMTE0MV0sIFsxMDQuMjI4ODExLCAxLjI5MzA0OF0sIFsxMDMuNTE5NzA3LCAxLjIyNjMzNF0sIFsxMDIuNTczNjE1LCAxLjk2NzExNV0sIFsxMDEuMzkwNjM4LCAyLjc2MDgxNF0sIFsxMDEuMjczNTQsIDMuMjcwMjkyXSwgWzEwMC42OTU0MzUsIDMuOTM5MTRdLCBbMTAwLjU1NzQwOCwgNC43NjcyOF0sIFsxMDAuMTk2NzA2LCA1LjMxMjQ5M10sIFsxMDAuMzA2MjYsIDYuMDQwNTYyXSwgWzEwMC4wODU3NTcsIDYuNDY0NDg5XSwgWzEwMC4yNTk1OTYsIDYuNjQyODI1XSwgWzEwMS4wNzU1MTYsIDYuMjA0ODY3XV1dLCBbW1sxMTguNjE4MzIxLCA0LjQ3ODIwMl0sIFsxMTcuODgyMDM1LCA0LjEzNzU1MV0sIFsxMTcuMDE1MjE0LCA0LjMwNjA5NF0sIFsxMTUuODY1NTE3LCA0LjMwNjU1OV0sIFsxMTUuNTE5MDc4LCAzLjE2OTIzOF0sIFsxMTUuMTM0MDM3LCAyLjgyMTQ4Ml0sIFsxMTQuNjIxMzU1LCAxLjQzMDY4OF0sIFsxMTMuODA1ODUsIDEuMjE3NTQ5XSwgWzExMi44NTk4MDksIDEuNDk3NzldLCBbMTEyLjM4MDI1MiwgMS40MTAxMjFdLCBbMTExLjc5NzU0OCwgMC45MDQ0NDFdLCBbMTExLjE1OTEzOCwgMC45NzY0NzhdLCBbMTEwLjUxNDA2MSwgMC43NzMxMzFdLCBbMTA5LjgzMDIyNywgMS4zMzgxMzZdLCBbMTA5LjY2MzI2LCAyLjAwNjQ2N10sIFsxMTAuMzk2MTM1LCAxLjY2Mzc3NV0sIFsxMTEuMTY4ODUzLCAxLjg1MDYzN10sIFsxMTEuMzcwMDgxLCAyLjY5NzMwM10sIFsxMTEuNzk2OTI4LCAyLjg4NTg5N10sIFsxMTIuOTk1NjE1LCAzLjEwMjM5NV0sIFsxMTMuNzEyOTM1LCAzLjg5MzUwOV0sIFsxMTQuMjA0MDE3LCA0LjUyNTg3NF0sIFsxMTQuNjU5NTk2LCA0LjAwNzYzN10sIFsxMTQuODY5NTU3LCA0LjM0ODMxNF0sIFsxMTUuMzQ3NDYxLCA0LjMxNjYzNl0sIFsxMTUuNDA1NywgNC45NTUyMjhdLCBbMTE1LjQ1MDcxLCA1LjQ0NzczXSwgWzExNi4yMjA3NDEsIDYuMTQzMTkxXSwgWzExNi43MjUxMDMsIDYuOTI0NzcxXSwgWzExNy4xMjk2MjYsIDYuOTI4MDUzXSwgWzExNy42NDMzOTMsIDYuNDIyMTY2XSwgWzExNy42ODkwNzUsIDUuOTg3NDldLCBbMTE4LjM0NzY5MSwgNS43MDg2OTZdLCBbMTE5LjE4MTkwNCwgNS40MDc4MzZdLCBbMTE5LjExMDY5NCwgNS4wMTYxMjhdLCBbMTE4LjQzOTcyNywgNC45NjY1MTldLCBbMTE4LjYxODMyMSwgNC40NzgyMDJdXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIk1ZUyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTWFsYXlzaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzE2LjM0NDk3NywgLTI4LjU3NjcwNV0sIFsxNS42MDE4MTgsIC0yNy44MjEyNDddLCBbMTUuMjEwNDcyLCAtMjcuMDkwOTU2XSwgWzE0Ljk4OTcxMSwgLTI2LjExNzM3Ml0sIFsxNC43NDMyMTQsIC0yNS4zOTI5Ml0sIFsxNC40MDgxNDQsIC0yMy44NTMwMTRdLCBbMTQuMzg1NzE3LCAtMjIuNjU2NjUzXSwgWzE0LjI1NzcxNCwgLTIyLjExMTIwOF0sIFsxMy44Njg2NDIsIC0yMS42OTkwMzddLCBbMTMuMzUyNDk4LCAtMjAuODcyODM0XSwgWzEyLjgyNjg0NSwgLTE5LjY3MzE2Nl0sIFsxMi42MDg1NjQsIC0xOS4wNDUzNDldLCBbMTEuNzk0OTE5LCAtMTguMDY5MTI5XSwgWzExLjczNDE5OSwgLTE3LjMwMTg4OV0sIFsxMi4yMTU0NjEsIC0xNy4xMTE2NjhdLCBbMTIuODE0MDgxLCAtMTYuOTQxMzQzXSwgWzEzLjQ2MjM2MiwgLTE2Ljk3MTIxMl0sIFsxNC4wNTg1MDEsIC0xNy40MjMzODFdLCBbMTQuMjA5NzA3LCAtMTcuMzUzMTAxXSwgWzE4LjI2MzMwOSwgLTE3LjMwOTk1MV0sIFsxOC45NTYxODcsIC0xNy43ODkwOTVdLCBbMjEuMzc3MTc2LCAtMTcuOTMwNjM2XSwgWzIzLjIxNTA0OCwgLTE3LjUyMzExNl0sIFsyNC4wMzM4NjIsIC0xNy4yOTU4NDNdLCBbMjQuNjgyMzQ5LCAtMTcuMzUzNDExXSwgWzI1LjA3Njk1LCAtMTcuNTc4ODIzXSwgWzI1LjA4NDQ0MywgLTE3LjY2MTgxNl0sIFsyNC41MjA3MDUsIC0xNy44ODcxMjVdLCBbMjQuMjE3MzY1LCAtMTcuODg5MzQ3XSwgWzIzLjU3OTAwNiwgLTE4LjI4MTI2MV0sIFsyMy4xOTY4NTgsIC0xNy44NjkwMzhdLCBbMjEuNjU1MDQsIC0xOC4yMTkxNDZdLCBbMjAuOTEwNjQxLCAtMTguMjUyMjE5XSwgWzIwLjg4MTEzNCwgLTIxLjgxNDMyN10sIFsxOS44OTU0NTgsIC0yMS44NDkxNTddLCBbMTkuODk1NzY4LCAtMjQuNzY3NzldLCBbMTkuODk0NzM0LCAtMjguNDYxMTA1XSwgWzE5LjAwMjEyNywgLTI4Ljk3MjQ0M10sIFsxOC40NjQ4OTksIC0yOS4wNDU0NjJdLCBbMTcuODM2MTUyLCAtMjguODU2Mzc4XSwgWzE3LjM4NzQ5NywgLTI4Ljc4MzUxNF0sIFsxNy4yMTg5MjksIC0yOC4zNTU5NDNdLCBbMTYuODI0MDE3LCAtMjguMDgyMTYyXSwgWzE2LjM0NDk3NywgLTI4LjU3NjcwNV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiTkFNIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJOYW1pYmlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxNjUuNzc5OTksIC0yMS4wODAwMDVdLCBbMTY2LjU5OTk5MSwgLTIxLjcwMDAxOV0sIFsxNjcuMTIwMDExLCAtMjIuMTU5OTkxXSwgWzE2Ni43NDAwMzUsIC0yMi4zOTk5NzZdLCBbMTY2LjE4OTczMiwgLTIyLjEyOTcwOF0sIFsxNjUuNDc0Mzc1LCAtMjEuNjc5NjA3XSwgWzE2NC44Mjk4MTUsIC0yMS4xNDk4Ml0sIFsxNjQuMTY3OTk1LCAtMjAuNDQ0NzQ3XSwgWzE2NC4wMjk2MDYsIC0yMC4xMDU2NDZdLCBbMTY0LjQ1OTk2NywgLTIwLjEyMDAxMl0sIFsxNjUuMDIwMDM2LCAtMjAuNDU5OTkxXSwgWzE2NS40NjAwMDksIC0yMC44MDAwMjJdLCBbMTY1Ljc3OTk5LCAtMjEuMDgwMDA1XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJOQ0wiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIk5ldyBDYWxlZG9uaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzIuMTU0NDc0LCAxMS45NDAxNV0sIFsyLjE3NzEwOCwgMTIuNjI1MDE4XSwgWzEuMDI0MTAzLCAxMi44NTE4MjZdLCBbMC45OTMwNDYsIDEzLjMzNTc1XSwgWzAuNDI5OTI4LCAxMy45ODg3MzNdLCBbMC4yOTU2NDYsIDE0LjQ0NDIzNV0sIFswLjM3NDg5MiwgMTQuOTI4OTA4XSwgWzEuMDE1NzgzLCAxNC45NjgxODJdLCBbMS4zODU1MjgsIDE1LjMyMzU2MV0sIFsyLjc0OTk5MywgMTUuNDA5NTI1XSwgWzMuNjM4MjU5LCAxNS41NjgxMl0sIFszLjcyMzQyMiwgMTYuMTg0Mjg0XSwgWzQuMjcwMjEsIDE2Ljg1MjIyN10sIFs0LjI2NzQxOSwgMTkuMTU1MjY1XSwgWzUuNjc3NTY2LCAxOS42MDEyMDddLCBbOC41NzI4OTMsIDIxLjU2NTY2MV0sIFsxMS45OTk1MDYsIDIzLjQ3MTY2OF0sIFsxMy41ODE0MjUsIDIzLjA0MDUwNl0sIFsxNC4xNDM4NzEsIDIyLjQ5MTI4OV0sIFsxNC44NTEzLCAyMi44NjI5NV0sIFsxNS4wOTY4ODgsIDIxLjMwODUxOV0sIFsxNS40NzEwNzcsIDIxLjA0ODQ1N10sIFsxNS40ODcxNDgsIDIwLjczMDQxNV0sIFsxNS45MDMyNDcsIDIwLjM4NzYxOV0sIFsxNS42ODU3NDEsIDE5Ljk1NzE4XSwgWzE1LjMwMDQ0MSwgMTcuOTI3OTVdLCBbMTUuMjQ3NzMxLCAxNi42MjczMDZdLCBbMTMuOTcyMjAyLCAxNS42ODQzNjZdLCBbMTMuNTQwMzk0LCAxNC4zNjcxMzRdLCBbMTMuOTU2Njk5LCAxMy45OTY2OTFdLCBbMTMuOTU0NDc3LCAxMy4zNTM0NDldLCBbMTQuNTk1NzgxLCAxMy4zMzA0MjddLCBbMTQuNDk1Nzg3LCAxMi44NTkzOTZdLCBbMTQuMjEzNTMxLCAxMi44MDIwMzVdLCBbMTQuMTgxMzM2LCAxMi40ODM2NTddLCBbMTMuOTk1MzUzLCAxMi40NjE1NjVdLCBbMTMuMzE4NzAyLCAxMy41NTYzNTZdLCBbMTMuMDgzOTg3LCAxMy41OTYxNDddLCBbMTIuMzAyMDcxLCAxMy4wMzcxODldLCBbMTEuNTI3ODAzLCAxMy4zMjg5OF0sIFsxMC45ODk1OTMsIDEzLjM4NzMyM10sIFsxMC43MDEwMzIsIDEzLjI0NjkxOF0sIFsxMC4xMTQ4MTQsIDEzLjI3NzI1Ml0sIFs5LjUyNDkyOCwgMTIuODUxMTAyXSwgWzkuMDE0OTMzLCAxMi44MjY2NTldLCBbNy44MDQ2NzEsIDEzLjM0MzUyN10sIFs3LjMzMDc0NywgMTMuMDk4MDM4XSwgWzYuODIwNDQyLCAxMy4xMTUwOTFdLCBbNi40NDU0MjYsIDEzLjQ5Mjc2OF0sIFs1LjQ0MzA1OCwgMTMuODY1OTI0XSwgWzQuMzY4MzQ0LCAxMy43NDc0ODJdLCBbNC4xMDc5NDYsIDEzLjUzMTIxNl0sIFszLjk2NzI4MywgMTIuOTU2MTA5XSwgWzMuNjgwNjM0LCAxMi41NTI5MDNdLCBbMy42MTExOCwgMTEuNjYwMTY3XSwgWzIuODQ4NjQzLCAxMi4yMzU2MzZdLCBbMi40OTAxNjQsIDEyLjIzMzA1Ml0sIFsyLjE1NDQ3NCwgMTEuOTQwMTVdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIk5FUiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTmlnZXIiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzguNTAwMjg4LCA0Ljc3MTk4M10sIFs3LjQ2MjEwOCwgNC40MTIxMDhdLCBbNy4wODI1OTYsIDQuNDY0Njg5XSwgWzYuNjk4MDcyLCA0LjI0MDU5NF0sIFs1Ljg5ODE3MywgNC4yNjI0NTNdLCBbNS4zNjI4MDUsIDQuODg3OTcxXSwgWzUuMDMzNTc0LCA1LjYxMTgwMl0sIFs0LjMyNTYwNywgNi4yNzA2NTFdLCBbMy41NzQxOCwgNi4yNTgzXSwgWzIuNjkxNzAyLCA2LjI1ODgxN10sIFsyLjc0OTA2MywgNy44NzA3MzRdLCBbMi43MjM3OTMsIDguNTA2ODQ1XSwgWzIuOTEyMzA4LCA5LjEzNzYwOF0sIFszLjIyMDM1MiwgOS40NDQxNTNdLCBbMy43MDU0MzgsIDEwLjA2MzIxXSwgWzMuNjAwMDcsIDEwLjMzMjE4Nl0sIFszLjc5NzExMiwgMTAuNzM0NzQ2XSwgWzMuNTcyMjE2LCAxMS4zMjc5MzldLCBbMy42MTExOCwgMTEuNjYwMTY3XSwgWzMuNjgwNjM0LCAxMi41NTI5MDNdLCBbMy45NjcyODMsIDEyLjk1NjEwOV0sIFs0LjEwNzk0NiwgMTMuNTMxMjE2XSwgWzQuMzY4MzQ0LCAxMy43NDc0ODJdLCBbNS40NDMwNTgsIDEzLjg2NTkyNF0sIFs2LjQ0NTQyNiwgMTMuNDkyNzY4XSwgWzYuODIwNDQyLCAxMy4xMTUwOTFdLCBbNy4zMzA3NDcsIDEzLjA5ODAzOF0sIFs3LjgwNDY3MSwgMTMuMzQzNTI3XSwgWzkuMDE0OTMzLCAxMi44MjY2NTldLCBbOS41MjQ5MjgsIDEyLjg1MTEwMl0sIFsxMC4xMTQ4MTQsIDEzLjI3NzI1Ml0sIFsxMC43MDEwMzIsIDEzLjI0NjkxOF0sIFsxMC45ODk1OTMsIDEzLjM4NzMyM10sIFsxMS41Mjc4MDMsIDEzLjMyODk4XSwgWzEyLjMwMjA3MSwgMTMuMDM3MTg5XSwgWzEzLjA4Mzk4NywgMTMuNTk2MTQ3XSwgWzEzLjMxODcwMiwgMTMuNTU2MzU2XSwgWzEzLjk5NTM1MywgMTIuNDYxNTY1XSwgWzE0LjE4MTMzNiwgMTIuNDgzNjU3XSwgWzE0LjU3NzE3OCwgMTIuMDg1MzYxXSwgWzE0LjQ2ODE5MiwgMTEuOTA0NzUyXSwgWzE0LjQxNTM3OSwgMTEuNTcyMzY5XSwgWzEzLjU3Mjk1LCAxMC43OTg1NjZdLCBbMTMuMzA4Njc2LCAxMC4xNjAzNjJdLCBbMTMuMTY3NiwgOS42NDA2MjZdLCBbMTIuOTU1NDY4LCA5LjQxNzc3Ml0sIFsxMi43NTM2NzIsIDguNzE3NzYzXSwgWzEyLjIxODg3MiwgOC4zMDU4MjRdLCBbMTIuMDYzOTQ2LCA3Ljc5OTgwOF0sIFsxMS44MzkzMDksIDcuMzk3MDQyXSwgWzExLjc0NTc3NCwgNi45ODEzODNdLCBbMTEuMDU4Nzg4LCA2LjY0NDQyN10sIFsxMC40OTczNzUsIDcuMDU1MzU4XSwgWzEwLjExODI3NywgNy4wMzg3N10sIFs5LjUyMjcwNiwgNi40NTM0ODJdLCBbOS4yMzMxNjMsIDYuNDQ0NDkxXSwgWzguNzU3NTMzLCA1LjQ3OTY2Nl0sIFs4LjUwMDI4OCwgNC43NzE5ODNdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIk5HQSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTmlnZXJpYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTg1LjcxMjU0LCAxMS4wODg0NDVdLCBbLTg2LjA1ODQ4OCwgMTEuNDAzNDM5XSwgWy04Ni41MjU4NSwgMTEuODA2ODc3XSwgWy04Ni43NDU5OTIsIDEyLjE0Mzk2Ml0sIFstODcuMTY3NTE2LCAxMi40NTgyNThdLCBbLTg3LjY2ODQ5MywgMTIuOTA5OTFdLCBbLTg3LjU1NzQ2NywgMTMuMDY0NTUyXSwgWy04Ny4zOTIzODYsIDEyLjkxNDAxOF0sIFstODcuMzE2NjU0LCAxMi45ODQ2ODZdLCBbLTg3LjAwNTc2OSwgMTMuMDI1Nzk0XSwgWy04Ni44ODA1NTcsIDEzLjI1NDIwNF0sIFstODYuNzMzODIyLCAxMy4yNjMwOTNdLCBbLTg2Ljc1NTA4NywgMTMuNzU0ODQ1XSwgWy04Ni41MjA3MDgsIDEzLjc3ODQ4N10sIFstODYuMzEyMTQyLCAxMy43NzEzNTZdLCBbLTg2LjA5NjI2NCwgMTQuMDM4MTg3XSwgWy04NS44MDEyOTUsIDEzLjgzNjA1NV0sIFstODUuNjk4NjY1LCAxMy45NjAwNzhdLCBbLTg1LjUxNDQxMywgMTQuMDc5MDEyXSwgWy04NS4xNjUzNjUsIDE0LjM1NDM3XSwgWy04NS4xNDg3NTEsIDE0LjU2MDE5N10sIFstODUuMDUyNzg3LCAxNC41NTE1NDFdLCBbLTg0LjkyNDUwMSwgMTQuNzkwNDkzXSwgWy04NC44MjAwMzcsIDE0LjgxOTU4N10sIFstODQuNjQ5NTgyLCAxNC42NjY4MDVdLCBbLTg0LjQ0OTMzNiwgMTQuNjIxNjE0XSwgWy04NC4yMjgzNDIsIDE0Ljc0ODc2NF0sIFstODMuOTc1NzIxLCAxNC43NDk0MzZdLCBbLTgzLjYyODU4NSwgMTQuODgwMDc0XSwgWy04My40ODk5ODksIDE1LjAxNjI2N10sIFstODMuMTQ3MjE5LCAxNC45OTU4MjldLCBbLTgzLjIzMzIzNCwgMTQuODk5ODY2XSwgWy04My4yODQxNjIsIDE0LjY3NjYyNF0sIFstODMuMTgyMTI2LCAxNC4zMTA3MDNdLCBbLTgzLjQxMjUsIDEzLjk3MDA3OF0sIFstODMuNTE5ODMyLCAxMy41Njc2OTldLCBbLTgzLjU1MjIwNywgMTMuMTI3MDU0XSwgWy04My40OTg1MTUsIDEyLjg2OTI5Ml0sIFstODMuNDczMzIzLCAxMi40MTkwODddLCBbLTgzLjYyNjEwNCwgMTIuMzIwODVdLCBbLTgzLjcxOTYxMywgMTEuODkzMTI0XSwgWy04My42NTA4NTgsIDExLjYyOTAzMl0sIFstODMuODU1NDcsIDExLjM3MzMxMV0sIFstODMuODA4OTM2LCAxMS4xMDMwNDRdLCBbLTgzLjY1NTYxMiwgMTAuOTM4NzY0XSwgWy04My44OTUwNTQsIDEwLjcyNjgzOV0sIFstODQuMTkwMTc5LCAxMC43OTM0NV0sIFstODQuMzU1OTMxLCAxMC45OTkyMjZdLCBbLTg0LjY3MzA2OSwgMTEuMDgyNjU3XSwgWy04NC45MDMwMDMsIDEwLjk1MjMwM10sIFstODUuNTYxODUyLCAxMS4yMTcxMTldLCBbLTg1LjcxMjU0LCAxMS4wODg0NDVdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIk5JQyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTmljYXJhZ3VhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s2LjA3NDE4MywgNTMuNTEwNDAzXSwgWzYuOTA1MTQsIDUzLjQ4MjE2Ml0sIFs3LjA5MjA1MywgNTMuMTQ0MDQzXSwgWzYuODQyODcsIDUyLjIyODQ0XSwgWzYuNTg5Mzk3LCA1MS44NTIwMjldLCBbNS45ODg2NTgsIDUxLjg1MTYxNl0sIFs2LjE1NjY1OCwgNTAuODAzNzIxXSwgWzUuNjA2OTc2LCA1MS4wMzcyOThdLCBbNC45NzM5OTEsIDUxLjQ3NTAyNF0sIFs0LjA0NzA3MSwgNTEuMjY3MjU5XSwgWzMuMzE0OTcxLCA1MS4zNDU3NTVdLCBbMy44MzAyODksIDUxLjYyMDU0NV0sIFs0LjcwNTk5NywgNTMuMDkxNzk4XSwgWzYuMDc0MTgzLCA1My41MTA0MDNdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIk5MRCIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiTmV0aGVybGFuZHMiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1syOC4xNjU1NDcsIDcxLjE4NTQ3NF0sIFszMS4yOTM0MTgsIDcwLjQ1Mzc4OF0sIFszMC4wMDU0MzUsIDcwLjE4NjI1OV0sIFszMS4xMDEwNzksIDY5LjU1ODA4XSwgWzI5LjM5OTU4MSwgNjkuMTU2OTE2XSwgWzI4LjU5MTkzLCA2OS4wNjQ3NzddLCBbMjkuMDE1NTczLCA2OS43NjY0OTFdLCBbMjcuNzMyMjkyLCA3MC4xNjQxOTNdLCBbMjYuMTc5NjIyLCA2OS44MjUyOTldLCBbMjUuNjg5MjEzLCA2OS4wOTIxMTRdLCBbMjQuNzM1Njc5LCA2OC42NDk1NTddLCBbMjMuNjYyMDUsIDY4Ljg5MTI0N10sIFsyMi4zNTYyMzgsIDY4Ljg0MTc0MV0sIFsyMS4yNDQ5MzYsIDY5LjM3MDQ0M10sIFsyMC42NDU1OTMsIDY5LjEwNjI0N10sIFsyMC4wMjUyNjksIDY5LjA2NTEzOV0sIFsxOS44Nzg1NiwgNjguNDA3MTk0XSwgWzE3Ljk5Mzg2OCwgNjguNTY3MzkxXSwgWzE3LjcyOTE4MiwgNjguMDEwNTUyXSwgWzE2Ljc2ODg3OSwgNjguMDEzOTM3XSwgWzE2LjEwODcxMiwgNjcuMzAyNDU2XSwgWzE1LjEwODQxMSwgNjYuMTkzODY3XSwgWzEzLjU1NTY5LCA2NC43ODcwMjhdLCBbMTMuOTE5OTA1LCA2NC40NDU0MjFdLCBbMTMuNTcxOTE2LCA2NC4wNDkxMTRdLCBbMTIuNTc5OTM1LCA2NC4wNjYyMTldLCBbMTEuOTMwNTY5LCA2My4xMjgzMThdLCBbMTEuOTkyMDY0LCA2MS44MDAzNjJdLCBbMTIuNjMxMTQ3LCA2MS4yOTM1NzJdLCBbMTIuMzAwMzY2LCA2MC4xMTc5MzNdLCBbMTEuNDY4MjcyLCA1OS40MzIzOTNdLCBbMTEuMDI3MzY5LCA1OC44NTYxNDldLCBbMTAuMzU2NTU3LCA1OS40Njk4MDddLCBbOC4zODIsIDU4LjMxMzI4OF0sIFs3LjA0ODc0OCwgNTguMDc4ODg0XSwgWzUuNjY1ODM1LCA1OC41ODgxNTVdLCBbNS4zMDgyMzQsIDU5LjY2MzIzMl0sIFs0Ljk5MjA3OCwgNjEuOTcwOTk4XSwgWzUuOTEyOSwgNjIuNjE0NDczXSwgWzguNTUzNDExLCA2My40NTQwMDhdLCBbMTAuNTI3NzA5LCA2NC40ODYwMzhdLCBbMTIuMzU4MzQ3LCA2NS44Nzk3MjZdLCBbMTQuNzYxMTQ2LCA2Ny44MTA2NDJdLCBbMTYuNDM1OTI3LCA2OC41NjMyMDVdLCBbMTkuMTg0MDI4LCA2OS44MTc0NDRdLCBbMjEuMzc4NDE2LCA3MC4yNTUxNjldLCBbMjMuMDIzNzQyLCA3MC4yMDIwNzJdLCBbMjQuNTQ2NTQzLCA3MS4wMzA0OTddLCBbMjYuMzcwMDUsIDcwLjk4NjI2Ml0sIFsyOC4xNjU1NDcsIDcxLjE4NTQ3NF1dXSwgW1tbMjQuNzI0MTIsIDc3Ljg1Mzg1XSwgWzIyLjQ5MDMyLCA3Ny40NDQ5M10sIFsyMC43MjYwMSwgNzcuNjc3MDRdLCBbMjEuNDE2MTEsIDc3LjkzNTA0XSwgWzIwLjgxMTksIDc4LjI1NDYzXSwgWzIyLjg4NDI2LCA3OC40NTQ5NF0sIFsyMy4yODEzNCwgNzguMDc5NTRdLCBbMjQuNzI0MTIsIDc3Ljg1Mzg1XV1dLCBbW1sxOC4yNTE4MywgNzkuNzAxNzVdLCBbMjEuNTQzODMsIDc4Ljk1NjExXSwgWzE5LjAyNzM3LCA3OC41NjI2XSwgWzE4LjQ3MTcyLCA3Ny44MjY2OV0sIFsxNy41OTQ0MSwgNzcuNjM3OTZdLCBbMTcuMTE4MiwgNzYuODA5NDFdLCBbMTUuOTEzMTUsIDc2Ljc3MDQ1XSwgWzEzLjc2MjU5LCA3Ny4zODAzNV0sIFsxNC42Njk1NiwgNzcuNzM1NjVdLCBbMTMuMTcwNiwgNzguMDI0OTNdLCBbMTEuMjIyMzEsIDc4Ljg2OTNdLCBbMTAuNDQ0NTMsIDc5LjY1MjM5XSwgWzEzLjE3MDc3LCA4MC4wMTA0Nl0sIFsxMy43MTg1MiwgNzkuNjYwMzldLCBbMTUuMTQyODIsIDc5LjY3NDMxXSwgWzE1LjUyMjU1LCA4MC4wMTYwOF0sIFsxNi45OTA4NSwgODAuMDUwODZdLCBbMTguMjUxODMsIDc5LjcwMTc1XV1dLCBbW1syNS40NDc2MjUsIDgwLjQwNzM0XSwgWzI3LjQwNzUwNiwgODAuMDU2NDA2XSwgWzI1LjkyNDY1MSwgNzkuNTE3ODM0XSwgWzIzLjAyNDQ2NiwgNzkuNDAwMDEyXSwgWzIwLjA3NTE4OCwgNzkuNTY2ODIzXSwgWzE5Ljg5NzI2NiwgNzkuODQyMzYyXSwgWzE4LjQ2MjI2NCwgNzkuODU5ODhdLCBbMTcuMzY4MDE1LCA4MC4zMTg4OTZdLCBbMjAuNDU1OTkyLCA4MC41OTgxNTZdLCBbMjEuOTA3OTQ1LCA4MC4zNTc2NzldLCBbMjIuOTE5MjUzLCA4MC42NTcxNDRdLCBbMjUuNDQ3NjI1LCA4MC40MDczNF1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiTk9SIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJOb3J3YXkiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzg4LjEyMDQ0MSwgMjcuODc2NTQyXSwgWzg4LjA0MzEzMywgMjcuNDQ1ODE5XSwgWzg4LjE3NDgwNCwgMjYuODEwNDA1XSwgWzg4LjA2MDIzOCwgMjYuNDE0NjE1XSwgWzg3LjIyNzQ3MiwgMjYuMzk3ODk4XSwgWzg2LjAyNDM5MywgMjYuNjMwOTg1XSwgWzg1LjI1MTc3OSwgMjYuNzI2MTk4XSwgWzg0LjY3NTAxOCwgMjcuMjM0OTAxXSwgWzgzLjMwNDI0OSwgMjcuMzY0NTA2XSwgWzgxLjk5OTk4NywgMjcuOTI1NDc5XSwgWzgxLjA1NzIwMywgMjguNDE2MDk1XSwgWzgwLjA4ODQyNSwgMjguNzk0NDddLCBbODAuNDc2NzIxLCAyOS43Mjk4NjVdLCBbODEuMTExMjU2LCAzMC4xODM0ODFdLCBbODEuNTI1ODA0LCAzMC40MjI3MTddLCBbODIuMzI3NTEzLCAzMC4xMTUyNjhdLCBbODMuMzM3MTE1LCAyOS40NjM3MzJdLCBbODMuODk4OTkzLCAyOS4zMjAyMjZdLCBbODQuMjM0NTgsIDI4LjgzOTg5NF0sIFs4NS4wMTE2MzgsIDI4LjY0Mjc3NF0sIFs4NS44MjMzMiwgMjguMjAzNTc2XSwgWzg2Ljk1NDUxNywgMjcuOTc0MjYyXSwgWzg4LjEyMDQ0MSwgMjcuODc2NTQyXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJOUEwiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIk5lcGFsIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbMTczLjAyMDM3NSwgLTQwLjkxOTA1Ml0sIFsxNzMuMjQ3MjM0LCAtNDEuMzMxOTk5XSwgWzE3My45NTg0MDUsIC00MC45MjY3MDFdLCBbMTc0LjI0NzU4NywgLTQxLjM0OTE1NV0sIFsxNzQuMjQ4NTE3LCAtNDEuNzcwMDA4XSwgWzE3My44NzY0NDcsIC00Mi4yMzMxODRdLCBbMTczLjIyMjc0LCAtNDIuOTcwMDM4XSwgWzE3Mi43MTEyNDYsIC00My4zNzIyODhdLCBbMTczLjA4MDExMywgLTQzLjg1MzM0NF0sIFsxNzIuMzA4NTg0LCAtNDMuODY1Njk0XSwgWzE3MS40NTI5MjUsIC00NC4yNDI1MTldLCBbMTcxLjE4NTEzOCwgLTQ0Ljg5NzEwNF0sIFsxNzAuNjE2Njk3LCAtNDUuOTA4OTI5XSwgWzE2OS44MzE0MjIsIC00Ni4zNTU3NzVdLCBbMTY5LjMzMjMzMSwgLTQ2LjY0MTIzNV0sIFsxNjguNDExMzU0LCAtNDYuNjE5OTQ1XSwgWzE2Ny43NjM3NDUsIC00Ni4yOTAxOTddLCBbMTY2LjY3Njg4NiwgLTQ2LjIxOTkxN10sIFsxNjYuNTA5MTQ0LCAtNDUuODUyNzA1XSwgWzE2Ny4wNDY0MjQsIC00NS4xMTA5NDFdLCBbMTY4LjMwMzc2MywgLTQ0LjEyMzk3M10sIFsxNjguOTQ5NDA5LCAtNDMuOTM1ODE5XSwgWzE2OS42Njc4MTUsIC00My41NTUzMjZdLCBbMTcwLjUyNDkyLCAtNDMuMDMxNjg4XSwgWzE3MS4xMjUwOSwgLTQyLjUxMjc1NF0sIFsxNzEuNTY5NzE0LCAtNDEuNzY3NDI0XSwgWzE3MS45NDg3MDksIC00MS41MTQ0MTddLCBbMTcyLjA5NzIyNywgLTQwLjk1NjEwNF0sIFsxNzIuNzk4NTgsIC00MC40OTM5NjJdLCBbMTczLjAyMDM3NSwgLTQwLjkxOTA1Ml1dXSwgW1tbMTc0LjYxMjAwOSwgLTM2LjE1NjM5N10sIFsxNzUuMzM2NjE2LCAtMzcuMjA5MDk4XSwgWzE3NS4zNTc1OTYsIC0zNi41MjYxOTRdLCBbMTc1LjgwODg4NywgLTM2Ljc5ODk0Ml0sIFsxNzUuOTU4NDksIC0zNy41NTUzODJdLCBbMTc2Ljc2MzE5NSwgLTM3Ljg4MTI1M10sIFsxNzcuNDM4ODEzLCAtMzcuOTYxMjQ4XSwgWzE3OC4wMTAzNTQsIC0zNy41Nzk4MjVdLCBbMTc4LjUxNzA5NCwgLTM3LjY5NTM3M10sIFsxNzguMjc0NzMxLCAtMzguNTgyODEzXSwgWzE3Ny45NzA0NiwgLTM5LjE2NjM0M10sIFsxNzcuMjA2OTkzLCAtMzkuMTQ1Nzc2XSwgWzE3Ni45Mzk5ODEsIC0zOS40NDk3MzZdLCBbMTc3LjAzMjk0NiwgLTM5Ljg3OTk0M10sIFsxNzYuODg1ODI0LCAtNDAuMDY1OTc4XSwgWzE3Ni41MDgwMTcsIC00MC42MDQ4MDhdLCBbMTc2LjAxMjQ0LCAtNDEuMjg5NjI0XSwgWzE3NS4yMzk1NjcsIC00MS42ODgzMDhdLCBbMTc1LjA2Nzg5OCwgLTQxLjQyNTg5NV0sIFsxNzQuNjUwOTczLCAtNDEuMjgxODIxXSwgWzE3NS4yMjc2MywgLTQwLjQ1OTIzNl0sIFsxNzQuOTAwMTU3LCAtMzkuOTA4OTMzXSwgWzE3My44MjQwNDcsIC0zOS41MDg4NTRdLCBbMTczLjg1MjI2MiwgLTM5LjE0NjYwMl0sIFsxNzQuNTc0ODAyLCAtMzguNzk3NjgzXSwgWzE3NC43NDM0NzQsIC0zOC4wMjc4MDhdLCBbMTc0LjY5NzAxNywgLTM3LjM4MTEyOV0sIFsxNzQuMjkyMDI4LCAtMzYuNzExMDkyXSwgWzE3NC4zMTkwMDQsIC0zNi41MzQ4MjRdLCBbMTczLjg0MDk5NywgLTM2LjEyMTk4MV0sIFsxNzMuMDU0MTcxLCAtMzUuMjM3MTI1XSwgWzE3Mi42MzYwMDUsIC0zNC41MjkxMDddLCBbMTczLjAwNzA0MiwgLTM0LjQ1MDY2Ml0sIFsxNzMuNTUxMjk4LCAtMzUuMDA2MTgzXSwgWzE3NC4zMjkzOSwgLTM1LjI2NTQ5Nl0sIFsxNzQuNjEyMDA5LCAtMzYuMTU2Mzk3XV1dXSwgInR5cGUiOiAiTXVsdGlQb2x5Z29uIn0sICJpZCI6ICJOWkwiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIk5ldyBaZWFsYW5kIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbNTguODYxMTQxLCAyMS4xMTQwMzVdLCBbNTguNDg3OTg2LCAyMC40Mjg5ODZdLCBbNTguMDM0MzE4LCAyMC40ODE0MzddLCBbNTcuODI2MzczLCAyMC4yNDMwMDJdLCBbNTcuNjY1NzYyLCAxOS43MzYwMDVdLCBbNTcuNzg4NywgMTkuMDY3NTddLCBbNTcuNjk0MzkxLCAxOC45NDQ3MV0sIFs1Ny4yMzQyNjQsIDE4Ljk0Nzk5MV0sIFs1Ni42MDk2NTEsIDE4LjU3NDI2N10sIFs1Ni41MTIxODksIDE4LjA4NzExM10sIFs1Ni4yODM1MjEsIDE3Ljg3NjA2N10sIFs1NS42NjE0OTIsIDE3Ljg4NDEyOF0sIFs1NS4yNjk5MzksIDE3LjYzMjMwOV0sIFs1NS4yNzQ5LCAxNy4yMjgzNTRdLCBbNTQuNzkxMDAyLCAxNi45NTA2OTddLCBbNTQuMjM5MjUzLCAxNy4wNDQ5ODFdLCBbNTMuNTcwNTA4LCAxNi43MDc2NjNdLCBbNTMuMTA4NTczLCAxNi42NTEwNTFdLCBbNTIuNzgyMTg0LCAxNy4zNDk3NDJdLCBbNTIuMDAwMDEsIDE5LjAwMDAwM10sIFs1NC45OTk5ODIsIDE5Ljk5OTk5NF0sIFs1NS42NjY2NTksIDIyLjAwMDAwMV0sIFs1NS4yMDgzNDEsIDIyLjcwODMzXSwgWzU1LjIzNDQ4OSwgMjMuMTEwOTkzXSwgWzU1LjUyNTg0MSwgMjMuNTI0ODY5XSwgWzU1LjUyODYzMiwgMjMuOTMzNjA0XSwgWzU1Ljk4MTIxNCwgMjQuMTMwNTQzXSwgWzU1LjgwNDExOSwgMjQuMjY5NjA0XSwgWzU1Ljg4NjIzMywgMjQuOTIwODMxXSwgWzU2LjM5Njg0NywgMjQuOTI0NzMyXSwgWzU2Ljg0NTE0LCAyNC4yNDE2NzNdLCBbNTcuNDAzNDUzLCAyMy44Nzg1OTRdLCBbNTguMTM2OTQ4LCAyMy43NDc5MzFdLCBbNTguNzI5MjExLCAyMy41NjU2NjhdLCBbNTkuMTgwNTAyLCAyMi45OTIzOTVdLCBbNTkuNDUwMDk4LCAyMi42NjAyNzFdLCBbNTkuODA4MDYsIDIyLjUzMzYxMl0sIFs1OS44MDYxNDgsIDIyLjMxMDUyNV0sIFs1OS40NDIxOTEsIDIxLjcxNDU0MV0sIFs1OS4yODI0MDgsIDIxLjQzMzg4Nl0sIFs1OC44NjExNDEsIDIxLjExNDAzNV1dXSwgW1tbNTYuMzkxNDIxLCAyNS44OTU5OTFdLCBbNTYuMjYxMDQyLCAyNS43MTQ2MDZdLCBbNTYuMDcwODIxLCAyNi4wNTU0NjRdLCBbNTYuMzYyMDE3LCAyNi4zOTU5MzRdLCBbNTYuNDg1Njc5LCAyNi4zMDkxMThdLCBbNTYuMzkxNDIxLCAyNS44OTU5OTFdXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIk9NTiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiT21hbiIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbNzUuMTU4MDI4LCAzNy4xMzMwMzFdLCBbNzUuODk2ODk3LCAzNi42NjY4MDZdLCBbNzYuMTkyODQ4LCAzNS44OTg0MDNdLCBbNzcuODM3NDUxLCAzNS40OTQwMV0sIFs3Ni44NzE3MjIsIDM0LjY1MzU0NF0sIFs3NS43NTcwNjEsIDM0LjUwNDkyM10sIFs3NC4yNDAyMDMsIDM0Ljc0ODg4N10sIFs3My43NDk5NDgsIDM0LjMxNzY5OV0sIFs3NC4xMDQyOTQsIDMzLjQ0MTQ3M10sIFs3NC40NTE1NTksIDMyLjc2NDldLCBbNzUuMjU4NjQyLCAzMi4yNzExMDVdLCBbNzQuNDA1OTI5LCAzMS42OTI2MzldLCBbNzQuNDIxMzgsIDMwLjk3OTgxNV0sIFs3My40NTA2MzgsIDI5Ljk3NjQxM10sIFs3Mi44MjM3NTIsIDI4Ljk2MTU5Ml0sIFs3MS43Nzc2NjYsIDI3LjkxMzE4XSwgWzcwLjYxNjQ5NiwgMjcuOTg5MTk2XSwgWzY5LjUxNDM5MywgMjYuOTQwOTY2XSwgWzcwLjE2ODkyNywgMjYuNDkxODcyXSwgWzcwLjI4Mjg3MywgMjUuNzIyMjI5XSwgWzcwLjg0NDY5OSwgMjUuMjE1MTAyXSwgWzcxLjA0MzI0LCAyNC4zNTY1MjRdLCBbNjguODQyNTk5LCAyNC4zNTkxMzRdLCBbNjguMTc2NjQ1LCAyMy42OTE5NjVdLCBbNjcuNDQzNjY3LCAyMy45NDQ4NDRdLCBbNjcuMTQ1NDQyLCAyNC42NjM2MTFdLCBbNjYuMzcyODI4LCAyNS40MjUxNDFdLCBbNjQuNTMwNDA4LCAyNS4yMzcwMzldLCBbNjIuOTA1NzAxLCAyNS4yMTg0MDldLCBbNjEuNDk3MzYzLCAyNS4wNzgyMzddLCBbNjEuODc0MTg3LCAyNi4yMzk5NzVdLCBbNjMuMzE2NjMyLCAyNi43NTY1MzJdLCBbNjMuMjMzODk4LCAyNy4yMTcwNDddLCBbNjIuNzU1NDI2LCAyNy4zNzg5MjNdLCBbNjIuNzI3ODMsIDI4LjI1OTY0NV0sIFs2MS43NzE4NjgsIDI4LjY5OTMzNF0sIFs2MS4zNjkzMDksIDI5LjMwMzI3Nl0sIFs2MC44NzQyNDgsIDI5LjgyOTIzOV0sIFs2Mi41NDk4NTcsIDI5LjMxODU3Ml0sIFs2My41NTAyNjEsIDI5LjQ2ODMzMV0sIFs2NC4xNDgwMDIsIDI5LjM0MDgxOV0sIFs2NC4zNTA0MTksIDI5LjU2MDAzMV0sIFs2NS4wNDY4NjIsIDI5LjQ3MjE4MV0sIFs2Ni4zNDY0NzMsIDI5Ljg4Nzk0M10sIFs2Ni4zODE0NTgsIDMwLjczODg5OV0sIFs2Ni45Mzg4OTEsIDMxLjMwNDkxMV0sIFs2Ny42ODMzOTQsIDMxLjMwMzE1NF0sIFs2Ny43OTI2ODksIDMxLjU4MjkzXSwgWzY4LjU1NjkzMiwgMzEuNzEzMzFdLCBbNjguOTI2Njc3LCAzMS42MjAxODldLCBbNjkuMzE3NzY0LCAzMS45MDE0MTJdLCBbNjkuMjYyNTIyLCAzMi41MDE5NDRdLCBbNjkuNjg3MTQ3LCAzMy4xMDU0OTldLCBbNzAuMzIzNTk0LCAzMy4zNTg1MzNdLCBbNjkuOTMwNTQzLCAzNC4wMjAxMl0sIFs3MC44ODE4MDMsIDMzLjk4ODg1Nl0sIFs3MS4xNTY3NzMsIDM0LjM0ODkxMV0sIFs3MS4xMTUwMTksIDM0LjczMzEyNl0sIFs3MS42MTMwNzYsIDM1LjE1MzIwM10sIFs3MS40OTg3NjgsIDM1LjY1MDU2M10sIFs3MS4yNjIzNDgsIDM2LjA3NDM4OF0sIFs3MS44NDYyOTIsIDM2LjUwOTk0Ml0sIFs3Mi45MjAwMjUsIDM2LjcyMDAwN10sIFs3NC4wNjc1NTIsIDM2LjgzNjE3Nl0sIFs3NC41NzU4OTMsIDM3LjAyMDg0MV0sIFs3NS4xNTgwMjgsIDM3LjEzMzAzMV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiUEFLIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJQYWtpc3RhbiIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZWIyNGMiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTc3Ljg4MTU3MSwgNy4yMjM3NzFdLCBbLTc4LjIxNDkzNiwgNy41MTIyNTVdLCBbLTc4LjQyOTE2MSwgOC4wNTIwNDFdLCBbLTc4LjE4MjA5NiwgOC4zMTkxODJdLCBbLTc4LjQzNTQ2NSwgOC4zODc3MDVdLCBbLTc4LjYyMjEyMSwgOC43MTgxMjRdLCBbLTc5LjEyMDMwNywgOC45OTYwOTJdLCBbLTc5LjU1Nzg3NywgOC45MzIzNzVdLCBbLTc5Ljc2MDU3OCwgOC41ODQ1MTVdLCBbLTgwLjE2NDQ4MSwgOC4zMzMzMTZdLCBbLTgwLjM4MjY1OSwgOC4yOTg0MDldLCBbLTgwLjQ4MDY4OSwgOC4wOTAzMDhdLCBbLTgwLjAwMzY5LCA3LjU0NzUyNF0sIFstODAuMjc2NjcxLCA3LjQxOTc1NF0sIFstODAuNDIxMTU4LCA3LjI3MTU3Ml0sIFstODAuODg2NDAxLCA3LjIyMDU0MV0sIFstODEuMDU5NTQzLCA3LjgxNzkyMV0sIFstODEuMTg5NzE2LCA3LjY0NzkwNl0sIFstODEuNTE5NTE1LCA3LjcwNjYxXSwgWy04MS43MjEzMTEsIDguMTA4OTYzXSwgWy04Mi4xMzE0NDEsIDguMTc1MzkzXSwgWy04Mi4zOTA5MzQsIDguMjkyMzYyXSwgWy04Mi44MjAwODEsIDguMjkwODY0XSwgWy04Mi44NTA5NTgsIDguMDczODIzXSwgWy04Mi45NjU3ODMsIDguMjI1MDI4XSwgWy04Mi45MTMxNzYsIDguNDIzNTE3XSwgWy04Mi44Mjk3NzEsIDguNjI2Mjk1XSwgWy04Mi44Njg2NTcsIDguODA3MjY2XSwgWy04Mi43MTkxODMsIDguOTI1NzA5XSwgWy04Mi45MjcxNTUsIDkuMDc0MzNdLCBbLTgyLjkzMjg5MSwgOS40NzY4MTJdLCBbLTgyLjU0NjE5NiwgOS41NjYxMzVdLCBbLTgyLjE4NzEyMywgOS4yMDc0NDldLCBbLTgyLjIwNzU4NiwgOC45OTU1NzVdLCBbLTgxLjgwODU2NywgOC45NTA2MTddLCBbLTgxLjcxNDE1NCwgOS4wMzE5NTVdLCBbLTgxLjQzOTI4NywgOC43ODYyMzRdLCBbLTgwLjk0NzMwMiwgOC44NTg1MDRdLCBbLTgwLjUyMTkwMSwgOS4xMTEwNzJdLCBbLTc5LjkxNDYsIDkuMzEyNzY1XSwgWy03OS41NzMzMDMsIDkuNjExNjFdLCBbLTc5LjAyMTE5MiwgOS41NTI5MzFdLCBbLTc5LjA1ODQ1LCA5LjQ1NDU2NV0sIFstNzguNTAwODg4LCA5LjQyMDQ1OV0sIFstNzguMDU1OTI4LCA5LjI0NzczXSwgWy03Ny43Mjk1MTQsIDguOTQ2ODQ0XSwgWy03Ny4zNTMzNjEsIDguNjcwNTA1XSwgWy03Ny40NzQ3MjMsIDguNTI0Mjg2XSwgWy03Ny4yNDI1NjYsIDcuOTM1Mjc4XSwgWy03Ny40MzExMDgsIDcuNjM4MDYxXSwgWy03Ny43NTM0MTQsIDcuNzA5ODRdLCBbLTc3Ljg4MTU3MSwgNy4yMjM3NzFdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlBBTiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiUGFuYW1hIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stNjkuNTkwNDI0LCAtMTcuNTgwMDEyXSwgWy02OS44NTg0NDQsIC0xOC4wOTI2OTRdLCBbLTcwLjM3MjU3MiwgLTE4LjM0Nzk3NV0sIFstNzEuMzc1MjUsIC0xNy43NzM3OTldLCBbLTcxLjQ2MjA0MSwgLTE3LjM2MzQ4OF0sIFstNzMuNDQ0NTMsIC0xNi4zNTkzNjNdLCBbLTc1LjIzNzg4MywgLTE1LjI2NTY4M10sIFstNzYuMDA5MjA1LCAtMTQuNjQ5Mjg2XSwgWy03Ni40MjM0NjksIC0xMy44MjMxODddLCBbLTc2LjI1OTI0MiwgLTEzLjUzNTAzOV0sIFstNzcuMTA2MTkyLCAtMTIuMjIyNzE2XSwgWy03OC4wOTIxNTMsIC0xMC4zNzc3MTJdLCBbLTc5LjAzNjk1MywgLTguMzg2NTY4XSwgWy03OS40NDU5MiwgLTcuOTMwODMzXSwgWy03OS43NjA1NzgsIC03LjE5NDM0MV0sIFstODAuNTM3NDgyLCAtNi41NDE2NjhdLCBbLTgxLjI0OTk5NiwgLTYuMTM2ODM0XSwgWy04MC45MjYzNDcsIC01LjY5MDU1N10sIFstODEuNDEwOTQzLCAtNC43MzY3NjVdLCBbLTgxLjA5OTY3LCAtNC4wMzYzOTRdLCBbLTgwLjMwMjU2MSwgLTMuNDA0ODU2XSwgWy04MC4xODQwMTUsIC0zLjgyMTE2Ml0sIFstODAuNDY5Mjk1LCAtNC4wNTkyODddLCBbLTgwLjQ0MjI0MiwgLTQuNDI1NzI0XSwgWy04MC4wMjg5MDgsIC00LjM0NjA5MV0sIFstNzkuNjI0OTc5LCAtNC40NTQxOThdLCBbLTc5LjIwNTI4OSwgLTQuOTU5MTI5XSwgWy03OC42Mzk4OTcsIC00LjU0Nzc4NF0sIFstNzguNDUwNjg0LCAtMy44NzMwOTddLCBbLTc3LjgzNzkwNSwgLTMuMDAzMDIxXSwgWy03Ni42MzUzOTQsIC0yLjYwODY3OF0sIFstNzUuNTQ0OTk2LCAtMS41NjE2MV0sIFstNzUuMjMzNzIzLCAtMC45MTE0MTddLCBbLTc1LjM3MzIyMywgLTAuMTUyMDMyXSwgWy03NS4xMDY2MjUsIC0wLjA1NzIwNV0sIFstNzQuNDQxNjAxLCAtMC41MzA4Ml0sIFstNzQuMTIyMzk1LCAtMS4wMDI4MzNdLCBbLTczLjY1OTUwNCwgLTEuMjYwNDkxXSwgWy03My4wNzAzOTIsIC0yLjMwODk1NF0sIFstNzIuMzI1Nzg3LCAtMi40MzQyMThdLCBbLTcxLjc3NDc2MSwgLTIuMTY5NzldLCBbLTcxLjQxMzY0NiwgLTIuMzQyODAyXSwgWy03MC44MTM0NzYsIC0yLjI1Njg2NV0sIFstNzAuMDQ3NzA5LCAtMi43MjUxNTZdLCBbLTcwLjY5MjY4MiwgLTMuNzQyODcyXSwgWy03MC4zOTQwNDQsIC0zLjc2NjU5MV0sIFstNjkuODkzNjM1LCAtNC4yOTgxODddLCBbLTcwLjc5NDc2OSwgLTQuMjUxMjY1XSwgWy03MC45Mjg4NDMsIC00LjQwMTU5MV0sIFstNzEuNzQ4NDA2LCAtNC41OTM5ODNdLCBbLTcyLjg5MTkyOCwgLTUuMjc0NTYxXSwgWy03Mi45NjQ1MDcsIC01Ljc0MTI1MV0sIFstNzMuMjE5NzExLCAtNi4wODkxODldLCBbLTczLjEyMDAyNywgLTYuNjI5OTMxXSwgWy03My43MjQ0ODcsIC02LjkxODU5NV0sIFstNzMuNzIzNDAxLCAtNy4zNDA5OTldLCBbLTczLjk4NzIzNSwgLTcuNTIzODNdLCBbLTczLjU3MTA1OSwgLTguNDI0NDQ3XSwgWy03My4wMTUzODMsIC05LjAzMjgzM10sIFstNzMuMjI2NzEzLCAtOS40NjIyMTNdLCBbLTcyLjU2MzAzMywgLTkuNTIwMTk0XSwgWy03Mi4xODQ4OTEsIC0xMC4wNTM1OThdLCBbLTcxLjMwMjQxMiwgLTEwLjA3OTQzNl0sIFstNzAuNDgxODk0LCAtOS40OTAxMThdLCBbLTcwLjU0ODY4NiwgLTExLjAwOTE0N10sIFstNzAuMDkzNzUyLCAtMTEuMTIzOTcyXSwgWy02OS41Mjk2NzgsIC0xMC45NTE3MzRdLCBbLTY4LjY2NTA4LCAtMTIuNTYxM10sIFstNjguODgwMDgsIC0xMi44OTk3MjldLCBbLTY4LjkyOTIyNCwgLTEzLjYwMjY4NF0sIFstNjguOTQ4ODg3LCAtMTQuNDUzNjM5XSwgWy02OS4zMzk1MzUsIC0xNC45NTMxOTVdLCBbLTY5LjE2MDM0NywgLTE1LjMyMzk3NF0sIFstNjkuMzg5NzY0LCAtMTUuNjYwMTI5XSwgWy02OC45NTk2MzUsIC0xNi41MDA2OThdLCBbLTY5LjU5MDQyNCwgLTE3LjU4MDAxMl1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiUEVSIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJQZXJ1IiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbMTI2LjM3NjgxNCwgOC40MTQ3MDZdLCBbMTI2LjQ3ODUxMywgNy43NTAzNTRdLCBbMTI2LjUzNzQyNCwgNy4xODkzODFdLCBbMTI2LjE5Njc3MywgNi4yNzQyOTRdLCBbMTI1LjgzMTQyMSwgNy4yOTM3MTVdLCBbMTI1LjM2Mzg1MiwgNi43ODY0ODVdLCBbMTI1LjY4MzE2MSwgNi4wNDk2NTddLCBbMTI1LjM5NjUxMiwgNS41ODEwMDNdLCBbMTI0LjIxOTc4OCwgNi4xNjEzNTVdLCBbMTIzLjkzODcyLCA2Ljg4NTEzNl0sIFsxMjQuMjQzNjYyLCA3LjM2MDYxXSwgWzEyMy42MTAyMTIsIDcuODMzNTI3XSwgWzEyMy4yOTYwNzEsIDcuNDE4ODc2XSwgWzEyMi44MjU1MDYsIDcuNDU3Mzc1XSwgWzEyMi4wODU0OTksIDYuODk5NDI0XSwgWzEyMS45MTk5MjgsIDcuMTkyMTE5XSwgWzEyMi4zMTIzNTksIDguMDM0OTYyXSwgWzEyMi45NDIzOTgsIDguMzE2MjM3XSwgWzEyMy40ODc2ODgsIDguNjkzMDFdLCBbMTIzLjg0MTE1NCwgOC4yNDAzMjRdLCBbMTI0LjYwMTQ3LCA4LjUxNDE1OF0sIFsxMjQuNzY0NjEyLCA4Ljk2MDQwOV0sIFsxMjUuNDcxMzkxLCA4Ljk4Njk5N10sIFsxMjUuNDEyMTE4LCA5Ljc2MDMzNV0sIFsxMjYuMjIyNzE0LCA5LjI4NjA3NF0sIFsxMjYuMzA2NjM3LCA4Ljc4MjQ4N10sIFsxMjYuMzc2ODE0LCA4LjQxNDcwNl1dXSwgW1tbMTIzLjk4MjQzOCwgMTAuMjc4Nzc5XSwgWzEyMy42MjMxODMsIDkuOTUwMDkxXSwgWzEyMy4zMDk5MjEsIDkuMzE4MjY5XSwgWzEyMi45OTU4ODMsIDkuMDIyMTg5XSwgWzEyMi4zODAwNTUsIDkuNzEzMzYxXSwgWzEyMi41ODYwODksIDkuOTgxMDQ1XSwgWzEyMi44MzcwODEsIDEwLjI2MTE1N10sIFsxMjIuOTQ3NDExLCAxMC44ODE4NjhdLCBbMTIzLjQ5ODg1LCAxMC45NDA2MjRdLCBbMTIzLjMzNzc3NCwgMTAuMjY3Mzg0XSwgWzEyNC4wNzc5MzYsIDExLjIzMjcyNl0sIFsxMjMuOTgyNDM4LCAxMC4yNzg3NzldXV0sIFtbWzExOC41MDQ1ODEsIDkuMzE2MzgzXSwgWzExNy4xNzQyNzUsIDguMzY3NV0sIFsxMTcuNjY0NDc3LCA5LjA2Njg4OV0sIFsxMTguMzg2OTE0LCA5LjY4NDVdLCBbMTE4Ljk4NzM0MiwgMTAuMzc2MjkyXSwgWzExOS41MTE0OTYsIDExLjM2OTY2OF0sIFsxMTkuNjg5Njc3LCAxMC41NTQyOTFdLCBbMTE5LjAyOTQ1OCwgMTAuMDAzNjUzXSwgWzExOC41MDQ1ODEsIDkuMzE2MzgzXV1dLCBbW1sxMjEuODgzNTQ4LCAxMS44OTE3NTVdLCBbMTIyLjQ4MzgyMSwgMTEuNTgyMTg3XSwgWzEyMy4xMjAyMTcsIDExLjU4MzY2XSwgWzEyMy4xMDA4MzgsIDExLjE2NTkzNF0sIFsxMjIuNjM3NzE0LCAxMC43NDEzMDhdLCBbMTIyLjAwMjYxLCAxMC40NDEwMTddLCBbMTIxLjk2NzM2NywgMTAuOTA1NjkxXSwgWzEyMi4wMzgzNywgMTEuNDE1ODQxXSwgWzEyMS44ODM1NDgsIDExLjg5MTc1NV1dXSwgW1tbMTI1LjUwMjU1MiwgMTIuMTYyNjk1XSwgWzEyNS43ODM0NjUsIDExLjA0NjEyMl0sIFsxMjUuMDExODg0LCAxMS4zMTE0NTVdLCBbMTI1LjAzMjc2MSwgMTAuOTc1ODE2XSwgWzEyNS4yNzc0NDksIDEwLjM1ODcyMl0sIFsxMjQuODAxODE5LCAxMC4xMzQ2NzldLCBbMTI0Ljc2MDE2OCwgMTAuODM3OTk1XSwgWzEyNC40NTkxMDEsIDEwLjg4OTkzXSwgWzEyNC4zMDI1MjIsIDExLjQ5NTM3MV0sIFsxMjQuODkxMDEzLCAxMS40MTU1ODNdLCBbMTI0Ljg3Nzk5LCAxMS43OTQxOV0sIFsxMjQuMjY2NzYyLCAxMi41NTc3NjFdLCBbMTI1LjIyNzExNiwgMTIuNTM1NzIxXSwgWzEyNS41MDI1NTIsIDEyLjE2MjY5NV1dXSwgW1tbMTIxLjUyNzM5NCwgMTMuMDY5NTldLCBbMTIxLjI2MjE5LCAxMi4yMDU1Nl0sIFsxMjAuODMzODk2LCAxMi43MDQ0OTZdLCBbMTIwLjMyMzQzNiwgMTMuNDY2NDEzXSwgWzEyMS4xODAxMjgsIDEzLjQyOTY5N10sIFsxMjEuNTI3Mzk0LCAxMy4wNjk1OV1dXSwgW1tbMTIxLjMyMTMwOCwgMTguNTA0MDY1XSwgWzEyMS45Mzc2MDEsIDE4LjIxODU1Ml0sIFsxMjIuMjQ2MDA2LCAxOC40Nzg5NV0sIFsxMjIuMzM2OTU3LCAxOC4yMjQ4ODNdLCBbMTIyLjE3NDI3OSwgMTcuODEwMjgzXSwgWzEyMi41MTU2NTQsIDE3LjA5MzUwNV0sIFsxMjIuMjUyMzExLCAxNi4yNjI0NDRdLCBbMTIxLjY2Mjc4NiwgMTUuOTMxMDE4XSwgWzEyMS41MDUwNywgMTUuMTI0ODE0XSwgWzEyMS43Mjg4MjksIDE0LjMyODM3Nl0sIFsxMjIuMjU4OTI1LCAxNC4yMTgyMDJdLCBbMTIyLjcwMTI3NiwgMTQuMzM2NTQxXSwgWzEyMy45NTAyOTUsIDEzLjc4MjEzMV0sIFsxMjMuODU1MTA3LCAxMy4yMzc3NzFdLCBbMTI0LjE4MTI4OSwgMTIuOTk3NTI3XSwgWzEyNC4wNzc0MTksIDEyLjUzNjY3N10sIFsxMjMuMjk4MDM1LCAxMy4wMjc1MjZdLCBbMTIyLjkyODY1MiwgMTMuNTUyOTJdLCBbMTIyLjY3MTM1NSwgMTMuMTg1ODM2XSwgWzEyMi4wMzQ2NSwgMTMuNzg0NDgyXSwgWzEyMS4xMjYzODUsIDEzLjYzNjY4N10sIFsxMjAuNjI4NjM3LCAxMy44NTc2NTZdLCBbMTIwLjY3OTM4NCwgMTQuMjcxMDE2XSwgWzEyMC45OTE4MTksIDE0LjUyNTM5M10sIFsxMjAuNjkzMzM2LCAxNC43NTY2NzFdLCBbMTIwLjU2NDE0NSwgMTQuMzk2Mjc5XSwgWzEyMC4wNzA0MjksIDE0Ljk3MDg2OV0sIFsxMTkuOTIwOTI5LCAxNS40MDYzNDddLCBbMTE5Ljg4Mzc3MywgMTYuMzYzNzA0XSwgWzEyMC4yODY0ODgsIDE2LjAzNDYyOV0sIFsxMjAuMzkwMDQ3LCAxNy41OTkwODFdLCBbMTIwLjcxNTg2NywgMTguNTA1MjI3XSwgWzEyMS4zMjEzMDgsIDE4LjUwNDA2NV1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiUEhMIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJQaGlsaXBwaW5lcyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmMDNiMjAiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbWzE1NS44ODAwMjYsIC02LjgxOTk5N10sIFsxNTUuNTk5OTkxLCAtNi45MTk5OTFdLCBbMTU1LjE2Njk5NCwgLTYuNTM1OTMxXSwgWzE1NC43MjkxOTIsIC01LjkwMDgyOF0sIFsxNTQuNTE0MTE0LCAtNS4xMzkxMThdLCBbMTU0LjY1MjUwNCwgLTUuMDQyNDMxXSwgWzE1NC43NTk5OTEsIC01LjMzOTk4NF0sIFsxNTUuMDYyOTE4LCAtNS41NjY3OTJdLCBbMTU1LjU0Nzc0NiwgLTYuMjAwNjU1XSwgWzE1Ni4wMTk5NjUsIC02LjU0MDAxNF0sIFsxNTUuODgwMDI2LCAtNi44MTk5OTddXV0sIFtbWzE1MS45ODI3OTYsIC01LjQ3ODA2M10sIFsxNTEuNDU5MTA3LCAtNS41NjAyOF0sIFsxNTEuMzAxMzksIC01Ljg0MDcyOF0sIFsxNTAuNzU0NDQ3LCAtNi4wODM3NjNdLCBbMTUwLjI0MTE5NywgLTYuMzE3NzU0XSwgWzE0OS43MDk5NjMsIC02LjMxNjUxM10sIFsxNDguODkwMDY1LCAtNi4wMjYwNF0sIFsxNDguMzE4OTM3LCAtNS43NDcxNDJdLCBbMTQ4LjQwMTgyNiwgLTUuNDM3NzU2XSwgWzE0OS4yOTg0MTIsIC01LjU4Mzc0Ml0sIFsxNDkuODQ1NTYyLCAtNS41MDU1MDNdLCBbMTQ5Ljk5NjI1LCAtNS4wMjYxMDFdLCBbMTUwLjEzOTc1NiwgLTUuMDAxMzQ4XSwgWzE1MC4yMzY5MDgsIC01LjUzMjIyXSwgWzE1MC44MDc0NjcsIC01LjQ1NTg0Ml0sIFsxNTEuMDg5NjcyLCAtNS4xMTM2OTNdLCBbMTUxLjY0Nzg4MSwgLTQuNzU3MDc0XSwgWzE1MS41Mzc4NjIsIC00LjE2NzgwN10sIFsxNTIuMTM2NzkyLCAtNC4xNDg3OV0sIFsxNTIuMzM4NzQzLCAtNC4zMTI5NjZdLCBbMTUyLjMxODY5MywgLTQuODY3NjYxXSwgWzE1MS45ODI3OTYsIC01LjQ3ODA2M11dXSwgW1tbMTQ3LjE5MTg3NCwgLTcuMzg4MDI0XSwgWzE0OC4wODQ2MzYsIC04LjA0NDEwOF0sIFsxNDguNzM0MTA1LCAtOS4xMDQ2NjRdLCBbMTQ5LjMwNjgzNSwgLTkuMDcxNDM2XSwgWzE0OS4yNjY2MzEsIC05LjUxNDQwNl0sIFsxNTAuMDM4NzI4LCAtOS42ODQzMThdLCBbMTQ5LjczODc5OCwgLTkuODcyOTM3XSwgWzE1MC44MDE2MjgsIC0xMC4yOTM2ODddLCBbMTUwLjY5MDU3NSwgLTEwLjU4MjcxM10sIFsxNTAuMDI4MzkzLCAtMTAuNjUyNDc2XSwgWzE0OS43ODIzMSwgLTEwLjM5MzI2N10sIFsxNDguOTIzMTM4LCAtMTAuMjgwOTIzXSwgWzE0Ny45MTMwMTgsIC0xMC4xMzA0NDFdLCBbMTQ3LjEzNTQ0MywgLTkuNDkyNDQ0XSwgWzE0Ni41Njc4ODEsIC04Ljk0MjU1NV0sIFsxNDYuMDQ4NDgxLCAtOC4wNjc0MTRdLCBbMTQ0Ljc0NDE2OCwgLTcuNjMwMTI4XSwgWzE0My44OTcwODgsIC03LjkxNTMzXSwgWzE0My4yODYzNzYsIC04LjI0NTQ5MV0sIFsxNDMuNDEzOTEzLCAtOC45ODMwNjldLCBbMTQyLjYyODQzMSwgLTkuMzI2ODIxXSwgWzE0Mi4wNjgyNTksIC05LjE1OTU5Nl0sIFsxNDEuMDMzODUyLCAtOS4xMTc4OTNdLCBbMTQxLjAxNzA1NywgLTUuODU5MDIyXSwgWzE0MS4wMDAyMSwgLTIuNjAwMTUxXSwgWzE0Mi43MzUyNDcsIC0zLjI4OTE1M10sIFsxNDQuNTgzOTcxLCAtMy44NjE0MThdLCBbMTQ1LjI3MzE4LCAtNC4zNzM3MzhdLCBbMTQ1LjgyOTc4NiwgLTQuODc2NDk4XSwgWzE0NS45ODE5MjIsIC01LjQ2NTYwOV0sIFsxNDcuNjQ4MDczLCAtNi4wODM2NTldLCBbMTQ3Ljg5MTEwOCwgLTYuNjE0MDE1XSwgWzE0Ni45NzA5MDUsIC02LjcyMTY1N10sIFsxNDcuMTkxODc0LCAtNy4zODgwMjRdXV0sIFtbWzE1My4xNDAwMzgsIC00LjQ5OTk4M10sIFsxNTIuODI3MjkyLCAtNC43NjY0MjddLCBbMTUyLjYzODY3MywgLTQuMTc2MTI3XSwgWzE1Mi40MDYwMjYsIC0zLjc4OTc0M10sIFsxNTEuOTUzMjM3LCAtMy40NjIwNjJdLCBbMTUxLjM4NDI3OSwgLTMuMDM1NDIyXSwgWzE1MC42NjIwNSwgLTIuNzQxNDg2XSwgWzE1MC45Mzk5NjUsIC0yLjUwMDAwMl0sIFsxNTEuNDc5OTg0LCAtMi43Nzk5ODVdLCBbMTUxLjgyMDAxNSwgLTIuOTk5OTcyXSwgWzE1Mi4yMzk5ODksIC0zLjI0MDAwOV0sIFsxNTIuNjQwMDE3LCAtMy42NTk5ODNdLCBbMTUzLjAxOTk5NCwgLTMuOTgwMDE1XSwgWzE1My4xNDAwMzgsIC00LjQ5OTk4M11dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiUE5HIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJQYXB1YSBOZXcgR3VpbmVhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxNS4wMTY5OTYsIDUxLjEwNjY3NF0sIFsxNC42MDcwOTgsIDUxLjc0NTE4OF0sIFsxNC42ODUwMjYsIDUyLjA4OTk0N10sIFsxNC40Mzc2LCA1Mi42MjQ4NV0sIFsxNC4wNzQ1MjEsIDUyLjk4MTI2M10sIFsxNC4zNTMzMTUsIDUzLjI0ODE3MV0sIFsxNC4xMTk2ODYsIDUzLjc1NzAyOV0sIFsxNC44MDI5LCA1NC4wNTA3MDZdLCBbMTYuMzYzNDc3LCA1NC41MTMxNTldLCBbMTcuNjIyODMyLCA1NC44NTE1MzZdLCBbMTguNjIwODU5LCA1NC42ODI2MDZdLCBbMTguNjk2MjU1LCA1NC40Mzg3MTldLCBbMTkuNjYwNjQsIDU0LjQyNjA4NF0sIFsyMC44OTIyNDUsIDU0LjMxMjUyNV0sIFsyMi43MzEwOTksIDU0LjMyNzUzN10sIFsyMy4yNDM5ODcsIDU0LjIyMDU2N10sIFsyMy40ODQxMjgsIDUzLjkxMjQ5OF0sIFsyMy41Mjc1MzYsIDUzLjQ3MDEyMl0sIFsyMy44MDQ5MzUsIDUzLjA4OTczMV0sIFsyMy43OTkxOTksIDUyLjY5MTA5OV0sIFsyMy4xOTk0OTQsIDUyLjQ4Njk3N10sIFsyMy41MDgwMDIsIDUyLjAyMzY0N10sIFsyMy41MjcwNzEsIDUxLjU3ODQ1NF0sIFsyNC4wMjk5ODYsIDUwLjcwNTQwN10sIFsyMy45MjI3NTcsIDUwLjQyNDg4MV0sIFsyMy40MjY1MDgsIDUwLjMwODUwNl0sIFsyMi41MTg0NSwgNDkuNDc2Nzc0XSwgWzIyLjc3NjQxOSwgNDkuMDI3Mzk1XSwgWzIyLjU1ODEzOCwgNDkuMDg1NzM4XSwgWzIxLjYwNzgwOCwgNDkuNDcwMTA3XSwgWzIwLjg4Nzk1NSwgNDkuMzI4NzcyXSwgWzIwLjQxNTgzOSwgNDkuNDMxNDUzXSwgWzE5LjgyNTAyMywgNDkuMjE3MTI1XSwgWzE5LjMyMDcxMywgNDkuNTcxNTc0XSwgWzE4LjkwOTU3NSwgNDkuNDM1ODQ2XSwgWzE4Ljg1MzE0NCwgNDkuNDk2MjNdLCBbMTguMzkyOTE0LCA0OS45ODg2MjldLCBbMTcuNjQ5NDQ1LCA1MC4wNDkwMzhdLCBbMTcuNTU0NTY3LCA1MC4zNjIxNDZdLCBbMTYuODY4NzY5LCA1MC40NzM5NzRdLCBbMTYuNzE5NDc2LCA1MC4yMTU3NDddLCBbMTYuMTc2MjUzLCA1MC40MjI2MDddLCBbMTYuMjM4NjI3LCA1MC42OTc3MzNdLCBbMTUuNDkwOTcyLCA1MC43ODQ3M10sIFsxNS4wMTY5OTYsIDUxLjEwNjY3NF1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiUE9MIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJQb2xhbmQiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmVkOTc2IiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy02Ni4yODI0MzQsIDE4LjUxNDc2Ml0sIFstNjUuNzcxMzAzLCAxOC40MjY2NzldLCBbLTY1LjU5MTAwNCwgMTguMjI4MDM1XSwgWy02NS44NDcxNjQsIDE3Ljk3NTkwNl0sIFstNjYuNTk5OTM0LCAxNy45ODE4MjNdLCBbLTY3LjE4NDE2MiwgMTcuOTQ2NTUzXSwgWy02Ny4yNDI0MjgsIDE4LjM3NDQ2XSwgWy02Ny4xMDA2NzksIDE4LjUyMDYwMV0sIFstNjYuMjgyNDM0LCAxOC41MTQ3NjJdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlBSSSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiUHVlcnRvIFJpY28iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICJibGFjayIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxMzAuNjQwMDE2LCA0Mi4zOTUwMDldLCBbMTMwLjc4MDAwNywgNDIuMjIwMDA3XSwgWzEzMC40MDAwMzEsIDQyLjI4MDAwNF0sIFsxMjkuOTY1OTQ5LCA0MS45NDEzNjhdLCBbMTI5LjY2NzM2MiwgNDEuNjAxMTA0XSwgWzEyOS43MDUxODksIDQwLjg4MjgyOF0sIFsxMjkuMTg4MTE1LCA0MC42NjE4MDhdLCBbMTI5LjAxMDQsIDQwLjQ4NTQzNl0sIFsxMjguNjMzMzY4LCA0MC4xODk4NDddLCBbMTI3Ljk2NzQxNCwgNDAuMDI1NDEzXSwgWzEyNy41MzM0MzYsIDM5Ljc1Njg1XSwgWzEyNy41MDIxMiwgMzkuMzIzOTMxXSwgWzEyNy4zODU0MzQsIDM5LjIxMzQ3Ml0sIFsxMjcuNzgzMzQzLCAzOS4wNTA4OThdLCBbMTI4LjM0OTcxNiwgMzguNjEyMjQzXSwgWzEyOC4yMDU3NDYsIDM4LjM3MDM5N10sIFsxMjcuNzgwMDM1LCAzOC4zMDQ1MzZdLCBbMTI3LjA3MzMwOSwgMzguMjU2MTE1XSwgWzEyNi42ODM3MiwgMzcuODA0NzczXSwgWzEyNi4yMzczMzksIDM3Ljg0MDM3OF0sIFsxMjYuMTc0NzU5LCAzNy43NDk2ODZdLCBbMTI1LjY4OTEwNCwgMzcuOTQwMDFdLCBbMTI1LjU2ODQzOSwgMzcuNzUyMDg5XSwgWzEyNS4yNzUzMywgMzcuNjY5MDcxXSwgWzEyNS4yNDAwODcsIDM3Ljg1NzIyNF0sIFsxMjQuOTgxMDMzLCAzNy45NDg4MjFdLCBbMTI0LjcxMjE2MSwgMzguMTA4MzQ2XSwgWzEyNC45ODU5OTQsIDM4LjU0ODQ3NF0sIFsxMjUuMjIxOTQ5LCAzOC42NjU4NTddLCBbMTI1LjEzMjg1OSwgMzguODQ4NTU5XSwgWzEyNS4zODY1OSwgMzkuMzg3OTU4XSwgWzEyNS4zMjExMTYsIDM5LjU1MTM4NV0sIFsxMjQuNzM3NDgyLCAzOS42NjAzNDRdLCBbMTI0LjI2NTYyNSwgMzkuOTI4NDkzXSwgWzEyNS4wNzk5NDIsIDQwLjU2OTgyNF0sIFsxMjYuMTgyMDQ1LCA0MS4xMDczMzZdLCBbMTI2Ljg2OTA4MywgNDEuODE2NTY5XSwgWzEyNy4zNDM3ODMsIDQxLjUwMzE1Ml0sIFsxMjguMjA4NDMzLCA0MS40NjY3NzJdLCBbMTI4LjA1MjIxNSwgNDEuOTk0Mjg1XSwgWzEyOS41OTY2NjksIDQyLjQyNDk4Ml0sIFsxMjkuOTk0MjY3LCA0Mi45ODUzODddLCBbMTMwLjY0MDAxNiwgNDIuMzk1MDA5XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJQUksiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIk5vcnRoIEtvcmVhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZlZDk3NiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stOS4wMzQ4MTgsIDQxLjg4MDU3MV0sIFstOC42NzE5NDYsIDQyLjEzNDY4OV0sIFstOC4yNjM4NTcsIDQyLjI4MDQ2OV0sIFstOC4wMTMxNzUsIDQxLjc5MDg4Nl0sIFstNy40MjI1MTMsIDQxLjc5MjA3NV0sIFstNy4yNTEzMDksIDQxLjkxODM0Nl0sIFstNi42Njg2MDYsIDQxLjg4MzM4N10sIFstNi4zODkwODgsIDQxLjM4MTgxNV0sIFstNi44NTExMjcsIDQxLjExMTA4M10sIFstNi44NjQwMiwgNDAuMzMwODcyXSwgWy03LjAyNjQxMywgNDAuMTg0NTI0XSwgWy03LjA2NjU5MiwgMzkuNzExODkyXSwgWy03LjQ5ODYzMiwgMzkuNjI5NTcxXSwgWy03LjA5ODAzNywgMzkuMDMwMDczXSwgWy03LjM3NDA5MiwgMzguMzczMDU5XSwgWy03LjAyOTI4MSwgMzguMDc1NzY0XSwgWy03LjE2NjUwOCwgMzcuODAzODk0XSwgWy03LjUzNzEwNSwgMzcuNDI4OTA0XSwgWy03LjQ1MzcyNiwgMzcuMDk3Nzg4XSwgWy03Ljg1NTYxMywgMzYuODM4MjY5XSwgWy04LjM4MjgxNiwgMzYuOTc4ODhdLCBbLTguODk4ODU3LCAzNi44Njg4MDldLCBbLTguNzQ2MTAxLCAzNy42NTEzNDZdLCBbLTguODM5OTk4LCAzOC4yNjYyNDNdLCBbLTkuMjg3NDY0LCAzOC4zNTg0ODZdLCBbLTkuNTI2NTcxLCAzOC43Mzc0MjldLCBbLTkuNDQ2OTg5LCAzOS4zOTIwNjZdLCBbLTkuMDQ4MzA1LCAzOS43NTUwOTNdLCBbLTguOTc3MzUzLCA0MC4xNTkzMDZdLCBbLTguNzY4Njg0LCA0MC43NjA2MzldLCBbLTguNzkwODUzLCA0MS4xODQzMzRdLCBbLTguOTkwNzg5LCA0MS41NDM0NTldLCBbLTkuMDM0ODE4LCA0MS44ODA1NzFdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlBSVCIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiUG9ydHVnYWwiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy02Mi42ODUwNTcsIC0yMi4yNDkwMjldLCBbLTYyLjI5MTE3OSwgLTIxLjA1MTYzNV0sIFstNjIuMjY1OTYxLCAtMjAuNTEzNzM1XSwgWy02MS43ODYzMjYsIC0xOS42MzM3MzddLCBbLTYwLjA0MzU2NSwgLTE5LjM0Mjc0N10sIFstNTkuMTE1MDQyLCAtMTkuMzU2OTA2XSwgWy01OC4xODM0NzEsIC0xOS44NjgzOTldLCBbLTU4LjE2NjM5MiwgLTIwLjE3NjcwMV0sIFstNTcuODcwNjc0LCAtMjAuNzMyNjg4XSwgWy01Ny45MzcxNTYsIC0yMi4wOTAxNzZdLCBbLTU2Ljg4MTUxLCAtMjIuMjgyMTU0XSwgWy01Ni40NzMzMTcsIC0yMi4wODYzXSwgWy01NS43OTc5NTgsIC0yMi4zNTY5M10sIFstNTUuNjEwNjgzLCAtMjIuNjU1NjE5XSwgWy01NS41MTc2MzksIC0yMy41NzE5OThdLCBbLTU1LjQwMDc0NywgLTIzLjk1NjkzNV0sIFstNTUuMDI3OTAyLCAtMjQuMDAxMjc0XSwgWy01NC42NTI4MzQsIC0yMy44Mzk1NzhdLCBbLTU0LjI5Mjk2LCAtMjQuMDIxMDE0XSwgWy01NC4yOTM0NzYsIC0yNC41NzA4XSwgWy01NC40Mjg5NDYsIC0yNS4xNjIxODVdLCBbLTU0LjYyNTI5MSwgLTI1LjczOTI1NV0sIFstNTQuNzg4Nzk1LCAtMjYuNjIxNzg2XSwgWy01NS42OTU4NDYsIC0yNy4zODc4MzddLCBbLTU2LjQ4NjcwMiwgLTI3LjU0ODQ5OV0sIFstNTcuNjA5NzYsIC0yNy4zOTU4OTldLCBbLTU4LjYxODE3NCwgLTI3LjEyMzcxOV0sIFstNTcuNjMzNjYsIC0yNS42MDM2NTddLCBbLTU3Ljc3NzIxNywgLTI1LjE2MjM0XSwgWy01OC44MDcxMjgsIC0yNC43NzE0NTldLCBbLTYwLjAyODk2NiwgLTI0LjAzMjc5Nl0sIFstNjAuODQ2NTY1LCAtMjMuODgwNzEzXSwgWy02Mi42ODUwNTcsIC0yMi4yNDkwMjldXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlBSWSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiUGFyYWd1YXkiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzUwLjgxMDEwOCwgMjQuNzU0NzQzXSwgWzUwLjc0MzkxMSwgMjUuNDgyNDI0XSwgWzUxLjAxMzM1MiwgMjYuMDA2OTkyXSwgWzUxLjI4NjQ2MiwgMjYuMTE0NTgyXSwgWzUxLjU4OTA3OSwgMjUuODAxMTEzXSwgWzUxLjYwNjcsIDI1LjIxNTY3XSwgWzUxLjM4OTYwOCwgMjQuNjI3Mzg2XSwgWzUxLjExMjQxNSwgMjQuNTU2MzMxXSwgWzUwLjgxMDEwOCwgMjQuNzU0NzQzXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJRQVQiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlFhdGFyIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1syMi43MTA1MzEsIDQ3Ljg4MjE5NF0sIFsyMy4xNDIyMzYsIDQ4LjA5NjM0MV0sIFsyMy43NjA5NTgsIDQ3Ljk4NTU5OF0sIFsyNC40MDIwNTYsIDQ3Ljk4MTg3OF0sIFsyNC44NjYzMTcsIDQ3LjczNzUyNl0sIFsyNS4yMDc3NDMsIDQ3Ljg5MTA1Nl0sIFsyNS45NDU5NDEsIDQ3Ljk4NzE0OV0sIFsyNi4xOTc0NSwgNDguMjIwODgxXSwgWzI2LjYxOTMzNywgNDguMjIwNzI2XSwgWzI2LjkyNDE3NiwgNDguMTIzMjY0XSwgWzI3LjIzMzg3MywgNDcuODI2NzcxXSwgWzI3LjU1MTE2NiwgNDcuNDA1MTE3XSwgWzI4LjEyODAzLCA0Ni44MTA0NzZdLCBbMjguMTYwMDE4LCA0Ni4zNzE1NjNdLCBbMjguMDU0NDQzLCA0NS45NDQ1ODZdLCBbMjguMjMzNTU0LCA0NS40ODgyODNdLCBbMjguNjc5Nzc5LCA0NS4zMDQwMzFdLCBbMjkuMTQ5NzI1LCA0NS40NjQ5MjVdLCBbMjkuNjAzMjg5LCA0NS4yOTMzMDhdLCBbMjkuNjI2NTQzLCA0NS4wMzUzOTFdLCBbMjkuMTQxNjEyLCA0NC44MjAyMV0sIFsyOC44Mzc4NTgsIDQ0LjkxMzg3NF0sIFsyOC41NTgwODEsIDQzLjcwNzQ2Ml0sIFsyNy45NzAxMDcsIDQzLjgxMjQ2OF0sIFsyNy4yNDI0LCA0NC4xNzU5ODZdLCBbMjYuMDY1MTU5LCA0My45NDM0OTRdLCBbMjUuNTY5MjcyLCA0My42ODg0NDVdLCBbMjQuMTAwNjc5LCA0My43NDEwNTFdLCBbMjMuMzMyMzAyLCA0My44OTcwMTFdLCBbMjIuOTQ0ODMyLCA0My44MjM3ODVdLCBbMjIuNjU3MTUsIDQ0LjIzNDkyM10sIFsyMi40NzQwMDgsIDQ0LjQwOTIyOF0sIFsyMi43MDU3MjYsIDQ0LjU3ODAwM10sIFsyMi40NTkwMjIsIDQ0LjcwMjUxN10sIFsyMi4xNDUwODgsIDQ0LjQ3ODQyMl0sIFsyMS41NjIwMjMsIDQ0Ljc2ODk0N10sIFsyMS40ODM1MjYsIDQ1LjE4MTE3XSwgWzIwLjg3NDMxMywgNDUuNDE2Mzc1XSwgWzIwLjc2MjE3NSwgNDUuNzM0NTczXSwgWzIwLjIyMDE5MiwgNDYuMTI3NDY5XSwgWzIxLjAyMTk1MiwgNDYuMzE2MDg4XSwgWzIxLjYyNjUxNSwgNDYuOTk0MjM4XSwgWzIyLjA5OTc2OCwgNDcuNjcyNDM5XSwgWzIyLjcxMDUzMSwgNDcuODgyMTk0XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJST1UiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlJvbWFuaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1sxNDMuNjQ4MDA3LCA1MC43NDc2XSwgWzE0NC42NTQxNDgsIDQ4Ljk3NjM5MV0sIFsxNDMuMTczOTI4LCA0OS4zMDY1NTFdLCBbMTQyLjU1ODY2OCwgNDcuODYxNTc1XSwgWzE0My41MzM0OTIsIDQ2LjgzNjcyOF0sIFsxNDMuNTA1Mjc3LCA0Ni4xMzc5MDhdLCBbMTQyLjc0NzcwMSwgNDYuNzQwNzY1XSwgWzE0Mi4wOTIwMywgNDUuOTY2NzU1XSwgWzE0MS45MDY5MjUsIDQ2LjgwNTkyOV0sIFsxNDIuMDE4NDQzLCA0Ny43ODAxMzNdLCBbMTQxLjkwNDQ0NSwgNDguODU5MTg5XSwgWzE0Mi4xMzU4LCA0OS42MTUxNjNdLCBbMTQyLjE3OTk4MywgNTAuOTUyMzQyXSwgWzE0MS41OTQwNzYsIDUxLjkzNTQzNV0sIFsxNDEuNjgyNTQ2LCA1My4zMDE5NjZdLCBbMTQyLjYwNjkzNCwgNTMuNzYyMTQ1XSwgWzE0Mi4yMDk3NDksIDU0LjIyNTQ3Nl0sIFsxNDIuNjU0Nzg2LCA1NC4zNjU4ODFdLCBbMTQyLjkxNDYxNiwgNTMuNzA0NTc4XSwgWzE0My4yNjA4NDgsIDUyLjc0MDc2XSwgWzE0My4yMzUyNjgsIDUxLjc1NjY2XSwgWzE0My42NDgwMDcsIDUwLjc0NzZdXV0sIFtbWzIyLjczMTA5OSwgNTQuMzI3NTM3XSwgWzIwLjg5MjI0NSwgNTQuMzEyNTI1XSwgWzE5LjY2MDY0LCA1NC40MjYwODRdLCBbMTkuODg4NDgxLCA1NC44NjYxNl0sIFsyMS4yNjg0NDksIDU1LjE5MDQ4Ml0sIFsyMi4zMTU3MjQsIDU1LjAxNTI5OV0sIFsyMi43NTc3NjQsIDU0Ljg1NjU3NF0sIFsyMi42NTEwNTIsIDU0LjU4Mjc0MV0sIFsyMi43MzEwOTksIDU0LjMyNzUzN11dXSwgW1tbLTE3NS4wMTQyNSwgNjYuNTg0MzVdLCBbLTE3NC4zMzk4MywgNjYuMzM1NTZdLCBbLTE3NC41NzE4MiwgNjcuMDYyMTldLCBbLTE3MS44NTczMSwgNjYuOTEzMDhdLCBbLTE2OS44OTk1OCwgNjUuOTc3MjRdLCBbLTE3MC44OTEwNywgNjUuNTQxMzldLCBbLTE3Mi41MzAyNSwgNjUuNDM3OTFdLCBbLTE3Mi41NTUsIDY0LjQ2MDc5XSwgWy0xNzIuOTU1MzMsIDY0LjI1MjY5XSwgWy0xNzMuODkxODQsIDY0LjI4MjZdLCBbLTE3NC42NTM5MiwgNjQuNjMxMjVdLCBbLTE3NS45ODM1MywgNjQuOTIyODhdLCBbLTE3Ni4yMDcxNiwgNjUuMzU2NjddLCBbLTE3Ny4yMjI2NiwgNjUuNTIwMjRdLCBbLTE3OC4zNTk5MywgNjUuMzkwNTJdLCBbLTE3OC45MDMzMiwgNjUuNzQwNDRdLCBbLTE3OC42ODYxMSwgNjYuMTEyMTFdLCBbLTE3OS44ODM3NywgNjUuODc0NTZdLCBbLTE3OS40MzI2OCwgNjUuNDA0MTFdLCBbLTE4MCwgNjQuOTc5NzA5XSwgWy0xODAsIDY4Ljk2MzYzNl0sIFstMTc3LjU1LCA2OC4yXSwgWy0xNzQuOTI4MjUsIDY3LjIwNTg5XSwgWy0xNzUuMDE0MjUsIDY2LjU4NDM1XV1dLCBbW1sxODAsIDcwLjgzMjE5OV0sIFsxNzguOTAzNDI1LCA3MC43ODExNF0sIFsxNzguNzI1MywgNzEuMDk4OF0sIFsxODAsIDcxLjUxNTcxNF0sIFsxODAsIDcwLjgzMjE5OV1dXSwgW1tbLTE3OC42OTM3OCwgNzAuODkzMDJdLCBbLTE4MCwgNzAuODMyMTk5XSwgWy0xODAsIDcxLjUxNTcxNF0sIFstMTc5Ljg3MTg3NSwgNzEuNTU3NjJdLCBbLTE3OS4wMjQzMywgNzEuNTU1NTNdLCBbLTE3Ny41Nzc5NDUsIDcxLjI2OTQ4XSwgWy0xNzcuNjYzNTc1LCA3MS4xMzI3N10sIFstMTc4LjY5Mzc4LCA3MC44OTMwMl1dXSwgW1tbMTQzLjYwMzg1LCA3My4yMTI0NF0sIFsxNDIuMDg3NjMsIDczLjIwNTQ0XSwgWzE0MC4wMzgxNTUsIDczLjMxNjkyXSwgWzEzOS44NjMxMiwgNzMuMzY5ODNdLCBbMTQwLjgxMTcxLCA3My43NjUwNl0sIFsxNDIuMDYyMDcsIDczLjg1NzU4XSwgWzE0My40ODI4MywgNzMuNDc1MjVdLCBbMTQzLjYwMzg1LCA3My4yMTI0NF1dXSwgW1tbMTUwLjczMTY3LCA3NS4wODQwNl0sIFsxNDkuNTc1OTI1LCA3NC42ODg5Ml0sIFsxNDcuOTc3NDY1LCA3NC43NzgzNTVdLCBbMTQ2LjExOTE5LCA3NS4xNzI5OF0sIFsxNDYuMzU4NDg1LCA3NS40OTY4Ml0sIFsxNDguMjIyMjMsIDc1LjM0NTg0NV0sIFsxNTAuNzMxNjcsIDc1LjA4NDA2XV1dLCBbW1sxNDUuMDg2Mjg1LCA3NS41NjI2MjVdLCBbMTQ0LjMsIDc0LjgyXSwgWzE0MC42MTM4MSwgNzQuODQ3NjhdLCBbMTM4Ljk1NTQ0LCA3NC42MTE0OF0sIFsxMzYuOTc0MzksIDc1LjI2MTY3XSwgWzEzNy41MTE3NiwgNzUuOTQ5MTddLCBbMTM4LjgzMTA3NSwgNzYuMTM2NzZdLCBbMTQxLjQ3MTYxNSwgNzYuMDkyODldLCBbMTQ1LjA4NjI4NSwgNzUuNTYyNjI1XV1dLCBbW1s1Ny41MzU2OTMsIDcwLjcyMDQ2NF0sIFs1Ni45NDQ5NzksIDcwLjYzMjc0M10sIFs1My42NzczNzUsIDcwLjc2MjY1OF0sIFs1My40MTIwMTcsIDcxLjIwNjY2Ml0sIFs1MS42MDE4OTUsIDcxLjQ3NDc1OV0sIFs1MS40NTU3NTQsIDcyLjAxNDg4MV0sIFs1Mi40NzgyNzUsIDcyLjIyOTQ0Ml0sIFs1Mi40NDQxNjksIDcyLjc3NDczMV0sIFs1NC40Mjc2MTQsIDczLjYyNzU0OF0sIFs1My41MDgyOSwgNzMuNzQ5ODE0XSwgWzU1LjkwMjQ1OSwgNzQuNjI3NDg2XSwgWzU1LjYzMTkzMywgNzUuMDgxNDEyXSwgWzU3Ljg2ODY0NCwgNzUuNjA5MzldLCBbNjEuMTcwMDQ0LCA3Ni4yNTE4ODNdLCBbNjQuNDk4MzY4LCA3Ni40MzkwNTVdLCBbNjYuMjEwOTc3LCA3Ni44MDk3ODJdLCBbNjguMTU3MDYsIDc2LjkzOTY5N10sIFs2OC44NTIyMTEsIDc2LjU0NDgxMV0sIFs2OC4xODA1NzMsIDc2LjIzMzY0Ml0sIFs2NC42MzczMjYsIDc1LjczNzc1NV0sIFs2MS41ODM1MDgsIDc1LjI2MDg4NV0sIFs1OC40NzcwODIsIDc0LjMwOTA1Nl0sIFs1Ni45ODY3ODYsIDczLjMzMzA0NF0sIFs1NS40MTkzMzYsIDcyLjM3MTI2OF0sIFs1NS42MjI4MzgsIDcxLjU0MDU5NV0sIFs1Ny41MzU2OTMsIDcwLjcyMDQ2NF1dXSwgW1tbMTA2Ljk3MDEzLCA3Ni45NzQxOV0sIFsxMDcuMjQsIDc2LjQ4XSwgWzEwOC4xNTM4LCA3Ni43MjMzNV0sIFsxMTEuMDc3MjYsIDc2LjcxXSwgWzExMy4zMzE1MSwgNzYuMjIyMjRdLCBbMTE0LjEzNDE3LCA3NS44NDc2NF0sIFsxMTMuODg1MzksIDc1LjMyNzc5XSwgWzExMi43NzkxOCwgNzUuMDMxODZdLCBbMTEwLjE1MTI1LCA3NC40NzY3M10sIFsxMDkuNCwgNzQuMThdLCBbMTEwLjY0LCA3NC4wNF0sIFsxMTIuMTE5MTksIDczLjc4Nzc0XSwgWzExMy4wMTk1NCwgNzMuOTc2OTNdLCBbMTEzLjUyOTU4LCA3My4zMzUwNV0sIFsxMTMuOTY4ODEsIDczLjU5NDg4XSwgWzExNS41Njc4MiwgNzMuNzUyODVdLCBbMTE4Ljc3NjMzLCA3My41ODc3Ml0sIFsxMTkuMDIsIDczLjEyXSwgWzEyMy4yMDA2NiwgNzIuOTcxMjJdLCBbMTIzLjI1Nzc3LCA3My43MzUwM10sIFsxMjUuMzgsIDczLjU2XSwgWzEyNi45NzY0NCwgNzMuNTY1NDldLCBbMTI4LjU5MTI2LCA3My4wMzg3MV0sIFsxMjkuMDUxNTcsIDcyLjM5ODcyXSwgWzEyOC40NiwgNzEuOThdLCBbMTI5LjcxNTk5LCA3MS4xOTMwNF0sIFsxMzEuMjg4NTgsIDcwLjc4Njk5XSwgWzEzMi4yNTM1LCA3MS44MzYzXSwgWzEzMy44NTc2NiwgNzEuMzg2NDJdLCBbMTM1LjU2MTkzLCA3MS42NTUyNV0sIFsxMzcuNDk3NTUsIDcxLjM0NzYzXSwgWzEzOC4yMzQwOSwgNzEuNjI4MDNdLCBbMTM5Ljg2OTgzLCA3MS40ODc4M10sIFsxMzkuMTQ3OTEsIDcyLjQxNjE5XSwgWzE0MC40NjgxNywgNzIuODQ5NDFdLCBbMTQ5LjUsIDcyLjJdLCBbMTUwLjM1MTE4LCA3MS42MDY0M10sIFsxNTIuOTY4OSwgNzAuODQyMjJdLCBbMTU3LjAwNjg4LCA3MS4wMzE0MV0sIFsxNTguOTk3NzksIDcwLjg2NjcyXSwgWzE1OS44MzAzMSwgNzAuNDUzMjRdLCBbMTU5LjcwODY2LCA2OS43MjE5OF0sIFsxNjAuOTQwNTMsIDY5LjQzNzI4XSwgWzE2Mi4yNzkwNywgNjkuNjQyMDRdLCBbMTY0LjA1MjQ4LCA2OS42NjgyM10sIFsxNjUuOTQwMzcsIDY5LjQ3MTk5XSwgWzE2Ny44MzU2NywgNjkuNTgyNjldLCBbMTY5LjU3NzYzLCA2OC42OTM4XSwgWzE3MC44MTY4OCwgNjkuMDEzNjNdLCBbMTcwLjAwODIsIDY5LjY1Mjc2XSwgWzE3MC40NTM0NSwgNzAuMDk3MDNdLCBbMTczLjY0MzkxLCA2OS44MTc0M10sIFsxNzUuNzI0MDMsIDY5Ljg3NzI1XSwgWzE3OC42LCA2OS40XSwgWzE4MCwgNjguOTYzNjM2XSwgWzE4MCwgNjQuOTc5NzA5XSwgWzE3OS45OTI4MSwgNjQuOTc0MzNdLCBbMTc4LjcwNzIsIDY0LjUzNDkzXSwgWzE3Ny40MTEyOCwgNjQuNjA4MjFdLCBbMTc4LjMxMywgNjQuMDc1OTNdLCBbMTc4LjkwODI1LCA2My4yNTE5N10sIFsxNzkuMzcwMzQsIDYyLjk4MjYyXSwgWzE3OS40ODYzNiwgNjIuNTY4OTRdLCBbMTc5LjIyODI1LCA2Mi4zMDQxXSwgWzE3Ny4zNjQzLCA2Mi41MjE5XSwgWzE3NC41NjkyOSwgNjEuNzY5MTVdLCBbMTczLjY4MDEzLCA2MS42NTI2MV0sIFsxNzIuMTUsIDYwLjk1XSwgWzE3MC42OTg1LCA2MC4zMzYxOF0sIFsxNzAuMzMwODUsIDU5Ljg4MTc3XSwgWzE2OC45MDA0NiwgNjAuNTczNTVdLCBbMTY2LjI5NDk4LCA1OS43ODg1NV0sIFsxNjUuODQsIDYwLjE2XSwgWzE2NC44NzY3NCwgNTkuNzMxNl0sIFsxNjMuNTM5MjksIDU5Ljg2ODcxXSwgWzE2My4yMTcxMSwgNTkuMjExMDFdLCBbMTYyLjAxNzMzLCA1OC4yNDMyOF0sIFsxNjIuMDUyOTcsIDU3LjgzOTEyXSwgWzE2My4xOTE5MSwgNTcuNjE1MDNdLCBbMTYzLjA1Nzk0LCA1Ni4xNTkyNF0sIFsxNjIuMTI5NTgsIDU2LjEyMjE5XSwgWzE2MS43MDE0NiwgNTUuMjg1NjhdLCBbMTYyLjExNzQ5LCA1NC44NTUxNF0sIFsxNjAuMzY4NzcsIDU0LjM0NDMzXSwgWzE2MC4wMjE3MywgNTMuMjAyNTddLCBbMTU4LjUzMDk0LCA1Mi45NTg2OF0sIFsxNTguMjMxMTgsIDUxLjk0MjY5XSwgWzE1Ni43ODk3OSwgNTEuMDExMDVdLCBbMTU2LjQyLCA1MS43XSwgWzE1NS45OTE4MiwgNTMuMTU4OTVdLCBbMTU1LjQzMzY2LCA1NS4zODEwM10sIFsxNTUuOTE0NDIsIDU2Ljc2NzkyXSwgWzE1Ni43NTgxNSwgNTcuMzY0N10sIFsxNTYuODEwMzUsIDU3LjgzMjA0XSwgWzE1OC4zNjQzMywgNTguMDU1NzVdLCBbMTYwLjE1MDY0LCA1OS4zMTQ3N10sIFsxNjEuODcyMDQsIDYwLjM0M10sIFsxNjMuNjY5NjksIDYxLjE0MDldLCBbMTY0LjQ3MzU1LCA2Mi41NTA2MV0sIFsxNjMuMjU4NDIsIDYyLjQ2NjI3XSwgWzE2Mi42NTc5MSwgNjEuNjQyNV0sIFsxNjAuMTIxNDgsIDYwLjU0NDIzXSwgWzE1OS4zMDIzMiwgNjEuNzczOTZdLCBbMTU2LjcyMDY4LCA2MS40MzQ0Ml0sIFsxNTQuMjE4MDYsIDU5Ljc1ODE4XSwgWzE1NS4wNDM3NSwgNTkuMTQ0OTVdLCBbMTUyLjgxMTg1LCA1OC44ODM4NV0sIFsxNTEuMjY1NzMsIDU4Ljc4MDg5XSwgWzE1MS4zMzgxNSwgNTkuNTAzOTZdLCBbMTQ5Ljc4MzcxLCA1OS42NTU3M10sIFsxNDguNTQ0ODEsIDU5LjE2NDQ4XSwgWzE0NS40ODcyMiwgNTkuMzM2MzddLCBbMTQyLjE5NzgyLCA1OS4wMzk5OF0sIFsxMzguOTU4NDgsIDU3LjA4ODA1XSwgWzEzNS4xMjYxOSwgNTQuNzI5NTldLCBbMTM2LjcwMTcxLCA1NC42MDM1NV0sIFsxMzcuMTkzNDIsIDUzLjk3NzMyXSwgWzEzOC4xNjQ3LCA1My43NTUwMV0sIFsxMzguODA0NjMsIDU0LjI1NDU1XSwgWzEzOS45MDE1MSwgNTQuMTg5NjhdLCBbMTQxLjM0NTMxLCA1My4wODk1N10sIFsxNDEuMzc5MjMsIDUyLjIzODc3XSwgWzE0MC41OTc0MiwgNTEuMjM5NjddLCBbMTQwLjUxMzA4LCA1MC4wNDU1M10sIFsxNDAuMDYxOTMsIDQ4LjQ0NjcxXSwgWzEzOC41NTQ3MiwgNDYuOTk5NjVdLCBbMTM4LjIxOTcxLCA0Ni4zMDc5NV0sIFsxMzYuODYyMzIsIDQ1LjE0MzVdLCBbMTM1LjUxNTM1LCA0My45ODldLCBbMTM0Ljg2OTM5LCA0My4zOTgyMV0sIFsxMzMuNTM2ODcsIDQyLjgxMTQ3XSwgWzEzMi45MDYyNywgNDIuNzk4NDldLCBbMTMyLjI3ODA3LCA0My4yODQ1Nl0sIFsxMzAuOTM1ODcsIDQyLjU1Mjc0XSwgWzEzMC43OCwgNDIuMjJdLCBbMTMwLjY0LCA0Mi4zOTVdLCBbMTMwLjYzMzg2NiwgNDIuOTAzMDE1XSwgWzEzMS4xNDQ2ODgsIDQyLjkyOTk5XSwgWzEzMS4yODg1NTUsIDQ0LjExMTUyXSwgWzEzMS4wMjUxOSwgNDQuOTY3OTZdLCBbMTMxLjg4MzQ1NCwgNDUuMzIxMTYyXSwgWzEzMy4wOTcxMiwgNDUuMTQ0MDldLCBbMTMzLjc2OTY0NCwgNDYuMTE2OTI3XSwgWzEzNC4xMTIzNSwgNDcuMjEyNDhdLCBbMTM0LjUwMDgxLCA0Ny41Nzg0NV0sIFsxMzUuMDI2MzExLCA0OC40NzgyM10sIFsxMzMuMzczNTk2LCA0OC4xODM0NDJdLCBbMTMyLjUwNjY5LCA0Ny43ODg5Nl0sIFsxMzAuOTg3MjYsIDQ3Ljc5MDEzXSwgWzEzMC41ODIyOTMsIDQ4LjcyOTY4N10sIFsxMjkuMzk3ODE4LCA0OS40NDA2XSwgWzEyNy42NTc0LCA0OS43NjAyN10sIFsxMjcuMjg3NDU2LCA1MC43Mzk3OTddLCBbMTI2LjkzOTE1NywgNTEuMzUzODk0XSwgWzEyNi41NjQzOTksIDUxLjc4NDI1NV0sIFsxMjUuOTQ2MzQ5LCA1Mi43OTI3OTldLCBbMTI1LjA2ODIxMSwgNTMuMTYxMDQ1XSwgWzEyMy41NzE0NywgNTMuNDU4OF0sIFsxMjIuMjQ1NzQ4LCA1My40MzE3MjZdLCBbMTIxLjAwMzA4NSwgNTMuMjUxNDAxXSwgWzEyMC4xNzcwODksIDUyLjc1Mzg4Nl0sIFsxMjAuNzI1Nzg5LCA1Mi41MTYyMjZdLCBbMTIwLjczODIsIDUxLjk2NDExXSwgWzEyMC4xODIwOCwgNTEuNjQzNTVdLCBbMTE5LjI3OTM5LCA1MC41ODI5Ml0sIFsxMTkuMjg4NDYxLCA1MC4xNDI4ODNdLCBbMTE3Ljg3OTI0NCwgNDkuNTEwOTgzXSwgWzExNi42Nzg4MDEsIDQ5Ljg4ODUzMV0sIFsxMTUuNDg1Njk1LCA0OS44MDUxNzddLCBbMTE0Ljk2MjExLCA1MC4xNDAyNDddLCBbMTE0LjM2MjQ1NiwgNTAuMjQ4MzAzXSwgWzExMi44OTc3NCwgNDkuNTQzNTY1XSwgWzExMS41ODEyMzEsIDQ5LjM3Nzk2OF0sIFsxMTAuNjYyMDExLCA0OS4xMzAxMjhdLCBbMTA5LjQwMjQ0OSwgNDkuMjkyOTYxXSwgWzEwOC40NzUxNjcsIDQ5LjI4MjU0OF0sIFsxMDcuODY4MTc2LCA0OS43OTM3MDVdLCBbMTA2Ljg4ODgwNCwgNTAuMjc0Mjk2XSwgWzEwNS44ODY1OTEsIDUwLjQwNjAxOV0sIFsxMDQuNjIxNTgsIDUwLjI3NTMyXSwgWzEwMy42NzY1NDUsIDUwLjA4OTk2Nl0sIFsxMDIuMjU1ODksIDUwLjUxMDU2XSwgWzEwMi4wNjUyMSwgNTEuMjU5OTFdLCBbMTAwLjg4OTQ4LCA1MS41MTY4NTZdLCBbOTkuOTgxNzMyLCA1MS42MzQwMDZdLCBbOTguODYxNDkxLCA1Mi4wNDczNjZdLCBbOTcuODI1NzQsIDUxLjAxMDk5NV0sIFs5OC4yMzE3NjIsIDUwLjQyMjQwMV0sIFs5Ny4yNTk3NiwgNDkuNzI2MDVdLCBbOTUuODE0MDIsIDQ5Ljk3NzQ2XSwgWzk0LjgxNTk0OSwgNTAuMDEzNDMzXSwgWzk0LjE0NzU2NiwgNTAuNDgwNTM3XSwgWzkzLjEwNDIxLCA1MC40OTUyOV0sIFs5Mi4yMzQ3MTIsIDUwLjgwMjE3MV0sIFs5MC43MTM2NjcsIDUwLjMzMTgxMl0sIFs4OC44MDU1NjcsIDQ5LjQ3MDUyMV0sIFs4Ny43NTEyNjQsIDQ5LjI5NzE5OF0sIFs4Ny4zNTk5NywgNDkuMjE0OTgxXSwgWzg2LjgyOTM1NywgNDkuODI2Njc1XSwgWzg1LjU0MTI3LCA0OS42OTI4NTldLCBbODUuMTE1NTYsIDUwLjExNzMwM10sIFs4NC40MTYzNzcsIDUwLjMxMTRdLCBbODMuOTM1MTE1LCA1MC44ODkyNDZdLCBbODMuMzgzMDA0LCA1MS4wNjkxODNdLCBbODEuOTQ1OTg2LCA1MC44MTIxOTZdLCBbODAuNTY4NDQ3LCA1MS4zODgzMzZdLCBbODAuMDM1NTYsIDUwLjg2NDc1MV0sIFs3Ny44MDA5MTYsIDUzLjQwNDQxNV0sIFs3Ni41MjUxNzksIDU0LjE3NzAwM10sIFs3Ni44OTExLCA1NC40OTA1MjRdLCBbNzQuMzg0ODIsIDUzLjU0Njg1XSwgWzczLjQyNTY3OSwgNTMuNDg5ODFdLCBbNzMuNTA4NTE2LCA1NC4wMzU2MTddLCBbNzIuMjI0MTUsIDU0LjM3NjY1NV0sIFs3MS4xODAxMzEsIDU0LjEzMzI4NV0sIFs3MC44NjUyNjcsIDU1LjE2OTczNF0sIFs2OS4wNjgxNjcsIDU1LjM4NTI1XSwgWzY4LjE2OTEsIDU0Ljk3MDM5Ml0sIFs2NS42NjY4NywgNTQuNjAxMjVdLCBbNjUuMTc4NTM0LCA1NC4zNTQyMjhdLCBbNjEuNDM2NiwgNTQuMDA2MjVdLCBbNjAuOTc4MDY2LCA1My42NjQ5OTNdLCBbNjEuNjk5OTg2LCA1Mi45Nzk5OTZdLCBbNjAuNzM5OTkzLCA1Mi43MTk5ODZdLCBbNjAuOTI3MjY5LCA1Mi40NDc1NDhdLCBbNTkuOTY3NTM0LCA1MS45NjA0Ml0sIFs2MS41ODgwMDMsIDUxLjI3MjY1OV0sIFs2MS4zMzc0MjQsIDUwLjc5OTA3XSwgWzU5LjkzMjgwNywgNTAuODQyMTk0XSwgWzU5LjY0MjI4MiwgNTAuNTQ1NDQyXSwgWzU4LjM2MzMyLCA1MS4wNjM2NF0sIFs1Ni43Nzc5OCwgNTEuMDQzNTVdLCBbNTUuNzE2OTQsIDUwLjYyMTcxXSwgWzU0LjUzMjg3OCwgNTEuMDI2MjRdLCBbNTIuMzI4NzI0LCA1MS43MTg2NTJdLCBbNTAuNzY2NjQ4LCA1MS42OTI3NjJdLCBbNDguNzAyMzgyLCA1MC42MDUxMjhdLCBbNDguNTc3ODQxLCA0OS44NzQ3Nl0sIFs0Ny41NDk0OCwgNTAuNDU0Njk4XSwgWzQ2Ljc1MTU5NiwgNDkuMzU2MDA2XSwgWzQ3LjA0MzY3MiwgNDkuMTUyMDM5XSwgWzQ2LjQ2NjQ0NiwgNDguMzk0MTUyXSwgWzQ3LjMxNTI0LCA0Ny43MTU4NV0sIFs0OC4wNTcyNSwgNDcuNzQzNzddLCBbNDguNjk0NzM0LCA0Ny4wNzU2MjhdLCBbNDguNTkzMjUsIDQ2LjU2MTA0XSwgWzQ5LjEwMTE2LCA0Ni4zOTkzM10sIFs0OC42NDU0MSwgNDUuODA2MjldLCBbNDcuNjc1OTEsIDQ1LjY0MTQ5XSwgWzQ2LjY4MjAxLCA0NC42MDkyXSwgWzQ3LjU5MDk0LCA0My42NjAxNl0sIFs0Ny40OTI1MiwgNDIuOTg2NThdLCBbNDguNTg0MzcsIDQxLjgwODg4XSwgWzQ3Ljk4NzI4MywgNDEuNDA1ODE5XSwgWzQ3LjgxNTY2NiwgNDEuMTUxNDE2XSwgWzQ3LjM3MzMxNSwgNDEuMjE5NzMyXSwgWzQ2LjY4NjA3MSwgNDEuODI3MTM3XSwgWzQ2LjQwNDk1MSwgNDEuODYwNjc1XSwgWzQ1Ljc3NjQsIDQyLjA5MjQ0XSwgWzQ1LjQ3MDI3OSwgNDIuNTAyNzgxXSwgWzQ0LjUzNzYyMywgNDIuNzExOTkzXSwgWzQzLjkzMTIxLCA0Mi41NTQ5Nl0sIFs0My43NTU5OSwgNDIuNzQwODNdLCBbNDIuMzk0NCwgNDMuMjIwM10sIFs0MC45MjIxOSwgNDMuMzgyMTVdLCBbNDAuMDc2OTY1LCA0My41NTMxMDRdLCBbMzkuOTU1MDA5LCA0My40MzQ5OThdLCBbMzguNjgsIDQ0LjI4XSwgWzM3LjUzOTEyLCA0NC42NTcyMV0sIFszNi42NzU0NiwgNDUuMjQ0NjldLCBbMzcuNDAzMTcsIDQ1LjQwNDUxXSwgWzM4LjIzMjk1LCA0Ni4yNDA4N10sIFszNy42NzM3MiwgNDYuNjM2NTddLCBbMzkuMTQ3NjcsIDQ3LjA0NDc1XSwgWzM5LjEyMTIsIDQ3LjI2MzM2XSwgWzM4LjIyMzUzOCwgNDcuMTAyMTldLCBbMzguMjU1MTEyLCA0Ny41NDY0XSwgWzM4Ljc3MDU3LCA0Ny44MjU2Ml0sIFszOS43MzgyNzgsIDQ3Ljg5ODkzN10sIFszOS44OTU2MiwgNDguMjMyNDFdLCBbMzkuNjc0NjUsIDQ4Ljc4MzgyXSwgWzQwLjA4MDc4OSwgNDkuMzA3NDNdLCBbNDAuMDY5MDQsIDQ5LjYwMTA1XSwgWzM4LjU5NDk4OCwgNDkuOTI2NDYyXSwgWzM4LjAxMDYzMSwgNDkuOTE1NjYyXSwgWzM3LjM5MzQ2LCA1MC4zODM5NTNdLCBbMzYuNjI2MTY4LCA1MC4yMjU1OTFdLCBbMzUuMzU2MTE2LCA1MC41NzcxOTddLCBbMzUuMzc3OTEsIDUwLjc3Mzk0XSwgWzM1LjAyMjE4MywgNTEuMjA3NTcyXSwgWzM0LjIyNDgxNiwgNTEuMjU1OTkzXSwgWzM0LjE0MTk3OCwgNTEuNTY2NDEzXSwgWzM0LjM5MTczMSwgNTEuNzY4ODgyXSwgWzMzLjc1MjcsIDUyLjMzNTA3NV0sIFszMi43MTU3NjEsIDUyLjIzODQ2NV0sIFszMi40MTIwNTgsIDUyLjI4ODY5NV0sIFszMi4xNTk0NCwgNTIuMDYxMjVdLCBbMzEuNzg1OTcsIDUyLjEwMTY4XSwgWzMxLjU0MDAxOCwgNTIuNzQyMDUyXSwgWzMxLjMwNTIwMSwgNTMuMDczOTk2XSwgWzMxLjQ5NzY0LCA1My4xNjc0M10sIFszMi4zMDQ1MTksIDUzLjEzMjcyNl0sIFszMi42OTM2NDMsIDUzLjM1MTQyMV0sIFszMi40MDU1OTksIDUzLjYxODA0NV0sIFszMS43MzEyNzMsIDUzLjc5NDAyOV0sIFszMS43OTE0MjQsIDUzLjk3NDYzOV0sIFszMS4zODQ0NzIsIDU0LjE1NzA1Nl0sIFszMC43NTc1MzQsIDU0LjgxMTc3MV0sIFszMC45NzE4MzYsIDU1LjA4MTU0OF0sIFszMC44NzM5MDksIDU1LjU1MDk3Nl0sIFsyOS44OTYyOTQsIDU1Ljc4OTQ2M10sIFsyOS4zNzE1NzIsIDU1LjY3MDA5MV0sIFsyOS4yMjk1MTMsIDU1LjkxODM0NF0sIFsyOC4xNzY3MDksIDU2LjE2OTEzXSwgWzI3Ljg1NTI4MiwgNTYuNzU5MzI2XSwgWzI3Ljc3MDAxNiwgNTcuMjQ0MjU4XSwgWzI3LjI4ODE4NSwgNTcuNDc0NTI4XSwgWzI3LjcxNjY4NiwgNTcuNzkxODk5XSwgWzI3LjQyMDE1LCA1OC43MjQ1N10sIFsyOC4xMzE2OTksIDU5LjMwMDgyNV0sIFsyNy45ODExMiwgNTkuNDc1MzddLCBbMjkuMTE3NywgNjAuMDI4MDVdLCBbMjguMDcsIDYwLjUwMzUyXSwgWzMwLjIxMTEwNywgNjEuNzgwMDI4XSwgWzMxLjEzOTk5MSwgNjIuMzU3NjkzXSwgWzMxLjUxNjA5MiwgNjIuODY3Njg3XSwgWzMwLjAzNTg3MiwgNjMuNTUyODE0XSwgWzMwLjQ0NDY4NSwgNjQuMjA0NDUzXSwgWzI5LjU0NDQzLCA2NC45NDg2NzJdLCBbMzAuMjE3NjUsIDY1LjgwNTk4XSwgWzI5LjA1NDU4OSwgNjYuOTQ0Mjg2XSwgWzI5Ljk3NzQyNiwgNjcuNjk4Mjk3XSwgWzI4LjQ0NTk0NCwgNjguMzY0NjEzXSwgWzI4LjU5MTkzLCA2OS4wNjQ3NzddLCBbMjkuMzk5NTUsIDY5LjE1NjkyXSwgWzMxLjEwMTA4LCA2OS41NTgxMV0sIFszMi4xMzI3MiwgNjkuOTA1OTVdLCBbMzMuNzc1NDcsIDY5LjMwMTQyXSwgWzM2LjUxMzk2LCA2OS4wNjM0Ml0sIFs0MC4yOTIzNCwgNjcuOTMyNF0sIFs0MS4wNTk4NywgNjcuNDU3MTNdLCBbNDEuMTI1OTUsIDY2Ljc5MTU4XSwgWzQwLjAxNTgzLCA2Ni4yNjYxOF0sIFszOC4zODI5NSwgNjUuOTk5NTNdLCBbMzMuOTE4NzEsIDY2Ljc1OTYxXSwgWzMzLjE4NDQ0LCA2Ni42MzI1M10sIFszNC44MTQ3NywgNjUuOTAwMTVdLCBbMzQuODc4NTc0LCA2NS40MzYyMTNdLCBbMzQuOTQzOTEsIDY0LjQxNDM3XSwgWzM2LjIzMTI5LCA2NC4xMDk0NV0sIFszNy4wMTI3MywgNjMuODQ5ODNdLCBbMzcuMTQxOTcsIDY0LjMzNDcxXSwgWzM2LjUzOTU3OSwgNjQuNzY0NDZdLCBbMzcuMTc2MDQsIDY1LjE0MzIyXSwgWzM5LjU5MzQ1LCA2NC41MjA3OV0sIFs0MC40MzU2LCA2NC43NjQ0Nl0sIFszOS43NjI2LCA2NS40OTY4Ml0sIFs0Mi4wOTMwOSwgNjYuNDc2MjNdLCBbNDMuMDE2MDQsIDY2LjQxODU4XSwgWzQzLjk0OTc1LCA2Ni4wNjkwOF0sIFs0NC41MzIyNiwgNjYuNzU2MzRdLCBbNDMuNjk4MzksIDY3LjM1MjQ1XSwgWzQ0LjE4Nzk1LCA2Ny45NTA1MV0sIFs0My40NTI4MiwgNjguNTcwNzldLCBbNDYuMjUsIDY4LjI1XSwgWzQ2LjgyMTM0LCA2Ny42ODk5N10sIFs0NS41NTUxNywgNjcuNTY2NTJdLCBbNDUuNTYyMDIsIDY3LjAxMDA1XSwgWzQ2LjM0OTE1LCA2Ni42Njc2N10sIFs0Ny44OTQxNiwgNjYuODg0NTVdLCBbNDguMTM4NzYsIDY3LjUyMjM4XSwgWzUwLjIyNzY2LCA2Ny45OTg2N10sIFs1My43MTc0MywgNjguODU3MzhdLCBbNTQuNDcxNzEsIDY4LjgwODE1XSwgWzUzLjQ4NTgyLCA2OC4yMDEzMV0sIFs1NC43MjYyOCwgNjguMDk3MDJdLCBbNTUuNDQyNjgsIDY4LjQzODY2XSwgWzU3LjMxNzAyLCA2OC40NjYyOF0sIFs1OC44MDIsIDY4Ljg4MDgyXSwgWzU5Ljk0MTQyLCA2OC4yNzg0NF0sIFs2MS4wNzc4NCwgNjguOTQwNjldLCBbNjAuMDMsIDY5LjUyXSwgWzYwLjU1LCA2OS44NV0sIFs2My41MDQsIDY5LjU0NzM5XSwgWzY0Ljg4ODExNSwgNjkuMjM0ODM1XSwgWzY4LjUxMjE2LCA2OC4wOTIzM10sIFs2OS4xODA2OCwgNjguNjE1NjNdLCBbNjguMTY0NDQsIDY5LjE0NDM2XSwgWzY4LjEzNTIyLCA2OS4zNTY0OV0sIFs2Ni45MzAwOCwgNjkuNDU0NjFdLCBbNjcuMjU5NzYsIDY5LjkyODczXSwgWzY2LjcyNDkyLCA3MC43MDg4OV0sIFs2Ni42OTQ2NiwgNzEuMDI4OTddLCBbNjguNTQwMDYsIDcxLjkzNDVdLCBbNjkuMTk2MzYsIDcyLjg0MzM2XSwgWzY5Ljk0LCA3My4wNF0sIFs3Mi41ODc1NCwgNzIuNzc2MjldLCBbNzIuNzk2MDMsIDcyLjIyMDA2XSwgWzcxLjg0ODExLCA3MS40MDg5OF0sIFs3Mi40NzAxMSwgNzEuMDkwMTldLCBbNzIuNzkxODgsIDcwLjM5MTE0XSwgWzcyLjU2NDcsIDY5LjAyMDg1XSwgWzczLjY2Nzg3LCA2OC40MDc5XSwgWzczLjIzODcsIDY3Ljc0MDRdLCBbNzEuMjgsIDY2LjMyXSwgWzcyLjQyMzAxLCA2Ni4xNzI2N10sIFs3Mi44MjA3NywgNjYuNTMyNjddLCBbNzMuOTIwOTksIDY2Ljc4OTQ2XSwgWzc0LjE4NjUxLCA2Ny4yODQyOV0sIFs3NS4wNTIsIDY3Ljc2MDQ3XSwgWzc0LjQ2OTI2LCA2OC4zMjg5OV0sIFs3NC45MzU4NCwgNjguOTg5MThdLCBbNzMuODQyMzYsIDY5LjA3MTQ2XSwgWzczLjYwMTg3LCA2OS42Mjc2M10sIFs3NC4zOTk4LCA3MC42MzE3NV0sIFs3My4xMDExLCA3MS40NDcxN10sIFs3NC44OTA4MiwgNzIuMTIxMTldLCBbNzQuNjU5MjYsIDcyLjgzMjI3XSwgWzc1LjE1ODAxLCA3Mi44NTQ5N10sIFs3NS42ODM1MSwgNzIuMzAwNTZdLCBbNzUuMjg4OTgsIDcxLjMzNTU2XSwgWzc2LjM1OTExLCA3MS4xNTI4N10sIFs3NS45MDMxMywgNzEuODc0MDFdLCBbNzcuNTc2NjUsIDcyLjI2NzE3XSwgWzc5LjY1MjAyLCA3Mi4zMjAxMV0sIFs4MS41LCA3MS43NV0sIFs4MC42MTA3MSwgNzIuNTgyODVdLCBbODAuNTExMDksIDczLjY0ODJdLCBbODIuMjUsIDczLjg1XSwgWzg0LjY1NTI2LCA3My44MDU5MV0sIFs4Ni44MjIzLCA3My45MzY4OF0sIFs4Ni4wMDk1NiwgNzQuNDU5NjddLCBbODcuMTY2ODIsIDc1LjExNjQzXSwgWzg4LjMxNTcxLCA3NS4xNDM5M10sIFs5MC4yNiwgNzUuNjRdLCBbOTIuOTAwNTgsIDc1Ljc3MzMzXSwgWzkzLjIzNDIxLCA3Ni4wNDcyXSwgWzk1Ljg2LCA3Ni4xNF0sIFs5Ni42NzgyMSwgNzUuOTE1NDhdLCBbOTguOTIyNTQsIDc2LjQ0Njg5XSwgWzEwMC43NTk2NywgNzYuNDMwMjhdLCBbMTAxLjAzNTMyLCA3Ni44NjE4OV0sIFsxMDEuOTkwODQsIDc3LjI4NzU0XSwgWzEwNC4zNTE2LCA3Ny42OTc5Ml0sIFsxMDYuMDY2NjQsIDc3LjM3Mzg5XSwgWzEwNC43MDUsIDc3LjEyNzRdLCBbMTA2Ljk3MDEzLCA3Ni45NzQxOV1dXSwgW1tbMTA1LjA3NTQ3LCA3OC4zMDY4OV0sIFs5OS40MzgxNCwgNzcuOTIxXSwgWzEwMS4yNjQ5LCA3OS4yMzM5OV0sIFsxMDIuMDg2MzUsIDc5LjM0NjQxXSwgWzEwMi44Mzc4MTUsIDc5LjI4MTI5XSwgWzEwNS4zNzI0MywgNzguNzEzMzRdLCBbMTA1LjA3NTQ3LCA3OC4zMDY4OV1dXSwgW1tbNTEuMTM2MTg3LCA4MC41NDcyOF0sIFs0OS43OTM2ODUsIDgwLjQxNTQyOF0sIFs0OC44OTQ0MTEsIDgwLjMzOTU2N10sIFs0OC43NTQ5MzcsIDgwLjE3NTQ2OF0sIFs0Ny41ODYxMTksIDgwLjAxMDE4MV0sIFs0Ni41MDI4MjYsIDgwLjI0NzI0N10sIFs0Ny4wNzI0NTUsIDgwLjU1OTQyNF0sIFs0NC44NDY5NTgsIDgwLjU4OTgxXSwgWzQ2Ljc5OTEzOSwgODAuNzcxOTE4XSwgWzQ4LjMxODQ3NywgODAuNzg0MDFdLCBbNDguNTIyODA2LCA4MC41MTQ1NjldLCBbNDkuMDk3MTksIDgwLjc1Mzk4Nl0sIFs1MC4wMzk3NjgsIDgwLjkxODg4NV0sIFs1MS41MjI5MzMsIDgwLjY5OTcyNl0sIFs1MS4xMzYxODcsIDgwLjU0NzI4XV1dLCBbW1s5OS45Mzk3NiwgNzguODgwOTRdLCBbOTcuNzU3OTQsIDc4Ljc1NjJdLCBbOTQuOTcyNTksIDc5LjA0NDc0NV0sIFs5My4zMTI4OCwgNzkuNDI2NV0sIFs5Mi41NDU0LCA4MC4xNDM3OV0sIFs5MS4xODEwNywgODAuMzQxNDZdLCBbOTMuNzc3NjYsIDgxLjAyNDZdLCBbOTUuOTQwODk1LCA4MS4yNTA0XSwgWzk3Ljg4Mzg1LCA4MC43NDY5NzVdLCBbMTAwLjE4NjY1NSwgNzkuNzgwMTM1XSwgWzk5LjkzOTc2LCA3OC44ODA5NF1dXV0sICJ0eXBlIjogIk11bHRpUG9seWdvbiJ9LCAiaWQiOiAiUlVTIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJSdXNzaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzMwLjQxOTEwNSwgLTEuMTM0NjU5XSwgWzMwLjgxNjEzNSwgLTEuNjk4OTE0XSwgWzMwLjc1ODMwOSwgLTIuMjg3MjVdLCBbMzAuNDY5Njk2LCAtMi40MTM4NThdLCBbMjkuOTM4MzU5LCAtMi4zNDg0ODddLCBbMjkuNjMyMTc2LCAtMi45MTc4NThdLCBbMjkuMDI0OTI2LCAtMi44MzkyNThdLCBbMjkuMTE3NDc5LCAtMi4yOTIyMTFdLCBbMjkuMjU0ODM1LCAtMi4yMTUxMV0sIFsyOS4yOTE4ODcsIC0xLjYyMDA1Nl0sIFsyOS41Nzk0NjYsIC0xLjM0MTMxM10sIFsyOS44MjE1MTksIC0xLjQ0MzMyMl0sIFszMC40MTkxMDUsIC0xLjEzNDY1OV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiUldBIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJSd2FuZGEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy04Ljc5NDg4NCwgMjcuMTIwNjk2XSwgWy04LjgxNzgyOCwgMjcuNjU2NDI2XSwgWy04LjY2NTU5LCAyNy42NTY0MjZdLCBbLTguNjY1MTI0LCAyNy41ODk0NzldLCBbLTguNjg0NCwgMjcuMzk1NzQ0XSwgWy04LjY4NzI5NCwgMjUuODgxMDU2XSwgWy0xMS45Njk0MTksIDI1LjkzMzM1M10sIFstMTEuOTM3MjI0LCAyMy4zNzQ1OTRdLCBbLTEyLjg3NDIyMiwgMjMuMjg0ODMyXSwgWy0xMy4xMTg3NTQsIDIyLjc3MTIyXSwgWy0xMi45MjkxMDIsIDIxLjMyNzA3MV0sIFstMTYuODQ1MTk0LCAyMS4zMzMzMjNdLCBbLTE3LjA2MzQyMywgMjAuOTk5NzUyXSwgWy0xNy4wMjA0MjgsIDIxLjQyMjMxXSwgWy0xNy4wMDI5NjIsIDIxLjQyMDczNF0sIFstMTQuNzUwOTU1LCAyMS41MDA2XSwgWy0xNC42MzA4MzMsIDIxLjg2MDk0XSwgWy0xNC4yMjExNjgsIDIyLjMxMDE2M10sIFstMTMuODkxMTEsIDIzLjY5MTAwOV0sIFstMTIuNTAwOTYzLCAyNC43NzAxMTZdLCBbLTEyLjAzMDc1OSwgMjYuMDMwODY2XSwgWy0xMS43MTgyMiwgMjYuMTA0MDkyXSwgWy0xMS4zOTI1NTUsIDI2Ljg4MzQyNF0sIFstMTAuNTUxMjYzLCAyNi45OTA4MDhdLCBbLTEwLjE4OTQyNCwgMjYuODYwOTQ1XSwgWy05LjczNTM0MywgMjYuODYwOTQ1XSwgWy05LjQxMzAzNywgMjcuMDg4NDc2XSwgWy04Ljc5NDg4NCwgMjcuMTIwNjk2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICItOTkiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIldlc3Rlcm4gU2FoYXJhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s0Mi43NzkzMzIsIDE2LjM0Nzg5MV0sIFs0Mi42NDk1NzMsIDE2Ljc3NDYzNV0sIFs0Mi4zNDc5ODksIDE3LjA3NTgwNl0sIFs0Mi4yNzA4ODgsIDE3LjQ3NDcyMl0sIFs0MS43NTQzODIsIDE3LjgzMzA0Nl0sIFs0MS4yMjEzOTEsIDE4LjY3MTZdLCBbNDAuOTM5MzQxLCAxOS40ODY0ODVdLCBbNDAuMjQ3NjUyLCAyMC4xNzQ2MzVdLCBbMzkuODAxNjg1LCAyMC4zMzg4NjJdLCBbMzkuMTM5Mzk5LCAyMS4yOTE5MDVdLCBbMzkuMDIzNjk2LCAyMS45ODY4NzVdLCBbMzkuMDY2MzI5LCAyMi41Nzk2NTZdLCBbMzguNDkyNzcyLCAyMy42ODg0NTFdLCBbMzguMDIzODYsIDI0LjA3ODY4Nl0sIFszNy40ODM2MzUsIDI0LjI4NTQ5NV0sIFszNy4xNTQ4MTgsIDI0Ljg1ODQ4M10sIFszNy4yMDk0OTEsIDI1LjA4NDU0Ml0sIFszNi45MzE2MjcsIDI1LjYwMjk1OV0sIFszNi42Mzk2MDQsIDI1LjgyNjIyOF0sIFszNi4yNDkxMzcsIDI2LjU3MDEzNl0sIFszNS42NDAxODIsIDI3LjM3NjUyXSwgWzM1LjEzMDE4NywgMjguMDYzMzUyXSwgWzM0LjYzMjMzNiwgMjguMDU4NTQ2XSwgWzM0Ljc4Nzc3OSwgMjguNjA3NDI3XSwgWzM0LjgzMjIyLCAyOC45NTc0ODNdLCBbMzQuOTU2MDM3LCAyOS4zNTY1NTVdLCBbMzYuMDY4OTQxLCAyOS4xOTc0OTVdLCBbMzYuNTAxMjE0LCAyOS41MDUyNTRdLCBbMzYuNzQwNTI4LCAyOS44NjUyODNdLCBbMzcuNTAzNTgyLCAzMC4wMDM3NzZdLCBbMzcuNjY4MTIsIDMwLjMzODY2NV0sIFszNy45OTg4NDksIDMwLjUwODVdLCBbMzcuMDAyMTY2LCAzMS41MDg0MTNdLCBbMzkuMDA0ODg2LCAzMi4wMTAyMTddLCBbMzkuMTk1NDY4LCAzMi4xNjEwMDldLCBbNDAuMzk5OTk0LCAzMS44ODk5OTJdLCBbNDEuODg5OTgxLCAzMS4xOTAwMDldLCBbNDQuNzA5NDk5LCAyOS4xNzg4OTFdLCBbNDYuNTY4NzEzLCAyOS4wOTkwMjVdLCBbNDcuNDU5ODIyLCAyOS4wMDI1MTldLCBbNDcuNzA4ODUxLCAyOC41MjYwNjNdLCBbNDguNDE2MDk0LCAyOC41NTIwMDRdLCBbNDguODA3NTk1LCAyNy42ODk2MjhdLCBbNDkuMjk5NTU0LCAyNy40NjEyMThdLCBbNDkuNDcwOTE0LCAyNy4xMDk5OTldLCBbNTAuMTUyNDIyLCAyNi42ODk2NjNdLCBbNTAuMjEyOTM1LCAyNi4yNzcwMjddLCBbNTAuMTEzMzAzLCAyNS45NDM5NzJdLCBbNTAuMjM5ODU5LCAyNS42MDgwNV0sIFs1MC41MjczODcsIDI1LjMyNzgwOF0sIFs1MC42NjA1NTcsIDI0Ljk5OTg5Nl0sIFs1MC44MTAxMDgsIDI0Ljc1NDc0M10sIFs1MS4xMTI0MTUsIDI0LjU1NjMzMV0sIFs1MS4zODk2MDgsIDI0LjYyNzM4Nl0sIFs1MS41Nzk1MTksIDI0LjI0NTQ5N10sIFs1MS42MTc3MDgsIDI0LjAxNDIxOV0sIFs1Mi4wMDA3MzMsIDIzLjAwMTE1NF0sIFs1NS4wMDY4MDMsIDIyLjQ5Njk0OF0sIFs1NS4yMDgzNDEsIDIyLjcwODMzXSwgWzU1LjY2NjY1OSwgMjIuMDAwMDAxXSwgWzU0Ljk5OTk4MiwgMTkuOTk5OTk0XSwgWzUyLjAwMDAxLCAxOS4wMDAwMDNdLCBbNDkuMTE2NjcyLCAxOC42MTY2NjhdLCBbNDguMTgzMzQ0LCAxOC4xNjY2NjldLCBbNDcuNDY2Njk1LCAxNy4xMTY2ODJdLCBbNDcuMDAwMDA1LCAxNi45NDk5OTldLCBbNDYuNzQ5OTk0LCAxNy4yODMzMzhdLCBbNDYuMzY2NjU5LCAxNy4yMzMzMTVdLCBbNDUuMzk5OTk5LCAxNy4zMzMzMzVdLCBbNDUuMjE2NjUxLCAxNy40MzMzMjldLCBbNDQuMDYyNjEzLCAxNy40MTAzNTldLCBbNDMuNzkxNTE5LCAxNy4zMTk5NzddLCBbNDMuMzgwNzk0LCAxNy41Nzk5ODddLCBbNDMuMTE1Nzk4LCAxNy4wODg0NF0sIFs0My4yMTgzNzUsIDE2LjY2Njg5XSwgWzQyLjc3OTMzMiwgMTYuMzQ3ODkxXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJTQVUiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlNhdWRpIEFyYWJpYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMzMuOTYzMzkzLCA5LjQ2NDI4NV0sIFszMy44MjQ5NjMsIDkuNDg0MDYxXSwgWzMzLjg0MjEzMSwgOS45ODE5MTVdLCBbMzMuNzIxOTU5LCAxMC4zMjUyNjJdLCBbMzMuMjA2OTM4LCAxMC43MjAxMTJdLCBbMzMuMDg2NzY2LCAxMS40NDExNDFdLCBbMzMuMjA2OTM4LCAxMi4xNzkzMzhdLCBbMzIuNzQzNDE5LCAxMi4yNDgwMDhdLCBbMzIuNjc0NzUsIDEyLjAyNDgzMl0sIFszMi4wNzM4OTIsIDExLjk3MzMzXSwgWzMyLjMxNDIzNSwgMTEuNjgxNDg0XSwgWzMyLjQwMDA3MiwgMTEuMDgwNjI2XSwgWzMxLjg1MDcxNiwgMTAuNTMxMjcxXSwgWzMxLjM1Mjg2MiwgOS44MTAyNDFdLCBbMzAuODM3ODQxLCA5LjcwNzIzN10sIFsyOS45OTY2MzksIDEwLjI5MDkyN10sIFsyOS42MTg5NTcsIDEwLjA4NDkxOV0sIFsyOS41MTU5NTMsIDkuNzkzMDc0XSwgWzI5LjAwMDkzMiwgOS42MDQyMzJdLCBbMjguOTY2NTk3LCA5LjM5ODIyNF0sIFsyNy45NzA4OSwgOS4zOTgyMjRdLCBbMjcuODMzNTUxLCA5LjYwNDIzMl0sIFsyNy4xMTI1MjEsIDkuNjM4NTY3XSwgWzI2Ljc1MjAwNiwgOS40NjY4OTNdLCBbMjYuNDc3MzI4LCA5LjU1MjczXSwgWzI1Ljk2MjMwNywgMTAuMTM2NDIxXSwgWzI1Ljc5MDYzMywgMTAuNDExMDk5XSwgWzI1LjA2OTYwNCwgMTAuMjczNzZdLCBbMjQuNzk0OTI2LCA5LjgxMDI0MV0sIFsyNC41Mzc0MTUsIDguOTE3NTM4XSwgWzI0LjE5NDA2OCwgOC43Mjg2OTZdLCBbMjMuODg2OTgsIDguNjE5NzNdLCBbMjMuODA1ODEzLCA4LjY2NjMxOV0sIFsyMy40NTkwMTMsIDguOTU0Mjg2XSwgWzIzLjM5NDc3OSwgOS4yNjUwNjhdLCBbMjMuNTU3MjUsIDkuNjgxMjE4XSwgWzIzLjU1NDMwNCwgMTAuMDg5MjU1XSwgWzIyLjk3NzU0NCwgMTAuNzE0NDYzXSwgWzIyLjg2NDE2NSwgMTEuMTQyMzk1XSwgWzIyLjg3NjIyLCAxMS4zODQ2MV0sIFsyMi41MDg2OSwgMTEuNjc5MzZdLCBbMjIuNDk3NjIsIDEyLjI2MDI0XSwgWzIyLjI4ODAxLCAxMi42NDYwNV0sIFsyMS45MzY4MSwgMTIuNTg4MThdLCBbMjIuMDM3NTksIDEyLjk1NTQ2XSwgWzIyLjI5NjU4LCAxMy4zNzIzMl0sIFsyMi4xODMyOSwgMTMuNzg2NDhdLCBbMjIuNTEyMDIsIDE0LjA5MzE4XSwgWzIyLjMwMzUxLCAxNC4zMjY4Ml0sIFsyMi41Njc5NSwgMTQuOTQ0MjldLCBbMjMuMDI0NTksIDE1LjY4MDcyXSwgWzIzLjg4Njg5LCAxNS42MTA4NF0sIFsyMy44Mzc2NiwgMTkuNTgwNDddLCBbMjMuODUsIDIwXSwgWzI1LCAyMC4wMDMwNF0sIFsyNSwgMjJdLCBbMjkuMDIsIDIyXSwgWzMyLjksIDIyXSwgWzM2Ljg2NjIzLCAyMl0sIFszNy4xODg3MiwgMjEuMDE4ODVdLCBbMzYuOTY5NDEsIDIwLjgzNzQ0XSwgWzM3LjExNDcsIDE5LjgwNzk2XSwgWzM3LjQ4MTc5LCAxOC42MTQwOV0sIFszNy44NjI3NiwgMTguMzY3ODZdLCBbMzguNDEwMDksIDE3Ljk5ODMwN10sIFszNy45MDQsIDE3LjQyNzU0XSwgWzM3LjE2NzQ3LCAxNy4yNjMxNF0sIFszNi44NTI1MywgMTYuOTU2NTVdLCBbMzYuNzUzODksIDE2LjI5MTg2XSwgWzM2LjMyMzIyLCAxNC44MjI0OV0sIFszNi40Mjk1MSwgMTQuNDIyMTFdLCBbMzYuMjcwMjIsIDEzLjU2MzMzXSwgWzM1Ljg2MzYzLCAxMi41NzgyOF0sIFszNS4yNjA0OSwgMTIuMDgyODZdLCBbMzQuODMxNjMsIDExLjMxODk2XSwgWzM0LjczMTE1LCAxMC45MTAxN10sIFszNC4yNTc0NSwgMTAuNjMwMDldLCBbMzMuOTYxNjIsIDkuNTgzNThdLCBbMzMuOTYzMzkzLCA5LjQ2NDI4NV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiU0ROIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJTdWRhbiIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMzMuOTYzMzkzLCA5LjQ2NDI4NV0sIFszMy45NzQ5OCwgOC42ODQ1Nl0sIFszMy44MjU1LCA4LjM3OTE2XSwgWzMzLjI5NDgsIDguMzU0NThdLCBbMzIuOTU0MTgsIDcuNzg0OTddLCBbMzMuNTY4MjksIDcuNzEzMzRdLCBbMzQuMDc1MSwgNy4yMjU5NV0sIFszNC4yNTAzMiwgNi44MjYwN10sIFszNC43MDcwMiwgNi41OTQyMl0sIFszNS4yOTgwMDcsIDUuNTA2XSwgWzM0LjYyMDE5NiwgNC44NDcxMjNdLCBbMzQuMDA1LCA0LjI0OTg4NV0sIFszMy4zOSwgMy43OV0sIFszMi42ODY0MiwgMy43OTIzMl0sIFszMS44ODE0NSwgMy41NTgyN10sIFszMS4yNDU1NiwgMy43ODE5XSwgWzMwLjgzMzg1LCAzLjUwOTE3XSwgWzI5Ljk1MzQ5LCA0LjE3MzddLCBbMjkuNzE1OTk1LCA0LjYwMDgwNV0sIFsyOS4xNTkwNzgsIDQuMzg5MjY3XSwgWzI4LjY5NjY3OCwgNC40NTUwNzddLCBbMjguNDI4OTk0LCA0LjI4NzE1NV0sIFsyNy45Nzk5NzcsIDQuNDA4NDEzXSwgWzI3LjM3NDIyNiwgNS4yMzM5NDRdLCBbMjcuMjEzNDA5LCA1LjU1MDk1M10sIFsyNi40NjU5MDksIDUuOTQ2NzE3XSwgWzI2LjIxMzQxOCwgNi41NDY2MDNdLCBbMjUuNzk2NjQ4LCA2Ljk3OTMxNl0sIFsyNS4xMjQxMzEsIDcuNTAwMDg1XSwgWzI1LjExNDkzMiwgNy44MjUxMDRdLCBbMjQuNTY3MzY5LCA4LjIyOTE4OF0sIFsyMy44ODY5OCwgOC42MTk3M10sIFsyNC4xOTQwNjgsIDguNzI4Njk2XSwgWzI0LjUzNzQxNSwgOC45MTc1MzhdLCBbMjQuNzk0OTI2LCA5LjgxMDI0MV0sIFsyNS4wNjk2MDQsIDEwLjI3Mzc2XSwgWzI1Ljc5MDYzMywgMTAuNDExMDk5XSwgWzI1Ljk2MjMwNywgMTAuMTM2NDIxXSwgWzI2LjQ3NzMyOCwgOS41NTI3M10sIFsyNi43NTIwMDYsIDkuNDY2ODkzXSwgWzI3LjExMjUyMSwgOS42Mzg1NjddLCBbMjcuODMzNTUxLCA5LjYwNDIzMl0sIFsyNy45NzA4OSwgOS4zOTgyMjRdLCBbMjguOTY2NTk3LCA5LjM5ODIyNF0sIFsyOS4wMDA5MzIsIDkuNjA0MjMyXSwgWzI5LjUxNTk1MywgOS43OTMwNzRdLCBbMjkuNjE4OTU3LCAxMC4wODQ5MTldLCBbMjkuOTk2NjM5LCAxMC4yOTA5MjddLCBbMzAuODM3ODQxLCA5LjcwNzIzN10sIFszMS4zNTI4NjIsIDkuODEwMjQxXSwgWzMxLjg1MDcxNiwgMTAuNTMxMjcxXSwgWzMyLjQwMDA3MiwgMTEuMDgwNjI2XSwgWzMyLjMxNDIzNSwgMTEuNjgxNDg0XSwgWzMyLjA3Mzg5MiwgMTEuOTczMzNdLCBbMzIuNjc0NzUsIDEyLjAyNDgzMl0sIFszMi43NDM0MTksIDEyLjI0ODAwOF0sIFszMy4yMDY5MzgsIDEyLjE3OTMzOF0sIFszMy4wODY3NjYsIDExLjQ0MTE0MV0sIFszMy4yMDY5MzgsIDEwLjcyMDExMl0sIFszMy43MjE5NTksIDEwLjMyNTI2Ml0sIFszMy44NDIxMzEsIDkuOTgxOTE1XSwgWzMzLjgyNDk2MywgOS40ODQwNjFdLCBbMzMuOTYzMzkzLCA5LjQ2NDI4NV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiU0RTIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJTb3V0aCBTdWRhbiIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy0xNi43MTM3MjksIDEzLjU5NDk1OV0sIFstMTcuMTI2MTA3LCAxNC4zNzM1MTZdLCBbLTE3LjYyNTA0MywgMTQuNzI5NTQxXSwgWy0xNy4xODUxNzMsIDE0LjkxOTQ3N10sIFstMTYuNzAwNzA2LCAxNS42MjE1MjddLCBbLTE2LjQ2MzA5OCwgMTYuMTM1MDM2XSwgWy0xNi4xMjA2OSwgMTYuNDU1NjYzXSwgWy0xNS42MjM2NjYsIDE2LjM2OTMzN10sIFstMTUuMTM1NzM3LCAxNi41ODcyODJdLCBbLTE0LjU3NzM0OCwgMTYuNTk4MjY0XSwgWy0xNC4wOTk1MjEsIDE2LjMwNDMwMl0sIFstMTMuNDM1NzM4LCAxNi4wMzkzODNdLCBbLTEyLjgzMDY1OCwgMTUuMzAzNjkyXSwgWy0xMi4xNzA3NSwgMTQuNjE2ODM0XSwgWy0xMi4xMjQ4ODcsIDEzLjk5NDcyN10sIFstMTEuOTI3NzE2LCAxMy40MjIwNzVdLCBbLTExLjU1MzM5OCwgMTMuMTQxMjE0XSwgWy0xMS40Njc4OTksIDEyLjc1NDUxOV0sIFstMTEuNTEzOTQzLCAxMi40NDI5ODhdLCBbLTExLjY1ODMwMSwgMTIuMzg2NTgzXSwgWy0xMi4yMDM1NjUsIDEyLjQ2NTY0OF0sIFstMTIuMjc4NTk5LCAxMi4zNTQ0NF0sIFstMTIuNDk5MDUxLCAxMi4zMzIwOV0sIFstMTMuMjE3ODE4LCAxMi41NzU4NzRdLCBbLTEzLjcwMDQ3NiwgMTIuNTg2MTgzXSwgWy0xNS41NDg0NzcsIDEyLjYyODE3XSwgWy0xNS44MTY1NzQsIDEyLjUxNTU2N10sIFstMTYuMTQ3NzE3LCAxMi41NDc3NjJdLCBbLTE2LjY3NzQ1MiwgMTIuMzg0ODUyXSwgWy0xNi44NDE1MjUsIDEzLjE1MTM5NF0sIFstMTUuOTMxMjk2LCAxMy4xMzAyODRdLCBbLTE1LjY5MTAwMSwgMTMuMjcwMzUzXSwgWy0xNS41MTE4MTMsIDEzLjI3ODU3XSwgWy0xNS4xNDExNjMsIDEzLjUwOTUxMl0sIFstMTQuNzEyMTk3LCAxMy4yOTgyMDddLCBbLTE0LjI3NzcwMiwgMTMuMjgwNTg1XSwgWy0xMy44NDQ5NjMsIDEzLjUwNTA0Ml0sIFstMTQuMDQ2OTkyLCAxMy43OTQwNjhdLCBbLTE0LjM3NjcxNCwgMTMuNjI1NjhdLCBbLTE0LjY4NzAzMSwgMTMuNjMwMzU3XSwgWy0xNS4wODE3MzUsIDEzLjg3NjQ5Ml0sIFstMTUuMzk4NzcsIDEzLjg2MDM2OV0sIFstMTUuNjI0NTk2LCAxMy42MjM1ODddLCBbLTE2LjcxMzcyOSwgMTMuNTk0OTU5XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJTRU4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlNlbmVnYWwiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1sxNjIuMTE5MDI1LCAtMTAuNDgyNzE5XSwgWzE2Mi4zOTg2NDYsIC0xMC44MjYzNjddLCBbMTYxLjcwMDAzMiwgLTEwLjgyMDAxMV0sIFsxNjEuMzE5Nzk3LCAtMTAuMjA0NzUxXSwgWzE2MS45MTczODMsIC0xMC40NDY3MDFdLCBbMTYyLjExOTAyNSwgLTEwLjQ4MjcxOV1dXSwgW1tbMTYwLjg1MjIyOSwgLTkuODcyOTM3XSwgWzE2MC40NjI1ODgsIC05Ljg5NTIxXSwgWzE1OS44NDk0NDcsIC05Ljc5NDAyN10sIFsxNTkuNjQwMDAzLCAtOS42Mzk5OF0sIFsxNTkuNzAyOTQ1LCAtOS4yNDI5NV0sIFsxNjAuMzYyOTU2LCAtOS40MDAzMDRdLCBbMTYwLjY4ODUxOCwgLTkuNjEwMTYyXSwgWzE2MC44NTIyMjksIC05Ljg3MjkzN11dXSwgW1tbMTYxLjY3OTk4MiwgLTkuNTk5OTgyXSwgWzE2MS41MjkzOTcsIC05Ljc4NDMxMl0sIFsxNjAuNzg4MjUzLCAtOC45MTc1NDNdLCBbMTYwLjU3OTk5NywgLTguMzIwMDA5XSwgWzE2MC45MjAwMjgsIC04LjMyMDAwOV0sIFsxNjEuMjgwMDA2LCAtOS4xMjAwMTFdLCBbMTYxLjY3OTk4MiwgLTkuNTk5OTgyXV1dLCBbW1sxNTkuODc1MDI3LCAtOC4zMzczMl0sIFsxNTkuOTE3NDAyLCAtOC41MzgyOV0sIFsxNTkuMTMzNjc3LCAtOC4xMTQxODFdLCBbMTU4LjU4NjExNCwgLTcuNzU0ODI0XSwgWzE1OC4yMTExNSwgLTcuNDIxODcyXSwgWzE1OC4zNTk5NzgsIC03LjMyMDAxOF0sIFsxNTguODIwMDAxLCAtNy41NjAwMDNdLCBbMTU5LjY0MDAwMywgLTguMDIwMDI3XSwgWzE1OS44NzUwMjcsIC04LjMzNzMyXV1dLCBbW1sxNTcuNTM4NDI2LCAtNy4zNDc4Ml0sIFsxNTcuMzM5NDIsIC03LjQwNDc2N10sIFsxNTYuOTAyMDMsIC03LjE3Njg3NF0sIFsxNTYuNDkxMzU4LCAtNi43NjU5NDNdLCBbMTU2LjU0MjgyOCwgLTYuNTk5MzM4XSwgWzE1Ny4xNCwgLTcuMDIxNjM4XSwgWzE1Ny41Mzg0MjYsIC03LjM0NzgyXV1dXSwgInR5cGUiOiAiTXVsdGlQb2x5Z29uIn0sICJpZCI6ICJTTEIiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlNvbG9tb24gSXNsYW5kcyIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy0xMS40Mzg3NzksIDYuNzg1OTE3XSwgWy0xMS43MDgxOTUsIDYuODYwMDk4XSwgWy0xMi40MjgwOTksIDcuMjYyOTQyXSwgWy0xMi45NDkwNDksIDcuNzk4NjQ2XSwgWy0xMy4xMjQwMjUsIDguMTYzOTQ2XSwgWy0xMy4yNDY1NSwgOC45MDMwNDldLCBbLTEyLjcxMTk1OCwgOS4zNDI3MTJdLCBbLTEyLjU5NjcxOSwgOS42MjAxODhdLCBbLTEyLjQyNTkyOSwgOS44MzU4MzRdLCBbLTEyLjE1MDMzOCwgOS44NTg1NzJdLCBbLTExLjkxNzI3NywgMTAuMDQ2OTg0XSwgWy0xMS4xMTc0ODEsIDEwLjA0NTg3M10sIFstMTAuODM5MTUyLCA5LjY4ODI0Nl0sIFstMTAuNjIyMzk1LCA5LjI2NzkxXSwgWy0xMC42NTQ3NywgOC45NzcxNzhdLCBbLTEwLjQ5NDMxNSwgOC43MTU1NDFdLCBbLTEwLjUwNTQ3NywgOC4zNDg4OTZdLCBbLTEwLjIzMDA5NCwgOC40MDYyMDZdLCBbLTEwLjY5NTU5NSwgNy45Mzk0NjRdLCBbLTExLjE0NjcwNCwgNy4zOTY3MDZdLCBbLTExLjE5OTgwMiwgNy4xMDU4NDZdLCBbLTExLjQzODc3OSwgNi43ODU5MTddXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlNMRSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiU2llcnJhIExlb25lIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stODcuNzkzMTExLCAxMy4zODQ0OF0sIFstODcuOTA0MTEyLCAxMy4xNDkwMTddLCBbLTg4LjQ4MzMwMiwgMTMuMTYzOTUxXSwgWy04OC44NDMyMjgsIDEzLjI1OTczNF0sIFstODkuMjU2NzQzLCAxMy40NTg1MzNdLCBbLTg5LjgxMjM5NCwgMTMuNTIwNjIyXSwgWy05MC4wOTU1NTUsIDEzLjczNTMzOF0sIFstOTAuMDY0Njc4LCAxMy44ODE5N10sIFstODkuNzIxOTM0LCAxNC4xMzQyMjhdLCBbLTg5LjUzNDIxOSwgMTQuMjQ0ODE2XSwgWy04OS41ODczNDMsIDE0LjM2MjU4Nl0sIFstODkuMzUzMzI2LCAxNC40MjQxMzNdLCBbLTg5LjA1ODUxMiwgMTQuMzQwMDI5XSwgWy04OC44NDMwNzMsIDE0LjE0MDUwN10sIFstODguNTQxMjMxLCAxMy45ODAxNTVdLCBbLTg4LjUwMzk5OCwgMTMuODQ1NDg2XSwgWy04OC4wNjUzNDMsIDEzLjk2NDYyNl0sIFstODcuODU5NTE1LCAxMy44OTMzMTJdLCBbLTg3LjcyMzUwMywgMTMuNzg1MDVdLCBbLTg3Ljc5MzExMSwgMTMuMzg0NDhdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlNMViIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRWwgU2FsdmFkb3IiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzQ4LjkzODEzLCA5LjQ1MTc0OV0sIFs0OC40ODY3MzYsIDguODM3NjI2XSwgWzQ3Ljc4OTQyLCA4LjAwM10sIFs0Ni45NDgzMjgsIDcuOTk2ODc3XSwgWzQzLjY3ODc1LCA5LjE4MzU4XSwgWzQzLjI5Njk3NSwgOS41NDA0NzddLCBbNDIuOTI4MTIsIDEwLjAyMTk0XSwgWzQyLjU1ODc2LCAxMC41NzI1OF0sIFs0Mi43NzY4NTIsIDEwLjkyNjg3OV0sIFs0My4xNDUzMDUsIDExLjQ2MjA0XSwgWzQzLjQ3MDY2LCAxMS4yNzc3MV0sIFs0My42NjY2NjgsIDEwLjg2NDE2OV0sIFs0NC4xMTc4MDQsIDEwLjQ0NTUzOF0sIFs0NC42MTQyNTksIDEwLjQ0MjIwNV0sIFs0NS41NTY5NDEsIDEwLjY5ODAyOV0sIFs0Ni42NDU0MDEsIDEwLjgxNjU0OV0sIFs0Ny41MjU2NTgsIDExLjEyNzIyOF0sIFs0OC4wMjE1OTYsIDExLjE5MzA2NF0sIFs0OC4zNzg3ODQsIDExLjM3NTQ4Ml0sIFs0OC45NDgyMDYsIDExLjQxMDYyMl0sIFs0OC45NDIwMDUsIDExLjM5NDI2Nl0sIFs0OC45Mzg0OTEsIDEwLjk4MjMyN10sIFs0OC45MzgyMzMsIDkuOTczNV0sIFs0OC45MzgxMywgOS40NTE3NDldXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIi05OSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiU29tYWxpbGFuZCIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzQ5LjcyODYyLCAxMS41Nzg5XSwgWzUwLjI1ODc4LCAxMS42Nzk1N10sIFs1MC43MzIwMiwgMTIuMDIxOV0sIFs1MS4xMTEyLCAxMi4wMjQ2NF0sIFs1MS4xMzM4NywgMTEuNzQ4MTVdLCBbNTEuMDQxNTMsIDExLjE2NjUxXSwgWzUxLjA0NTMxLCAxMC42NDA5XSwgWzUwLjgzNDE4LCAxMC4yNzk3Ml0sIFs1MC41NTIzOSwgOS4xOTg3NF0sIFs1MC4wNzA5MiwgOC4wODE3M10sIFs0OS40NTI3LCA2LjgwNDY2XSwgWzQ4LjU5NDU1LCA1LjMzOTExXSwgWzQ3Ljc0MDc5LCA0LjIxOTRdLCBbNDYuNTY0NzYsIDIuODU1MjldLCBbNDUuNTYzOTksIDIuMDQ1NzZdLCBbNDQuMDY4MTUsIDEuMDUyODNdLCBbNDMuMTM1OTcsIDAuMjkyMl0sIFs0Mi4wNDE1NywgLTAuOTE5MTZdLCBbNDEuODEwOTUsIC0xLjQ0NjQ3XSwgWzQxLjU4NTEzLCAtMS42ODMyNV0sIFs0MC45OTMsIC0wLjg1ODI5XSwgWzQwLjk4MTA1LCAyLjc4NDUyXSwgWzQxLjg1NTA4MywgMy45MTg5MTJdLCBbNDIuMTI4NjEsIDQuMjM0MTNdLCBbNDIuNzY5NjcsIDQuMjUyNTldLCBbNDMuNjYwODcsIDQuOTU3NTVdLCBbNDQuOTYzNiwgNS4wMDE2Ml0sIFs0Ny43ODk0MiwgOC4wMDNdLCBbNDguNDg2NzM2LCA4LjgzNzYyNl0sIFs0OC45MzgxMywgOS40NTE3NDldLCBbNDguOTM4MjMzLCA5Ljk3MzVdLCBbNDguOTM4NDkxLCAxMC45ODIzMjddLCBbNDguOTQyMDA1LCAxMS4zOTQyNjZdLCBbNDguOTQ4MjA1LCAxMS40MTA2MTddLCBbNDkuMjY3NzYsIDExLjQzMDMzXSwgWzQ5LjcyODYyLCAxMS41Nzg5XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJTT00iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlNvbWFsaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzIwLjg3NDMxMywgNDUuNDE2Mzc1XSwgWzIxLjQ4MzUyNiwgNDUuMTgxMTddLCBbMjEuNTYyMDIzLCA0NC43Njg5NDddLCBbMjIuMTQ1MDg4LCA0NC40Nzg0MjJdLCBbMjIuNDU5MDIyLCA0NC43MDI1MTddLCBbMjIuNzA1NzI2LCA0NC41NzgwMDNdLCBbMjIuNDc0MDA4LCA0NC40MDkyMjhdLCBbMjIuNjU3MTUsIDQ0LjIzNDkyM10sIFsyMi40MTA0NDYsIDQ0LjAwODA2M10sIFsyMi41MDAxNTcsIDQzLjY0MjgxNF0sIFsyMi45ODYwMTksIDQzLjIxMTE2MV0sIFsyMi42MDQ4MDEsIDQyLjg5ODUxOV0sIFsyMi40MzY1OTUsIDQyLjU4MDMyMV0sIFsyMi41NDUwMTIsIDQyLjQ2MTM2Ml0sIFsyMi4zODA1MjYsIDQyLjMyMDI2XSwgWzIxLjkxNzA4LCA0Mi4zMDM2NF0sIFsyMS41NzY2MzYsIDQyLjI0NTIyNF0sIFsyMS41NDMzMiwgNDIuMzIwMjVdLCBbMjEuNjYyOTIsIDQyLjQzOTIyXSwgWzIxLjc3NTA1LCA0Mi42ODI3XSwgWzIxLjYzMzAyLCA0Mi42NzcxN10sIFsyMS40Mzg2NiwgNDIuODYyNTVdLCBbMjEuMjc0MjEsIDQyLjkwOTU5XSwgWzIxLjE0MzM5NSwgNDMuMDY4Njg1XSwgWzIwLjk1NjUxLCA0My4xMzA5NF0sIFsyMC44MTQ0OCwgNDMuMjcyMDVdLCBbMjAuNjM1MDgsIDQzLjIxNjcxXSwgWzIwLjQ5Njc5LCA0Mi44ODQ2OV0sIFsyMC4yNTc1OCwgNDIuODEyNzVdLCBbMjAuMzM5OCwgNDIuODk4NTJdLCBbMTkuOTU4NTcsIDQzLjEwNjA0XSwgWzE5LjYzLCA0My4yMTM3OF0sIFsxOS40ODM4OSwgNDMuMzUyMjldLCBbMTkuMjE4NTIsIDQzLjUyMzg0XSwgWzE5LjQ1NCwgNDMuNTY4MV0sIFsxOS41OTk3NiwgNDQuMDM4NDddLCBbMTkuMTE3NjEsIDQ0LjQyMzA3XSwgWzE5LjM2ODAzLCA0NC44NjNdLCBbMTkuMDA1NDgsIDQ0Ljg2MDIzXSwgWzE5LjM5MDQ3NiwgNDUuMjM2NTE2XSwgWzE5LjA3Mjc2OSwgNDUuNTIxNTExXSwgWzE4LjgyOTgyLCA0NS45MDg4OF0sIFsxOS41OTYwNDUsIDQ2LjE3MTczXSwgWzIwLjIyMDE5MiwgNDYuMTI3NDY5XSwgWzIwLjc2MjE3NSwgNDUuNzM0NTczXSwgWzIwLjg3NDMxMywgNDUuNDE2Mzc1XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJTUkIiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlJlcHVibGljIG9mIFNlcmJpYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy01Ny4xNDc0MzYsIDUuOTczMTVdLCBbLTU1Ljk0OTMxOCwgNS43NzI4NzhdLCBbLTU1Ljg0MTc4LCA1Ljk1MzEyNV0sIFstNTUuMDMzMjUsIDYuMDI1MjkxXSwgWy01My45NTgwNDUsIDUuNzU2NTQ4XSwgWy01NC40Nzg2MzMsIDQuODk2NzU2XSwgWy01NC4zOTk1NDIsIDQuMjEyNjExXSwgWy01NC4wMDY5MzEsIDMuNjIwMDM4XSwgWy01NC4xODE3MjYsIDMuMTg5NzhdLCBbLTU0LjI2OTcwNSwgMi43MzIzOTJdLCBbLTU0LjUyNDc1NCwgMi4zMTE4NDldLCBbLTU1LjA5NzU4NywgMi41MjM3NDhdLCBbLTU1LjU2OTc1NSwgMi40MjE1MDZdLCBbLTU1Ljk3MzMyMiwgMi41MTAzNjRdLCBbLTU2LjA3MzM0MiwgMi4yMjA3OTVdLCBbLTU1LjkwNTYsIDIuMDIxOTk2XSwgWy01NS45OTU2OTgsIDEuODE3NjY3XSwgWy01Ni41MzkzODYsIDEuODk5NTIzXSwgWy01Ny4xNTAwOTgsIDIuNzY4OTI3XSwgWy01Ny4yODE0MzMsIDMuMzMzNDkyXSwgWy01Ny42MDE1NjksIDMuMzM0NjU1XSwgWy01OC4wNDQ2OTQsIDQuMDYwODY0XSwgWy01Ny44NjAyMSwgNC41NzY4MDFdLCBbLTU3LjkxNDI4OSwgNC44MTI2MjZdLCBbLTU3LjMwNzI0NiwgNS4wNzM1NjddLCBbLTU3LjE0NzQzNiwgNS45NzMxNV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiU1VSIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJTdXJpbmFtZSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMTguODUzMTQ0LCA0OS40OTYyM10sIFsxOC45MDk1NzUsIDQ5LjQzNTg0Nl0sIFsxOS4zMjA3MTMsIDQ5LjU3MTU3NF0sIFsxOS44MjUwMjMsIDQ5LjIxNzEyNV0sIFsyMC40MTU4MzksIDQ5LjQzMTQ1M10sIFsyMC44ODc5NTUsIDQ5LjMyODc3Ml0sIFsyMS42MDc4MDgsIDQ5LjQ3MDEwN10sIFsyMi41NTgxMzgsIDQ5LjA4NTczOF0sIFsyMi4yODA4NDIsIDQ4LjgyNTM5Ml0sIFsyMi4wODU2MDgsIDQ4LjQyMjI2NF0sIFsyMS44NzIyMzYsIDQ4LjMxOTk3MV0sIFsyMC44MDEyOTQsIDQ4LjYyMzg1NF0sIFsyMC40NzM1NjIsIDQ4LjU2Mjg1XSwgWzIwLjIzOTA1NCwgNDguMzI3NTY3XSwgWzE5Ljc2OTQ3MSwgNDguMjAyNjkxXSwgWzE5LjY2MTM2NCwgNDguMjY2NjE1XSwgWzE5LjE3NDM2NSwgNDguMTExMzc5XSwgWzE4Ljc3NzAyNSwgNDguMDgxNzY4XSwgWzE4LjY5NjUxMywgNDcuODgwOTU0XSwgWzE3Ljg1NzEzMywgNDcuNzU4NDI5XSwgWzE3LjQ4ODQ3MywgNDcuODY3NDY2XSwgWzE2Ljk3OTY2NywgNDguMTIzNDk3XSwgWzE2Ljg3OTk4MywgNDguNDcwMDEzXSwgWzE2Ljk2MDI4OCwgNDguNTk2OTgyXSwgWzE3LjEwMTk4NSwgNDguODE2OTY5XSwgWzE3LjU0NTAwNywgNDguODAwMDE5XSwgWzE3Ljg4NjQ4NSwgNDguOTAzNDc1XSwgWzE3LjkxMzUxMiwgNDguOTk2NDkzXSwgWzE4LjEwNDk3MywgNDkuMDQzOTgzXSwgWzE4LjE3MDQ5OCwgNDkuMjcxNTE1XSwgWzE4LjM5OTk5NCwgNDkuMzE1MDAxXSwgWzE4LjU1NDk3MSwgNDkuNDk1MDE1XSwgWzE4Ljg1MzE0NCwgNDkuNDk2MjNdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlNWSyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiU2xvdmFraWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzEzLjgwNjQ3NSwgNDYuNTA5MzA2XSwgWzE0LjYzMjQ3MiwgNDYuNDMxODE3XSwgWzE1LjEzNzA5MiwgNDYuNjU4NzAzXSwgWzE2LjAxMTY2NCwgNDYuNjgzNjExXSwgWzE2LjIwMjI5OCwgNDYuODUyMzg2XSwgWzE2LjM3MDUwNSwgNDYuODQxMzI3XSwgWzE2LjU2NDgwOCwgNDYuNTAzNzUxXSwgWzE1Ljc2ODczMywgNDYuMjM4MTA4XSwgWzE1LjY3MTUzLCA0NS44MzQxNTRdLCBbMTUuMzIzOTU0LCA0NS43MzE3ODNdLCBbMTUuMzI3Njc1LCA0NS40NTIzMTZdLCBbMTQuOTM1MjQ0LCA0NS40NzE2OTVdLCBbMTQuNTk1MTA5LCA0NS42MzQ5NDFdLCBbMTQuNDExOTY4LCA0NS40NjYxNjZdLCBbMTMuNzE1MDYsIDQ1LjUwMDMyNF0sIFsxMy45Mzc2MywgNDUuNTkxMDE2XSwgWzEzLjY5ODExLCA0Ni4wMTY3NzhdLCBbMTMuODA2NDc1LCA0Ni41MDkzMDZdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlNWTiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiU2xvdmVuaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzIyLjE4MzE3MywgNjUuNzIzNzQxXSwgWzIxLjIxMzUxNywgNjUuMDI2MDA1XSwgWzIxLjM2OTYzMSwgNjQuNDEzNTg4XSwgWzE5Ljc3ODg3NiwgNjMuNjA5NTU0XSwgWzE3Ljg0Nzc3OSwgNjIuNzQ5NF0sIFsxNy4xMTk1NTUsIDYxLjM0MTE2Nl0sIFsxNy44MzEzNDYsIDYwLjYzNjU4M10sIFsxOC43ODc3MjIsIDYwLjA4MTkxNF0sIFsxNy44NjkyMjUsIDU4Ljk1Mzc2Nl0sIFsxNi44MjkxODUsIDU4LjcxOTgyN10sIFsxNi40NDc3MSwgNTcuMDQxMTE4XSwgWzE1Ljg3OTc4NiwgNTYuMTA0MzAyXSwgWzE0LjY2NjY4MSwgNTYuMjAwODg1XSwgWzE0LjEwMDcyMSwgNTUuNDA3NzgxXSwgWzEyLjk0MjkxMSwgNTUuMzYxNzM3XSwgWzEyLjYyNTEwMSwgNTYuMzA3MDhdLCBbMTEuNzg3OTQyLCA1Ny40NDE4MTddLCBbMTEuMDI3MzY5LCA1OC44NTYxNDldLCBbMTEuNDY4MjcyLCA1OS40MzIzOTNdLCBbMTIuMzAwMzY2LCA2MC4xMTc5MzNdLCBbMTIuNjMxMTQ3LCA2MS4yOTM1NzJdLCBbMTEuOTkyMDY0LCA2MS44MDAzNjJdLCBbMTEuOTMwNTY5LCA2My4xMjgzMThdLCBbMTIuNTc5OTM1LCA2NC4wNjYyMTldLCBbMTMuNTcxOTE2LCA2NC4wNDkxMTRdLCBbMTMuOTE5OTA1LCA2NC40NDU0MjFdLCBbMTMuNTU1NjksIDY0Ljc4NzAyOF0sIFsxNS4xMDg0MTEsIDY2LjE5Mzg2N10sIFsxNi4xMDg3MTIsIDY3LjMwMjQ1Nl0sIFsxNi43Njg4NzksIDY4LjAxMzkzN10sIFsxNy43MjkxODIsIDY4LjAxMDU1Ml0sIFsxNy45OTM4NjgsIDY4LjU2NzM5MV0sIFsxOS44Nzg1NiwgNjguNDA3MTk0XSwgWzIwLjAyNTI2OSwgNjkuMDY1MTM5XSwgWzIwLjY0NTU5MywgNjkuMTA2MjQ3XSwgWzIxLjk3ODUzNSwgNjguNjE2ODQ2XSwgWzIzLjUzOTQ3MywgNjcuOTM2MDA5XSwgWzIzLjU2NTg4LCA2Ni4zOTYwNTFdLCBbMjMuOTAzMzc5LCA2Ni4wMDY5MjddLCBbMjIuMTgzMTczLCA2NS43MjM3NDFdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlNXRSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiU3dlZGVuIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1szMi4wNzE2NjUsIC0yNi43MzM4Ml0sIFszMS44NjgwNiwgLTI3LjE3NzkyN10sIFszMS4yODI3NzMsIC0yNy4yODU4NzldLCBbMzAuNjg1OTYyLCAtMjYuNzQzODQ1XSwgWzMwLjY3NjYwOSwgLTI2LjM5ODA3OF0sIFszMC45NDk2NjcsIC0yNi4wMjI2NDldLCBbMzEuMDQ0MDgsIC0yNS43MzE0NTJdLCBbMzEuMzMzMTU4LCAtMjUuNjYwMTkxXSwgWzMxLjgzNzc3OCwgLTI1Ljg0MzMzMl0sIFszMS45ODU3NzksIC0yNi4yOTE3OF0sIFszMi4wNzE2NjUsIC0yNi43MzM4Ml1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiU1daIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJTd2F6aWxhbmQiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzM4Ljc5MjM0MSwgMzMuMzc4Njg2XSwgWzM2LjgzNDA2MiwgMzIuMzEyOTM4XSwgWzM1LjcxOTkxOCwgMzIuNzA5MTkyXSwgWzM1LjcwMDc5OCwgMzIuNzE2MDE0XSwgWzM1LjgzNjM5NywgMzIuODY4MTIzXSwgWzM1LjgyMTEwMSwgMzMuMjc3NDI2XSwgWzM2LjA2NjQ2LCAzMy44MjQ5MTJdLCBbMzYuNjExNzUsIDM0LjIwMTc4OV0sIFszNi40NDgxOTQsIDM0LjU5MzkzNV0sIFszNS45OTg0MDMsIDM0LjY0NDkxNF0sIFszNS45MDUwMjMsIDM1LjQxMDAwOV0sIFszNi4xNDk3NjMsIDM1LjgyMTUzNV0sIFszNi40MTc1NSwgMzYuMDQwNjE3XSwgWzM2LjY4NTM4OSwgMzYuMjU5Njk5XSwgWzM2LjczOTQ5NCwgMzYuODE3NTJdLCBbMzcuMDY2NzYxLCAzNi42MjMwMzZdLCBbMzguMTY3NzI3LCAzNi45MDEyMV0sIFszOC42OTk4OTEsIDM2LjcxMjkyN10sIFszOS41MjI1OCwgMzYuNzE2MDU0XSwgWzQwLjY3MzI1OSwgMzcuMDkxMjc2XSwgWzQxLjIxMjA4OSwgMzcuMDc0MzUyXSwgWzQyLjM0OTU5MSwgMzcuMjI5ODczXSwgWzQxLjgzNzA2NCwgMzYuNjA1ODU0XSwgWzQxLjI4OTcwNywgMzYuMzU4ODE1XSwgWzQxLjM4Mzk2NSwgMzUuNjI4MzE3XSwgWzQxLjAwNjE1OSwgMzQuNDE5MzcyXSwgWzM4Ljc5MjM0MSwgMzMuMzc4Njg2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJTWVIiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlN5cmlhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxNC40OTU3ODcsIDEyLjg1OTM5Nl0sIFsxNC41OTU3ODEsIDEzLjMzMDQyN10sIFsxMy45NTQ0NzcsIDEzLjM1MzQ0OV0sIFsxMy45NTY2OTksIDEzLjk5NjY5MV0sIFsxMy41NDAzOTQsIDE0LjM2NzEzNF0sIFsxMy45NzIxNywgMTUuNjg0MzddLCBbMTUuMjQ3NzMxLCAxNi42MjczMDZdLCBbMTUuMzAwNDQxLCAxNy45Mjc5NV0sIFsxNS42ODU3NDEsIDE5Ljk1NzE4XSwgWzE1LjkwMzI0NywgMjAuMzg3NjE5XSwgWzE1LjQ4NzE0OCwgMjAuNzMwNDE1XSwgWzE1LjQ3MTA2LCAyMS4wNDg0NV0sIFsxNS4wOTY4ODgsIDIxLjMwODUxOV0sIFsxNC44NTEzLCAyMi44NjI5NV0sIFsxNS44NjA4NSwgMjMuNDA5NzJdLCBbMTkuODQ5MjYsIDIxLjQ5NTA5XSwgWzIzLjgzNzY2LCAxOS41ODA0N10sIFsyMy44ODY4OSwgMTUuNjEwODRdLCBbMjMuMDI0NTksIDE1LjY4MDcyXSwgWzIyLjU2Nzk1LCAxNC45NDQyOV0sIFsyMi4zMDM1MSwgMTQuMzI2ODJdLCBbMjIuNTEyMDIsIDE0LjA5MzE4XSwgWzIyLjE4MzI5LCAxMy43ODY0OF0sIFsyMi4yOTY1OCwgMTMuMzcyMzJdLCBbMjIuMDM3NTksIDEyLjk1NTQ2XSwgWzIxLjkzNjgxLCAxMi41ODgxOF0sIFsyMi4yODgwMSwgMTIuNjQ2MDVdLCBbMjIuNDk3NjIsIDEyLjI2MDI0XSwgWzIyLjUwODY5LCAxMS42NzkzNl0sIFsyMi44NzYyMiwgMTEuMzg0NjFdLCBbMjIuODY0MTY1LCAxMS4xNDIzOTVdLCBbMjIuMjMxMTI5LCAxMC45NzE4ODldLCBbMjEuNzIzODIyLCAxMC41NjcwNTZdLCBbMjEuMDAwODY4LCA5LjQ3NTk4NV0sIFsyMC4wNTk2ODUsIDkuMDEyNzA2XSwgWzE5LjA5NDAwOCwgOS4wNzQ4NDddLCBbMTguODEyMDEsIDguOTgyOTE1XSwgWzE4LjkxMTAyMiwgOC42MzA4OTVdLCBbMTguMzg5NTU1LCA4LjI4MTMwNF0sIFsxNy45NjQ5MywgNy44OTA5MTRdLCBbMTYuNzA1OTg4LCA3LjUwODMyOF0sIFsxNi40NTYxODUsIDcuNzM0Nzc0XSwgWzE2LjI5MDU2MiwgNy43NTQzMDddLCBbMTYuMTA2MjMyLCA3LjQ5NzA4OF0sIFsxNS4yNzk0NiwgNy40MjE5MjVdLCBbMTUuNDM2MDkyLCA3LjY5MjgxMl0sIFsxNS4xMjA4NjYsIDguMzgyMTVdLCBbMTQuOTc5OTk2LCA4Ljc5NjEwNF0sIFsxNC41NDQ0NjcsIDguOTY1ODYxXSwgWzEzLjk1NDIxOCwgOS41NDk0OTVdLCBbMTQuMTcxNDY2LCAxMC4wMjEzNzhdLCBbMTQuNjI3MjAxLCA5LjkyMDkxOV0sIFsxNC45MDkzNTQsIDkuOTkyMTI5XSwgWzE1LjQ2Nzg3MywgOS45ODIzMzddLCBbMTQuOTIzNTY1LCAxMC44OTEzMjVdLCBbMTQuOTYwMTUyLCAxMS41NTU1NzRdLCBbMTQuODkzMzYsIDEyLjIxOTA1XSwgWzE0LjQ5NTc4NywgMTIuODU5Mzk2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJUQ0QiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIkNoYWQiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzEuODY1MjQxLCA2LjE0MjE1OF0sIFsxLjA2MDEyMiwgNS45Mjg4MzddLCBbMC44MzY5MzEsIDYuMjc5OTc5XSwgWzAuNTcwMzg0LCA2LjkxNDM1OV0sIFswLjQ5MDk1NywgNy40MTE3NDRdLCBbMC43MTIwMjksIDguMzEyNDY1XSwgWzAuNDYxMTkyLCA4LjY3NzIyM10sIFswLjM2NTkwMSwgOS40NjUwMDRdLCBbMC4zNjc1OCwgMTAuMTkxMjEzXSwgWy0wLjA0OTc4NSwgMTAuNzA2OTE4XSwgWzAuMDIzODAzLCAxMS4wMTg2ODJdLCBbMC44OTk1NjMsIDEwLjk5NzMzOV0sIFswLjc3MjMzNiwgMTAuNDcwODA4XSwgWzEuMDc3Nzk1LCAxMC4xNzU2MDddLCBbMS40MjUwNjEsIDkuODI1Mzk1XSwgWzEuNDYzMDQzLCA5LjMzNDYyNF0sIFsxLjY2NDQ3OCwgOS4xMjg1OV0sIFsxLjYxODk1MSwgNi44MzIwMzhdLCBbMS44NjUyNDEsIDYuMTQyMTU4XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJUR08iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlRvZ28iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzEwMi41ODQ5MzIsIDEyLjE4NjU5NV0sIFsxMDEuNjg3MTU4LCAxMi42NDU3NF0sIFsxMDAuODMxODEsIDEyLjYyNzA4NV0sIFsxMDAuOTc4NDY3LCAxMy40MTI3MjJdLCBbMTAwLjA5Nzc5NywgMTMuNDA2ODU2XSwgWzEwMC4wMTg3MzMsIDEyLjMwNzAwMV0sIFs5OS40Nzg5MjEsIDEwLjg0NjM2N10sIFs5OS4xNTM3NzIsIDkuOTYzMDYxXSwgWzk5LjIyMjM5OSwgOS4yMzkyNTVdLCBbOTkuODczODMyLCA5LjIwNzg2Ml0sIFsxMDAuMjc5NjQ3LCA4LjI5NTE1M10sIFsxMDAuNDU5Mjc0LCA3LjQyOTU3M10sIFsxMDEuMDE3MzI4LCA2Ljg1Njg2OV0sIFsxMDEuNjIzMDc5LCA2Ljc0MDYyMl0sIFsxMDIuMTQxMTg3LCA2LjIyMTYzNl0sIFsxMDEuODE0MjgyLCA1LjgxMDgwOF0sIFsxMDEuMTU0MjE5LCA1LjY5MTM4NF0sIFsxMDEuMDc1NTE2LCA2LjIwNDg2N10sIFsxMDAuMjU5NTk2LCA2LjY0MjgyNV0sIFsxMDAuMDg1NzU3LCA2LjQ2NDQ4OV0sIFs5OS42OTA2OTEsIDYuODQ4MjEzXSwgWzk5LjUxOTY0MiwgNy4zNDM0NTRdLCBbOTguOTg4MjUzLCA3LjkwNzk5M10sIFs5OC41MDM3ODYsIDguMzgyMzA1XSwgWzk4LjMzOTY2MiwgNy43OTQ1MTJdLCBbOTguMTUwMDA5LCA4LjM1MDAwN10sIFs5OC4yNTkxNSwgOC45NzM5MjNdLCBbOTguNTUzNTUxLCA5LjkzMjk2XSwgWzk5LjAzODEyMSwgMTAuOTYwNTQ2XSwgWzk5LjU4NzI4NiwgMTEuODkyNzYzXSwgWzk5LjE5NjM1NCwgMTIuODA0NzQ4XSwgWzk5LjIxMjAxMiwgMTMuMjY5Mjk0XSwgWzk5LjA5Nzc1NSwgMTMuODI3NTAzXSwgWzk4LjQzMDgxOSwgMTQuNjIyMDI4XSwgWzk4LjE5MjA3NCwgMTUuMTIzNzAzXSwgWzk4LjUzNzM3NiwgMTUuMzA4NDk3XSwgWzk4LjkwMzM0OCwgMTYuMTc3ODI0XSwgWzk4LjQ5Mzc2MSwgMTYuODM3ODM2XSwgWzk3Ljg1OTEyMywgMTcuNTY3OTQ2XSwgWzk3LjM3NTg5NiwgMTguNDQ1NDM4XSwgWzk3Ljc5Nzc4MywgMTguNjI3MDhdLCBbOTguMjUzNzI0LCAxOS43MDgyMDNdLCBbOTguOTU5Njc2LCAxOS43NTI5ODFdLCBbOTkuNTQzMzA5LCAyMC4xODY1OThdLCBbMTAwLjExNTk4OCwgMjAuNDE3ODVdLCBbMTAwLjU0ODg4MSwgMjAuMTA5MjM4XSwgWzEwMC42MDYyOTQsIDE5LjUwODM0NF0sIFsxMDEuMjgyMDE1LCAxOS40NjI1ODVdLCBbMTAxLjAzNTkzMSwgMTguNDA4OTI4XSwgWzEwMS4wNTk1NDgsIDE3LjUxMjQ5N10sIFsxMDIuMTEzNTkyLCAxOC4xMDkxMDJdLCBbMTAyLjQxMzAwNSwgMTcuOTMyNzgyXSwgWzEwMi45OTg3MDYsIDE3Ljk2MTY5NV0sIFsxMDMuMjAwMTkyLCAxOC4zMDk2MzJdLCBbMTAzLjk1NjQ3NywgMTguMjQwOTU0XSwgWzEwNC43MTY5NDcsIDE3LjQyODg1OV0sIFsxMDQuNzc5MzIxLCAxNi40NDE4NjVdLCBbMTA1LjU4OTAzOSwgMTUuNTcwMzE2XSwgWzEwNS41NDQzMzgsIDE0LjcyMzkzNF0sIFsxMDUuMjE4Nzc3LCAxNC4yNzMyMTJdLCBbMTA0LjI4MTQxOCwgMTQuNDE2NzQzXSwgWzEwMi45ODg0MjIsIDE0LjIyNTcyMV0sIFsxMDIuMzQ4MDk5LCAxMy4zOTQyNDddLCBbMTAyLjU4NDkzMiwgMTIuMTg2NTk1XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJUSEEiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlRoYWlsYW5kIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s3MS4wMTQxOTgsIDQwLjI0NDM2Nl0sIFs3MC42NDgwMTksIDM5LjkzNTc1NF0sIFs2OS41NTk2MSwgNDAuMTAzMjExXSwgWzY5LjQ2NDg4NywgMzkuNTI2NjgzXSwgWzcwLjU0OTE2MiwgMzkuNjA0MTk4XSwgWzcxLjc4NDY5NCwgMzkuMjc5NDYzXSwgWzczLjY3NTM3OSwgMzkuNDMxMjM3XSwgWzczLjkyODg1MiwgMzguNTA1ODE1XSwgWzc0LjI1NzUxNCwgMzguNjA2NTA3XSwgWzc0Ljg2NDgxNiwgMzguMzc4ODQ2XSwgWzc0LjgyOTk4NiwgMzcuOTkwMDA3XSwgWzc0Ljk4MDAwMiwgMzcuNDE5OTldLCBbNzMuOTQ4Njk2LCAzNy40MjE1NjZdLCBbNzMuMjYwMDU2LCAzNy40OTUyNTddLCBbNzIuNjM2ODksIDM3LjA0NzU1OF0sIFs3Mi4xOTMwNDEsIDM2Ljk0ODI4OF0sIFs3MS44NDQ2MzgsIDM2LjczODE3MV0sIFs3MS40NDg2OTMsIDM3LjA2NTY0NV0sIFs3MS41NDE5MTgsIDM3LjkwNTc3NF0sIFs3MS4yMzk0MDQsIDM3Ljk1MzI2NV0sIFs3MS4zNDgxMzEsIDM4LjI1ODkwNV0sIFs3MC44MDY4MjEsIDM4LjQ4NjI4Ml0sIFs3MC4zNzYzMDQsIDM4LjEzODM5Nl0sIFs3MC4yNzA1NzQsIDM3LjczNTE2NV0sIFs3MC4xMTY1NzgsIDM3LjU4ODIyM10sIFs2OS41MTg3ODUsIDM3LjYwODk5N10sIFs2OS4xOTYyNzMsIDM3LjE1MTE0NF0sIFs2OC44NTk0NDYsIDM3LjM0NDMzNl0sIFs2OC4xMzU1NjIsIDM3LjAyMzExNV0sIFs2Ny44MywgMzcuMTQ0OTk0XSwgWzY4LjM5MjAzMywgMzguMTU3MDI1XSwgWzY4LjE3NjAyNSwgMzguOTAxNTUzXSwgWzY3LjQ0MjIyLCAzOS4xNDAxNDRdLCBbNjcuNzAxNDI5LCAzOS41ODA0NzhdLCBbNjguNTM2NDE2LCAzOS41MzM0NTNdLCBbNjkuMDExNjMzLCA0MC4wODYxNThdLCBbNjkuMzI5NDk1LCA0MC43Mjc4MjRdLCBbNzAuNjY2NjIyLCA0MC45NjAyMTNdLCBbNzAuNDU4MTYsIDQwLjQ5NjQ5NV0sIFs3MC42MDE0MDcsIDQwLjIxODUyN10sIFs3MS4wMTQxOTgsIDQwLjI0NDM2Nl1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiVEpLIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJUYWppa2lzdGFuIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s2MS4yMTA4MTcsIDM1LjY1MDA3Ml0sIFs2MS4xMjMwNzEsIDM2LjQ5MTU5N10sIFs2MC4zNzc2MzgsIDM2LjUyNzM4M10sIFs1OS4yMzQ3NjIsIDM3LjQxMjk4OF0sIFs1OC40MzYxNTQsIDM3LjUyMjMwOV0sIFs1Ny4zMzA0MzQsIDM4LjAyOTIyOV0sIFs1Ni42MTkzNjYsIDM4LjEyMTM5NF0sIFs1Ni4xODAzNzUsIDM3LjkzNTEyN10sIFs1NS41MTE1NzgsIDM3Ljk2NDExN10sIFs1NC44MDAzMDQsIDM3LjM5MjQyMV0sIFs1My45MjE1OTgsIDM3LjE5ODkxOF0sIFs1My43MzU1MTEsIDM3LjkwNjEzNl0sIFs1My44ODA5MjksIDM4Ljk1MjA5M10sIFs1My4xMDEwMjgsIDM5LjI5MDU3NF0sIFs1My4zNTc4MDgsIDM5Ljk3NTI4Nl0sIFs1Mi42OTM5NzMsIDQwLjAzMzYyOV0sIFs1Mi45MTUyNTEsIDQwLjg3NjUyM10sIFs1My44NTgxMzksIDQwLjYzMTAzNF0sIFs1NC43MzY4NDUsIDQwLjk1MTAxNV0sIFs1NC4wMDgzMTEsIDQxLjU1MTIxMV0sIFs1My43MjE3MTMsIDQyLjEyMzE5MV0sIFs1Mi45MTY3NSwgNDEuODY4MTE3XSwgWzUyLjgxNDY4OSwgNDEuMTM1MzcxXSwgWzUyLjUwMjQ2LCA0MS43ODMzMTZdLCBbNTIuOTQ0MjkzLCA0Mi4xMTYwMzRdLCBbNTQuMDc5NDE4LCA0Mi4zMjQxMDldLCBbNTQuNzU1MzQ1LCA0Mi4wNDM5NzFdLCBbNTUuNDU1MjUxLCA0MS4yNTk4NTldLCBbNTUuOTY4MTkxLCA0MS4zMDg2NDJdLCBbNTcuMDk2MzkxLCA0MS4zMjIzMV0sIFs1Ni45MzIyMTUsIDQxLjgyNjAyNl0sIFs1Ny43ODY1MywgNDIuMTcwNTUzXSwgWzU4LjYyOTAxMSwgNDIuNzUxNTUxXSwgWzU5Ljk3NjQyMiwgNDIuMjIzMDgyXSwgWzYwLjA4MzM0MSwgNDEuNDI1MTQ2XSwgWzYwLjQ2NTk1MywgNDEuMjIwMzI3XSwgWzYxLjU0NzE3OSwgNDEuMjY2MzddLCBbNjEuODgyNzE0LCA0MS4wODQ4NTddLCBbNjIuMzc0MjYsIDQwLjA1Mzg4Nl0sIFs2My41MTgwMTUsIDM5LjM2MzI1N10sIFs2NC4xNzAyMjMsIDM4Ljg5MjQwN10sIFs2NS4yMTU5OTksIDM4LjQwMjY5NV0sIFs2Ni41NDYxNSwgMzcuOTc0Njg1XSwgWzY2LjUxODYwNywgMzcuMzYyNzg0XSwgWzY2LjIxNzM4NSwgMzcuMzkzNzldLCBbNjUuNzQ1NjMxLCAzNy42NjExNjRdLCBbNjUuNTg4OTQ4LCAzNy4zMDUyMTddLCBbNjQuNzQ2MTA1LCAzNy4xMTE4MThdLCBbNjQuNTQ2NDc5LCAzNi4zMTIwNzNdLCBbNjMuOTgyODk2LCAzNi4wMDc5NTddLCBbNjMuMTkzNTM4LCAzNS44NTcxNjZdLCBbNjIuOTg0NjYyLCAzNS40MDQwNDFdLCBbNjIuMjMwNjUxLCAzNS4yNzA2NjRdLCBbNjEuMjEwODE3LCAzNS42NTAwNzJdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlRLTSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiVHVya21lbmlzdGFuIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxMjQuOTY4NjgyLCAtOC44OTI3OV0sIFsxMjUuMDg2MjQ2LCAtOC42NTY4ODddLCBbMTI1Ljk0NzA3MiwgLTguNDMyMDk1XSwgWzEyNi42NDQ3MDQsIC04LjM5ODI0N10sIFsxMjYuOTU3MjQzLCAtOC4yNzMzNDVdLCBbMTI3LjMzNTkyOCwgLTguMzk3MzE3XSwgWzEyNi45Njc5OTIsIC04LjY2ODI1Nl0sIFsxMjUuOTI1ODg1LCAtOS4xMDYwMDddLCBbMTI1LjA4ODUyLCAtOS4zOTMxNzNdLCBbMTI1LjA3MDAyLCAtOS4wODk5ODddLCBbMTI0Ljk2ODY4MiwgLTguODkyNzldXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlRMUyIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiRWFzdCBUaW1vciIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWy02MS42OCwgMTAuNzZdLCBbLTYxLjEwNSwgMTAuODldLCBbLTYwLjg5NSwgMTAuODU1XSwgWy02MC45MzUsIDEwLjExXSwgWy02MS43NywgMTBdLCBbLTYxLjk1LCAxMC4wOV0sIFstNjEuNjYsIDEwLjM2NV0sIFstNjEuNjgsIDEwLjc2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJUVE8iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlRyaW5pZGFkIGFuZCBUb2JhZ28iLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzkuNDgyMTQsIDMwLjMwNzU1Nl0sIFs5LjA1NTYwMywgMzIuMTAyNjkyXSwgWzguNDM5MTAzLCAzMi41MDYyODVdLCBbOC40MzA0NzMsIDMyLjc0ODMzN10sIFs3LjYxMjY0MiwgMzMuMzQ0MTE1XSwgWzcuNTI0NDgyLCAzNC4wOTczNzZdLCBbOC4xNDA5ODEsIDM0LjY1NTE0Nl0sIFs4LjM3NjM2OCwgMzUuNDc5ODc2XSwgWzguMjE3ODI0LCAzNi40MzMxNzddLCBbOC40MjA5NjQsIDM2Ljk0NjQyN10sIFs5LjUwOTk5NCwgMzcuMzQ5OTk0XSwgWzEwLjIxMDAwMiwgMzcuMjMwMDAyXSwgWzEwLjE4MDY1LCAzNi43MjQwMzhdLCBbMTEuMDI4ODY3LCAzNy4wOTIxMDNdLCBbMTEuMTAwMDI2LCAzNi44OTk5OTZdLCBbMTAuNjAwMDA1LCAzNi40MV0sIFsxMC41OTMyODcsIDM1Ljk0NzQ0NF0sIFsxMC45Mzk1MTksIDM1LjY5ODk4NF0sIFsxMC44MDc4NDcsIDM0LjgzMzUwN10sIFsxMC4xNDk1OTMsIDM0LjMzMDc3M10sIFsxMC4zMzk2NTksIDMzLjc4NTc0Ml0sIFsxMC44NTY4MzYsIDMzLjc2ODc0XSwgWzExLjEwODUwMSwgMzMuMjkzMzQzXSwgWzExLjQ4ODc4NywgMzMuMTM2OTk2XSwgWzExLjQzMjI1MywgMzIuMzY4OTAzXSwgWzEwLjk0NDc5LCAzMi4wODE4MTVdLCBbMTAuNjM2OTAxLCAzMS43NjE0MjFdLCBbOS45NTAyMjUsIDMxLjM3NjA3XSwgWzEwLjA1NjU3NSwgMzAuOTYxODMxXSwgWzkuOTcwMDE3LCAzMC41MzkzMjVdLCBbOS40ODIxNCwgMzAuMzA3NTU2XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJUVU4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlR1bmlzaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1szNi45MTMxMjcsIDQxLjMzNTM1OF0sIFszOC4zNDc2NjUsIDQwLjk0ODU4Nl0sIFszOS41MTI2MDcsIDQxLjEwMjc2M10sIFs0MC4zNzM0MzMsIDQxLjAxMzY3M10sIFs0MS41NTQwODQsIDQxLjUzNTY1Nl0sIFs0Mi42MTk1NDksIDQxLjU4MzE3M10sIFs0My41ODI3NDYsIDQxLjA5MjE0M10sIFs0My43NTI2NTgsIDQwLjc0MDIwMV0sIFs0My42NTY0MzYsIDQwLjI1MzU2NF0sIFs0NC40MDAwMDksIDQwLjAwNV0sIFs0NC43OTM5OSwgMzkuNzEzMDAzXSwgWzQ0LjEwOTIyNSwgMzkuNDI4MTM2XSwgWzQ0LjQyMTQwMywgMzguMjgxMjgxXSwgWzQ0LjIyNTc1NiwgMzcuOTcxNTg0XSwgWzQ0Ljc3MjY5OSwgMzcuMTcwNDQ1XSwgWzQ0LjI5MzQ1MiwgMzcuMDAxNTE0XSwgWzQzLjk0MjI1OSwgMzcuMjU2MjI4XSwgWzQyLjc3OTEyNiwgMzcuMzg1MjY0XSwgWzQyLjM0OTU5MSwgMzcuMjI5ODczXSwgWzQxLjIxMjA4OSwgMzcuMDc0MzUyXSwgWzQwLjY3MzI1OSwgMzcuMDkxMjc2XSwgWzM5LjUyMjU4LCAzNi43MTYwNTRdLCBbMzguNjk5ODkxLCAzNi43MTI5MjddLCBbMzguMTY3NzI3LCAzNi45MDEyMV0sIFszNy4wNjY3NjEsIDM2LjYyMzAzNl0sIFszNi43Mzk0OTQsIDM2LjgxNzUyXSwgWzM2LjY4NTM4OSwgMzYuMjU5Njk5XSwgWzM2LjQxNzU1LCAzNi4wNDA2MTddLCBbMzYuMTQ5NzYzLCAzNS44MjE1MzVdLCBbMzUuNzgyMDg1LCAzNi4yNzQ5OTVdLCBbMzYuMTYwODIyLCAzNi42NTA2MDZdLCBbMzUuNTUwOTM2LCAzNi41NjU0NDNdLCBbMzQuNzE0NTUzLCAzNi43OTU1MzJdLCBbMzQuMDI2ODk1LCAzNi4yMTk5Nl0sIFszMi41MDkxNTgsIDM2LjEwNzU2NF0sIFszMS42OTk1OTUsIDM2LjY0NDI3NV0sIFszMC42MjE2MjUsIDM2LjY3Nzg2NV0sIFszMC4zOTEwOTYsIDM2LjI2Mjk4MV0sIFsyOS42OTk5NzYsIDM2LjE0NDM1N10sIFsyOC43MzI5MDMsIDM2LjY3NjgzMV0sIFsyNy42NDExODcsIDM2LjY1ODgyMl0sIFsyNy4wNDg3NjgsIDM3LjY1MzM2MV0sIFsyNi4zMTgyMTgsIDM4LjIwODEzM10sIFsyNi44MDQ3LCAzOC45ODU3Nl0sIFsyNi4xNzA3ODUsIDM5LjQ2MzYxMl0sIFsyNy4yODAwMiwgNDAuNDIwMDE0XSwgWzI4LjgxOTk3OCwgNDAuNDYwMDExXSwgWzI5LjI0MDAwNCwgNDEuMjE5OTkxXSwgWzMxLjE0NTkzNCwgNDEuMDg3NjIyXSwgWzMyLjM0Nzk3OSwgNDEuNzM2MjY0XSwgWzMzLjUxMzI4MywgNDIuMDE4OTZdLCBbMzUuMTY3NzA0LCA0Mi4wNDAyMjVdLCBbMzYuOTEzMTI3LCA0MS4zMzUzNThdXV0sIFtbWzI3LjE5MjM3NywgNDAuNjkwNTY2XSwgWzI2LjM1ODAwOSwgNDAuMTUxOTk0XSwgWzI2LjA0MzM1MSwgNDAuNjE3NzU0XSwgWzI2LjA1Njk0MiwgNDAuODI0MTIzXSwgWzI2LjI5NDYwMiwgNDAuOTM2MjYxXSwgWzI2LjYwNDE5NiwgNDEuNTYyMTE1XSwgWzI2LjExNzA0MiwgNDEuODI2OTA1XSwgWzI3LjEzNTczOSwgNDIuMTQxNDg1XSwgWzI3Ljk5NjcyLCA0Mi4wMDczNTldLCBbMjguMTE1NTI1LCA0MS42MjI4ODZdLCBbMjguOTg4NDQzLCA0MS4yOTk5MzRdLCBbMjguODA2NDM4LCA0MS4wNTQ5NjJdLCBbMjcuNjE5MDE3LCA0MC45OTk4MjNdLCBbMjcuMTkyMzc3LCA0MC42OTA1NjZdXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIlRVUiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiVHVya2V5IiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1sxMjEuNzc3ODE4LCAyNC4zOTQyNzRdLCBbMTIxLjE3NTYzMiwgMjIuNzkwODU3XSwgWzEyMC43NDcwOCwgMjEuOTcwNTcxXSwgWzEyMC4yMjAwODMsIDIyLjgxNDg2MV0sIFsxMjAuMTA2MTg5LCAyMy41NTYyNjNdLCBbMTIwLjY5NDY4LCAyNC41Mzg0NTFdLCBbMTIxLjQ5NTA0NCwgMjUuMjk1NDU5XSwgWzEyMS45NTEyNDQsIDI0Ljk5NzU5Nl0sIFsxMjEuNzc3ODE4LCAyNC4zOTQyNzRdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlRXTiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiVGFpd2FuIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiYmxhY2siLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMzMuOTAzNzExLCAtMC45NV0sIFszNC4wNzI2MiwgLTEuMDU5ODJdLCBbMzcuNjk4NjksIC0zLjA5Njk5XSwgWzM3Ljc2NjksIC0zLjY3NzEyXSwgWzM5LjIwMjIyLCAtNC42NzY3N10sIFszOC43NDA1NCwgLTUuOTA4OTVdLCBbMzguNzk5NzcsIC02LjQ3NTY2XSwgWzM5LjQ0LCAtNi44NF0sIFszOS40NywgLTcuMV0sIFszOS4xOTQ2OSwgLTcuNzAzOV0sIFszOS4yNTIwMywgLTguMDA3ODFdLCBbMzkuMTg2NTIsIC04LjQ4NTUxXSwgWzM5LjUzNTc0LCAtOS4xMTIzN10sIFszOS45NDk2LCAtMTAuMDk4NF0sIFs0MC4zMTY1OSwgLTEwLjMxNzFdLCBbMzkuNTIxLCAtMTAuODk2ODhdLCBbMzguNDI3NTU3LCAtMTEuMjg1MjAyXSwgWzM3LjgyNzY0LCAtMTEuMjY4NzldLCBbMzcuNDcxMjksIC0xMS41Njg3Nl0sIFszNi43NzUxNTEsIC0xMS41OTQ1MzddLCBbMzYuNTE0MDgyLCAtMTEuNzIwOTM4XSwgWzM1LjMxMjM5OCwgLTExLjQzOTE0Nl0sIFszNC41NTk5ODksIC0xMS41MjAwMl0sIFszNC4yOCwgLTEwLjE2XSwgWzMzLjk0MDgzOCwgLTkuNjkzNjc0XSwgWzMzLjczOTcyLCAtOS40MTcxNV0sIFszMi43NTkzNzUsIC05LjIzMDU5OV0sIFszMi4xOTE4NjUsIC04LjkzMDM1OV0sIFszMS41NTYzNDgsIC04Ljc2MjA0OV0sIFszMS4xNTc3NTEsIC04LjU5NDU3OV0sIFszMC43NCwgLTguMzRdLCBbMzAuMiwgLTcuMDhdLCBbMjkuNjIsIC02LjUyXSwgWzI5LjQxOTk5MywgLTUuOTM5OTk5XSwgWzI5LjUxOTk4NywgLTUuNDE5OTc5XSwgWzI5LjMzOTk5OCwgLTQuNDk5OTgzXSwgWzI5Ljc1MzUxMiwgLTQuNDUyMzg5XSwgWzMwLjExNjMyLCAtNC4wOTAxMl0sIFszMC41MDU1NCwgLTMuNTY4NThdLCBbMzAuNzUyMjQsIC0zLjM1OTMxXSwgWzMwLjc0MzAxLCAtMy4wMzQzMV0sIFszMC41Mjc2NiwgLTIuODA3NjJdLCBbMzAuNDY5NjcsIC0yLjQxMzgzXSwgWzMwLjc1ODMwOSwgLTIuMjg3MjVdLCBbMzAuODE2MTM1LCAtMS42OTg5MTRdLCBbMzAuNDE5MTA1LCAtMS4xMzQ2NTldLCBbMzAuNzY5ODYsIC0xLjAxNDU1XSwgWzMxLjg2NjE3LCAtMS4wMjczNl0sIFszMy45MDM3MTEsIC0wLjk1XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJUWkEiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlVuaXRlZCBSZXB1YmxpYyBvZiBUYW56YW5pYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMzEuODY2MTcsIC0xLjAyNzM2XSwgWzMwLjc2OTg2LCAtMS4wMTQ1NV0sIFszMC40MTkxMDUsIC0xLjEzNDY1OV0sIFsyOS44MjE1MTksIC0xLjQ0MzMyMl0sIFsyOS41Nzk0NjYsIC0xLjM0MTMxM10sIFsyOS41ODc4MzgsIC0wLjU4NzQwNl0sIFsyOS44MTk1LCAtMC4yMDUzXSwgWzI5Ljg3NTc3OSwgMC41OTczOF0sIFszMC4wODYxNTQsIDEuMDYyMzEzXSwgWzMwLjQ2ODUwOCwgMS41ODM4MDVdLCBbMzAuODUyNjcsIDEuODQ5Mzk2XSwgWzMxLjE3NDE0OSwgMi4yMDQ0NjVdLCBbMzAuNzczMzIsIDIuMzM5ODldLCBbMzAuODMzODUsIDMuNTA5MTddLCBbMzEuMjQ1NTYsIDMuNzgxOV0sIFszMS44ODE0NSwgMy41NTgyN10sIFszMi42ODY0MiwgMy43OTIzMl0sIFszMy4zOSwgMy43OV0sIFszNC4wMDUsIDQuMjQ5ODg1XSwgWzM0LjQ3OTEzLCAzLjU1NTZdLCBbMzQuNTk2MDcsIDMuMDUzNzRdLCBbMzUuMDM1OTksIDEuOTA1ODRdLCBbMzQuNjcyMSwgMS4xNzY5NF0sIFszNC4xOCwgMC41MTVdLCBbMzMuODkzNTY5LCAwLjEwOTgxNF0sIFszMy45MDM3MTEsIC0wLjk1XSwgWzMxLjg2NjE3LCAtMS4wMjczNl1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiVUdBIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJVZ2FuZGEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzMxLjc4NTk5OCwgNTIuMTAxNjc4XSwgWzMyLjE1OTQxMiwgNTIuMDYxMjY3XSwgWzMyLjQxMjA1OCwgNTIuMjg4Njk1XSwgWzMyLjcxNTc2MSwgNTIuMjM4NDY1XSwgWzMzLjc1MjcsIDUyLjMzNTA3NV0sIFszNC4zOTE3MzEsIDUxLjc2ODg4Ml0sIFszNC4xNDE5NzgsIDUxLjU2NjQxM10sIFszNC4yMjQ4MTYsIDUxLjI1NTk5M10sIFszNS4wMjIxODMsIDUxLjIwNzU3Ml0sIFszNS4zNzc5MjQsIDUwLjc3Mzk1NV0sIFszNS4zNTYxMTYsIDUwLjU3NzE5N10sIFszNi42MjYxNjgsIDUwLjIyNTU5MV0sIFszNy4zOTM0NiwgNTAuMzgzOTUzXSwgWzM4LjAxMDYzMSwgNDkuOTE1NjYyXSwgWzM4LjU5NDk4OCwgNDkuOTI2NDYyXSwgWzQwLjA2OTA1OCwgNDkuNjAxMDU1XSwgWzQwLjA4MDc4OSwgNDkuMzA3NDNdLCBbMzkuNjc0NjY0LCA0OC43ODM4MThdLCBbMzkuODk1NjMyLCA0OC4yMzI0MDVdLCBbMzkuNzM4Mjc4LCA0Ny44OTg5MzddLCBbMzguNzcwNTg1LCA0Ny44MjU2MDhdLCBbMzguMjU1MTEyLCA0Ny41NDY0XSwgWzM4LjIyMzUzOCwgNDcuMTAyMTldLCBbMzcuNDI1MTM3LCA0Ny4wMjIyMjFdLCBbMzYuNzU5ODU1LCA0Ni42OTg3XSwgWzM1LjgyMzY4NSwgNDYuNjQ1OTY0XSwgWzM0Ljk2MjM0MiwgNDYuMjczMTk3XSwgWzM1LjAyMDc4OCwgNDUuNjUxMjE5XSwgWzM1LjUxMDAwOSwgNDUuNDA5OTkzXSwgWzM2LjUyOTk5OCwgNDUuNDY5OTldLCBbMzYuMzM0NzEzLCA0NS4xMTMyMTZdLCBbMzUuMjM5OTk5LCA0NC45Mzk5OTZdLCBbMzMuODgyNTExLCA0NC4zNjE0NzldLCBbMzMuMzI2NDIxLCA0NC41NjQ4NzddLCBbMzMuNTQ2OTI0LCA0NS4wMzQ3NzFdLCBbMzIuNDU0MTc0LCA0NS4zMjc0NjZdLCBbMzIuNjMwODA0LCA0NS41MTkxODZdLCBbMzMuNTg4MTYyLCA0NS44NTE1NjldLCBbMzMuMjk4NTY3LCA0Ni4wODA1OThdLCBbMzEuNzQ0MTQsIDQ2LjMzMzM0OF0sIFszMS42NzUzMDcsIDQ2LjcwNjI0NV0sIFszMC43NDg3NDksIDQ2LjU4MzFdLCBbMzAuMzc3NjA5LCA0Ni4wMzI0MV0sIFsyOS42MDMyODksIDQ1LjI5MzMwOF0sIFsyOS4xNDk3MjUsIDQ1LjQ2NDkyNV0sIFsyOC42Nzk3NzksIDQ1LjMwNDAzMV0sIFsyOC4yMzM1NTQsIDQ1LjQ4ODI4M10sIFsyOC40ODUyNjksIDQ1LjU5NjkwN10sIFsyOC42NTk5ODcsIDQ1LjkzOTk4N10sIFsyOC45MzM3MTcsIDQ2LjI1ODgzXSwgWzI4Ljg2Mjk3MiwgNDYuNDM3ODg5XSwgWzI5LjA3MjEwNywgNDYuNTE3Njc4XSwgWzI5LjE3MDY1NCwgNDYuMzc5MjYyXSwgWzI5Ljc1OTk3MiwgNDYuMzQ5OTg4XSwgWzMwLjAyNDY1OSwgNDYuNDIzOTM3XSwgWzI5LjgzODIxLCA0Ni41MjUzMjZdLCBbMjkuOTA4ODUyLCA0Ni42NzQzNjFdLCBbMjkuNTU5Njc0LCA0Ni45Mjg1ODNdLCBbMjkuNDE1MTM1LCA0Ny4zNDY2NDVdLCBbMjkuMDUwODY4LCA0Ny41MTAyMjddLCBbMjkuMTIyNjk4LCA0Ny44NDkwOTVdLCBbMjguNjcwODkxLCA0OC4xMTgxNDldLCBbMjguMjU5NTQ3LCA0OC4xNTU1NjJdLCBbMjcuNTIyNTM3LCA0OC40NjcxMTldLCBbMjYuODU3ODI0LCA0OC4zNjgyMTFdLCBbMjYuNjE5MzM3LCA0OC4yMjA3MjZdLCBbMjYuMTk3NDUsIDQ4LjIyMDg4MV0sIFsyNS45NDU5NDEsIDQ3Ljk4NzE0OV0sIFsyNS4yMDc3NDMsIDQ3Ljg5MTA1Nl0sIFsyNC44NjYzMTcsIDQ3LjczNzUyNl0sIFsyNC40MDIwNTYsIDQ3Ljk4MTg3OF0sIFsyMy43NjA5NTgsIDQ3Ljk4NTU5OF0sIFsyMy4xNDIyMzYsIDQ4LjA5NjM0MV0sIFsyMi43MTA1MzEsIDQ3Ljg4MjE5NF0sIFsyMi42NDA4MiwgNDguMTUwMjRdLCBbMjIuMDg1NjA4LCA0OC40MjIyNjRdLCBbMjIuMjgwODQyLCA0OC44MjUzOTJdLCBbMjIuNTU4MTM4LCA0OS4wODU3MzhdLCBbMjIuNzc2NDE5LCA0OS4wMjczOTVdLCBbMjIuNTE4NDUsIDQ5LjQ3Njc3NF0sIFsyMy40MjY1MDgsIDUwLjMwODUwNl0sIFsyMy45MjI3NTcsIDUwLjQyNDg4MV0sIFsyNC4wMjk5ODYsIDUwLjcwNTQwN10sIFsyMy41MjcwNzEsIDUxLjU3ODQ1NF0sIFsyNC4wMDUwNzgsIDUxLjYxNzQ0NF0sIFsyNC41NTMxMDYsIDUxLjg4ODQ2MV0sIFsyNS4zMjc3ODgsIDUxLjkxMDY1Nl0sIFsyNi4zMzc5NTksIDUxLjgzMjI4OV0sIFsyNy40NTQwNjYsIDUxLjU5MjMwM10sIFsyOC4yNDE2MTUsIDUxLjU3MjIyN10sIFsyOC42MTc2MTMsIDUxLjQyNzcxNF0sIFsyOC45OTI4MzUsIDUxLjYwMjA0NF0sIFsyOS4yNTQ5MzgsIDUxLjM2ODIzNF0sIFszMC4xNTczNjQsIDUxLjQxNjEzOF0sIFszMC41NTUxMTcsIDUxLjMxOTUwM10sIFszMC42MTk0NTQsIDUxLjgyMjgwNl0sIFszMC45Mjc1NDksIDUyLjA0MjM1M10sIFszMS43ODU5OTgsIDUyLjEwMTY3OF1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiVUtSIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJVa3JhaW5lIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1stNTcuNjI1MTMzLCAtMzAuMjE2Mjk1XSwgWy01Ni45NzYwMjYsIC0zMC4xMDk2ODZdLCBbLTU1Ljk3MzI0NSwgLTMwLjg4MzA3Nl0sIFstNTUuNjAxNTEsIC0zMC44NTM4NzldLCBbLTU0LjU3MjQ1MiwgLTMxLjQ5NDUxMV0sIFstNTMuNzg3OTUyLCAtMzIuMDQ3MjQzXSwgWy01My4yMDk1ODksIC0zMi43Mjc2NjZdLCBbLTUzLjY1MDU0NCwgLTMzLjIwMjAwNF0sIFstNTMuMzczNjYyLCAtMzMuNzY4Mzc4XSwgWy01My44MDY0MjYsIC0zNC4zOTY4MTVdLCBbLTU0LjkzNTg2NiwgLTM0Ljk1MjY0N10sIFstNTUuNjc0MDksIC0zNC43NTI2NTldLCBbLTU2LjIxNTI5NywgLTM0Ljg1OTgzNl0sIFstNTcuMTM5Njg1LCAtMzQuNDMwNDU2XSwgWy01Ny44MTc4NjEsIC0zNC40NjI1NDddLCBbLTU4LjQyNzA3NCwgLTMzLjkwOTQ1NF0sIFstNTguMzQ5NjExLCAtMzMuMjYzMTg5XSwgWy01OC4xMzI2NDgsIC0zMy4wNDA1NjddLCBbLTU4LjE0MjQ0LCAtMzIuMDQ0NTA0XSwgWy01Ny44NzQ5MzcsIC0zMS4wMTY1NTZdLCBbLTU3LjYyNTEzMywgLTMwLjIxNjI5NV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiVVJZIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJVcnVndWF5IiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1tbLTE1NS41NDIxMSwgMTkuMDgzNDhdLCBbLTE1NS42ODgxNywgMTguOTE2MTldLCBbLTE1NS45MzY2NSwgMTkuMDU5MzldLCBbLTE1NS45MDgwNiwgMTkuMzM4ODhdLCBbLTE1Ni4wNzM0NywgMTkuNzAyOTRdLCBbLTE1Ni4wMjM2OCwgMTkuODE0MjJdLCBbLTE1NS44NTAwOCwgMTkuOTc3MjldLCBbLTE1NS45MTkwNywgMjAuMTczOTVdLCBbLTE1NS44NjEwOCwgMjAuMjY3MjFdLCBbLTE1NS43ODUwNSwgMjAuMjQ4N10sIFstMTU1LjQwMjE0LCAyMC4wNzk3NV0sIFstMTU1LjIyNDUyLCAxOS45OTMwMl0sIFstMTU1LjA2MjI2LCAxOS44NTkxXSwgWy0xNTQuODA3NDEsIDE5LjUwODcxXSwgWy0xNTQuODMxNDcsIDE5LjQ1MzI4XSwgWy0xNTUuMjIyMTcsIDE5LjIzOTcyXSwgWy0xNTUuNTQyMTEsIDE5LjA4MzQ4XV1dLCBbW1stMTU2LjA3OTI2LCAyMC42NDM5N10sIFstMTU2LjQxNDQ1LCAyMC41NzI0MV0sIFstMTU2LjU4NjczLCAyMC43ODNdLCBbLTE1Ni43MDE2NywgMjAuODY0M10sIFstMTU2LjcxMDU1LCAyMC45MjY3Nl0sIFstMTU2LjYxMjU4LCAyMS4wMTI0OV0sIFstMTU2LjI1NzExLCAyMC45MTc0NV0sIFstMTU1Ljk5NTY2LCAyMC43NjQwNF0sIFstMTU2LjA3OTI2LCAyMC42NDM5N11dXSwgW1tbLTE1Ni43NTgyNCwgMjEuMTc2ODRdLCBbLTE1Ni43ODkzMywgMjEuMDY4NzNdLCBbLTE1Ny4zMjUyMSwgMjEuMDk3NzddLCBbLTE1Ny4yNTAyNywgMjEuMjE5NThdLCBbLTE1Ni43NTgyNCwgMjEuMTc2ODRdXV0sIFtbWy0xNTcuNjUyODMsIDIxLjMyMjE3XSwgWy0xNTcuNzA3MDMsIDIxLjI2NDQyXSwgWy0xNTcuNzc4NiwgMjEuMjc3MjldLCBbLTE1OC4xMjY2NywgMjEuMzEyNDRdLCBbLTE1OC4yNTM4LCAyMS41MzkxOV0sIFstMTU4LjI5MjY1LCAyMS41NzkxMl0sIFstMTU4LjAyNTIsIDIxLjcxNjk2XSwgWy0xNTcuOTQxNjEsIDIxLjY1MjcyXSwgWy0xNTcuNjUyODMsIDIxLjMyMjE3XV1dLCBbW1stMTU5LjM0NTEyLCAyMS45ODJdLCBbLTE1OS40NjM3MiwgMjEuODgyOTldLCBbLTE1OS44MDA1MSwgMjIuMDY1MzNdLCBbLTE1OS43NDg3NywgMjIuMTM4Ml0sIFstMTU5LjU5NjIsIDIyLjIzNjE4XSwgWy0xNTkuMzY1NjksIDIyLjIxNDk0XSwgWy0xNTkuMzQ1MTIsIDIxLjk4Ml1dXSwgW1tbLTk0LjgxNzU4LCA0OS4zODkwNV0sIFstOTQuNjQsIDQ4Ljg0XSwgWy05NC4zMjkxNCwgNDguNjcwNzRdLCBbLTkzLjYzMDg3LCA0OC42MDkyNl0sIFstOTIuNjEsIDQ4LjQ1XSwgWy05MS42NCwgNDguMTRdLCBbLTkwLjgzLCA0OC4yN10sIFstODkuNiwgNDguMDFdLCBbLTg5LjI3MjkxNywgNDguMDE5ODA4XSwgWy04OC4zNzgxMTQsIDQ4LjMwMjkxOF0sIFstODcuNDM5NzkzLCA0Ny45NF0sIFstODYuNDYxOTkxLCA0Ny41NTMzMzhdLCBbLTg1LjY1MjM2MywgNDcuMjIwMjE5XSwgWy04NC44NzYwOCwgNDYuOTAwMDgzXSwgWy04NC43NzkyMzgsIDQ2LjYzNzEwMl0sIFstODQuNTQzNzQ5LCA0Ni41Mzg2ODRdLCBbLTg0LjYwNDksIDQ2LjQzOTZdLCBbLTg0LjMzNjcsIDQ2LjQwODc3XSwgWy04NC4xNDIxMiwgNDYuNTEyMjI2XSwgWy04NC4wOTE4NTEsIDQ2LjI3NTQxOV0sIFstODMuODkwNzY1LCA0Ni4xMTY5MjddLCBbLTgzLjYxNjEzMSwgNDYuMTE2OTI3XSwgWy04My40Njk1NTEsIDQ1Ljk5NDY4Nl0sIFstODMuNTkyODUxLCA0NS44MTY4OTRdLCBbLTgyLjU1MDkyNSwgNDUuMzQ3NTE3XSwgWy04Mi4zMzc3NjMsIDQ0LjQ0XSwgWy04Mi4xMzc2NDIsIDQzLjU3MTA4OF0sIFstODIuNDMsIDQyLjk4XSwgWy04Mi45LCA0Mi40M10sIFstODMuMTIsIDQyLjA4XSwgWy04My4xNDIsIDQxLjk3NTY4MV0sIFstODMuMDI5ODEsIDQxLjgzMjc5Nl0sIFstODIuNjkwMDg5LCA0MS42NzUxMDVdLCBbLTgyLjQzOTI3OCwgNDEuNjc1MTA1XSwgWy04MS4yNzc3NDcsIDQyLjIwOTAyNl0sIFstODAuMjQ3NDQ4LCA0Mi4zNjYyXSwgWy03OC45MzkzNjIsIDQyLjg2MzYxMV0sIFstNzguOTIsIDQyLjk2NV0sIFstNzkuMDEsIDQzLjI3XSwgWy03OS4xNzE2NzQsIDQzLjQ2NjMzOV0sIFstNzguNzIwMjgsIDQzLjYyNTA4OV0sIFstNzcuNzM3ODg1LCA0My42MjkwNTZdLCBbLTc2LjgyMDAzNCwgNDMuNjI4Nzg0XSwgWy03Ni41LCA0NC4wMTg0NTldLCBbLTc2LjM3NSwgNDQuMDk2MzFdLCBbLTc1LjMxODIxLCA0NC44MTY0NV0sIFstNzQuODY3LCA0NS4wMDA0OF0sIFstNzMuMzQ3ODMsIDQ1LjAwNzM4XSwgWy03MS41MDUwNiwgNDUuMDA4Ml0sIFstNzEuNDA1LCA0NS4yNTVdLCBbLTcxLjA4NDgyLCA0NS4zMDUyNF0sIFstNzAuNjYsIDQ1LjQ2XSwgWy03MC4zMDUsIDQ1LjkxNV0sIFstNjkuOTk5OTcsIDQ2LjY5MzA3XSwgWy02OS4yMzcyMTYsIDQ3LjQ0Nzc4MV0sIFstNjguOTA1LCA0Ny4xODVdLCBbLTY4LjIzNDQ0LCA0Ny4zNTQ4Nl0sIFstNjcuNzkwNDYsIDQ3LjA2NjM2XSwgWy02Ny43OTEzNCwgNDUuNzAyODFdLCBbLTY3LjEzNzQxLCA0NS4xMzc1M10sIFstNjYuOTY0NjYsIDQ0LjgwOTddLCBbLTY4LjAzMjUyLCA0NC4zMjUyXSwgWy02OS4wNiwgNDMuOThdLCBbLTcwLjExNjE3LCA0My42ODQwNV0sIFstNzAuNjQ1NDc2LCA0My4wOTAyMzhdLCBbLTcwLjgxNDg5LCA0Mi44NjUzXSwgWy03MC44MjUsIDQyLjMzNV0sIFstNzAuNDk1LCA0MS44MDVdLCBbLTcwLjA4LCA0MS43OF0sIFstNzAuMTg1LCA0Mi4xNDVdLCBbLTY5Ljg4NDk3LCA0MS45MjI4M10sIFstNjkuOTY1MDMsIDQxLjYzNzE3XSwgWy03MC42NCwgNDEuNDc1XSwgWy03MS4xMjAzOSwgNDEuNDk0NDVdLCBbLTcxLjg2LCA0MS4zMl0sIFstNzIuMjk1LCA0MS4yN10sIFstNzIuODc2NDMsIDQxLjIyMDY1XSwgWy03My43MSwgNDAuOTMxMTAyXSwgWy03Mi4yNDEyNiwgNDEuMTE5NDhdLCBbLTcxLjk0NSwgNDAuOTNdLCBbLTczLjM0NSwgNDAuNjNdLCBbLTczLjk4MiwgNDAuNjI4XSwgWy03My45NTIzMjUsIDQwLjc1MDc1XSwgWy03NC4yNTY3MSwgNDAuNDczNTFdLCBbLTczLjk2MjQ0LCA0MC40Mjc2M10sIFstNzQuMTc4MzgsIDM5LjcwOTI2XSwgWy03NC45MDYwNCwgMzguOTM5NTRdLCBbLTc0Ljk4MDQxLCAzOS4xOTY0XSwgWy03NS4yMDAwMiwgMzkuMjQ4NDVdLCBbLTc1LjUyODA1LCAzOS40OTg1XSwgWy03NS4zMiwgMzguOTZdLCBbLTc1LjA3MTgzNSwgMzguNzgyMDMyXSwgWy03NS4wNTY3MywgMzguNDA0MTJdLCBbLTc1LjM3NzQ3LCAzOC4wMTU1MV0sIFstNzUuOTQwMjMsIDM3LjIxNjg5XSwgWy03Ni4wMzEyNywgMzcuMjU2Nl0sIFstNzUuNzIyMDUsIDM3LjkzNzA1XSwgWy03Ni4yMzI4NywgMzguMzE5MjE1XSwgWy03Ni4zNSwgMzkuMTVdLCBbLTc2LjU0MjcyNSwgMzguNzE3NjE1XSwgWy03Ni4zMjkzMywgMzguMDgzMjZdLCBbLTc2Ljk4OTk5OCwgMzguMjM5OTkyXSwgWy03Ni4zMDE2MiwgMzcuOTE3OTQ1XSwgWy03Ni4yNTg3NCwgMzYuOTY2NF0sIFstNzUuOTcxOCwgMzYuODk3MjZdLCBbLTc1Ljg2ODA0LCAzNi41NTEyNV0sIFstNzUuNzI3NDksIDM1LjU1MDc0XSwgWy03Ni4zNjMxOCwgMzQuODA4NTRdLCBbLTc3LjM5NzYzNSwgMzQuNTEyMDFdLCBbLTc4LjA1NDk2LCAzMy45MjU0N10sIFstNzguNTU0MzUsIDMzLjg2MTMzXSwgWy03OS4wNjA2NywgMzMuNDkzOTVdLCBbLTc5LjIwMzU3LCAzMy4xNTgzOV0sIFstODAuMzAxMzI1LCAzMi41MDkzNTVdLCBbLTgwLjg2NDk4LCAzMi4wMzMzXSwgWy04MS4zMzYyOSwgMzEuNDQwNDldLCBbLTgxLjQ5MDQyLCAzMC43Mjk5OV0sIFstODEuMzEzNzEsIDMwLjAzNTUyXSwgWy04MC45OCwgMjkuMThdLCBbLTgwLjUzNTU4NSwgMjguNDcyMTNdLCBbLTgwLjUzLCAyOC4wNF0sIFstODAuMDU2NTM5LCAyNi44OF0sIFstODAuMDg4MDE1LCAyNi4yMDU3NjVdLCBbLTgwLjEzMTU2LCAyNS44MTY3NzVdLCBbLTgwLjM4MTAzLCAyNS4yMDYxNl0sIFstODAuNjgsIDI1LjA4XSwgWy04MS4xNzIxMywgMjUuMjAxMjZdLCBbLTgxLjMzLCAyNS42NF0sIFstODEuNzEsIDI1Ljg3XSwgWy04Mi4yNCwgMjYuNzNdLCBbLTgyLjcwNTE1LCAyNy40OTUwNF0sIFstODIuODU1MjYsIDI3Ljg4NjI0XSwgWy04Mi42NSwgMjguNTVdLCBbLTgyLjkzLCAyOS4xXSwgWy04My43MDk1OSwgMjkuOTM2NTZdLCBbLTg0LjEsIDMwLjA5XSwgWy04NS4xMDg4MiwgMjkuNjM2MTVdLCBbLTg1LjI4Nzg0LCAyOS42ODYxMl0sIFstODUuNzczMSwgMzAuMTUyNjFdLCBbLTg2LjQsIDMwLjRdLCBbLTg3LjUzMDM2LCAzMC4yNzQzM10sIFstODguNDE3ODIsIDMwLjM4NDldLCBbLTg5LjE4MDQ5LCAzMC4zMTU5OF0sIFstODkuNTkzODMxLCAzMC4xNTk5OTRdLCBbLTg5LjQxMzczNSwgMjkuODk0MTldLCBbLTg5LjQzLCAyOS40ODg2NF0sIFstODkuMjE3NjcsIDI5LjI5MTA4XSwgWy04OS40MDgyMywgMjkuMTU5NjFdLCBbLTg5Ljc3OTI4LCAyOS4zMDcxNF0sIFstOTAuMTU0NjMsIDI5LjExNzQzXSwgWy05MC44ODAyMjUsIDI5LjE0ODUzNV0sIFstOTEuNjI2Nzg1LCAyOS42NzddLCBbLTkyLjQ5OTA2LCAyOS41NTIzXSwgWy05My4yMjYzNywgMjkuNzgzNzVdLCBbLTkzLjg0ODQyLCAyOS43MTM2M10sIFstOTQuNjksIDI5LjQ4XSwgWy05NS42MDAyNiwgMjguNzM4NjNdLCBbLTk2LjU5NDA0LCAyOC4zMDc0OF0sIFstOTcuMTQsIDI3LjgzXSwgWy05Ny4zNywgMjcuMzhdLCBbLTk3LjM4LCAyNi42OV0sIFstOTcuMzMsIDI2LjIxXSwgWy05Ny4xNCwgMjUuODddLCBbLTk3LjUzLCAyNS44NF0sIFstOTguMjQsIDI2LjA2XSwgWy05OS4wMiwgMjYuMzddLCBbLTk5LjMsIDI2Ljg0XSwgWy05OS41MiwgMjcuNTRdLCBbLTEwMC4xMSwgMjguMTFdLCBbLTEwMC40NTU4NCwgMjguNjk2MTJdLCBbLTEwMC45NTc2LCAyOS4zODA3MV0sIFstMTAxLjY2MjQsIDI5Ljc3OTNdLCBbLTEwMi40OCwgMjkuNzZdLCBbLTEwMy4xMSwgMjguOTddLCBbLTEwMy45NCwgMjkuMjddLCBbLTEwNC40NTY5NywgMjkuNTcxOTZdLCBbLTEwNC43MDU3NSwgMzAuMTIxNzNdLCBbLTEwNS4wMzczNywgMzAuNjQ0MDJdLCBbLTEwNS42MzE1OSwgMzEuMDgzODNdLCBbLTEwNi4xNDI5LCAzMS4zOTk5NV0sIFstMTA2LjUwNzU5LCAzMS43NTQ1Ml0sIFstMTA4LjI0LCAzMS43NTQ4NTRdLCBbLTEwOC4yNDE5NCwgMzEuMzQyMjJdLCBbLTEwOS4wMzUsIDMxLjM0MTk0XSwgWy0xMTEuMDIzNjEsIDMxLjMzNDcyXSwgWy0xMTMuMzA0OTgsIDMyLjAzOTE0XSwgWy0xMTQuODE1LCAzMi41MjUyOF0sIFstMTE0LjcyMTM5LCAzMi43MjA4M10sIFstMTE1Ljk5MTM1LCAzMi42MTIzOV0sIFstMTE3LjEyNzc2LCAzMi41MzUzNF0sIFstMTE3LjI5NTkzOCwgMzMuMDQ2MjI1XSwgWy0xMTcuOTQ0LCAzMy42MjEyMzZdLCBbLTExOC40MTA2MDIsIDMzLjc0MDkwOV0sIFstMTE4LjUxOTg5NSwgMzQuMDI3NzgyXSwgWy0xMTkuMDgxLCAzNC4wNzhdLCBbLTExOS40Mzg4NDEsIDM0LjM0ODQ3N10sIFstMTIwLjM2Nzc4LCAzNC40NDcxMV0sIFstMTIwLjYyMjg2LCAzNC42MDg1NV0sIFstMTIwLjc0NDMzLCAzNS4xNTY4Nl0sIFstMTIxLjcxNDU3LCAzNi4xNjE1M10sIFstMTIyLjU0NzQ3LCAzNy41NTE3Nl0sIFstMTIyLjUxMjAxLCAzNy43ODMzOV0sIFstMTIyLjk1MzE5LCAzOC4xMTM3MV0sIFstMTIzLjcyNzIsIDM4Ljk1MTY2XSwgWy0xMjMuODY1MTcsIDM5Ljc2Njk5XSwgWy0xMjQuMzk4MDcsIDQwLjMxMzJdLCBbLTEyNC4xNzg4NiwgNDEuMTQyMDJdLCBbLTEyNC4yMTM3LCA0MS45OTk2NF0sIFstMTI0LjUzMjg0LCA0Mi43NjU5OV0sIFstMTI0LjE0MjE0LCA0My43MDgzOF0sIFstMTI0LjAyMDUzNSwgNDQuNjE1ODk1XSwgWy0xMjMuODk4OTMsIDQ1LjUyMzQxXSwgWy0xMjQuMDc5NjM1LCA0Ni44NjQ3NV0sIFstMTI0LjM5NTY3LCA0Ny43MjAxN10sIFstMTI0LjY4NzIxLCA0OC4xODQ0MzNdLCBbLTEyNC41NjYxMDEsIDQ4LjM3OTcxNV0sIFstMTIzLjEyLCA0OC4wNF0sIFstMTIyLjU4NzM2LCA0Ny4wOTZdLCBbLTEyMi4zNCwgNDcuMzZdLCBbLTEyMi41LCA0OC4xOF0sIFstMTIyLjg0LCA0OV0sIFstMTIwLCA0OV0sIFstMTE3LjAzMTIxLCA0OV0sIFstMTE2LjA0ODE4LCA0OV0sIFstMTEzLCA0OV0sIFstMTEwLjA1LCA0OV0sIFstMTA3LjA1LCA0OV0sIFstMTA0LjA0ODI2LCA0OC45OTk4Nl0sIFstMTAwLjY1LCA0OV0sIFstOTcuMjI4NzIsIDQ5LjAwMDddLCBbLTk1LjE1OTA3LCA0OV0sIFstOTUuMTU2MDksIDQ5LjM4NDI1XSwgWy05NC44MTc1OCwgNDkuMzg5MDVdXV0sIFtbWy0xNTMuMDA2MzE0LCA1Ny4xMTU4NDJdLCBbLTE1NC4wMDUwOSwgNTYuNzM0Njc3XSwgWy0xNTQuNTE2NDAzLCA1Ni45OTI3NDldLCBbLTE1NC42NzA5OTMsIDU3LjQ2MTE5Nl0sIFstMTUzLjc2Mjc4LCA1Ny44MTY1NzVdLCBbLTE1My4yMjg3MjksIDU3Ljk2ODk2OF0sIFstMTUyLjU2NDc5MSwgNTcuOTAxNDI3XSwgWy0xNTIuMTQxMTQ3LCA1Ny41OTEwNTldLCBbLTE1My4wMDYzMTQsIDU3LjExNTg0Ml1dXSwgW1tbLTE2NS41NzkxNjQsIDU5LjkwOTk4N10sIFstMTY2LjE5Mjc3LCA1OS43NTQ0NDFdLCBbLTE2Ni44NDgzMzcsIDU5Ljk0MTQwNl0sIFstMTY3LjQ1NTI3NywgNjAuMjEzMDY5XSwgWy0xNjYuNDY3NzkyLCA2MC4zODQxN10sIFstMTY1LjY3NDQzLCA2MC4yOTM2MDddLCBbLTE2NS41NzkxNjQsIDU5LjkwOTk4N11dXSwgW1tbLTE3MS43MzE2NTcsIDYzLjc4MjUxNV0sIFstMTcxLjExNDQzNCwgNjMuNTkyMTkxXSwgWy0xNzAuNDkxMTEyLCA2My42OTQ5NzVdLCBbLTE2OS42ODI1MDUsIDYzLjQzMTExNl0sIFstMTY4LjY4OTQzOSwgNjMuMjk3NTA2XSwgWy0xNjguNzcxOTQxLCA2My4xODg1OThdLCBbLTE2OS41Mjk0NCwgNjIuOTc2OTMxXSwgWy0xNzAuMjkwNTU2LCA2My4xOTQ0MzhdLCBbLTE3MC42NzEzODYsIDYzLjM3NTgyMl0sIFstMTcxLjU1MzA2MywgNjMuMzE3Nzg5XSwgWy0xNzEuNzkxMTExLCA2My40MDU4NDZdLCBbLTE3MS43MzE2NTcsIDYzLjc4MjUxNV1dXSwgW1tbLTE1NS4wNjc3OSwgNzEuMTQ3Nzc2XSwgWy0xNTQuMzQ0MTY1LCA3MC42OTY0MDldLCBbLTE1My45MDAwMDYsIDcwLjg4OTk4OV0sIFstMTUyLjIxMDAwNiwgNzAuODI5OTkyXSwgWy0xNTIuMjcwMDAyLCA3MC42MDAwMDZdLCBbLTE1MC43Mzk5OTIsIDcwLjQzMDAxN10sIFstMTQ5LjcyMDAwMywgNzAuNTMwMDFdLCBbLTE0Ny42MTMzNjIsIDcwLjIxNDAzNV0sIFstMTQ1LjY4OTk5LCA3MC4xMjAwMV0sIFstMTQ0LjkyMDAxMSwgNjkuOTg5OTkyXSwgWy0xNDMuNTg5NDQ2LCA3MC4xNTI1MTRdLCBbLTE0Mi4wNzI1MSwgNjkuODUxOTM4XSwgWy0xNDAuOTg1OTg4LCA2OS43MTE5OThdLCBbLTE0MC45ODU5ODgsIDY5LjcxMTk5OF0sIFstMTQwLjk5MjQ5OSwgNjYuMDAwMDI5XSwgWy0xNDAuOTk3NzcsIDYwLjMwNjM5N10sIFstMTQwLjAxMjk5OCwgNjAuMjc2ODM4XSwgWy0xMzkuMDM5LCA2MC4wMDAwMDddLCBbLTEzOC4zNDA4OSwgNTkuNTYyMTFdLCBbLTEzNy40NTI1LCA1OC45MDVdLCBbLTEzNi40Nzk3MiwgNTkuNDYzODldLCBbLTEzNS40NzU4MywgNTkuNzg3NzhdLCBbLTEzNC45NDUsIDU5LjI3MDU2XSwgWy0xMzQuMjcxMTEsIDU4Ljg2MTExXSwgWy0xMzMuMzU1NTQ5LCA1OC40MTAyODVdLCBbLTEzMi43MzA0MiwgNTcuNjkyODldLCBbLTEzMS43MDc4MSwgNTYuNTUyMTJdLCBbLTEzMC4wMDc3OCwgNTUuOTE1ODNdLCBbLTEyOS45Nzk5OTQsIDU1LjI4NDk5OF0sIFstMTMwLjUzNjExLCA1NC44MDI3NTNdLCBbLTEzMS4wODU4MTgsIDU1LjE3ODkwNl0sIFstMTMxLjk2NzIxMSwgNTUuNDk3Nzc2XSwgWy0xMzIuMjUwMDExLCA1Ni4zNjk5OTZdLCBbLTEzMy41MzkxODEsIDU3LjE3ODg4N10sIFstMTM0LjA3ODA2MywgNTguMTIzMDY4XSwgWy0xMzUuMDM4MjExLCA1OC4xODc3MTVdLCBbLTEzNi42MjgwNjIsIDU4LjIxMjIwOV0sIFstMTM3LjgwMDAwNiwgNTguNDk5OTk1XSwgWy0xMzkuODY3Nzg3LCA1OS41Mzc3NjJdLCBbLTE0MC44MjUyNzQsIDU5LjcyNzUxN10sIFstMTQyLjU3NDQ0NCwgNjAuMDg0NDQ3XSwgWy0xNDMuOTU4ODgxLCA1OS45OTkxOF0sIFstMTQ1LjkyNTU1NywgNjAuNDU4NjFdLCBbLTE0Ny4xMTQzNzQsIDYwLjg4NDY1Nl0sIFstMTQ4LjIyNDMwNiwgNjAuNjcyOTg5XSwgWy0xNDguMDE4MDY2LCA1OS45NzgzMjldLCBbLTE0OC41NzA4MjMsIDU5LjkxNDE3M10sIFstMTQ5LjcyNzg1OCwgNTkuNzA1NjU4XSwgWy0xNTAuNjA4MjQzLCA1OS4zNjgyMTFdLCBbLTE1MS43MTYzOTMsIDU5LjE1NTgyMV0sIFstMTUxLjg1OTQzMywgNTkuNzQ0OTg0XSwgWy0xNTEuNDA5NzE5LCA2MC43MjU4MDNdLCBbLTE1MC4zNDY5NDEsIDYxLjAzMzU4OF0sIFstMTUwLjYyMTExMSwgNjEuMjg0NDI1XSwgWy0xNTEuODk1ODM5LCA2MC43MjcxOThdLCBbLTE1Mi41NzgzMywgNjAuMDYxNjU3XSwgWy0xNTQuMDE5MTcyLCA1OS4zNTAyNzldLCBbLTE1My4yODc1MTEsIDU4Ljg2NDcyOF0sIFstMTU0LjIzMjQ5MiwgNTguMTQ2Mzc0XSwgWy0xNTUuMzA3NDkxLCA1Ny43Mjc3OTVdLCBbLTE1Ni4zMDgzMzUsIDU3LjQyMjc3NF0sIFstMTU2LjU1NjA5NywgNTYuOTc5OTg1XSwgWy0xNTguMTE3MjE3LCA1Ni40NjM2MDhdLCBbLTE1OC40MzMzMjEsIDU1Ljk5NDE1NF0sIFstMTU5LjYwMzMyNywgNTUuNTY2Njg2XSwgWy0xNjAuMjg5NzIsIDU1LjY0MzU4MV0sIFstMTYxLjIyMzA0OCwgNTUuMzY0NzM1XSwgWy0xNjIuMjM3NzY2LCA1NS4wMjQxODddLCBbLTE2My4wNjk0NDcsIDU0LjY4OTczN10sIFstMTY0Ljc4NTU2OSwgNTQuNDA0MTczXSwgWy0xNjQuOTQyMjI2LCA1NC41NzIyMjVdLCBbLTE2My44NDgzNCwgNTUuMDM5NDMxXSwgWy0xNjIuODcwMDAxLCA1NS4zNDgwNDNdLCBbLTE2MS44MDQxNzUsIDU1Ljg5NDk4Nl0sIFstMTYwLjU2MzYwNSwgNTYuMDA4MDU1XSwgWy0xNjAuMDcwNTYsIDU2LjQxODA1NV0sIFstMTU4LjY4NDQ0MywgNTcuMDE2Njc1XSwgWy0xNTguNDYxMDk3LCA1Ny4yMTY5MjFdLCBbLTE1Ny43MjI3NywgNTcuNTcwMDAxXSwgWy0xNTcuNTUwMjc0LCA1OC4zMjgzMjZdLCBbLTE1Ny4wNDE2NzUsIDU4LjkxODg4NV0sIFstMTU4LjE5NDczMSwgNTguNjE1ODAyXSwgWy0xNTguNTE3MjE4LCA1OC43ODc3ODFdLCBbLTE1OS4wNTg2MDYsIDU4LjQyNDE4Nl0sIFstMTU5LjcxMTY2NywgNTguOTMxMzldLCBbLTE1OS45ODEyODksIDU4LjU3MjU0OV0sIFstMTYwLjM1NTI3MSwgNTkuMDcxMTIzXSwgWy0xNjEuMzU1MDAzLCA1OC42NzA4MzhdLCBbLTE2MS45Njg4OTQsIDU4LjY3MTY2NV0sIFstMTYyLjA1NDk4NywgNTkuMjY2OTI1XSwgWy0xNjEuODc0MTcxLCA1OS42MzM2MjFdLCBbLTE2Mi41MTgwNTksIDU5Ljk4OTcyNF0sIFstMTYzLjgxODM0MSwgNTkuNzk4MDU2XSwgWy0xNjQuNjYyMjE4LCA2MC4yNjc0ODRdLCBbLTE2NS4zNDYzODgsIDYwLjUwNzQ5Nl0sIFstMTY1LjM1MDgzMiwgNjEuMDczODk1XSwgWy0xNjYuMTIxMzc5LCA2MS41MDAwMTldLCBbLTE2NS43MzQ0NTIsIDYyLjA3NDk5N10sIFstMTY0LjkxOTE3OSwgNjIuNjMzMDc2XSwgWy0xNjQuNTYyNTA4LCA2My4xNDYzNzhdLCBbLTE2My43NTMzMzIsIDYzLjIxOTQ0OV0sIFstMTYzLjA2NzIyNCwgNjMuMDU5NDU5XSwgWy0xNjIuMjYwNTU1LCA2My41NDE5MzZdLCBbLTE2MS41MzQ0NSwgNjMuNDU1ODE3XSwgWy0xNjAuNzcyNTA3LCA2My43NjYxMDhdLCBbLTE2MC45NTgzMzUsIDY0LjIyMjc5OV0sIFstMTYxLjUxODA2OCwgNjQuNDAyNzg4XSwgWy0xNjAuNzc3Nzc4LCA2NC43ODg2MDRdLCBbLTE2MS4zOTE5MjYsIDY0Ljc3NzIzNV0sIFstMTYyLjQ1MzA1LCA2NC41NTk0NDVdLCBbLTE2Mi43NTc3ODYsIDY0LjMzODYwNV0sIFstMTYzLjU0NjM5NCwgNjQuNTU5MTZdLCBbLTE2NC45NjA4MywgNjQuNDQ2OTQ1XSwgWy0xNjYuNDI1Mjg4LCA2NC42ODY2NzJdLCBbLTE2Ni44NDUwMDQsIDY1LjA4ODg5Nl0sIFstMTY4LjExMDU2LCA2NS42Njk5OTddLCBbLTE2Ni43MDUyNzEsIDY2LjA4ODMxOF0sIFstMTY0LjQ3NDcxLCA2Ni41NzY2Nl0sIFstMTYzLjY1MjUxMiwgNjYuNTc2NjZdLCBbLTE2My43ODg2MDIsIDY2LjA3NzIwN10sIFstMTYxLjY3Nzc3NCwgNjYuMTE2MTJdLCBbLTE2Mi40ODk3MTUsIDY2LjczNTU2NV0sIFstMTYzLjcxOTcxNywgNjcuMTE2Mzk1XSwgWy0xNjQuNDMwOTkxLCA2Ny42MTYzMzhdLCBbLTE2NS4zOTAyODcsIDY4LjA0Mjc3Ml0sIFstMTY2Ljc2NDQ0MSwgNjguMzU4ODc3XSwgWy0xNjYuMjA0NzA3LCA2OC44ODMwMzFdLCBbLTE2NC40MzA4MTEsIDY4LjkxNTUzNV0sIFstMTYzLjE2ODYxNCwgNjkuMzcxMTE1XSwgWy0xNjIuOTMwNTY2LCA2OS44NTgwNjJdLCBbLTE2MS45MDg4OTcsIDcwLjMzMzMzXSwgWy0xNjAuOTM0Nzk3LCA3MC40NDc2OV0sIFstMTU5LjAzOTE3NiwgNzAuODkxNjQyXSwgWy0xNTguMTE5NzIzLCA3MC44MjQ3MjFdLCBbLTE1Ni41ODA4MjUsIDcxLjM1Nzc2NF0sIFstMTU1LjA2Nzc5LCA3MS4xNDc3NzZdXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIlVTQSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZlYjI0YyIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s2Ni41MTg2MDcsIDM3LjM2Mjc4NF0sIFs2Ni41NDYxNSwgMzcuOTc0Njg1XSwgWzY1LjIxNTk5OSwgMzguNDAyNjk1XSwgWzY0LjE3MDIyMywgMzguODkyNDA3XSwgWzYzLjUxODAxNSwgMzkuMzYzMjU3XSwgWzYyLjM3NDI2LCA0MC4wNTM4ODZdLCBbNjEuODgyNzE0LCA0MS4wODQ4NTddLCBbNjEuNTQ3MTc5LCA0MS4yNjYzN10sIFs2MC40NjU5NTMsIDQxLjIyMDMyN10sIFs2MC4wODMzNDEsIDQxLjQyNTE0Nl0sIFs1OS45NzY0MjIsIDQyLjIyMzA4Ml0sIFs1OC42MjkwMTEsIDQyLjc1MTU1MV0sIFs1Ny43ODY1MywgNDIuMTcwNTUzXSwgWzU2LjkzMjIxNSwgNDEuODI2MDI2XSwgWzU3LjA5NjM5MSwgNDEuMzIyMzFdLCBbNTUuOTY4MTkxLCA0MS4zMDg2NDJdLCBbNTUuOTI4OTE3LCA0NC45OTU4NThdLCBbNTguNTAzMTI3LCA0NS41ODY4MDRdLCBbNTguNjg5OTg5LCA0NS41MDAwMTRdLCBbNjAuMjM5OTcyLCA0NC43ODQwMzddLCBbNjEuMDU4MzIsIDQ0LjQwNTgxN10sIFs2Mi4wMTMzLCA0My41MDQ0NzddLCBbNjMuMTg1Nzg3LCA0My42NTAwNzVdLCBbNjQuOTAwODI0LCA0My43MjgwODFdLCBbNjYuMDk4MDEyLCA0Mi45OTc2Nl0sIFs2Ni4wMjMzOTIsIDQxLjk5NDY0Nl0sIFs2Ni41MTA2NDksIDQxLjk4NzY0NF0sIFs2Ni43MTQwNDcsIDQxLjE2ODQ0NF0sIFs2Ny45ODU4NTYsIDQxLjEzNTk5MV0sIFs2OC4yNTk4OTYsIDQwLjY2MjMyNV0sIFs2OC42MzI0ODMsIDQwLjY2ODY4MV0sIFs2OS4wNzAwMjcsIDQxLjM4NDI0NF0sIFs3MC4zODg5NjUsIDQyLjA4MTMwOF0sIFs3MC45NjIzMTUsIDQyLjI2NjE1NF0sIFs3MS4yNTkyNDgsIDQyLjE2NzcxMV0sIFs3MC40MjAwMjIsIDQxLjUxOTk5OF0sIFs3MS4xNTc4NTksIDQxLjE0MzU4N10sIFs3MS44NzAxMTUsIDQxLjM5MjldLCBbNzMuMDU1NDE3LCA0MC44NjYwMzNdLCBbNzEuNzc0ODc1LCA0MC4xNDU4NDRdLCBbNzEuMDE0MTk4LCA0MC4yNDQzNjZdLCBbNzAuNjAxNDA3LCA0MC4yMTg1MjddLCBbNzAuNDU4MTYsIDQwLjQ5NjQ5NV0sIFs3MC42NjY2MjIsIDQwLjk2MDIxM10sIFs2OS4zMjk0OTUsIDQwLjcyNzgyNF0sIFs2OS4wMTE2MzMsIDQwLjA4NjE1OF0sIFs2OC41MzY0MTYsIDM5LjUzMzQ1M10sIFs2Ny43MDE0MjksIDM5LjU4MDQ3OF0sIFs2Ny40NDIyMiwgMzkuMTQwMTQ0XSwgWzY4LjE3NjAyNSwgMzguOTAxNTUzXSwgWzY4LjM5MjAzMywgMzguMTU3MDI1XSwgWzY3LjgzLCAzNy4xNDQ5OTRdLCBbNjcuMDc1NzgyLCAzNy4zNTYxNDRdLCBbNjYuNTE4NjA3LCAzNy4zNjI3ODRdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlVaQiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiVXpiZWtpc3RhbiIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbLTcxLjMzMTU4NCwgMTEuNzc2Mjg0XSwgWy03MS4zNjAwMDYsIDExLjUzOTk5NF0sIFstNzEuOTQ3MDUsIDExLjQyMzI4Ml0sIFstNzEuNjIwODY4LCAxMC45Njk0Nl0sIFstNzEuNjMzMDY0LCAxMC40NDY0OTRdLCBbLTcyLjA3NDE3NCwgOS44NjU2NTFdLCBbLTcxLjY5NTY0NCwgOS4wNzIyNjNdLCBbLTcxLjI2NDU1OSwgOS4xMzcxOTVdLCBbLTcxLjAzOTk5OSwgOS44NTk5OTNdLCBbLTcxLjM1MDA4NCwgMTAuMjExOTM1XSwgWy03MS40MDA2MjMsIDEwLjk2ODk2OV0sIFstNzAuMTU1Mjk5LCAxMS4zNzU0ODJdLCBbLTcwLjI5Mzg0MywgMTEuODQ2ODIyXSwgWy02OS45NDMyNDUsIDEyLjE2MjMwN10sIFstNjkuNTg0MywgMTEuNDU5NjExXSwgWy02OC44ODI5OTksIDExLjQ0MzM4NV0sIFstNjguMjMzMjcxLCAxMC44ODU3NDRdLCBbLTY4LjE5NDEyNywgMTAuNTU0NjUzXSwgWy02Ny4yOTYyNDksIDEwLjU0NTg2OF0sIFstNjYuMjI3ODY0LCAxMC42NDg2MjddLCBbLTY1LjY1NTIzOCwgMTAuMjAwNzk5XSwgWy02NC44OTA0NTIsIDEwLjA3NzIxNV0sIFstNjQuMzI5NDc5LCAxMC4zODk1OTldLCBbLTY0LjMxODAwNywgMTAuNjQxNDE4XSwgWy02My4wNzkzMjIsIDEwLjcwMTcyNF0sIFstNjEuODgwOTQ2LCAxMC43MTU2MjVdLCBbLTYyLjczMDExOSwgMTAuNDIwMjY5XSwgWy02Mi4zODg1MTIsIDkuOTQ4MjA0XSwgWy02MS41ODg3NjcsIDkuODczMDY3XSwgWy02MC44MzA1OTcsIDkuMzgxMzRdLCBbLTYwLjY3MTI1MiwgOC41ODAxNzRdLCBbLTYwLjE1MDA5NiwgOC42MDI3NTddLCBbLTU5Ljc1ODI4NSwgOC4zNjcwMzVdLCBbLTYwLjU1MDU4OCwgNy43Nzk2MDNdLCBbLTYwLjYzNzk3MywgNy40MTVdLCBbLTYwLjI5NTY2OCwgNy4wNDM5MTFdLCBbLTYwLjU0Mzk5OSwgNi44NTY1ODRdLCBbLTYxLjE1OTMzNiwgNi42OTYwNzddLCBbLTYxLjEzOTQxNSwgNi4yMzQyOTddLCBbLTYxLjQxMDMwMywgNS45NTkwNjhdLCBbLTYwLjczMzU3NCwgNS4yMDAyNzddLCBbLTYwLjYwMTE3OSwgNC45MTgwOThdLCBbLTYwLjk2Njg5MywgNC41MzY0NjhdLCBbLTYyLjA4NTQzLCA0LjE2MjEyNF0sIFstNjIuODA0NTMzLCA0LjAwNjk2NV0sIFstNjMuMDkzMTk4LCAzLjc3MDU3MV0sIFstNjMuODg4MzQzLCA0LjAyMDUzXSwgWy02NC42Mjg2NTksIDQuMTQ4NDgxXSwgWy02NC44MTYwNjQsIDQuMDU2NDQ1XSwgWy02NC4zNjg0OTQsIDMuNzk3MjFdLCBbLTY0LjQwODgyOCwgMy4xMjY3ODZdLCBbLTY0LjI2OTk5OSwgMi40OTcwMDZdLCBbLTYzLjQyMjg2NywgMi40MTEwNjhdLCBbLTYzLjM2ODc4OCwgMi4yMDA5XSwgWy02NC4wODMwODUsIDEuOTE2MzY5XSwgWy02NC4xOTkzMDYsIDEuNDkyODU1XSwgWy02NC42MTEwMTIsIDEuMzI4NzMxXSwgWy02NS4zNTQ3MTMsIDEuMDk1MjgyXSwgWy02NS41NDgyNjcsIDAuNzg5MjU0XSwgWy02Ni4zMjU3NjUsIDAuNzI0NDUyXSwgWy02Ni44NzYzMjYsIDEuMjUzMzYxXSwgWy02Ny4xODEyOTQsIDIuMjUwNjM4XSwgWy02Ny40NDcwOTIsIDIuNjAwMjgxXSwgWy02Ny44MDk5MzgsIDIuODIwNjU1XSwgWy02Ny4zMDMxNzMsIDMuMzE4NDU0XSwgWy02Ny4zMzc1NjQsIDMuNTQyMzQyXSwgWy02Ny42MjE4MzYsIDMuODM5NDgyXSwgWy02Ny44MjMwMTIsIDQuNTAzOTM3XSwgWy02Ny43NDQ2OTcsIDUuMjIxMTI5XSwgWy02Ny41MjE1MzIsIDUuNTU2ODddLCBbLTY3LjM0MTQ0LCA2LjA5NTQ2OF0sIFstNjcuNjk1MDg3LCA2LjI2NzMxOF0sIFstNjguMjY1MDUyLCA2LjE1MzI2OF0sIFstNjguOTg1MzE5LCA2LjIwNjgwNV0sIFstNjkuMzg5NDgsIDYuMDk5ODYxXSwgWy03MC4wOTMzMTMsIDYuOTYwMzc2XSwgWy03MC42NzQyMzQsIDcuMDg3Nzg1XSwgWy03MS45NjAxNzYsIDYuOTkxNjE1XSwgWy03Mi4xOTgzNTIsIDcuMzQwNDMxXSwgWy03Mi40NDQ0ODcsIDcuNDIzNzg1XSwgWy03Mi40Nzk2NzksIDcuNjMyNTA2XSwgWy03Mi4zNjA5MDEsIDguMDAyNjM4XSwgWy03Mi40Mzk4NjIsIDguNDA1Mjc1XSwgWy03Mi42NjA0OTUsIDguNjI1Mjg4XSwgWy03Mi43ODg3MywgOS4wODUwMjddLCBbLTczLjMwNDk1MiwgOS4xNTJdLCBbLTczLjAyNzYwNCwgOS43MzY3N10sIFstNzIuOTA1Mjg2LCAxMC40NTAzNDRdLCBbLTcyLjYxNDY1OCwgMTAuODIxOTc1XSwgWy03Mi4yMjc1NzUsIDExLjEwODcwMl0sIFstNzEuOTczOTIyLCAxMS42MDg2NzJdLCBbLTcxLjMzMTU4NCwgMTEuNzc2Mjg0XV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJWRU4iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlZlbmV6dWVsYSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMTA4LjA1MDE4LCAyMS41NTIzOF0sIFsxMDYuNzE1MDY4LCAyMC42OTY4NTFdLCBbMTA1Ljg4MTY4MiwgMTkuNzUyMDVdLCBbMTA1LjY2MjAwNiwgMTkuMDU4MTY1XSwgWzEwNi40MjY4MTcsIDE4LjAwNDEyMV0sIFsxMDcuMzYxOTU0LCAxNi42OTc0NTddLCBbMTA4LjI2OTQ5NSwgMTYuMDc5NzQyXSwgWzEwOC44NzcxMDcsIDE1LjI3NjY5MV0sIFsxMDkuMzM1MjcsIDEzLjQyNjAyOF0sIFsxMDkuMjAwMTM2LCAxMS42NjY4NTldLCBbMTA4LjM2NjEzLCAxMS4wMDgzMjFdLCBbMTA3LjIyMDkyOSwgMTAuMzY0NDg0XSwgWzEwNi40MDUxMTMsIDkuNTMwODRdLCBbMTA1LjE1ODI2NCwgOC41OTk3Nl0sIFsxMDQuNzk1MTg1LCA5LjI0MTAzOF0sIFsxMDUuMDc2MjAyLCA5LjkxODQ5MV0sIFsxMDQuMzM0MzM1LCAxMC40ODY1NDRdLCBbMTA1LjE5OTkxNSwgMTAuODg5MzFdLCBbMTA2LjI0OTY3LCAxMC45NjE4MTJdLCBbMTA1LjgxMDUyNCwgMTEuNTY3NjE1XSwgWzEwNy40OTE0MDMsIDEyLjMzNzIwNl0sIFsxMDcuNjE0NTQ4LCAxMy41MzU1MzFdLCBbMTA3LjM4MjcyNywgMTQuMjAyNDQxXSwgWzEwNy41NjQ1MjUsIDE1LjIwMjE3M10sIFsxMDcuMzEyNzA2LCAxNS45MDg1MzhdLCBbMTA2LjU1NjAwOCwgMTYuNjA0Mjg0XSwgWzEwNS45MjU3NjIsIDE3LjQ4NTMxNV0sIFsxMDUuMDk0NTk4LCAxOC42NjY5NzVdLCBbMTAzLjg5NjUzMiwgMTkuMjY1MTgxXSwgWzEwNC4xODMzODgsIDE5LjYyNDY2OF0sIFsxMDQuODIyNTc0LCAxOS44ODY2NDJdLCBbMTA0LjQzNSwgMjAuNzU4NzMzXSwgWzEwMy4yMDM4NjEsIDIwLjc2NjU2Ml0sIFsxMDIuNzU0ODk2LCAyMS42NzUxMzddLCBbMTAyLjE3MDQzNiwgMjIuNDY0NzUzXSwgWzEwMi43MDY5OTIsIDIyLjcwODc5NV0sIFsxMDMuNTA0NTE1LCAyMi43MDM3NTddLCBbMTA0LjQ3Njg1OCwgMjIuODE5MTVdLCBbMTA1LjMyOTIwOSwgMjMuMzUyMDYzXSwgWzEwNS44MTEyNDcsIDIyLjk3Njg5Ml0sIFsxMDYuNzI1NDAzLCAyMi43OTQyNjhdLCBbMTA2LjU2NzI3MywgMjIuMjE4MjA1XSwgWzEwNy4wNDM0MiwgMjEuODExODk5XSwgWzEwOC4wNTAxOCwgMjEuNTUyMzhdXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlZOTSIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiVmlldG5hbSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogImJsYWNrIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbW1sxNjcuODQ0ODc3LCAtMTYuNDY2MzMzXSwgWzE2Ny41MTUxODEsIC0xNi41OTc4NV0sIFsxNjcuMTgwMDA4LCAtMTYuMTU5OTk1XSwgWzE2Ny4yMTY4MDEsIC0xNS44OTE4NDZdLCBbMTY3Ljg0NDg3NywgLTE2LjQ2NjMzM11dXSwgW1tbMTY3LjEwNzcxMiwgLTE0LjkzMzkyXSwgWzE2Ny4yNzAwMjgsIC0xNS43NDAwMjFdLCBbMTY3LjAwMTIwNywgLTE1LjYxNDYwMl0sIFsxNjYuNzkzMTU4LCAtMTUuNjY4ODExXSwgWzE2Ni42NDk4NTksIC0xNS4zOTI3MDRdLCBbMTY2LjYyOTEzNywgLTE0LjYyNjQ5N10sIFsxNjcuMTA3NzEyLCAtMTQuOTMzOTJdXV1dLCAidHlwZSI6ICJNdWx0aVBvbHlnb24ifSwgImlkIjogIlZVVCIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiVmFudWF0dSIsICJzdHlsZSI6IHsiY29sb3IiOiAiYmxhY2siLCAiZmlsbENvbG9yIjogIiNmZmZmYjIiLCAiZmlsbE9wYWNpdHkiOiAwLjcsICJvcGFjaXR5IjogMC4yLCAid2VpZ2h0IjogMX19LCAidHlwZSI6ICJGZWF0dXJlIn0sIHsiZ2VvbWV0cnkiOiB7ImNvb3JkaW5hdGVzIjogW1tbMzUuNTQ1NjY1LCAzMi4zOTM5OTJdLCBbMzUuNTQ1MjUyLCAzMS43ODI1MDVdLCBbMzUuMzk3NTYxLCAzMS40ODkwODZdLCBbMzQuOTI3NDA4LCAzMS4zNTM0MzVdLCBbMzQuOTcwNTA3LCAzMS42MTY3NzhdLCBbMzUuMjI1ODkyLCAzMS43NTQzNDFdLCBbMzQuOTc0NjQxLCAzMS44NjY1ODJdLCBbMzUuMTgzOTMsIDMyLjUzMjUxMV0sIFszNS41NDU2NjUsIDMyLjM5Mzk5Ml1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiUFNFIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJXZXN0IEJhbmsiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICJibGFjayIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1s1My4xMDg1NzMsIDE2LjY1MTA1MV0sIFs1Mi4zODUyMDYsIDE2LjM4MjQxMV0sIFs1Mi4xOTE3MjksIDE1LjkzODQzM10sIFs1Mi4xNjgxNjUsIDE1LjU5NzQyXSwgWzUxLjE3MjUxNSwgMTUuMTc1MjVdLCBbNDkuNTc0NTc2LCAxNC43MDg3NjddLCBbNDguNjc5MjMxLCAxNC4wMDMyMDJdLCBbNDguMjM4OTQ3LCAxMy45NDgwOV0sIFs0Ny45Mzg5MTQsIDE0LjAwNzIzM10sIFs0Ny4zNTQ0NTQsIDEzLjU5MjIyXSwgWzQ2LjcxNzA3NiwgMTMuMzk5Njk5XSwgWzQ1Ljg3NzU5MywgMTMuMzQ3NzY0XSwgWzQ1LjYyNTA1LCAxMy4yOTA5NDZdLCBbNDUuNDA2NDU5LCAxMy4wMjY5MDVdLCBbNDUuMTQ0MzU2LCAxMi45NTM5MzhdLCBbNDQuOTg5NTMzLCAxMi42OTk1ODddLCBbNDQuNDk0NTc2LCAxMi43MjE2NTNdLCBbNDQuMTc1MTEzLCAxMi41ODU5NV0sIFs0My40ODI5NTksIDEyLjYzNjhdLCBbNDMuMjIyODcxLCAxMy4yMjA5NV0sIFs0My4yNTE0NDgsIDEzLjc2NzU4NF0sIFs0My4wODc5NDQsIDE0LjA2MjYzXSwgWzQyLjg5MjI0NSwgMTQuODAyMjQ5XSwgWzQyLjYwNDg3MywgMTUuMjEzMzM1XSwgWzQyLjgwNTAxNSwgMTUuMjYxOTYzXSwgWzQyLjcwMjQzOCwgMTUuNzE4ODg2XSwgWzQyLjgyMzY3MSwgMTUuOTExNzQyXSwgWzQyLjc3OTMzMiwgMTYuMzQ3ODkxXSwgWzQzLjIxODM3NSwgMTYuNjY2ODldLCBbNDMuMTE1Nzk4LCAxNy4wODg0NF0sIFs0My4zODA3OTQsIDE3LjU3OTk4N10sIFs0My43OTE1MTksIDE3LjMxOTk3N10sIFs0NC4wNjI2MTMsIDE3LjQxMDM1OV0sIFs0NS4yMTY2NTEsIDE3LjQzMzMyOV0sIFs0NS4zOTk5OTksIDE3LjMzMzMzNV0sIFs0Ni4zNjY2NTksIDE3LjIzMzMxNV0sIFs0Ni43NDk5OTQsIDE3LjI4MzMzOF0sIFs0Ny4wMDAwMDUsIDE2Ljk0OTk5OV0sIFs0Ny40NjY2OTUsIDE3LjExNjY4Ml0sIFs0OC4xODMzNDQsIDE4LjE2NjY2OV0sIFs0OS4xMTY2NzIsIDE4LjYxNjY2OF0sIFs1Mi4wMDAwMSwgMTkuMDAwMDAzXSwgWzUyLjc4MjE4NCwgMTcuMzQ5NzQyXSwgWzUzLjEwODU3MywgMTYuNjUxMDUxXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJZRU0iLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlllbWVuIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1szMS41MjEwMDEsIC0yOS4yNTczODddLCBbMzEuMzI1NTYxLCAtMjkuNDAxOTc4XSwgWzMwLjkwMTc2MywgLTI5LjkwOTk1N10sIFszMC42MjI4MTMsIC0zMC40MjM3NzZdLCBbMzAuMDU1NzE2LCAtMzEuMTQwMjY5XSwgWzI4LjkyNTU1MywgLTMyLjE3MjA0MV0sIFsyOC4yMTk3NTYsIC0zMi43NzE5NTNdLCBbMjcuNDY0NjA4LCAtMzMuMjI2OTY0XSwgWzI2LjQxOTQ1MiwgLTMzLjYxNDk1XSwgWzI1LjkwOTY2NCwgLTMzLjY2NzA0XSwgWzI1Ljc4MDYyOCwgLTMzLjk0NDY0Nl0sIFsyNS4xNzI4NjIsIC0zMy43OTY4NTFdLCBbMjQuNjc3ODUzLCAtMzMuOTg3MTc2XSwgWzIzLjU5NDA0MywgLTMzLjc5NDQ3NF0sIFsyMi45ODgxODksIC0zMy45MTY0MzFdLCBbMjIuNTc0MTU3LCAtMzMuODY0MDgzXSwgWzIxLjU0Mjc5OSwgLTM0LjI1ODgzOV0sIFsyMC42ODkwNTMsIC0zNC40MTcxNzVdLCBbMjAuMDcxMjYxLCAtMzQuNzk1MTM3XSwgWzE5LjYxNjQwNSwgLTM0LjgxOTE2Nl0sIFsxOS4xOTMyNzgsIC0zNC40NjI1OTldLCBbMTguODU1MzE1LCAtMzQuNDQ0MzA2XSwgWzE4LjQyNDY0MywgLTMzLjk5Nzg3M10sIFsxOC4zNzc0MTEsIC0zNC4xMzY1MjFdLCBbMTguMjQ0NDk5LCAtMzMuODY3NzUyXSwgWzE4LjI1MDA4LCAtMzMuMjgxNDMxXSwgWzE3LjkyNTE5LCAtMzIuNjExMjkxXSwgWzE4LjI0NzkxLCAtMzIuNDI5MTMxXSwgWzE4LjIyMTc2MiwgLTMxLjY2MTYzM10sIFsxNy41NjY5MTgsIC0zMC43MjU3MjFdLCBbMTcuMDY0NDE2LCAtMjkuODc4NjQxXSwgWzE3LjA2MjkxOCwgLTI5Ljg3NTk1NF0sIFsxNi4zNDQ5NzcsIC0yOC41NzY3MDVdLCBbMTYuODI0MDE3LCAtMjguMDgyMTYyXSwgWzE3LjIxODkyOSwgLTI4LjM1NTk0M10sIFsxNy4zODc0OTcsIC0yOC43ODM1MTRdLCBbMTcuODM2MTUyLCAtMjguODU2Mzc4XSwgWzE4LjQ2NDg5OSwgLTI5LjA0NTQ2Ml0sIFsxOS4wMDIxMjcsIC0yOC45NzI0NDNdLCBbMTkuODk0NzM0LCAtMjguNDYxMTA1XSwgWzE5Ljg5NTc2OCwgLTI0Ljc2Nzc5XSwgWzIwLjE2NTcyNiwgLTI0LjkxNzk2Ml0sIFsyMC43NTg2MDksIC0yNS44NjgxMzZdLCBbMjAuNjY2NDcsIC0yNi40Nzc0NTNdLCBbMjAuODg5NjA5LCAtMjYuODI4NTQzXSwgWzIxLjYwNTg5NiwgLTI2LjcyNjUzNF0sIFsyMi4xMDU5NjksIC0yNi4yODAyNTZdLCBbMjIuNTc5NTMyLCAtMjUuOTc5NDQ4XSwgWzIyLjgyNDI3MSwgLTI1LjUwMDQ1OV0sIFsyMy4zMTIwOTcsIC0yNS4yNjg2OV0sIFsyMy43MzM1NywgLTI1LjM5MDEyOV0sIFsyNC4yMTEyNjcsIC0yNS42NzAyMTZdLCBbMjUuMDI1MTcxLCAtMjUuNzE5NjddLCBbMjUuNjY0NjY2LCAtMjUuNDg2ODE2XSwgWzI1Ljc2NTg0OSwgLTI1LjE3NDg0NV0sIFsyNS45NDE2NTIsIC0yNC42OTYzNzNdLCBbMjYuNDg1NzUzLCAtMjQuNjE2MzI3XSwgWzI2Ljc4NjQwNywgLTI0LjI0MDY5MV0sIFsyNy4xMTk0MSwgLTIzLjU3NDMyM10sIFsyOC4wMTcyMzYsIC0yMi44Mjc3NTRdLCBbMjkuNDMyMTg4LCAtMjIuMDkxMzEzXSwgWzI5LjgzOTAzNywgLTIyLjEwMjIxNl0sIFszMC4zMjI4ODMsIC0yMi4yNzE2MTJdLCBbMzAuNjU5ODY1LCAtMjIuMTUxNTY3XSwgWzMxLjE5MTQwOSwgLTIyLjI1MTUxXSwgWzMxLjY3MDM5OCwgLTIzLjY1ODk2OV0sIFszMS45MzA1ODksIC0yNC4zNjk0MTddLCBbMzEuNzUyNDA4LCAtMjUuNDg0Mjg0XSwgWzMxLjgzNzc3OCwgLTI1Ljg0MzMzMl0sIFszMS4zMzMxNTgsIC0yNS42NjAxOTFdLCBbMzEuMDQ0MDgsIC0yNS43MzE0NTJdLCBbMzAuOTQ5NjY3LCAtMjYuMDIyNjQ5XSwgWzMwLjY3NjYwOSwgLTI2LjM5ODA3OF0sIFszMC42ODU5NjIsIC0yNi43NDM4NDVdLCBbMzEuMjgyNzczLCAtMjcuMjg1ODc5XSwgWzMxLjg2ODA2LCAtMjcuMTc3OTI3XSwgWzMyLjA3MTY2NSwgLTI2LjczMzgyXSwgWzMyLjgzMDEyLCAtMjYuNzQyMTkyXSwgWzMyLjU4MDI2NSwgLTI3LjQ3MDE1OF0sIFszMi40NjIxMzMsIC0yOC4zMDEwMTFdLCBbMzIuMjAzMzg5LCAtMjguNzUyNDA1XSwgWzMxLjUyMTAwMSwgLTI5LjI1NzM4N11dLCBbWzI4Ljk3ODI2MywgLTI4Ljk1NTU5N10sIFsyOC41NDE3LCAtMjguNjQ3NTAyXSwgWzI4LjA3NDMzOCwgLTI4Ljg1MTQ2OV0sIFsyNy41MzI1MTEsIC0yOS4yNDI3MTFdLCBbMjYuOTk5MjYyLCAtMjkuODc1OTU0XSwgWzI3Ljc0OTM5NywgLTMwLjY0NTEwNl0sIFsyOC4xMDcyMDUsIC0zMC41NDU3MzJdLCBbMjguMjkxMDY5LCAtMzAuMjI2MjE3XSwgWzI4Ljg0ODQsIC0zMC4wNzAwNTFdLCBbMjkuMDE4NDE1LCAtMjkuNzQzNzY2XSwgWzI5LjMyNTE2NiwgLTI5LjI1NzM4N10sIFsyOC45NzgyNjMsIC0yOC45NTU1OTddXV0sICJ0eXBlIjogIlBvbHlnb24ifSwgImlkIjogIlpBRiIsICJwcm9wZXJ0aWVzIjogeyJoaWdobGlnaHQiOiB7fSwgIm5hbWUiOiAiU291dGggQWZyaWNhIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifSwgeyJnZW9tZXRyeSI6IHsiY29vcmRpbmF0ZXMiOiBbW1szMi43NTkzNzUsIC05LjIzMDU5OV0sIFszMy4yMzEzODgsIC05LjY3NjcyMl0sIFszMy40ODU2ODgsIC0xMC41MjU1NTldLCBbMzMuMzE1MzEsIC0xMC43OTY1NV0sIFszMy4xMTQyODksIC0xMS42MDcxOThdLCBbMzMuMzA2NDIyLCAtMTIuNDM1Nzc4XSwgWzMyLjk5MTc2NCwgLTEyLjc4Mzg3MV0sIFszMi42ODgxNjUsIC0xMy43MTI4NThdLCBbMzMuMjE0MDI1LCAtMTMuOTcxODZdLCBbMzAuMTc5NDgxLCAtMTQuNzk2MDk5XSwgWzMwLjI3NDI1NiwgLTE1LjUwNzc4N10sIFsyOS41MTY4MzQsIC0xNS42NDQ2NzhdLCBbMjguOTQ3NDYzLCAtMTYuMDQzMDUxXSwgWzI4LjgyNTg2OSwgLTE2LjM4OTc0OV0sIFsyOC40Njc5MDYsIC0xNi40Njg0XSwgWzI3LjU5ODI0MywgLTE3LjI5MDgzMV0sIFsyNy4wNDQ0MjcsIC0xNy45MzgwMjZdLCBbMjYuNzA2NzczLCAtMTcuOTYxMjI5XSwgWzI2LjM4MTkzNSwgLTE3Ljg0NjA0Ml0sIFsyNS4yNjQyMjYsIC0xNy43MzY1NF0sIFsyNS4wODQ0NDMsIC0xNy42NjE4MTZdLCBbMjUuMDc2OTUsIC0xNy41Nzg4MjNdLCBbMjQuNjgyMzQ5LCAtMTcuMzUzNDExXSwgWzI0LjAzMzg2MiwgLTE3LjI5NTg0M10sIFsyMy4yMTUwNDgsIC0xNy41MjMxMTZdLCBbMjIuNTYyNDc4LCAtMTYuODk4NDUxXSwgWzIxLjg4Nzg0MywgLTE2LjA4MDMxXSwgWzIxLjkzMzg4NiwgLTEyLjg5ODQzN10sIFsyNC4wMTYxMzcsIC0xMi45MTEwNDZdLCBbMjMuOTMwOTIyLCAtMTIuNTY1ODQ4XSwgWzI0LjA3OTkwNSwgLTEyLjE5MTI5N10sIFsyMy45MDQxNTQsIC0xMS43MjIyODJdLCBbMjQuMDE3ODk0LCAtMTEuMjM3Mjk4XSwgWzIzLjkxMjIxNSwgLTEwLjkyNjgyNl0sIFsyNC4yNTcxNTUsIC0xMC45NTE5OTNdLCBbMjQuMzE0NTE2LCAtMTEuMjYyODI2XSwgWzI0Ljc4MzE3LCAtMTEuMjM4Njk0XSwgWzI1LjQxODExOCwgLTExLjMzMDkzNl0sIFsyNS43NTIzMSwgLTExLjc4NDk2NV0sIFsyNi41NTMwODgsIC0xMS45MjQ0NF0sIFsyNy4xNjQ0MiwgLTExLjYwODc0OF0sIFsyNy4zODg3OTksIC0xMi4xMzI3NDddLCBbMjguMTU1MTA5LCAtMTIuMjcyNDgxXSwgWzI4LjUyMzU2MiwgLTEyLjY5ODYwNF0sIFsyOC45MzQyODYsIC0xMy4yNDg5NThdLCBbMjkuNjk5NjE0LCAtMTMuMjU3MjI3XSwgWzI5LjYxNjAwMSwgLTEyLjE3ODg5NV0sIFsyOS4zNDE1NDgsIC0xMi4zNjA3NDRdLCBbMjguNjQyNDE3LCAtMTEuOTcxNTY5XSwgWzI4LjM3MjI1MywgLTExLjc5MzY0N10sIFsyOC40OTYwNywgLTEwLjc4OTg4NF0sIFsyOC42NzM2ODIsIC05LjYwNTkyNV0sIFsyOC40NDk4NzEsIC05LjE2NDkxOF0sIFsyOC43MzQ4NjcsIC04LjUyNjU1OV0sIFsyOS4wMDI5MTIsIC04LjQwNzAzMl0sIFszMC4zNDYwODYsIC04LjIzODI1N10sIFszMC43NDAwMTUsIC04LjM0MDAwN10sIFszMS4xNTc3NTEsIC04LjU5NDU3OV0sIFszMS41NTYzNDgsIC04Ljc2MjA0OV0sIFszMi4xOTE4NjUsIC04LjkzMDM1OV0sIFszMi43NTkzNzUsIC05LjIzMDU5OV1dXSwgInR5cGUiOiAiUG9seWdvbiJ9LCAiaWQiOiAiWk1CIiwgInByb3BlcnRpZXMiOiB7ImhpZ2hsaWdodCI6IHt9LCAibmFtZSI6ICJaYW1iaWEiLCAic3R5bGUiOiB7ImNvbG9yIjogImJsYWNrIiwgImZpbGxDb2xvciI6ICIjZmZmZmIyIiwgImZpbGxPcGFjaXR5IjogMC43LCAib3BhY2l0eSI6IDAuMiwgIndlaWdodCI6IDF9fSwgInR5cGUiOiAiRmVhdHVyZSJ9LCB7Imdlb21ldHJ5IjogeyJjb29yZGluYXRlcyI6IFtbWzMxLjE5MTQwOSwgLTIyLjI1MTUxXSwgWzMwLjY1OTg2NSwgLTIyLjE1MTU2N10sIFszMC4zMjI4ODMsIC0yMi4yNzE2MTJdLCBbMjkuODM5MDM3LCAtMjIuMTAyMjE2XSwgWzI5LjQzMjE4OCwgLTIyLjA5MTMxM10sIFsyOC43OTQ2NTYsIC0yMS42Mzk0NTRdLCBbMjguMDIxMzcsIC0yMS40ODU5NzVdLCBbMjcuNzI3MjI4LCAtMjAuODUxODAyXSwgWzI3LjcyNDc0NywgLTIwLjQ5OTA1OV0sIFsyNy4yOTY1MDUsIC0yMC4zOTE1Ml0sIFsyNi4xNjQ3OTEsIC0xOS4yOTMwODZdLCBbMjUuODUwMzkxLCAtMTguNzE0NDEzXSwgWzI1LjY0OTE2MywgLTE4LjUzNjAyNl0sIFsyNS4yNjQyMjYsIC0xNy43MzY1NF0sIFsyNi4zODE5MzUsIC0xNy44NDYwNDJdLCBbMjYuNzA2NzczLCAtMTcuOTYxMjI5XSwgWzI3LjA0NDQyNywgLTE3LjkzODAyNl0sIFsyNy41OTgyNDMsIC0xNy4yOTA4MzFdLCBbMjguNDY3OTA2LCAtMTYuNDY4NF0sIFsyOC44MjU4NjksIC0xNi4zODk3NDldLCBbMjguOTQ3NDYzLCAtMTYuMDQzMDUxXSwgWzI5LjUxNjgzNCwgLTE1LjY0NDY3OF0sIFszMC4yNzQyNTYsIC0xNS41MDc3ODddLCBbMzAuMzM4OTU1LCAtMTUuODgwODM5XSwgWzMxLjE3MzA2NCwgLTE1Ljg2MDk0NF0sIFszMS42MzY0OTgsIC0xNi4wNzE5OV0sIFszMS44NTIwNDEsIC0xNi4zMTk0MTddLCBbMzIuMzI4MjM5LCAtMTYuMzkyMDc0XSwgWzMyLjg0NzYzOSwgLTE2LjcxMzM5OF0sIFszMi44NDk4NjEsIC0xNy45NzkwNTddLCBbMzIuNjU0ODg2LCAtMTguNjcyMDldLCBbMzIuNjExOTk0LCAtMTkuNDE5MzgzXSwgWzMyLjc3MjcwOCwgLTE5LjcxNTU5Ml0sIFszMi42NTk3NDMsIC0yMC4zMDQyOV0sIFszMi41MDg2OTMsIC0yMC4zOTUyOTJdLCBbMzIuMjQ0OTg4LCAtMjEuMTE2NDg5XSwgWzMxLjE5MTQwOSwgLTIyLjI1MTUxXV1dLCAidHlwZSI6ICJQb2x5Z29uIn0sICJpZCI6ICJaV0UiLCAicHJvcGVydGllcyI6IHsiaGlnaGxpZ2h0Ijoge30sICJuYW1lIjogIlppbWJhYndlIiwgInN0eWxlIjogeyJjb2xvciI6ICJibGFjayIsICJmaWxsQ29sb3IiOiAiI2ZmZmZiMiIsICJmaWxsT3BhY2l0eSI6IDAuNywgIm9wYWNpdHkiOiAwLjIsICJ3ZWlnaHQiOiAxfX0sICJ0eXBlIjogIkZlYXR1cmUifV0sICJ0eXBlIjogIkZlYXR1cmVDb2xsZWN0aW9uIn0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgfQogICAgICAgICkuYWRkVG8oY2hvcm9wbGV0aF81Y2I5MjQ4YzExNWY0MjNjYWViYzMxZTg1ZGE0NDBkZSApOwogICAgICAgIGdlb19qc29uX2EyZGU5MDk4NDBkNTQyYWVhOTMzZTFjMjljYzMxMTQzLnNldFN0eWxlKGZ1bmN0aW9uKGZlYXR1cmUpIHtyZXR1cm4gZmVhdHVyZS5wcm9wZXJ0aWVzLnN0eWxlO30pOwogICAgICAgIAogICAgCiAgICB2YXIgY29sb3JfbWFwXzIyYzY3OGE4OWYxNTQyMGY4ZjgwNGQ4ZTIzYzc0NmRkID0ge307CgogICAgCiAgICBjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQuY29sb3IgPSBkMy5zY2FsZS50aHJlc2hvbGQoKQogICAgICAgICAgICAgIC5kb21haW4oWzEuMCwgMTM4Ny41NzkxNTgzMTY2MzMzLCAyNzc0LjE1ODMxNjYzMzI2NjYsIDQxNjAuNzM3NDc0OTQ5ODk5NSwgNTU0Ny4zMTY2MzMyNjY1MzMsIDY5MzMuODk1NzkxNTgzMTY2LCA4MzIwLjQ3NDk0OTg5OTc5OSwgOTcwNy4wNTQxMDgyMTY0MzMsIDExMDkzLjYzMzI2NjUzMzA2NiwgMTI0ODAuMjEyNDI0ODQ5NywgMTM4NjYuNzkxNTgzMTY2MzMyLCAxNTI1My4zNzA3NDE0ODI5NjYsIDE2NjM5Ljk0OTg5OTc5OTU5OCwgMTgwMjYuNTI5MDU4MTE2MjM0LCAxOTQxMy4xMDgyMTY0MzI4NjUsIDIwNzk5LjY4NzM3NDc0OTQ5NywgMjIxODYuMjY2NTMzMDY2MTMzLCAyMzU3Mi44NDU2OTEzODI3NjUsIDI0OTU5LjQyNDg0OTY5OTQsIDI2MzQ2LjAwNDAwODAxNjAzMiwgMjc3MzIuNTgzMTY2MzMyNjY0LCAyOTExOS4xNjIzMjQ2NDkzLCAzMDUwNS43NDE0ODI5NjU5MzIsIDMxODkyLjMyMDY0MTI4MjU2NCwgMzMyNzguODk5Nzk5NTk5MTk2LCAzNDY2NS40Nzg5NTc5MTU4MywgMzYwNTIuMDU4MTE2MjMyNDcsIDM3NDM4LjYzNzI3NDU0OTA5NSwgMzg4MjUuMjE2NDMyODY1NzMsIDQwMjExLjc5NTU5MTE4MjM3LCA0MTU5OC4zNzQ3NDk0OTg5OTUsIDQyOTg0Ljk1MzkwNzgxNTYzLCA0NDM3MS41MzMwNjYxMzIyNjYsIDQ1NzU4LjExMjIyNDQ0ODg5NCwgNDcxNDQuNjkxMzgyNzY1NTMsIDQ4NTMxLjI3MDU0MTA4MjE2NSwgNDk5MTcuODQ5Njk5Mzk4OCwgNTEzMDQuNDI4ODU3NzE1NDMsIDUyNjkxLjAwODAxNjAzMjA2NSwgNTQwNzcuNTg3MTc0MzQ4NywgNTU0NjQuMTY2MzMyNjY1MzMsIDU2ODUwLjc0NTQ5MDk4MTk2NCwgNTgyMzcuMzI0NjQ5Mjk4NiwgNTk2MjMuOTAzODA3NjE1MjMsIDYxMDEwLjQ4Mjk2NTkzMTg2NCwgNjIzOTcuMDYyMTI0MjQ4NSwgNjM3ODMuNjQxMjgyNTY1MTMsIDY1MTcwLjIyMDQ0MDg4MTc2LCA2NjU1Ni43OTk1OTkxOTgzOSwgNjc5NDMuMzc4NzU3NTE1MDMsIDY5MzI5Ljk1NzkxNTgzMTY2LCA3MDcxNi41MzcwNzQxNDgyOSwgNzIxMDMuMTE2MjMyNDY0OTMsIDczNDg5LjY5NTM5MDc4MTU2LCA3NDg3Ni4yNzQ1NDkwOTgxOSwgNzYyNjIuODUzNzA3NDE0ODMsIDc3NjQ5LjQzMjg2NTczMTQ2LCA3OTAzNi4wMTIwMjQwNDgwOSwgODA0MjIuNTkxMTgyMzY0NzMsIDgxODA5LjE3MDM0MDY4MTM2LCA4MzE5NS43NDk0OTg5OTc5OSwgODQ1ODIuMzI4NjU3MzE0NjMsIDg1OTY4LjkwNzgxNTYzMTI2LCA4NzM1NS40ODY5NzM5NDc4OSwgODg3NDIuMDY2MTMyMjY0NTMsIDkwMTI4LjY0NTI5MDU4MTE2LCA5MTUxNS4yMjQ0NDg4OTc3OSwgOTI5MDEuODAzNjA3MjE0NDMsIDk0Mjg4LjM4Mjc2NTUzMTA2LCA5NTY3NC45NjE5MjM4NDc3LCA5NzA2MS41NDEwODIxNjQzMywgOTg0NDguMTIwMjQwNDgwOTYsIDk5ODM0LjY5OTM5ODc5NzYsIDEwMTIyMS4yNzg1NTcxMTQyMywgMTAyNjA3Ljg1NzcxNTQzMDg2LCAxMDM5OTQuNDM2ODczNzQ3NSwgMTA1MzgxLjAxNjAzMjA2NDEzLCAxMDY3NjcuNTk1MTkwMzgwNzYsIDEwODE1NC4xNzQzNDg2OTc0LCAxMDk1NDAuNzUzNTA3MDE0MDMsIDExMDkyNy4zMzI2NjUzMzA2NiwgMTEyMzEzLjkxMTgyMzY0NzMsIDExMzcwMC40OTA5ODE5NjM5MywgMTE1MDg3LjA3MDE0MDI4MDU2LCAxMTY0NzMuNjQ5Mjk4NTk3MiwgMTE3ODYwLjIyODQ1NjkxMzgzLCAxMTkyNDYuODA3NjE1MjMwNDYsIDEyMDYzMy4zODY3NzM1NDcxLCAxMjIwMTkuOTY1OTMxODYzNzMsIDEyMzQwNi41NDUwOTAxODAzNiwgMTI0NzkzLjEyNDI0ODQ5NywgMTI2MTc5LjcwMzQwNjgxMzYzLCAxMjc1NjYuMjgyNTY1MTMwMjYsIDEyODk1Mi44NjE3MjM0NDY5LCAxMzAzMzkuNDQwODgxNzYzNTMsIDEzMTcyNi4wMjAwNDAwODAxNiwgMTMzMTEyLjU5OTE5ODM5Njc4LCAxMzQ0OTkuMTc4MzU2NzEzNDQsIDEzNTg4NS43NTc1MTUwMzAwNywgMTM3MjcyLjMzNjY3MzM0NjcsIDEzODY1OC45MTU4MzE2NjMzMywgMTQwMDQ1LjQ5NDk4OTk3OTk1LCAxNDE0MzIuMDc0MTQ4Mjk2NTgsIDE0MjgxOC42NTMzMDY2MTMyNCwgMTQ0MjA1LjIzMjQ2NDkyOTg3LCAxNDU1OTEuODExNjIzMjQ2NSwgMTQ2OTc4LjM5MDc4MTU2MzEyLCAxNDgzNjQuOTY5OTM5ODc5NzUsIDE0OTc1MS41NDkwOTgxOTYzOCwgMTUxMTM4LjEyODI1NjUxMzA0LCAxNTI1MjQuNzA3NDE0ODI5NjcsIDE1MzkxMS4yODY1NzMxNDYzLCAxNTUyOTcuODY1NzMxNDYyOTIsIDE1NjY4NC40NDQ4ODk3Nzk1NSwgMTU4MDcxLjAyNDA0ODA5NjE4LCAxNTk0NTcuNjAzMjA2NDEyODQsIDE2MDg0NC4xODIzNjQ3Mjk0NywgMTYyMjMwLjc2MTUyMzA0NjEsIDE2MzYxNy4zNDA2ODEzNjI3MiwgMTY1MDAzLjkxOTgzOTY3OTM1LCAxNjYzOTAuNDk4OTk3OTk1OTgsIDE2Nzc3Ny4wNzgxNTYzMTI2NCwgMTY5MTYzLjY1NzMxNDYyOTI2LCAxNzA1NTAuMjM2NDcyOTQ1OSwgMTcxOTM2LjgxNTYzMTI2MjUyLCAxNzMzMjMuMzk0Nzg5NTc5MTUsIDE3NDcwOS45NzM5NDc4OTU3OCwgMTc2MDk2LjU1MzEwNjIxMjQ0LCAxNzc0ODMuMTMyMjY0NTI5MDYsIDE3ODg2OS43MTE0MjI4NDU3LCAxODAyNTYuMjkwNTgxMTYyMzIsIDE4MTY0Mi44Njk3Mzk0Nzg5NSwgMTgzMDI5LjQ0ODg5Nzc5NTU4LCAxODQ0MTYuMDI4MDU2MTEyMjMsIDE4NTgwMi42MDcyMTQ0Mjg4NiwgMTg3MTg5LjE4NjM3Mjc0NTUsIDE4ODU3NS43NjU1MzEwNjIxMiwgMTg5OTYyLjM0NDY4OTM3ODc1LCAxOTEzNDguOTIzODQ3Njk1NCwgMTkyNzM1LjUwMzAwNjAxMjAzLCAxOTQxMjIuMDgyMTY0MzI4NjYsIDE5NTUwOC42NjEzMjI2NDUzLCAxOTY4OTUuMjQwNDgwOTYxOTIsIDE5ODI4MS44MTk2MzkyNzg1NSwgMTk5NjY4LjM5ODc5NzU5NTIsIDIwMTA1NC45Nzc5NTU5MTE4MywgMjAyNDQxLjU1NzExNDIyODQ2LCAyMDM4MjguMTM2MjcyNTQ1MSwgMjA1MjE0LjcxNTQzMDg2MTcyLCAyMDY2MDEuMjk0NTg5MTc4MzUsIDIwNzk4Ny44NzM3NDc0OTUsIDIwOTM3NC40NTI5MDU4MTE2MywgMjEwNzYxLjAzMjA2NDEyODI2LCAyMTIxNDcuNjExMjIyNDQ0OSwgMjEzNTM0LjE5MDM4MDc2MTUyLCAyMTQ5MjAuNzY5NTM5MDc4MTQsIDIxNjMwNy4zNDg2OTczOTQ4LCAyMTc2OTMuOTI3ODU1NzExNDMsIDIxOTA4MC41MDcwMTQwMjgwNiwgMjIwNDY3LjA4NjE3MjM0NDcsIDIyMTg1My42NjUzMzA2NjEzMiwgMjIzMjQwLjI0NDQ4ODk3Nzk0LCAyMjQ2MjYuODIzNjQ3Mjk0NiwgMjI2MDEzLjQwMjgwNTYxMTIzLCAyMjczOTkuOTgxOTYzOTI3ODYsIDIyODc4Ni41NjExMjIyNDQ1LCAyMzAxNzMuMTQwMjgwNTYxMSwgMjMxNTU5LjcxOTQzODg3Nzc0LCAyMzI5NDYuMjk4NTk3MTk0NCwgMjM0MzMyLjg3Nzc1NTUxMTAzLCAyMzU3MTkuNDU2OTEzODI3NjYsIDIzNzEwNi4wMzYwNzIxNDQyOCwgMjM4NDkyLjYxNTIzMDQ2MDksIDIzOTg3OS4xOTQzODg3Nzc1NCwgMjQxMjY1Ljc3MzU0NzA5NDIsIDI0MjY1Mi4zNTI3MDU0MTA4MywgMjQ0MDM4LjkzMTg2MzcyNzQ2LCAyNDU0MjUuNTExMDIyMDQ0MDgsIDI0NjgxMi4wOTAxODAzNjA3LCAyNDgxOTguNjY5MzM4Njc3MzQsIDI0OTU4NS4yNDg0OTY5OTQsIDI1MDk3MS44Mjc2NTUzMTA2MywgMjUyMzU4LjQwNjgxMzYyNzI1LCAyNTM3NDQuOTg1OTcxOTQzODgsIDI1NTEzMS41NjUxMzAyNjA1LCAyNTY1MTguMTQ0Mjg4NTc3MTcsIDI1NzkwNC43MjM0NDY4OTM4LCAyNTkyOTEuMzAyNjA1MjEwNDMsIDI2MDY3Ny44ODE3NjM1MjcwNSwgMjYyMDY0LjQ2MDkyMTg0MzY4LCAyNjM0NTEuMDQwMDgwMTYwMywgMjY0ODM3LjYxOTIzODQ3Njk3LCAyNjYyMjQuMTk4Mzk2NzkzNTcsIDI2NzYxMC43Nzc1NTUxMTAyLCAyNjg5OTcuMzU2NzEzNDI2OSwgMjcwMzgzLjkzNTg3MTc0MzUsIDI3MTc3MC41MTUwMzAwNjAxNCwgMjczMTU3LjA5NDE4ODM3Njc0LCAyNzQ1NDMuNjczMzQ2NjkzNCwgMjc1OTMwLjI1MjUwNTAxLCAyNzczMTYuODMxNjYzMzI2NjUsIDI3ODcwMy40MTA4MjE2NDMzLCAyODAwODkuOTg5OTc5OTU5OSwgMjgxNDc2LjU2OTEzODI3NjU3LCAyODI4NjMuMTQ4Mjk2NTkzMTYsIDI4NDI0OS43Mjc0NTQ5MDk4LCAyODU2MzYuMzA2NjEzMjI2NSwgMjg3MDIyLjg4NTc3MTU0MzEsIDI4ODQwOS40NjQ5Mjk4NTk3NCwgMjg5Nzk2LjA0NDA4ODE3NjM0LCAyOTExODIuNjIzMjQ2NDkzLCAyOTI1NjkuMjAyNDA0ODA5NiwgMjkzOTU1Ljc4MTU2MzEyNjI1LCAyOTUzNDIuMzYwNzIxNDQyOSwgMjk2NzI4LjkzOTg3OTc1OTUsIDI5ODExNS41MTkwMzgwNzYxNiwgMjk5NTAyLjA5ODE5NjM5Mjc2LCAzMDA4ODguNjc3MzU0NzA5NCwgMzAyMjc1LjI1NjUxMzAyNjEsIDMwMzY2MS44MzU2NzEzNDI3LCAzMDUwNDguNDE0ODI5NjU5MzMsIDMwNjQzNC45OTM5ODc5NzU5MywgMzA3ODIxLjU3MzE0NjI5MjYsIDMwOTIwOC4xNTIzMDQ2MDkyLCAzMTA1OTQuNzMxNDYyOTI1ODUsIDMxMTk4MS4zMTA2MjEyNDI1LCAzMTMzNjcuODg5Nzc5NTU5MSwgMzE0NzU0LjQ2ODkzNzg3NTc2LCAzMTYxNDEuMDQ4MDk2MTkyMzYsIDMxNzUyNy42MjcyNTQ1MDksIDMxODkxNC4yMDY0MTI4MjU3LCAzMjAzMDAuNzg1NTcxMTQyMywgMzIxNjg3LjM2NDcyOTQ1ODkzLCAzMjMwNzMuOTQzODg3Nzc1NTMsIDMyNDQ2MC41MjMwNDYwOTIyLCAzMjU4NDcuMTAyMjA0NDA4ODUsIDMyNzIzMy42ODEzNjI3MjU0NSwgMzI4NjIwLjI2MDUyMTA0MjEsIDMzMDAwNi44Mzk2NzkzNTg3LCAzMzEzOTMuNDE4ODM3Njc1MzYsIDMzMjc3OS45OTc5OTU5OTE5NiwgMzM0MTY2LjU3NzE1NDMwODYsIDMzNTU1My4xNTYzMTI2MjUzLCAzMzY5MzkuNzM1NDcwOTQxOSwgMzM4MzI2LjMxNDYyOTI1ODUzLCAzMzk3MTIuODkzNzg3NTc1MSwgMzQxMDk5LjQ3Mjk0NTg5MTgsIDM0MjQ4Ni4wNTIxMDQyMDg0NCwgMzQzODcyLjYzMTI2MjUyNTA0LCAzNDUyNTkuMjEwNDIwODQxNywgMzQ2NjQ1Ljc4OTU3OTE1ODMsIDM0ODAzMi4zNjg3Mzc0NzQ5NiwgMzQ5NDE4Ljk0Nzg5NTc5MTU2LCAzNTA4MDUuNTI3MDU0MTA4MiwgMzUyMTkyLjEwNjIxMjQyNDksIDM1MzU3OC42ODUzNzA3NDE0NywgMzU0OTY1LjI2NDUyOTA1ODEsIDM1NjM1MS44NDM2ODczNzQ3LCAzNTc3MzguNDIyODQ1NjkxNCwgMzU5MTI1LjAwMjAwNDAwODA0LCAzNjA1MTEuNTgxMTYyMzI0NjQsIDM2MTg5OC4xNjAzMjA2NDEzLCAzNjMyODQuNzM5NDc4OTU3OSwgMzY0NjcxLjMxODYzNzI3NDU1LCAzNjYwNTcuODk3Nzk1NTkxMTUsIDM2NzQ0NC40NzY5NTM5MDc4LCAzNjg4MzEuMDU2MTEyMjI0NDcsIDM3MDIxNy42MzUyNzA1NDEwNywgMzcxNjA0LjIxNDQyODg1NzcsIDM3Mjk5MC43OTM1ODcxNzQzLCAzNzQzNzcuMzcyNzQ1NDkxLCAzNzU3NjMuOTUxOTAzODA3NjQsIDM3NzE1MC41MzEwNjIxMjQyNCwgMzc4NTM3LjExMDIyMDQ0MDksIDM3OTkyMy42ODkzNzg3NTc1LCAzODEzMTAuMjY4NTM3MDc0MTUsIDM4MjY5Ni44NDc2OTUzOTA4LCAzODQwODMuNDI2ODUzNzA3NCwgMzg1NDcwLjAwNjAxMjAyNDA3LCAzODY4NTYuNTg1MTcwMzQwNjcsIDM4ODI0My4xNjQzMjg2NTczLCAzODk2MjkuNzQzNDg2OTczOSwgMzkxMDE2LjMyMjY0NTI5MDYsIDM5MjQwMi45MDE4MDM2MDcyNCwgMzkzNzg5LjQ4MDk2MTkyMzg0LCAzOTUxNzYuMDYwMTIwMjQwNSwgMzk2NTYyLjYzOTI3ODU1NzEsIDM5Nzk0OS4yMTg0MzY4NzM3NSwgMzk5MzM1Ljc5NzU5NTE5MDQsIDQwMDcyMi4zNzY3NTM1MDcsIDQwMjEwOC45NTU5MTE4MjM2NiwgNDAzNDk1LjUzNTA3MDE0MDI2LCA0MDQ4ODIuMTE0MjI4NDU2OSwgNDA2MjY4LjY5MzM4Njc3MzUsIDQwNzY1NS4yNzI1NDUwOTAyLCA0MDkwNDEuODUxNzAzNDA2ODQsIDQxMDQyOC40MzA4NjE3MjM0MywgNDExODE1LjAxMDAyMDA0MDEsIDQxMzIwMS41ODkxNzgzNTY3LCA0MTQ1ODguMTY4MzM2NjczMzUsIDQxNTk3NC43NDc0OTQ5OSwgNDE3MzYxLjMyNjY1MzMwNjYsIDQxODc0Ny45MDU4MTE2MjMyNiwgNDIwMTM0LjQ4NDk2OTkzOTg2LCA0MjE1MjEuMDY0MTI4MjU2NSwgNDIyOTA3LjY0MzI4NjU3MzEsIDQyNDI5NC4yMjI0NDQ4ODk4LCA0MjU2ODAuODAxNjAzMjA2NDMsIDQyNzA2Ny4zODA3NjE1MjMwMywgNDI4NDUzLjk1OTkxOTgzOTcsIDQyOTg0MC41MzkwNzgxNTYzLCA0MzEyMjcuMTE4MjM2NDcyOTUsIDQzMjYxMy42OTczOTQ3ODk2LCA0MzQwMDAuMjc2NTUzMTA2MiwgNDM1Mzg2Ljg1NTcxMTQyMjg2LCA0MzY3NzMuNDM0ODY5NzM5NDYsIDQzODE2MC4wMTQwMjgwNTYxLCA0Mzk1NDYuNTkzMTg2MzcyNywgNDQwOTMzLjE3MjM0NDY4OTQsIDQ0MjMxOS43NTE1MDMwMDYwMywgNDQzNzA2LjMzMDY2MTMyMjYzLCA0NDUwOTIuOTA5ODE5NjM5MywgNDQ2NDc5LjQ4ODk3Nzk1NTksIDQ0Nzg2Ni4wNjgxMzYyNzI1NCwgNDQ5MjUyLjY0NzI5NDU4OTIsIDQ1MDYzOS4yMjY0NTI5MDU4LCA0NTIwMjUuODA1NjExMjIyNDYsIDQ1MzQxMi4zODQ3Njk1MzkwNiwgNDU0Nzk4Ljk2MzkyNzg1NTcsIDQ1NjE4NS41NDMwODYxNzI0LCA0NTc1NzIuMTIyMjQ0NDg5LCA0NTg5NTguNzAxNDAyODA1NjMsIDQ2MDM0NS4yODA1NjExMjIyLCA0NjE3MzEuODU5NzE5NDM4OSwgNDYzMTE4LjQzODg3Nzc1NTUsIDQ2NDUwNS4wMTgwMzYwNzIxNCwgNDY1ODkxLjU5NzE5NDM4ODgsIDQ2NzI3OC4xNzYzNTI3MDU0LCA0Njg2NjQuNzU1NTExMDIyMDYsIDQ3MDA1MS4zMzQ2NjkzMzg2NiwgNDcxNDM3LjkxMzgyNzY1NTMsIDQ3MjgyNC40OTI5ODU5NzE5NywgNDc0MjExLjA3MjE0NDI4ODU3LCA0NzU1OTcuNjUxMzAyNjA1MiwgNDc2OTg0LjIzMDQ2MDkyMTgsIDQ3ODM3MC44MDk2MTkyMzg1LCA0Nzk3NTcuMzg4Nzc3NTU1MSwgNDgxMTQzLjk2NzkzNTg3MTc0LCA0ODI1MzAuNTQ3MDk0MTg4NCwgNDgzOTE3LjEyNjI1MjUwNSwgNDg1MzAzLjcwNTQxMDgyMTY1LCA0ODY2OTAuMjg0NTY5MTM4MjUsIDQ4ODA3Ni44NjM3Mjc0NTQ5LCA0ODk0NjMuNDQyODg1NzcxNTcsIDQ5MDg1MC4wMjIwNDQwODgxNywgNDkyMjM2LjYwMTIwMjQwNDgsIDQ5MzYyMy4xODAzNjA3MjE0LCA0OTUwMDkuNzU5NTE5MDM4MSwgNDk2Mzk2LjMzODY3NzM1NDcsIDQ5Nzc4Mi45MTc4MzU2NzEzNCwgNDk5MTY5LjQ5Njk5Mzk4OCwgNTAwNTU2LjA3NjE1MjMwNDYsIDUwMTk0Mi42NTUzMTA2MjEyNSwgNTAzMzI5LjIzNDQ2ODkzNzg1LCA1MDQ3MTUuODEzNjI3MjU0NSwgNTA2MTAyLjM5Mjc4NTU3MTE3LCA1MDc0ODguOTcxOTQzODg3NzcsIDUwODg3NS41NTExMDIyMDQ0LCA1MTAyNjIuMTMwMjYwNTIxLCA1MTE2NDguNzA5NDE4ODM3NywgNTEzMDM1LjI4ODU3NzE1NDM0LCA1MTQ0MjEuODY3NzM1NDcwOTQsIDUxNTgwOC40NDY4OTM3ODc2LCA1MTcxOTUuMDI2MDUyMTA0MiwgNTE4NTgxLjYwNTIxMDQyMDg1LCA1MTk5NjguMTg0MzY4NzM3NDUsIDUyMTM1NC43NjM1MjcwNTQxLCA1MjI3NDEuMzQyNjg1MzcwNzYsIDUyNDEyNy45MjE4NDM2ODczNiwgNTI1NTE0LjUwMTAwMjAwNCwgNTI2OTAxLjA4MDE2MDMyMDYsIDUyODI4Ny42NTkzMTg2MzcyLCA1Mjk2NzQuMjM4NDc2OTUzOSwgNTMxMDYwLjgxNzYzNTI3MDUsIDUzMjQ0Ny4zOTY3OTM1ODcxLCA1MzM4MzMuOTc1OTUxOTAzOCwgNTM1MjIwLjU1NTExMDIyMDQsIDUzNjYwNy4xMzQyNjg1MzcsIDUzNzk5My43MTM0MjY4NTM4LCA1MzkzODAuMjkyNTg1MTcwNCwgNTQwNzY2Ljg3MTc0MzQ4NywgNTQyMTUzLjQ1MDkwMTgwMzYsIDU0MzU0MC4wMzAwNjAxMjAzLCA1NDQ5MjYuNjA5MjE4NDM2OSwgNTQ2MzEzLjE4ODM3Njc1MzUsIDU0NzY5OS43Njc1MzUwNzAyLCA1NDkwODYuMzQ2NjkzMzg2OCwgNTUwNDcyLjkyNTg1MTcwMzQsIDU1MTg1OS41MDUwMTAwMiwgNTUzMjQ2LjA4NDE2ODMzNjcsIDU1NDYzMi42NjMzMjY2NTMzLCA1NTYwMTkuMjQyNDg0OTY5OSwgNTU3NDA1LjgyMTY0MzI4NjYsIDU1ODc5Mi40MDA4MDE2MDMyLCA1NjAxNzguOTc5OTU5OTE5OCwgNTYxNTY1LjU1OTExODIzNjQsIDU2Mjk1Mi4xMzgyNzY1NTMxLCA1NjQzMzguNzE3NDM0ODY5NywgNTY1NzI1LjI5NjU5MzE4NjMsIDU2NzExMS44NzU3NTE1MDMsIDU2ODQ5OC40NTQ5MDk4MTk2LCA1Njk4ODUuMDM0MDY4MTM2MiwgNTcxMjcxLjYxMzIyNjQ1MywgNTcyNjU4LjE5MjM4NDc2OTYsIDU3NDA0NC43NzE1NDMwODYyLCA1NzU0MzEuMzUwNzAxNDAyOCwgNTc2ODE3LjkyOTg1OTcxOTUsIDU3ODIwNC41MDkwMTgwMzYxLCA1Nzk1OTEuMDg4MTc2MzUyNywgNTgwOTc3LjY2NzMzNDY2OTQsIDU4MjM2NC4yNDY0OTI5ODYsIDU4Mzc1MC44MjU2NTEzMDI2LCA1ODUxMzcuNDA0ODA5NjE5MiwgNTg2NTIzLjk4Mzk2NzkzNTksIDU4NzkxMC41NjMxMjYyNTI1LCA1ODkyOTcuMTQyMjg0NTY5MSwgNTkwNjgzLjcyMTQ0Mjg4NTgsIDU5MjA3MC4zMDA2MDEyMDI0LCA1OTM0NTYuODc5NzU5NTE5LCA1OTQ4NDMuNDU4OTE3ODM1NywgNTk2MjMwLjAzODA3NjE1MjMsIDU5NzYxNi42MTcyMzQ0Njg5LCA1OTkwMDMuMTk2MzkyNzg1NSwgNjAwMzg5Ljc3NTU1MTEwMjIsIDYwMTc3Ni4zNTQ3MDk0MTg4LCA2MDMxNjIuOTMzODY3NzM1NCwgNjA0NTQ5LjUxMzAyNjA1MjIsIDYwNTkzNi4wOTIxODQzNjg4LCA2MDczMjIuNjcxMzQyNjg1NCwgNjA4NzA5LjI1MDUwMTAwMiwgNjEwMDk1LjgyOTY1OTMxODcsIDYxMTQ4Mi40MDg4MTc2MzUzLCA2MTI4NjguOTg3OTc1OTUxOSwgNjE0MjU1LjU2NzEzNDI2ODYsIDYxNTY0Mi4xNDYyOTI1ODUyLCA2MTcwMjguNzI1NDUwOTAxOCwgNjE4NDE1LjMwNDYwOTIxODQsIDYxOTgwMS44ODM3Njc1MzUxLCA2MjExODguNDYyOTI1ODUxNywgNjIyNTc1LjA0MjA4NDE2ODMsIDYyMzk2MS42MjEyNDI0ODUsIDYyNTM0OC4yMDA0MDA4MDE2LCA2MjY3MzQuNzc5NTU5MTE4MiwgNjI4MTIxLjM1ODcxNzQzNDksIDYyOTUwNy45Mzc4NzU3NTE1LCA2MzA4OTQuNTE3MDM0MDY4MSwgNjMyMjgxLjA5NjE5MjM4NDcsIDYzMzY2Ny42NzUzNTA3MDE0LCA2MzUwNTQuMjU0NTA5MDE4LCA2MzY0NDAuODMzNjY3MzM0NiwgNjM3ODI3LjQxMjgyNTY1MTQsIDYzOTIxMy45OTE5ODM5NjgsIDY0MDYwMC41NzExNDIyODQ1LCA2NDE5ODcuMTUwMzAwNjAxMSwgNjQzMzczLjcyOTQ1ODkxNzksIDY0NDc2MC4zMDg2MTcyMzQ1LCA2NDYxNDYuODg3Nzc1NTUxMSwgNjQ3NTMzLjQ2NjkzMzg2NzgsIDY0ODkyMC4wNDYwOTIxODQ0LCA2NTAzMDYuNjI1MjUwNTAxLCA2NTE2OTMuMjA0NDA4ODE3NywgNjUzMDc5Ljc4MzU2NzEzNDMsIDY1NDQ2Ni4zNjI3MjU0NTA5LCA2NTU4NTIuOTQxODgzNzY3NSwgNjU3MjM5LjUyMTA0MjA4NDIsIDY1ODYyNi4xMDAyMDA0MDA4LCA2NjAwMTIuNjc5MzU4NzE3NCwgNjYxMzk5LjI1ODUxNzAzNDEsIDY2Mjc4NS44Mzc2NzUzNTA3LCA2NjQxNzIuNDE2ODMzNjY3MywgNjY1NTU4Ljk5NTk5MTk4MzksIDY2Njk0NS41NzUxNTAzMDA2LCA2NjgzMzIuMTU0MzA4NjE3MiwgNjY5NzE4LjczMzQ2NjkzMzgsIDY3MTEwNS4zMTI2MjUyNTA1LCA2NzI0OTEuODkxNzgzNTY3MSwgNjczODc4LjQ3MDk0MTg4MzcsIDY3NTI2NS4wNTAxMDAyMDAzLCA2NzY2NTEuNjI5MjU4NTE3MSwgNjc4MDM4LjIwODQxNjgzMzcsIDY3OTQyNC43ODc1NzUxNTAzLCA2ODA4MTEuMzY2NzMzNDY3LCA2ODIxOTcuOTQ1ODkxNzgzNiwgNjgzNTg0LjUyNTA1MDEwMDIsIDY4NDk3MS4xMDQyMDg0MTY5LCA2ODYzNTcuNjgzMzY2NzMzNSwgNjg3NzQ0LjI2MjUyNTA1MDEsIDY4OTEzMC44NDE2ODMzNjY3LCA2OTA1MTcuNDIwODQxNjgzNCwgNjkxOTA0LjBdKQogICAgICAgICAgICAgIC5yYW5nZShbJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZmZmYjJmZicsICcjZmZmZmIyZmYnLCAnI2ZmZmZiMmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlZDk3NmZmJywgJyNmZWQ5NzZmZicsICcjZmVkOTc2ZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmViMjRjZmYnLCAnI2ZlYjI0Y2ZmJywgJyNmZWIyNGNmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmZDhkM2NmZicsICcjZmQ4ZDNjZmYnLCAnI2ZkOGQzY2ZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2YwM2IyMGZmJywgJyNmMDNiMjBmZicsICcjZjAzYjIwZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnLCAnI2JkMDAyNmZmJywgJyNiZDAwMjZmZicsICcjYmQwMDI2ZmYnXSk7CiAgICAKCiAgICBjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQueCA9IGQzLnNjYWxlLmxpbmVhcigpCiAgICAgICAgICAgICAgLmRvbWFpbihbMS4wLCA2OTE5MDQuMF0pCiAgICAgICAgICAgICAgLnJhbmdlKFswLCA0MDBdKTsKCiAgICBjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQubGVnZW5kID0gTC5jb250cm9sKHtwb3NpdGlvbjogJ3RvcHJpZ2h0J30pOwogICAgY29sb3JfbWFwXzIyYzY3OGE4OWYxNTQyMGY4ZjgwNGQ4ZTIzYzc0NmRkLmxlZ2VuZC5vbkFkZCA9IGZ1bmN0aW9uIChtYXApIHt2YXIgZGl2ID0gTC5Eb21VdGlsLmNyZWF0ZSgnZGl2JywgJ2xlZ2VuZCcpOyByZXR1cm4gZGl2fTsKICAgIGNvbG9yX21hcF8yMmM2NzhhODlmMTU0MjBmOGY4MDRkOGUyM2M3NDZkZC5sZWdlbmQuYWRkVG8obWFwX2ZhODdmMDY0MjYzMDQyOGNhNWI4ZTZhMDdjMzYzNWEyKTsKCiAgICBjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQueEF4aXMgPSBkMy5zdmcuYXhpcygpCiAgICAgICAgLnNjYWxlKGNvbG9yX21hcF8yMmM2NzhhODlmMTU0MjBmOGY4MDRkOGUyM2M3NDZkZC54KQogICAgICAgIC5vcmllbnQoInRvcCIpCiAgICAgICAgLnRpY2tTaXplKDEpCiAgICAgICAgLnRpY2tWYWx1ZXMoWzEuMCwgMTE1MzE4LjE2NjY2NjY2NjY3LCAyMzA2MzUuMzMzMzMzMzMzMzQsIDM0NTk1Mi41LCA0NjEyNjkuNjY2NjY2NjY2NywgNTc2NTg2LjgzMzMzMzMzMzQsIDY5MTkwNC4wXSk7CgogICAgY29sb3JfbWFwXzIyYzY3OGE4OWYxNTQyMGY4ZjgwNGQ4ZTIzYzc0NmRkLnN2ZyA9IGQzLnNlbGVjdCgiLmxlZ2VuZC5sZWFmbGV0LWNvbnRyb2wiKS5hcHBlbmQoInN2ZyIpCiAgICAgICAgLmF0dHIoImlkIiwgJ2xlZ2VuZCcpCiAgICAgICAgLmF0dHIoIndpZHRoIiwgNDUwKQogICAgICAgIC5hdHRyKCJoZWlnaHQiLCA0MCk7CgogICAgY29sb3JfbWFwXzIyYzY3OGE4OWYxNTQyMGY4ZjgwNGQ4ZTIzYzc0NmRkLmcgPSBjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQuc3ZnLmFwcGVuZCgiZyIpCiAgICAgICAgLmF0dHIoImNsYXNzIiwgImtleSIpCiAgICAgICAgLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMjUsMTYpIik7CgogICAgY29sb3JfbWFwXzIyYzY3OGE4OWYxNTQyMGY4ZjgwNGQ4ZTIzYzc0NmRkLmcuc2VsZWN0QWxsKCJyZWN0IikKICAgICAgICAuZGF0YShjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQuY29sb3IucmFuZ2UoKS5tYXAoZnVuY3Rpb24oZCwgaSkgewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgeDA6IGkgPyBjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQueChjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQuY29sb3IuZG9tYWluKClbaSAtIDFdKSA6IGNvbG9yX21hcF8yMmM2NzhhODlmMTU0MjBmOGY4MDRkOGUyM2M3NDZkZC54LnJhbmdlKClbMF0sCiAgICAgICAgICAgIHgxOiBpIDwgY29sb3JfbWFwXzIyYzY3OGE4OWYxNTQyMGY4ZjgwNGQ4ZTIzYzc0NmRkLmNvbG9yLmRvbWFpbigpLmxlbmd0aCA/IGNvbG9yX21hcF8yMmM2NzhhODlmMTU0MjBmOGY4MDRkOGUyM2M3NDZkZC54KGNvbG9yX21hcF8yMmM2NzhhODlmMTU0MjBmOGY4MDRkOGUyM2M3NDZkZC5jb2xvci5kb21haW4oKVtpXSkgOiBjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQueC5yYW5nZSgpWzFdLAogICAgICAgICAgICB6OiBkCiAgICAgICAgICB9OwogICAgICAgIH0pKQogICAgICAuZW50ZXIoKS5hcHBlbmQoInJlY3QiKQogICAgICAgIC5hdHRyKCJoZWlnaHQiLCAxMCkKICAgICAgICAuYXR0cigieCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQueDA7IH0pCiAgICAgICAgLmF0dHIoIndpZHRoIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC54MSAtIGQueDA7IH0pCiAgICAgICAgLnN0eWxlKCJmaWxsIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC56OyB9KTsKCiAgICBjb2xvcl9tYXBfMjJjNjc4YTg5ZjE1NDIwZjhmODA0ZDhlMjNjNzQ2ZGQuZy5jYWxsKGNvbG9yX21hcF8yMmM2NzhhODlmMTU0MjBmOGY4MDRkOGUyM2M3NDZkZC54QXhpcykuYXBwZW5kKCJ0ZXh0IikKICAgICAgICAuYXR0cigiY2xhc3MiLCAiY2FwdGlvbiIpCiAgICAgICAgLmF0dHIoInkiLCAyMSkKICAgICAgICAudGV4dCgnSW1taWdyYXRpb24gdG8gQ2FuYWRhJyk7Cjwvc2NyaXB0Pg== onload=&quot;this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute(&#39;data-html&#39;)));this.contentDocument.close();&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt; As per the map legend, the darker the color of a country and the closer the color to red, the higher the number of immigrants from that country. Accordingly, the highest immigration over the course of 33 years (from 1980 to 2013) was from China, India, Great Britain, and the Philippines, followed by Pakistan, the US, and Poland. .",
            "url": "https://shirolepranav.github.io/blog/folium/visualization/2019/10/02/immigration-to-canada-map.html",
            "relUrl": "/folium/visualization/2019/10/02/immigration-to-canada-map.html",
            "date": " • Oct 2, 2019"
        }
        
    
  
    
        ,"post21": {
            "title": "Exploring India using Folium",
            "content": "Note: To view the interactive maps, open the notebook in Google Colab. Folium is a powerful Python library that helps you create several types of Leaflet maps. Folium builds on the data wrangling strengths of the Python ecosystem and the mapping strengths of the Leaflet.js library. Also, these maps are interactive so you can zoom into any region of interest despite the initial zoom level. . import folium print(&#39;Folium imported.&#39;) . Folium imported. . . World Map . Generate a World Map. . world_map = folium.Map() world_map . . Map of India . All locations on a map are defined by their respective latitude and longitude values. So you can create a map and pass in a center of Latitude and Longitude values of [0,0]. For a defined center, you can also define the initial zoom level into that location when the map is rendered. The higher the zoom level, the more the map is zoomed into the center. . Let&#39;s create a map centered around India. . india_map = folium.Map(location=[21.7679, 78.8718], zoom_start=5) india_map . Let&#39;s play with the zoom level and focus on the city of Mumbai. . mumbai_latitude = 19.0760 mumbai_longitude = 72.8777 mumbai_map = folium.Map(location=[mumbai_latitude, mumbai_longitude], zoom_start=11) mumbai_map . Let&#39;s zoom in further to the Gateway of India. . mumbai_map = folium.Map(location=[18.9220, 72.8347], zoom_start=17) mumbai_map . . Stamen Toner Map . These are high contrast, black and white maps that can be used for exploring coastal zones and river meanders. . Every 12 years, millions of people are drawn to a spiritual festival in India, the Maha Kumbh Mela, at a place called the Triveni Sangam. It’s the largest gathering of humanity on Earth: over a three-month period, an estimated 100 million people attended the most recent festival, in 2013. The Triveni Sangam, where the festival takes place, is the meeting place of three rivers: Ganga, Yamuna, and Saraswati. However, the third river, the Saraswati is a mythical river, which supposedly dried up many millennia ago. Nevertheless, the Triveni Sangam is to this day referred to as the meeting place of the three rivers. There is a belief that the Saraswati river flows underneath the surface. Let&#39;s create a Stamen Toner map of the area. . sangam_map = folium.Map(location=[25.4224, 81.8866], zoom_start=9, tiles=&#39;Stamen Toner&#39;) sangam_map . . Stamen Terrain Maps . These are maps that feature hill shading and natural vegetation colors. They showcase advanced labeling and linework generalization of dual-carriageway roads. . Jammu and Kashmir, a union territory of India, is one of the most beautiful places in the world consisting of mountain rnages, valleys and rivers. Let&#39;s explore the terrain in the area. . kashmir_map = folium.Map(location=[33.7782, 76.5762], zoom_start=8, tiles=&#39;Stamen Terrain&#39;) kashmir_map .",
            "url": "https://shirolepranav.github.io/blog/folium/visualization/2019/09/17/folium-India.html",
            "relUrl": "/folium/visualization/2019/09/17/folium-India.html",
            "date": " • Sep 17, 2019"
        }
        
    
  
    
        ,"post22": {
            "title": "Data Analysis with Python",
            "content": "We will be using a dataset about cars from back in 1985. This data set consists of three types of entities: . the specification of an auto in terms of various characteristics, | its assigned insurance risk rating, | its normalized losses in use as compared to other cars. | . The second rating corresponds to the degree to which the auto is more risky than its price indicates. Cars are initially assigned a risk factor symbol associated with its price. Then, if it is more risky (or less), this symbol is adjusted by moving it up (or down) the scale. Actuarians call this process &quot;symboling&quot;. A value of +3 indicates that the auto is risky, -3 that it is probably pretty safe. The third factor is the relative average loss payment per insured vehicle year. This value is normalized for all autos within a particular size classification (two-door small, station wagons, sports/specialty, etc…), and represents the average loss per car per year. . Attribute Information: . symboling: -3, -2, -1, 0, 1, 2, 3 normalized-losses: continuous from 65 to 256 make: alfa-romero, audi, bmw, chevrolet, dodge, honda, isuzu, jaguar, mazda, mercedes-benz, mercury, mitsubishi, nissan, peugot, plymouth, porsche, renault, saab, subaru, toyota, volkswagen, volvo fuel-type: diesel, gas aspiration: std, turbo num-of-doors: four, two body-style: hardtop, wagon, sedan, hatchback, convertible drive-wheels: 4wd, fwd, rwd engine-location: front, rear wheel-base: continuous from 86.6 120.9 length: continuous from 141.1 to 208.1 width: continuous from 60.3 to 72.3 height: continuous from 47.8 to 59.8 curb-weight: continuous from 1488 to 4066 engine-type: dohc, dohcv, l, ohc, ohcf, ohcv, rotor num-of-cylinders: eight, five, four, six, three, twelve, two engine-size: continuous from 61 to 326 fuel-system: 1bbl, 2bbl, 4bbl, idi, mfi, mpfi, spdi, spfi bore: continuous from 2.54 to 3.94 stroke: continuous from 2.07 to 4.17 compression-ratio: continuous from 7 to 23 horsepower: continuous from 48 to 288 peak-rpm: continuous from 4150 to 6600 city-mpg: continuous from 13 to 49 highway-mpg: continuous from 16 to 54 price: continuous from 5118 to 45400. . . Data Acquisition . import pandas as pd import numpy as np # read the online file and assign it to the variable &#39;df&#39; path = &#39;imports-85.data&#39; df = pd.read_csv(path, header=None) # print the first 10 rows of the dataset print(&#39;The first 10 rows of the dataframe&#39;) df.head(10) . The first 10 rows of the dataframe . 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 . 0 3 | ? | alfa-romero | gas | std | two | convertible | rwd | front | 88.6 | 168.8 | 64.1 | 48.8 | 2548 | dohc | four | 130 | mpfi | 3.47 | 2.68 | 9.0 | 111 | 5000 | 21 | 27 | 13495 | . 1 3 | ? | alfa-romero | gas | std | two | convertible | rwd | front | 88.6 | 168.8 | 64.1 | 48.8 | 2548 | dohc | four | 130 | mpfi | 3.47 | 2.68 | 9.0 | 111 | 5000 | 21 | 27 | 16500 | . 2 1 | ? | alfa-romero | gas | std | two | hatchback | rwd | front | 94.5 | 171.2 | 65.5 | 52.4 | 2823 | ohcv | six | 152 | mpfi | 2.68 | 3.47 | 9.0 | 154 | 5000 | 19 | 26 | 16500 | . 3 2 | 164 | audi | gas | std | four | sedan | fwd | front | 99.8 | 176.6 | 66.2 | 54.3 | 2337 | ohc | four | 109 | mpfi | 3.19 | 3.40 | 10.0 | 102 | 5500 | 24 | 30 | 13950 | . 4 2 | 164 | audi | gas | std | four | sedan | 4wd | front | 99.4 | 176.6 | 66.4 | 54.3 | 2824 | ohc | five | 136 | mpfi | 3.19 | 3.40 | 8.0 | 115 | 5500 | 18 | 22 | 17450 | . 5 2 | ? | audi | gas | std | two | sedan | fwd | front | 99.8 | 177.3 | 66.3 | 53.1 | 2507 | ohc | five | 136 | mpfi | 3.19 | 3.40 | 8.5 | 110 | 5500 | 19 | 25 | 15250 | . 6 1 | 158 | audi | gas | std | four | sedan | fwd | front | 105.8 | 192.7 | 71.4 | 55.7 | 2844 | ohc | five | 136 | mpfi | 3.19 | 3.40 | 8.5 | 110 | 5500 | 19 | 25 | 17710 | . 7 1 | ? | audi | gas | std | four | wagon | fwd | front | 105.8 | 192.7 | 71.4 | 55.7 | 2954 | ohc | five | 136 | mpfi | 3.19 | 3.40 | 8.5 | 110 | 5500 | 19 | 25 | 18920 | . 8 1 | 158 | audi | gas | turbo | four | sedan | fwd | front | 105.8 | 192.7 | 71.4 | 55.9 | 3086 | ohc | five | 131 | mpfi | 3.13 | 3.40 | 8.3 | 140 | 5500 | 17 | 20 | 23875 | . 9 0 | ? | audi | gas | turbo | two | hatchback | 4wd | front | 99.5 | 178.2 | 67.9 | 52.0 | 3053 | ohc | five | 131 | mpfi | 3.13 | 3.40 | 7.0 | 160 | 5500 | 16 | 22 | ? | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; headers = [&quot;symboling&quot;,&quot;normalized-losses&quot;,&quot;make&quot;,&quot;fuel-type&quot;,&quot;aspiration&quot;, &quot;num-of-doors&quot;,&quot;body-style&quot;, &quot;drive-wheels&quot;,&quot;engine-location&quot;,&quot;wheel-base&quot;, &quot;length&quot;,&quot;width&quot;,&quot;height&quot;,&quot;curb-weight&quot;,&quot;engine-type&quot;, &quot;num-of-cylinders&quot;, &quot;engine-size&quot;,&quot;fuel-system&quot;,&quot;bore&quot;,&quot;stroke&quot;,&quot;compression-ratio&quot;,&quot;horsepower&quot;, &quot;peak-rpm&quot;,&quot;city-mpg&quot;,&quot;highway-mpg&quot;,&quot;price&quot;] print(&quot;headers n&quot;, headers) . headers [&#39;symboling&#39;, &#39;normalized-losses&#39;, &#39;make&#39;, &#39;fuel-type&#39;, &#39;aspiration&#39;, &#39;num-of-doors&#39;, &#39;body-style&#39;, &#39;drive-wheels&#39;, &#39;engine-location&#39;, &#39;wheel-base&#39;, &#39;length&#39;, &#39;width&#39;, &#39;height&#39;, &#39;curb-weight&#39;, &#39;engine-type&#39;, &#39;num-of-cylinders&#39;, &#39;engine-size&#39;, &#39;fuel-system&#39;, &#39;bore&#39;, &#39;stroke&#39;, &#39;compression-ratio&#39;, &#39;horsepower&#39;, &#39;peak-rpm&#39;, &#39;city-mpg&#39;, &#39;highway-mpg&#39;, &#39;price&#39;] . df.columns = headers . df.dtypes . symboling int64 normalized-losses object make object fuel-type object aspiration object num-of-doors object body-style object drive-wheels object engine-location object wheel-base float64 length float64 width float64 height float64 curb-weight int64 engine-type object num-of-cylinders object engine-size int64 fuel-system object bore object stroke object compression-ratio float64 horsepower object peak-rpm object city-mpg int64 highway-mpg int64 price object dtype: object . df.describe() . symboling wheel-base length width height curb-weight engine-size compression-ratio city-mpg highway-mpg . count 205.000000 | 205.000000 | 205.000000 | 205.000000 | 205.000000 | 205.000000 | 205.000000 | 205.000000 | 205.000000 | 205.000000 | . mean 0.834146 | 98.756585 | 174.049268 | 65.907805 | 53.724878 | 2555.565854 | 126.907317 | 10.142537 | 25.219512 | 30.751220 | . std 1.245307 | 6.021776 | 12.337289 | 2.145204 | 2.443522 | 520.680204 | 41.642693 | 3.972040 | 6.542142 | 6.886443 | . min -2.000000 | 86.600000 | 141.100000 | 60.300000 | 47.800000 | 1488.000000 | 61.000000 | 7.000000 | 13.000000 | 16.000000 | . 25% 0.000000 | 94.500000 | 166.300000 | 64.100000 | 52.000000 | 2145.000000 | 97.000000 | 8.600000 | 19.000000 | 25.000000 | . 50% 1.000000 | 97.000000 | 173.200000 | 65.500000 | 54.100000 | 2414.000000 | 120.000000 | 9.000000 | 24.000000 | 30.000000 | . 75% 2.000000 | 102.400000 | 183.100000 | 66.900000 | 55.500000 | 2935.000000 | 141.000000 | 9.400000 | 30.000000 | 34.000000 | . max 3.000000 | 120.900000 | 208.100000 | 72.300000 | 59.800000 | 4066.000000 | 326.000000 | 23.000000 | 49.000000 | 54.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df.describe(include=&#39;all&#39;) . symboling normalized-losses make fuel-type aspiration num-of-doors body-style drive-wheels engine-location wheel-base length width height curb-weight engine-type num-of-cylinders engine-size fuel-system bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price . count 205.000000 | 205 | 205 | 205 | 205 | 205 | 205 | 205 | 205 | 205.000000 | 205.000000 | 205.000000 | 205.000000 | 205.000000 | 205 | 205 | 205.000000 | 205 | 205 | 205 | 205.000000 | 205 | 205 | 205.000000 | 205.000000 | 205 | . unique NaN | 52 | 22 | 2 | 2 | 3 | 5 | 3 | 2 | NaN | NaN | NaN | NaN | NaN | 7 | 7 | NaN | 8 | 39 | 37 | NaN | 60 | 24 | NaN | NaN | 187 | . top NaN | ? | toyota | gas | std | four | sedan | fwd | front | NaN | NaN | NaN | NaN | NaN | ohc | four | NaN | mpfi | 3.62 | 3.40 | NaN | 68 | 5500 | NaN | NaN | ? | . freq NaN | 41 | 32 | 185 | 168 | 114 | 96 | 120 | 202 | NaN | NaN | NaN | NaN | NaN | 148 | 159 | NaN | 94 | 23 | 20 | NaN | 19 | 37 | NaN | NaN | 4 | . mean 0.834146 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 98.756585 | 174.049268 | 65.907805 | 53.724878 | 2555.565854 | NaN | NaN | 126.907317 | NaN | NaN | NaN | 10.142537 | NaN | NaN | 25.219512 | 30.751220 | NaN | . std 1.245307 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 6.021776 | 12.337289 | 2.145204 | 2.443522 | 520.680204 | NaN | NaN | 41.642693 | NaN | NaN | NaN | 3.972040 | NaN | NaN | 6.542142 | 6.886443 | NaN | . min -2.000000 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 86.600000 | 141.100000 | 60.300000 | 47.800000 | 1488.000000 | NaN | NaN | 61.000000 | NaN | NaN | NaN | 7.000000 | NaN | NaN | 13.000000 | 16.000000 | NaN | . 25% 0.000000 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 94.500000 | 166.300000 | 64.100000 | 52.000000 | 2145.000000 | NaN | NaN | 97.000000 | NaN | NaN | NaN | 8.600000 | NaN | NaN | 19.000000 | 25.000000 | NaN | . 50% 1.000000 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 97.000000 | 173.200000 | 65.500000 | 54.100000 | 2414.000000 | NaN | NaN | 120.000000 | NaN | NaN | NaN | 9.000000 | NaN | NaN | 24.000000 | 30.000000 | NaN | . 75% 2.000000 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 102.400000 | 183.100000 | 66.900000 | 55.500000 | 2935.000000 | NaN | NaN | 141.000000 | NaN | NaN | NaN | 9.400000 | NaN | NaN | 30.000000 | 34.000000 | NaN | . max 3.000000 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 120.900000 | 208.100000 | 72.300000 | 59.800000 | 4066.000000 | NaN | NaN | 326.000000 | NaN | NaN | NaN | 23.000000 | NaN | NaN | 49.000000 | 54.000000 | NaN | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df[[&#39;length&#39;, &#39;compression-ratio&#39;]].describe() . length compression-ratio . count 205.000000 | 205.000000 | . mean 174.049268 | 10.142537 | . std 12.337289 | 3.972040 | . min 141.100000 | 7.000000 | . 25% 166.300000 | 8.600000 | . 50% 173.200000 | 9.000000 | . 75% 183.100000 | 9.400000 | . max 208.100000 | 23.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df.info . &lt;bound method DataFrame.info of symboling normalized-losses make ... city-mpg highway-mpg price 0 3 ? alfa-romero ... 21 27 13495 1 3 ? alfa-romero ... 21 27 16500 2 1 ? alfa-romero ... 19 26 16500 3 2 164 audi ... 24 30 13950 4 2 164 audi ... 18 22 17450 .. ... ... ... ... ... ... ... 200 -1 95 volvo ... 23 28 16845 201 -1 95 volvo ... 19 25 19045 202 -1 95 volvo ... 18 23 21485 203 -1 95 volvo ... 26 27 22470 204 -1 95 volvo ... 19 25 22625 [205 rows x 26 columns]&gt; . . Data Wrangling . Data Wrangling is the process of converting data from the initial format to a format that may be better for analysis. . df.replace(&#39;?&#39;, np.nan, inplace=True) . # use &quot;.isnull()&quot; or &quot;.notnull()&quot; missing_data = df.isnull() # True stands for missing value missing_data.head(10) . symboling normalized-losses make fuel-type aspiration num-of-doors body-style drive-wheels engine-location wheel-base length width height curb-weight engine-type num-of-cylinders engine-size fuel-system bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price . 0 False | True | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 1 False | True | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 2 False | True | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 3 False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 4 False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 5 False | True | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 6 False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 7 False | True | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 8 False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | . 9 False | True | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | False | True | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; for column in missing_data.columns.values.tolist(): print(column) print(missing_data[column].value_counts()) print(&quot;&quot;) . symboling False 205 Name: symboling, dtype: int64 normalized-losses False 164 True 41 Name: normalized-losses, dtype: int64 make False 205 Name: make, dtype: int64 fuel-type False 205 Name: fuel-type, dtype: int64 aspiration False 205 Name: aspiration, dtype: int64 num-of-doors False 203 True 2 Name: num-of-doors, dtype: int64 body-style False 205 Name: body-style, dtype: int64 drive-wheels False 205 Name: drive-wheels, dtype: int64 engine-location False 205 Name: engine-location, dtype: int64 wheel-base False 205 Name: wheel-base, dtype: int64 length False 205 Name: length, dtype: int64 width False 205 Name: width, dtype: int64 height False 205 Name: height, dtype: int64 curb-weight False 205 Name: curb-weight, dtype: int64 engine-type False 205 Name: engine-type, dtype: int64 num-of-cylinders False 205 Name: num-of-cylinders, dtype: int64 engine-size False 205 Name: engine-size, dtype: int64 fuel-system False 205 Name: fuel-system, dtype: int64 bore False 201 True 4 Name: bore, dtype: int64 stroke False 201 True 4 Name: stroke, dtype: int64 compression-ratio False 205 Name: compression-ratio, dtype: int64 horsepower False 203 True 2 Name: horsepower, dtype: int64 peak-rpm False 203 True 2 Name: peak-rpm, dtype: int64 city-mpg False 205 Name: city-mpg, dtype: int64 highway-mpg False 205 Name: highway-mpg, dtype: int64 price False 201 True 4 Name: price, dtype: int64 . In this dataset, none of the columns are empty enough to drop entirely. . Replace by mean: &quot;normalized-losses&quot;: 41 missing data, replace them with mean &quot;bore&quot;: 4 missing data, replace them with mean &quot;stroke&quot;: 4 missing data, replace them with mean &quot;horsepower&quot;: 2 missing data, replace them with mean &quot;peak-rpm&quot;: 2 missing data, replace them with mean . Replace by frequency: &quot;num-of-doors&quot;: 2 missing data, replace them with &quot;four&quot; Reason: 84% sedans are four-door. Since four doors is most frequent, it is most likely to occur . Drop the whole row: &quot;price&quot;: 4 missing data, simply delete the whole row Reason: Price is what we want to predict. Any data entry without price data cannot be used for prediction; therefore any row now without price data is not useful to us. . Replace by mean . # calculate average of the column. astype(&#39;float&#39;) saves the mean value in float dtype. avg_norm_loss = df[&#39;normalized-losses&#39;].astype(&#39;float&#39;).mean(axis=0) print(&#39;Average of normalized-losses:&#39;, avg_norm_loss) . Average of normalized-losses: 122.0 . # replace NaN by the mean value df[&#39;normalized-losses&#39;].replace(np.nan, avg_norm_loss, inplace=True) . # calculate average of the column. astype(&#39;float&#39;) saves the mean value in float dtype. avg_bore = df[&#39;bore&#39;].astype(&#39;float&#39;).mean(axis=0) print(&#39;Average of bore:&#39;, avg_bore) . Average of bore: 3.3297512437810957 . # replace NaN by the mean value df[&#39;bore&#39;].replace(np.nan, avg_norm_loss, inplace=True) . # calculate average of the column. astype(&#39;float&#39;) saves the mean value in float dtype. avg_stroke = df[&#39;stroke&#39;].astype(&#39;float&#39;).mean(axis=0) print(&#39;Average of stroke:&#39;, avg_stroke) . Average of stroke: 3.2554228855721337 . # replace NaN by the mean value df[&#39;stroke&#39;].replace(np.nan, avg_stroke, inplace=True) . # calculate average of the column. astpye(&#39;float&#39;) saves the mean value in flaot dtype avg_hp = df[&#39;horsepower&#39;].astype(&#39;float&#39;).mean(axis=0) print(&#39;Average of horsepower: &#39;, avg_hp) . Average of horsepower: 104.25615763546799 . # replace NaN by the ean value df[&#39;horsepower&#39;].replace(np.nan, avg_hp, inplace=True) . # calculate average of the column. astype(&#39;float&#39;) saves the mean value in float dtype. avg_peakrpm = df[&#39;peak-rpm&#39;].astype(&#39;float&#39;).mean(axis=0) print(&#39;Average of peak-rpm:&#39;, avg_peakrpm) . Average of peak-rpm: 5125.369458128079 . # replace NaN by the mean value df[&#39;peak-rpm&#39;].replace(np.nan, avg_peakrpm, inplace=True) . Replace by Frequency . df[&#39;num-of-doors&#39;].value_counts() . four 114 two 89 Name: num-of-doors, dtype: int64 . df[&#39;num-of-doors&#39;].value_counts().idxmax() . &#39;four&#39; . df[&#39;num-of-doors&#39;].replace(np.nan, &#39;four&#39;, inplace=True) . Drop the whole row . df.dropna(subset=[&#39;price&#39;], axis=0, inplace=True) . df.reset_index(drop=True, inplace=True) df.head() . symboling normalized-losses make fuel-type aspiration num-of-doors body-style drive-wheels engine-location wheel-base length width height curb-weight engine-type num-of-cylinders engine-size fuel-system bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price . 0 3 | 122 | alfa-romero | gas | std | two | convertible | rwd | front | 88.6 | 168.8 | 64.1 | 48.8 | 2548 | dohc | four | 130 | mpfi | 3.47 | 2.68 | 9.0 | 111 | 5000 | 21 | 27 | 13495 | . 1 3 | 122 | alfa-romero | gas | std | two | convertible | rwd | front | 88.6 | 168.8 | 64.1 | 48.8 | 2548 | dohc | four | 130 | mpfi | 3.47 | 2.68 | 9.0 | 111 | 5000 | 21 | 27 | 16500 | . 2 1 | 122 | alfa-romero | gas | std | two | hatchback | rwd | front | 94.5 | 171.2 | 65.5 | 52.4 | 2823 | ohcv | six | 152 | mpfi | 2.68 | 3.47 | 9.0 | 154 | 5000 | 19 | 26 | 16500 | . 3 2 | 164 | audi | gas | std | four | sedan | fwd | front | 99.8 | 176.6 | 66.2 | 54.3 | 2337 | ohc | four | 109 | mpfi | 3.19 | 3.40 | 10.0 | 102 | 5500 | 24 | 30 | 13950 | . 4 2 | 164 | audi | gas | std | four | sedan | 4wd | front | 99.4 | 176.6 | 66.4 | 54.3 | 2824 | ohc | five | 136 | mpfi | 3.19 | 3.40 | 8.0 | 115 | 5500 | 18 | 22 | 17450 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df.dtypes . symboling int64 normalized-losses object make object fuel-type object aspiration object num-of-doors object body-style object drive-wheels object engine-location object wheel-base float64 length float64 width float64 height float64 curb-weight int64 engine-type object num-of-cylinders object engine-size int64 fuel-system object bore object stroke object compression-ratio float64 horsepower object peak-rpm object city-mpg int64 highway-mpg int64 price object dtype: object . # use double brackets when including multiple columns in one statement df[[&#39;bore&#39;, &#39;stroke&#39;, &#39;price&#39;, &#39;peak-rpm&#39;, &#39;horsepower&#39;]] = df[[&#39;bore&#39;, &#39;stroke&#39;, &#39;price&#39;, &#39;peak-rpm&#39;, &#39;horsepower&#39;]].astype(&#39;float&#39;) df[&#39;normalized-losses&#39;] = df[&#39;normalized-losses&#39;].astype(&#39;int&#39;) . df.dtypes . symboling int64 normalized-losses int64 make object fuel-type object aspiration object num-of-doors object body-style object drive-wheels object engine-location object wheel-base float64 length float64 width float64 height float64 curb-weight int64 engine-type object num-of-cylinders object engine-size int64 fuel-system object bore float64 stroke float64 compression-ratio float64 horsepower float64 peak-rpm float64 city-mpg int64 highway-mpg int64 price float64 dtype: object . . Data Normalization . Normalization is the process of transforming values of several variables into a similar range. Typical normalizations include scaling the variable so the variable average is 0, scaling the variable so the variance is 1, or scaling variable so the variable values range from 0 to 1. . # replace (original value) by (original value)/(maximum value) df[&#39;length&#39;] = df[&#39;length&#39;]/df[&#39;length&#39;].max() df[&#39;width&#39;] = df[&#39;width&#39;]/df[&#39;width&#39;].max() df[&#39;height&#39;] = df[&#39;height&#39;]/df[&#39;height&#39;].max() df[[&#39;length&#39;, &#39;width&#39;, &#39;height&#39;]].head() . length width height . 0 0.811148 | 0.890278 | 0.816054 | . 1 0.811148 | 0.890278 | 0.816054 | . 2 0.822681 | 0.909722 | 0.876254 | . 3 0.848630 | 0.919444 | 0.908027 | . 4 0.848630 | 0.922222 | 0.908027 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Binning . Binning is a process of transforming continuous numerical variables into discrete categorical &#39;bins&#39;, for grouped analysis. . df[&#39;horsepower&#39;].describe() . count 201.000000 mean 103.405534 std 37.365700 min 48.000000 25% 70.000000 50% 95.000000 75% 116.000000 max 262.000000 Name: horsepower, dtype: float64 . In our dataset, &quot;horsepower&quot; is a real valued variable ranging from 48 to 288, it has 58 unique values. What if we only care about the price difference between cars with high horsepower, medium horsepower, and little horsepower (3 types)? . %matplotlib inline import matplotlib as plt from matplotlib import pyplot plt.pyplot.hist(df[&quot;horsepower&quot;]) # set x/y labels and plot title plt.pyplot.xlabel(&quot;horsepower&quot;) plt.pyplot.ylabel(&quot;count&quot;) plt.pyplot.title(&quot;horsepower bins&quot;) . Text(0.5, 1.0, &#39;horsepower bins&#39;) . bins = np.linspace(min(df[&#39;horsepower&#39;]), max(df[&#39;horsepower&#39;]), 4) bins . array([ 48. , 119.33333333, 190.66666667, 262. ]) . group_names = [&#39;low&#39;, &#39;medium&#39;, &#39;high&#39;] . df[&#39;horsepower-binned&#39;] = pd.cut(df[&#39;horsepower&#39;], bins, labels=group_names, include_lowest=True) df[[&#39;horsepower&#39;, &#39;horsepower-binned&#39;]].head(10) . horsepower horsepower-binned . 0 111.0 | low | . 1 111.0 | low | . 2 154.0 | medium | . 3 102.0 | low | . 4 115.0 | low | . 5 110.0 | low | . 6 110.0 | low | . 7 110.0 | low | . 8 140.0 | medium | . 9 101.0 | low | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df[&#39;horsepower-binned&#39;].value_counts() . low 153 medium 43 high 5 Name: horsepower-binned, dtype: int64 . %matplotlib inline import matplotlib as plt from matplotlib import pyplot pyplot.bar(group_names, df[&quot;horsepower-binned&quot;].value_counts()) # set x/y labels and plot title plt.pyplot.xlabel(&quot;horsepower&quot;) plt.pyplot.ylabel(&quot;count&quot;) plt.pyplot.title(&quot;horsepower bins&quot;) . Text(0.5, 1.0, &#39;horsepower bins&#39;) . Bins Visualization . Normally, a histogram is used to visualize the distribution of bins. . %matplotlib inline import matplotlib as plt from matplotlib import pyplot a = (0, 1, 2) # draw histogram of attribute &#39;horsepower&#39; with bins=3 plt.pyplot.hist(df[&#39;horsepower&#39;], bins=3) # set x/y labels and plot title plt.pyplot.xlabel(&#39;horsepower&#39;) plt.pyplot.ylabel(&#39;count&#39;) plt.pyplot.title(&#39;horsepower bins&#39;) . Text(0.5, 1.0, &#39;horsepower bins&#39;) . Indicator variable (or dummy variable) . An indicator variable (or dummy variable) is a numerical variable used to label categories. They are called &#39;dummies&#39; because the numbers themselves don&#39;t have inherent meaning. . df[&#39;fuel-type&#39;].unique() . array([&#39;gas&#39;, &#39;diesel&#39;], dtype=object) . We see the column &quot;fuel-type&quot; has two unique values, &quot;gas&quot; or &quot;diesel&quot;. Regression doesn&#39;t understand words, only numbers. To use this attribute in regression analysis, we convert &quot;fuel-type&quot; into indicator variables. . dummy_variable_1 = pd.get_dummies(df[&#39;fuel-type&#39;]) dummy_variable_1.head() . diesel gas . 0 0 | 1 | . 1 0 | 1 | . 2 0 | 1 | . 3 0 | 1 | . 4 0 | 1 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df.columns . Index([&#39;symboling&#39;, &#39;normalized-losses&#39;, &#39;make&#39;, &#39;fuel-type&#39;, &#39;aspiration&#39;, &#39;num-of-doors&#39;, &#39;body-style&#39;, &#39;drive-wheels&#39;, &#39;engine-location&#39;, &#39;wheel-base&#39;, &#39;length&#39;, &#39;width&#39;, &#39;height&#39;, &#39;curb-weight&#39;, &#39;engine-type&#39;, &#39;num-of-cylinders&#39;, &#39;engine-size&#39;, &#39;fuel-system&#39;, &#39;bore&#39;, &#39;stroke&#39;, &#39;compression-ratio&#39;, &#39;horsepower&#39;, &#39;peak-rpm&#39;, &#39;city-mpg&#39;, &#39;highway-mpg&#39;, &#39;price&#39;, &#39;horsepower-binned&#39;], dtype=&#39;object&#39;) . dummy_variable_1.rename(columns={&#39;fuel-tpye-diesel&#39;:&#39;gas&#39;, &#39;fuel-type-diesel&#39;:&#39;diesel&#39;}, inplace=True) dummy_variable_1.head() . diesel gas . 0 0 | 1 | . 1 0 | 1 | . 2 0 | 1 | . 3 0 | 1 | . 4 0 | 1 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df.columns . Index([&#39;symboling&#39;, &#39;normalized-losses&#39;, &#39;make&#39;, &#39;fuel-type&#39;, &#39;aspiration&#39;, &#39;num-of-doors&#39;, &#39;body-style&#39;, &#39;drive-wheels&#39;, &#39;engine-location&#39;, &#39;wheel-base&#39;, &#39;length&#39;, &#39;width&#39;, &#39;height&#39;, &#39;curb-weight&#39;, &#39;engine-type&#39;, &#39;num-of-cylinders&#39;, &#39;engine-size&#39;, &#39;fuel-system&#39;, &#39;bore&#39;, &#39;stroke&#39;, &#39;compression-ratio&#39;, &#39;horsepower&#39;, &#39;peak-rpm&#39;, &#39;city-mpg&#39;, &#39;highway-mpg&#39;, &#39;price&#39;, &#39;horsepower-binned&#39;], dtype=&#39;object&#39;) . We now have the value 0 to represent &quot;gas&quot; and 1 to represent &quot;diesel&quot; in the column &quot;fuel-type&quot;. . df = pd.concat([df, dummy_variable_1], axis=1) # drop original column &#39;fuel-type&#39; from &#39;df&#39; df.drop(&#39;fuel-type&#39;, axis=1, inplace=True) . The last two columns are now the indicator variable representation of the fuel-type variable. It&#39;s all 0s and 1s now. . dummy_variable_2 = pd.get_dummies(df[&#39;aspiration&#39;]) dummy_variable_2.rename(columns={&#39;std&#39;: &#39;aspiration-std&#39;, &#39;turbo&#39;: &#39;aspiration-turbo&#39;}, inplace=True) dummy_variable_2.head() . aspiration-std aspiration-turbo . 0 1 | 0 | . 1 1 | 0 | . 2 1 | 0 | . 3 1 | 0 | . 4 1 | 0 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df = pd.concat([df, dummy_variable_2], axis=1) # drop the column &#39;aspiration&#39; df.drop(&#39;aspiration&#39;, axis=1, inplace=True) df.head() . symboling normalized-losses make num-of-doors body-style drive-wheels engine-location wheel-base length width height curb-weight engine-type num-of-cylinders engine-size fuel-system bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price horsepower-binned diesel gas aspiration-std aspiration-turbo . 0 3 | 122 | alfa-romero | two | convertible | rwd | front | 88.6 | 0.811148 | 0.890278 | 0.816054 | 2548 | dohc | four | 130 | mpfi | 3.47 | 2.68 | 9.0 | 111.0 | 5000.0 | 21 | 27 | 13495.0 | low | 0 | 1 | 1 | 0 | . 1 3 | 122 | alfa-romero | two | convertible | rwd | front | 88.6 | 0.811148 | 0.890278 | 0.816054 | 2548 | dohc | four | 130 | mpfi | 3.47 | 2.68 | 9.0 | 111.0 | 5000.0 | 21 | 27 | 16500.0 | low | 0 | 1 | 1 | 0 | . 2 1 | 122 | alfa-romero | two | hatchback | rwd | front | 94.5 | 0.822681 | 0.909722 | 0.876254 | 2823 | ohcv | six | 152 | mpfi | 2.68 | 3.47 | 9.0 | 154.0 | 5000.0 | 19 | 26 | 16500.0 | medium | 0 | 1 | 1 | 0 | . 3 2 | 164 | audi | four | sedan | fwd | front | 99.8 | 0.848630 | 0.919444 | 0.908027 | 2337 | ohc | four | 109 | mpfi | 3.19 | 3.40 | 10.0 | 102.0 | 5500.0 | 24 | 30 | 13950.0 | low | 0 | 1 | 1 | 0 | . 4 2 | 164 | audi | four | sedan | 4wd | front | 99.4 | 0.848630 | 0.922222 | 0.908027 | 2824 | ohc | five | 136 | mpfi | 3.19 | 3.40 | 8.0 | 115.0 | 5500.0 | 18 | 22 | 17450.0 | low | 0 | 1 | 1 | 0 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Analyzing Individual Feature Patterns using Visualization . import matplotlib.pyplot as plt import seaborn as sns %matplotlib inline . Continuous numerical variables . Continuous numerical variables are variables that may contain any value within some range. Continuous numerical variables can have the type &quot;int64&quot; or &quot;float64&quot;. A great way to visualize these variables is by using scatterplots with fitted lines. . Correlation . We can calculate the correlation between variables of type &#39;int64&#39; or &#39;float64&#39; using the method &#39;corr&#39;. . df.corr() . symboling normalized-losses wheel-base length width height curb-weight engine-size bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price diesel gas aspiration-std aspiration-turbo . symboling 1.000000 | 0.466264 | -0.535987 | -0.365404 | -0.242423 | -0.550160 | -0.233118 | -0.110581 | 0.243521 | -0.008153 | -0.182196 | 0.075819 | 0.279740 | -0.035527 | 0.036233 | -0.082391 | -0.196735 | 0.196735 | 0.054615 | -0.054615 | . normalized-losses 0.466264 | 1.000000 | -0.056661 | 0.019424 | 0.086802 | -0.373737 | 0.099404 | 0.112360 | 0.124511 | 0.055045 | -0.114713 | 0.217299 | 0.239543 | -0.225016 | -0.181877 | 0.133999 | -0.101546 | 0.101546 | 0.006911 | -0.006911 | . wheel-base -0.535987 | -0.056661 | 1.000000 | 0.876024 | 0.814507 | 0.590742 | 0.782097 | 0.572027 | -0.074380 | 0.158018 | 0.250313 | 0.371147 | -0.360305 | -0.470606 | -0.543304 | 0.584642 | 0.307237 | -0.307237 | -0.256889 | 0.256889 | . length -0.365404 | 0.019424 | 0.876024 | 1.000000 | 0.857170 | 0.492063 | 0.880665 | 0.685025 | -0.050463 | 0.123952 | 0.159733 | 0.579821 | -0.285970 | -0.665192 | -0.698142 | 0.690628 | 0.211187 | -0.211187 | -0.230085 | 0.230085 | . width -0.242423 | 0.086802 | 0.814507 | 0.857170 | 1.000000 | 0.306002 | 0.866201 | 0.729436 | -0.004059 | 0.188822 | 0.189867 | 0.615077 | -0.245800 | -0.633531 | -0.680635 | 0.751265 | 0.244356 | -0.244356 | -0.305732 | 0.305732 | . height -0.550160 | -0.373737 | 0.590742 | 0.492063 | 0.306002 | 1.000000 | 0.307581 | 0.074694 | -0.240217 | -0.060663 | 0.259737 | -0.087027 | -0.309974 | -0.049800 | -0.104812 | 0.135486 | 0.281578 | -0.281578 | -0.090336 | 0.090336 | . curb-weight -0.233118 | 0.099404 | 0.782097 | 0.880665 | 0.866201 | 0.307581 | 1.000000 | 0.849072 | -0.029485 | 0.167438 | 0.156433 | 0.757976 | -0.279361 | -0.749543 | -0.794889 | 0.834415 | 0.221046 | -0.221046 | -0.321955 | 0.321955 | . engine-size -0.110581 | 0.112360 | 0.572027 | 0.685025 | 0.729436 | 0.074694 | 0.849072 | 1.000000 | -0.177698 | 0.205928 | 0.028889 | 0.822676 | -0.256733 | -0.650546 | -0.679571 | 0.872335 | 0.070779 | -0.070779 | -0.110040 | 0.110040 | . bore 0.243521 | 0.124511 | -0.074380 | -0.050463 | -0.004059 | -0.240217 | -0.029485 | -0.177698 | 1.000000 | -0.001549 | -0.027237 | 0.032443 | 0.259276 | -0.196827 | -0.170635 | 0.005399 | -0.046482 | 0.046482 | 0.062876 | -0.062876 | . stroke -0.008153 | 0.055045 | 0.158018 | 0.123952 | 0.188822 | -0.060663 | 0.167438 | 0.205928 | -0.001549 | 1.000000 | 0.187871 | 0.098267 | -0.063561 | -0.033956 | -0.034636 | 0.082269 | 0.241064 | -0.241064 | -0.218233 | 0.218233 | . compression-ratio -0.182196 | -0.114713 | 0.250313 | 0.159733 | 0.189867 | 0.259737 | 0.156433 | 0.028889 | -0.027237 | 0.187871 | 1.000000 | -0.214514 | -0.435780 | 0.331425 | 0.268465 | 0.071107 | 0.985231 | -0.985231 | -0.307522 | 0.307522 | . horsepower 0.075819 | 0.217299 | 0.371147 | 0.579821 | 0.615077 | -0.087027 | 0.757976 | 0.822676 | 0.032443 | 0.098267 | -0.214514 | 1.000000 | 0.107885 | -0.822214 | -0.804575 | 0.809575 | -0.169053 | 0.169053 | -0.251127 | 0.251127 | . peak-rpm 0.279740 | 0.239543 | -0.360305 | -0.285970 | -0.245800 | -0.309974 | -0.279361 | -0.256733 | 0.259276 | -0.063561 | -0.435780 | 0.107885 | 1.000000 | -0.115413 | -0.058598 | -0.101616 | -0.475812 | 0.475812 | 0.190057 | -0.190057 | . city-mpg -0.035527 | -0.225016 | -0.470606 | -0.665192 | -0.633531 | -0.049800 | -0.749543 | -0.650546 | -0.196827 | -0.033956 | 0.331425 | -0.822214 | -0.115413 | 1.000000 | 0.972044 | -0.686571 | 0.265676 | -0.265676 | 0.189237 | -0.189237 | . highway-mpg 0.036233 | -0.181877 | -0.543304 | -0.698142 | -0.680635 | -0.104812 | -0.794889 | -0.679571 | -0.170635 | -0.034636 | 0.268465 | -0.804575 | -0.058598 | 0.972044 | 1.000000 | -0.704692 | 0.198690 | -0.198690 | 0.241851 | -0.241851 | . price -0.082391 | 0.133999 | 0.584642 | 0.690628 | 0.751265 | 0.135486 | 0.834415 | 0.872335 | 0.005399 | 0.082269 | 0.071107 | 0.809575 | -0.101616 | -0.686571 | -0.704692 | 1.000000 | 0.110326 | -0.110326 | -0.179578 | 0.179578 | . diesel -0.196735 | -0.101546 | 0.307237 | 0.211187 | 0.244356 | 0.281578 | 0.221046 | 0.070779 | -0.046482 | 0.241064 | 0.985231 | -0.169053 | -0.475812 | 0.265676 | 0.198690 | 0.110326 | 1.000000 | -1.000000 | -0.408228 | 0.408228 | . gas 0.196735 | 0.101546 | -0.307237 | -0.211187 | -0.244356 | -0.281578 | -0.221046 | -0.070779 | 0.046482 | -0.241064 | -0.985231 | 0.169053 | 0.475812 | -0.265676 | -0.198690 | -0.110326 | -1.000000 | 1.000000 | 0.408228 | -0.408228 | . aspiration-std 0.054615 | 0.006911 | -0.256889 | -0.230085 | -0.305732 | -0.090336 | -0.321955 | -0.110040 | 0.062876 | -0.218233 | -0.307522 | -0.251127 | 0.190057 | 0.189237 | 0.241851 | -0.179578 | -0.408228 | 0.408228 | 1.000000 | -1.000000 | . aspiration-turbo -0.054615 | -0.006911 | 0.256889 | 0.230085 | 0.305732 | 0.090336 | 0.321955 | 0.110040 | -0.062876 | 0.218233 | 0.307522 | 0.251127 | -0.190057 | -0.189237 | -0.241851 | 0.179578 | 0.408228 | -0.408228 | -1.000000 | 1.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df[[&#39;bore&#39;, &#39;stroke&#39;, &#39;compression-ratio&#39;, &#39;horsepower&#39;]].corr() . bore stroke compression-ratio horsepower . bore 1.000000 | -0.001549 | -0.027237 | 0.032443 | . stroke -0.001549 | 1.000000 | 0.187871 | 0.098267 | . compression-ratio -0.027237 | 0.187871 | 1.000000 | -0.214514 | . horsepower 0.032443 | 0.098267 | -0.214514 | 1.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Continuos numerical variables . Continuous numerical variables are variables that may contain any value within some range. Continuous numerical variables can have the type &quot;int64&quot; or &quot;float64&quot;. A great way to visualize these variables is by using scatterplots with fitted lines. . Positive Linear Relationship . sns.regplot(x=&#39;engine-size&#39;, y=&#39;price&#39;, data=df) plt.ylim(0,) . (0.0, 53207.009180420704) . As the engine-size goes up, the price goes up: this indicates a positive direct correlation between these two variables. Engine size seems like a pretty good predictor of price since the regression line is almost a perfect diagonal line. . df[[&#39;engine-size&#39;, &#39;price&#39;]].corr() . engine-size price . engine-size 1.000000 | 0.872335 | . price 0.872335 | 1.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; As the highway-mpg goes up, the price goes down: this indicates an inverse/negative relationship between these two variables. . df[[&#39;highway-mpg&#39;, &#39;price&#39;]].corr() . highway-mpg price . highway-mpg 1.000000 | -0.704692 | . price -0.704692 | 1.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Weak Linear Relationship . sns.regplot(x=&#39;peak-rpm&#39;, y=&#39;price&#39;, data=df) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x7f9631b4c290&gt; . Peak rpm does not seem like a good predictor of the price at all since the regression line is close to horizontal. Also, the data points are very scattered and far from the fitted line, showing lots of variability. Therefore it&#39;s it is not a reliable variable. . df[[&#39;peak-rpm&#39;, &#39;price&#39;]].corr() . peak-rpm price . peak-rpm 1.000000 | -0.101616 | . price -0.101616 | 1.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Categorical variables . These are variables that describe a &#39;characteristic&#39; of a data unit, and are selected from a small group of categories. The categorical variables can have the type &quot;object&quot; or &quot;int64&quot;. A good way to visualize categorical variables is by using boxplots. . sns.boxplot(x=&#39;body-style&#39;, y=&#39;price&#39;, data=df) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x7f9631acb390&gt; . We see that the distributions of price between the different body-style categories have a significant overlap, and so body-style would not be a good predictor of price. . sns.boxplot(x=&#39;engine-location&#39;, y=&#39;price&#39;, data=df) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x7f9631acb750&gt; . We see that the distribution of price between these two engine-location categories, front and rear, are distinct enough to take engine-location as a potential good predictor of price. . sns.boxplot(x=&#39;drive-wheels&#39;, y=&#39;price&#39;, data=df) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x7f96319a9a50&gt; . We see that the distribution of price between the different drive-wheels categories differs; as such, drive-wheels could potentially be a predictor of price. . Descriptive Statistical Analysis . The describe function automatically computes basic statistics for all continuous variables. Any NaN values are automatically skipped in these statistics. . df.describe() . symboling normalized-losses wheel-base length width height curb-weight engine-size bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price diesel gas aspiration-std aspiration-turbo . count 201.000000 | 201.00000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | 201.000000 | . mean 0.840796 | 122.00000 | 98.797015 | 0.837102 | 0.915126 | 0.899108 | 2555.666667 | 126.875622 | 5.692289 | 3.256874 | 10.164279 | 103.405534 | 5117.665368 | 25.179104 | 30.686567 | 13207.129353 | 0.099502 | 0.900498 | 0.820896 | 0.179104 | . std 1.254802 | 31.99625 | 6.066366 | 0.059213 | 0.029187 | 0.040933 | 517.296727 | 41.546834 | 16.616706 | 0.316048 | 4.004965 | 37.365700 | 478.113805 | 6.423220 | 6.815150 | 7947.066342 | 0.300083 | 0.300083 | 0.384397 | 0.384397 | . min -2.000000 | 65.00000 | 86.600000 | 0.678039 | 0.837500 | 0.799331 | 1488.000000 | 61.000000 | 2.540000 | 2.070000 | 7.000000 | 48.000000 | 4150.000000 | 13.000000 | 16.000000 | 5118.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | . 25% 0.000000 | 101.00000 | 94.500000 | 0.801538 | 0.890278 | 0.869565 | 2169.000000 | 98.000000 | 3.150000 | 3.110000 | 8.600000 | 70.000000 | 4800.000000 | 19.000000 | 25.000000 | 7775.000000 | 0.000000 | 1.000000 | 1.000000 | 0.000000 | . 50% 1.000000 | 122.00000 | 97.000000 | 0.832292 | 0.909722 | 0.904682 | 2414.000000 | 120.000000 | 3.310000 | 3.290000 | 9.000000 | 95.000000 | 5125.369458 | 24.000000 | 30.000000 | 10295.000000 | 0.000000 | 1.000000 | 1.000000 | 0.000000 | . 75% 2.000000 | 137.00000 | 102.400000 | 0.881788 | 0.925000 | 0.928094 | 2926.000000 | 141.000000 | 3.600000 | 3.410000 | 9.400000 | 116.000000 | 5500.000000 | 30.000000 | 34.000000 | 16500.000000 | 0.000000 | 1.000000 | 1.000000 | 0.000000 | . max 3.000000 | 256.00000 | 120.900000 | 1.000000 | 1.000000 | 1.000000 | 4066.000000 | 326.000000 | 122.000000 | 4.170000 | 23.000000 | 262.000000 | 6600.000000 | 49.000000 | 54.000000 | 45400.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df.describe(include=&#39;object&#39;) . make num-of-doors body-style drive-wheels engine-location engine-type num-of-cylinders fuel-system . count 201 | 201 | 201 | 201 | 201 | 201 | 201 | 201 | . unique 22 | 2 | 5 | 3 | 2 | 6 | 7 | 8 | . top toyota | four | sedan | fwd | front | ohc | four | mpfi | . freq 32 | 115 | 94 | 118 | 198 | 145 | 157 | 92 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; value_counts is a good way of understanding how many units of each characteristic/variable we have. The method &quot;value_counts&quot; only works on Pandas series, not Pandas Dataframes. As a result, we only include one bracket &quot;df[&#39;drive-wheels&#39;]&quot; not two brackets &quot;df[[&#39;drive-wheels&#39;]]&quot;. . df[&#39;drive-wheels&#39;].value_counts() . fwd 118 rwd 75 4wd 8 Name: drive-wheels, dtype: int64 . df[&#39;drive-wheels&#39;].value_counts().to_frame() . drive-wheels . fwd 118 | . rwd 75 | . 4wd 8 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; drive_wheels_counts = df[&#39;drive-wheels&#39;].value_counts().to_frame() drive_wheels_counts.rename(columns={&#39;drive-wheels&#39;: &#39;value_counts&#39;}, inplace=True) drive_wheels_counts . value_counts . fwd 118 | . rwd 75 | . 4wd 8 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; drive_wheels_counts.index.name = &#39;drive-wheels&#39; drive_wheels_counts . value_counts . drive-wheels . fwd 118 | . rwd 75 | . 4wd 8 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; engine_loc_counts = df[&#39;engine-location&#39;].value_counts().to_frame() engine_loc_counts.rename({&#39;engine-location&#39;: &#39;value_counts&#39;}, inplace=True) engine_loc_counts.index.name = &#39;engine-location&#39; engine_loc_counts . engine-location . engine-location . front 198 | . rear 3 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; The value counts of the engine location would not be a good predictor variable for the price. This is because we only have 3 cars with a rear engine and 198 with an engine in the front; this result is skewed. Thus, we are not able to draw any conclusions about the engine location. . Grouping . The &#39;groupby&#39; method groups data by different categories. The data is grouped based on one or several variables and analysis is performed on the individual groups. . df[&#39;drive-wheels&#39;].unique() . array([&#39;rwd&#39;, &#39;fwd&#39;, &#39;4wd&#39;], dtype=object) . If we want to know on average, which type of drive wheel is most valuable, we can group &#39;drive-wheels&#39; and then average them. . df_group_one = df[[&#39;drive-wheels&#39;, &#39;body-style&#39;, &#39;price&#39;]] . # calculate the average price for each of the different categories of data df_group_one = df_group_one.groupby([&#39;drive-wheels&#39;], as_index=False).mean() df_group_one . drive-wheels price . 0 4wd | 10241.000000 | . 1 fwd | 9244.779661 | . 2 rwd | 19757.613333 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; It seems that rear-wheel drive vehicles are, on average, the most expensive, while 4-wheel drive and front-wheel drive are approximately the same price. . df_gptest = df[[&#39;drive-wheels&#39;, &#39;body-style&#39;, &#39;price&#39;]] grouped_test1 = df_gptest.groupby([&#39;drive-wheels&#39;, &#39;body-style&#39;], as_index=False).mean() grouped_test1 . drive-wheels body-style price . 0 4wd | hatchback | 7603.000000 | . 1 4wd | sedan | 12647.333333 | . 2 4wd | wagon | 9095.750000 | . 3 fwd | convertible | 11595.000000 | . 4 fwd | hardtop | 8249.000000 | . 5 fwd | hatchback | 8396.387755 | . 6 fwd | sedan | 9811.800000 | . 7 fwd | wagon | 9997.333333 | . 8 rwd | convertible | 23949.600000 | . 9 rwd | hardtop | 24202.714286 | . 10 rwd | hatchback | 14337.777778 | . 11 rwd | sedan | 21711.833333 | . 12 rwd | wagon | 16994.222222 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; This grouped data is much easier to visualize when it is made into a pivot table. A pivot table is like an Excel spreadsheet, with one variable along the column and another along the row. We can convert the dataframe to a pivot table using the method &#39;pivot&#39; to create a pivot table from the groups. . grouped_pivot = grouped_test1.pivot(index=&#39;drive-wheels&#39;, columns=&#39;body-style&#39;) grouped_pivot . price . body-style convertible hardtop hatchback sedan wagon . drive-wheels . 4wd NaN | NaN | 7603.000000 | 12647.333333 | 9095.750000 | . fwd 11595.0 | 8249.000000 | 8396.387755 | 9811.800000 | 9997.333333 | . rwd 23949.6 | 24202.714286 | 14337.777778 | 21711.833333 | 16994.222222 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Often, we won&#39;t have data for some of the pivot cells. We can fill these missing cells with the value 0, but any other value could potentially be used as well. . grouped_pivot = grouped_pivot.fillna(0) grouped_pivot . price . body-style convertible hardtop hatchback sedan wagon . drive-wheels . 4wd 0.0 | 0.000000 | 7603.000000 | 12647.333333 | 9095.750000 | . fwd 11595.0 | 8249.000000 | 8396.387755 | 9811.800000 | 9997.333333 | . rwd 23949.6 | 24202.714286 | 14337.777778 | 21711.833333 | 16994.222222 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df_gptest_2 = df[[&#39;body-style&#39;, &#39;price&#39;]] grouped_test_bodystyle = df_gptest_2.groupby([&#39;body-style&#39;], as_index=False).mean() grouped_test_bodystyle . body-style price . 0 convertible | 21890.500000 | . 1 hardtop | 22208.500000 | . 2 hatchback | 9957.441176 | . 3 sedan | 14459.755319 | . 4 wagon | 12371.960000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Use a heat map to visualize the relationship between Body Style vs Price . plt.pcolor(grouped_pivot, cmap=&#39;RdBu&#39;) plt.colorbar() plt.show() . The heatmap plots the target variable (price) proportional to colour with respect to the variables &#39;drive-wheel&#39; and &#39;body-style&#39; in the vertical and horizontal axis respectively. This allows us to visualize how the price is related to &#39;drive-wheel&#39; and &#39;body-style&#39;. . fig, ax = plt.subplots() im = ax.pcolor(grouped_pivot, cmap=&#39;RdBu&#39;) #label names row_labels = grouped_pivot.columns.levels[1] col_labels = grouped_pivot.index #move ticks and labels to the center ax.set_xticks(np.arange(grouped_pivot.shape[1]) + 0.5, minor=False) ax.set_yticks(np.arange(grouped_pivot.shape[0]) + 0.5, minor=False) #insert labels ax.set_xticklabels(row_labels, minor=False) ax.set_yticklabels(col_labels, minor=False) #rotate label if too long plt.xticks(rotation=90) fig.colorbar(im) plt.show() . Correlation and Causation . Correlation: a measure of the extent of interdependence between variables. . Causation: the relationship between cause and effect between two variables. . Correlation doesn&#39;t imply causation. . Persaon Correlation: It measures the linear dependence between two variables X and Y. . The resulting coefficient is a value between -1 and 1 inclusive, where: . 1: Total positive linear correlation. | 0: No linear correlation, the two variables most likely do not affect each other. | -1: Total negative linear correlation | . Pearson Correlation is the default method of the function &quot;corr&quot;. Like before we can calculate the Pearson Correlation of the &#39;int64&#39; or &#39;float64&#39; variables. . df.corr() . symboling normalized-losses wheel-base length width height curb-weight engine-size bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price diesel gas aspiration-std aspiration-turbo . symboling 1.000000 | 0.466264 | -0.535987 | -0.365404 | -0.242423 | -0.550160 | -0.233118 | -0.110581 | 0.243521 | -0.008153 | -0.182196 | 0.075819 | 0.279740 | -0.035527 | 0.036233 | -0.082391 | -0.196735 | 0.196735 | 0.054615 | -0.054615 | . normalized-losses 0.466264 | 1.000000 | -0.056661 | 0.019424 | 0.086802 | -0.373737 | 0.099404 | 0.112360 | 0.124511 | 0.055045 | -0.114713 | 0.217299 | 0.239543 | -0.225016 | -0.181877 | 0.133999 | -0.101546 | 0.101546 | 0.006911 | -0.006911 | . wheel-base -0.535987 | -0.056661 | 1.000000 | 0.876024 | 0.814507 | 0.590742 | 0.782097 | 0.572027 | -0.074380 | 0.158018 | 0.250313 | 0.371147 | -0.360305 | -0.470606 | -0.543304 | 0.584642 | 0.307237 | -0.307237 | -0.256889 | 0.256889 | . length -0.365404 | 0.019424 | 0.876024 | 1.000000 | 0.857170 | 0.492063 | 0.880665 | 0.685025 | -0.050463 | 0.123952 | 0.159733 | 0.579821 | -0.285970 | -0.665192 | -0.698142 | 0.690628 | 0.211187 | -0.211187 | -0.230085 | 0.230085 | . width -0.242423 | 0.086802 | 0.814507 | 0.857170 | 1.000000 | 0.306002 | 0.866201 | 0.729436 | -0.004059 | 0.188822 | 0.189867 | 0.615077 | -0.245800 | -0.633531 | -0.680635 | 0.751265 | 0.244356 | -0.244356 | -0.305732 | 0.305732 | . height -0.550160 | -0.373737 | 0.590742 | 0.492063 | 0.306002 | 1.000000 | 0.307581 | 0.074694 | -0.240217 | -0.060663 | 0.259737 | -0.087027 | -0.309974 | -0.049800 | -0.104812 | 0.135486 | 0.281578 | -0.281578 | -0.090336 | 0.090336 | . curb-weight -0.233118 | 0.099404 | 0.782097 | 0.880665 | 0.866201 | 0.307581 | 1.000000 | 0.849072 | -0.029485 | 0.167438 | 0.156433 | 0.757976 | -0.279361 | -0.749543 | -0.794889 | 0.834415 | 0.221046 | -0.221046 | -0.321955 | 0.321955 | . engine-size -0.110581 | 0.112360 | 0.572027 | 0.685025 | 0.729436 | 0.074694 | 0.849072 | 1.000000 | -0.177698 | 0.205928 | 0.028889 | 0.822676 | -0.256733 | -0.650546 | -0.679571 | 0.872335 | 0.070779 | -0.070779 | -0.110040 | 0.110040 | . bore 0.243521 | 0.124511 | -0.074380 | -0.050463 | -0.004059 | -0.240217 | -0.029485 | -0.177698 | 1.000000 | -0.001549 | -0.027237 | 0.032443 | 0.259276 | -0.196827 | -0.170635 | 0.005399 | -0.046482 | 0.046482 | 0.062876 | -0.062876 | . stroke -0.008153 | 0.055045 | 0.158018 | 0.123952 | 0.188822 | -0.060663 | 0.167438 | 0.205928 | -0.001549 | 1.000000 | 0.187871 | 0.098267 | -0.063561 | -0.033956 | -0.034636 | 0.082269 | 0.241064 | -0.241064 | -0.218233 | 0.218233 | . compression-ratio -0.182196 | -0.114713 | 0.250313 | 0.159733 | 0.189867 | 0.259737 | 0.156433 | 0.028889 | -0.027237 | 0.187871 | 1.000000 | -0.214514 | -0.435780 | 0.331425 | 0.268465 | 0.071107 | 0.985231 | -0.985231 | -0.307522 | 0.307522 | . horsepower 0.075819 | 0.217299 | 0.371147 | 0.579821 | 0.615077 | -0.087027 | 0.757976 | 0.822676 | 0.032443 | 0.098267 | -0.214514 | 1.000000 | 0.107885 | -0.822214 | -0.804575 | 0.809575 | -0.169053 | 0.169053 | -0.251127 | 0.251127 | . peak-rpm 0.279740 | 0.239543 | -0.360305 | -0.285970 | -0.245800 | -0.309974 | -0.279361 | -0.256733 | 0.259276 | -0.063561 | -0.435780 | 0.107885 | 1.000000 | -0.115413 | -0.058598 | -0.101616 | -0.475812 | 0.475812 | 0.190057 | -0.190057 | . city-mpg -0.035527 | -0.225016 | -0.470606 | -0.665192 | -0.633531 | -0.049800 | -0.749543 | -0.650546 | -0.196827 | -0.033956 | 0.331425 | -0.822214 | -0.115413 | 1.000000 | 0.972044 | -0.686571 | 0.265676 | -0.265676 | 0.189237 | -0.189237 | . highway-mpg 0.036233 | -0.181877 | -0.543304 | -0.698142 | -0.680635 | -0.104812 | -0.794889 | -0.679571 | -0.170635 | -0.034636 | 0.268465 | -0.804575 | -0.058598 | 0.972044 | 1.000000 | -0.704692 | 0.198690 | -0.198690 | 0.241851 | -0.241851 | . price -0.082391 | 0.133999 | 0.584642 | 0.690628 | 0.751265 | 0.135486 | 0.834415 | 0.872335 | 0.005399 | 0.082269 | 0.071107 | 0.809575 | -0.101616 | -0.686571 | -0.704692 | 1.000000 | 0.110326 | -0.110326 | -0.179578 | 0.179578 | . diesel -0.196735 | -0.101546 | 0.307237 | 0.211187 | 0.244356 | 0.281578 | 0.221046 | 0.070779 | -0.046482 | 0.241064 | 0.985231 | -0.169053 | -0.475812 | 0.265676 | 0.198690 | 0.110326 | 1.000000 | -1.000000 | -0.408228 | 0.408228 | . gas 0.196735 | 0.101546 | -0.307237 | -0.211187 | -0.244356 | -0.281578 | -0.221046 | -0.070779 | 0.046482 | -0.241064 | -0.985231 | 0.169053 | 0.475812 | -0.265676 | -0.198690 | -0.110326 | -1.000000 | 1.000000 | 0.408228 | -0.408228 | . aspiration-std 0.054615 | 0.006911 | -0.256889 | -0.230085 | -0.305732 | -0.090336 | -0.321955 | -0.110040 | 0.062876 | -0.218233 | -0.307522 | -0.251127 | 0.190057 | 0.189237 | 0.241851 | -0.179578 | -0.408228 | 0.408228 | 1.000000 | -1.000000 | . aspiration-turbo -0.054615 | -0.006911 | 0.256889 | 0.230085 | 0.305732 | 0.090336 | 0.321955 | 0.110040 | -0.062876 | 0.218233 | 0.307522 | 0.251127 | -0.190057 | -0.189237 | -0.241851 | 0.179578 | 0.408228 | -0.408228 | -1.000000 | 1.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df[&#39;horsepower&#39;].unique() . array([111. , 154. , 102. , 115. , 110. , 140. , 101. , 121. , 182. , 48. , 70. , 68. , 88. , 145. , 58. , 76. , 60. , 86. , 100. , 78. , 90. , 176. , 262. , 135. , 84. , 64. , 120. , 72. , 123. , 155. , 184. , 175. , 116. , 69. , 55. , 97. , 152. , 160. , 200. , 95. , 142. , 143. , 207. , 104.25615764, 73. , 82. , 94. , 62. , 56. , 112. , 92. , 161. , 156. , 52. , 85. , 114. , 162. , 134. , 106. ]) . To know the significance of the correlation estimate, we calculate the P-value. The P-value is the probability value that the correlation between these two variables is statistically significant. Normally, we choose a significance level of 0.05, which means that we are 95% confident that the correlation between the variables is significant. . By convention, when the . p-value is &lt; 0.001: we say there is strong evidence that the correlation is significant. | p-value is &lt; 0.05: there is moderate evidence that the correlation is significant. | p-value is &lt; 0.1: there is weak evidence that the correlation is significant. | p-value is &gt; 0.1: there is no evidence that the correlation is significant. | . from scipy import stats . pearson_coef, p_value = stats.pearsonr(df[&#39;wheel-base&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is 0.584641822265508 with a P-value of P= 8.076488270733218e-20 . Since the p-value is &lt; 0.001, the correlation between wheel-base and price is statistically significant, although the linear relationship isn&#39;t extremely strong (~0.585) . pearson_coef, p_value = stats.pearsonr(df[&#39;horsepower&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is 0.8095745670036559 with a P-value of P= 6.369057428260101e-48 . Since the p-value is &lt; 0.001, the correlation between horsepower and price is statistically significant, and the linear relationship is quite strong (~0.809, close to 1) . pearson_coef, p_value = stats.pearsonr(df[&#39;length&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is 0.6906283804483639 with a P-value of P= 8.016477466159328e-30 . Since the p-value is &lt; 0.001, the correlation between length and price is statistically significant, and the linear relationship is moderately strong (~0.691). . pearson_coef, p_value = stats.pearsonr(df[&#39;width&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is 0.7512653440522673 with a P-value of P= 9.200335510481646e-38 . Since the p-value is &lt; 0.001, the correlation between width and price is statistically significant, and the linear relationship is quite strong (~0.751). . pearson_coef, p_value = stats.pearsonr(df[&#39;curb-weight&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is 0.8344145257702843 with a P-value of P= 2.189577238894065e-53 . Since the p-value is &lt; 0.001, the correlation between curb-weight and price is statistically significant, and the linear relationship is quite strong (~0.834). . pearson_coef, p_value = stats.pearsonr(df[&#39;engine-size&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is 0.8723351674455185 with a P-value of P= 9.265491622198389e-64 . Since the p-value is &lt; 0.001, the correlation between engine-size and price is statistically significant, and the linear relationship is very strong (~0.872). . pearson_coef, p_value = stats.pearsonr(df[&#39;bore&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is 0.005399275177997418 with a P-value of P= 0.9393625495207799 . Since the p-value is &lt; 0.001, the correlation between bore and price is statistically significant, but the linear relationship is only moderate (~0.521). . pearson_coef, p_value = stats.pearsonr(df[&#39;city-mpg&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is -0.6865710067844677 with a P-value of P= 2.321132065567674e-29 . Since the p-value is &lt; 0.001, the correlation between city-mpg and price is statistically significant, and the coefficient of ~ -0.687 shows that the relationship is negative and moderately strong. . pearson_coef, p_value = stats.pearsonr(df[&#39;highway-mpg&#39;], df[&#39;price&#39;]) print(&#39;The Pearson Correlation Coefficient is &#39;, pearson_coef, &#39; with a P-value of P=&#39;, p_value) . The Pearson Correlation Coefficient is -0.704692265058953 with a P-value of P= 1.7495471144476358e-31 . Since the p-value is &lt; 0.001, the correlation between highway-mpg and price is statistically significant, and the coefficient of ~ -0.705 shows that the relationship is negative and moderately strong. . ANOVA (Analyis of Variance) . The Analysis of Variance (ANOVA) is a statistical method used to test whether there are significant differences between the means of two or more groups. ANOVA returns two parameters: . F-test score: ANOVA assumes the means of all groups are the same, calculates how much the actual means deviate from the assumption, and reports it as the F-test score. A larger score means there is a larger difference between the means. . P-value: P-value tells how statistically significant is our calculated score value. . If our price variable is strongly correlated with the variable we are analyzing, expect ANOVA to return a sizeable F-test score and a small p-value. . Since ANOVA analyzes the difference between different groups of the same variable, the groupby function will come in handy. Because the ANOVA algorithm averages the data automatically, we do not need to take the average before hand. . # group the data grouped_test2 = df_gptest[[&#39;drive-wheels&#39;, &#39;price&#39;]].groupby([&#39;drive-wheels&#39;]) grouped_test2.head(2) . drive-wheels price . 0 rwd | 13495.0 | . 1 rwd | 16500.0 | . 3 fwd | 13950.0 | . 4 4wd | 17450.0 | . 5 fwd | 15250.0 | . 136 4wd | 7603.0 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df_gptest . drive-wheels body-style price . 0 rwd | convertible | 13495.0 | . 1 rwd | convertible | 16500.0 | . 2 rwd | hatchback | 16500.0 | . 3 fwd | sedan | 13950.0 | . 4 4wd | sedan | 17450.0 | . ... ... | ... | ... | . 196 rwd | sedan | 16845.0 | . 197 rwd | sedan | 19045.0 | . 198 rwd | sedan | 21485.0 | . 199 rwd | sedan | 22470.0 | . 200 rwd | sedan | 22625.0 | . 201 rows × 3 columns . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; grouped_test2.get_group(&#39;4wd&#39;)[&#39;price&#39;] . 4 17450.0 136 7603.0 140 9233.0 141 11259.0 144 8013.0 145 11694.0 150 7898.0 151 8778.0 Name: price, dtype: float64 . f_val, p_val = stats.f_oneway(grouped_test2.get_group(&#39;fwd&#39;)[&#39;price&#39;], grouped_test2.get_group(&#39;rwd&#39;)[&#39;price&#39;], grouped_test2.get_group(&#39;4wd&#39;)[&#39;price&#39;]) print(&quot;ANOVA results: F=&quot;, f_val, &quot;, P =&quot;, p_val) . ANOVA results: F= 67.95406500780399 , P = 3.3945443577151245e-23 . This is a great result, with a large F test score showing a strong correlation and a P value of almost 0 implying almost certain statistical significance. But does this mean all three tested groups are all this highly correlated? . f_val, p_val = stats.f_oneway(grouped_test2.get_group(&#39;fwd&#39;)[&#39;price&#39;], grouped_test2.get_group(&#39;rwd&#39;)[&#39;price&#39;]) print( &quot;ANOVA results: F=&quot;, f_val, &quot;, P =&quot;, p_val ) . ANOVA results: F= 130.5533160959111 , P = 2.2355306355677845e-23 . f_val, p_val = stats.f_oneway(grouped_test2.get_group(&#39;4wd&#39;)[&#39;price&#39;], grouped_test2.get_group(&#39;rwd&#39;)[&#39;price&#39;]) print( &quot;ANOVA results: F=&quot;, f_val, &quot;, P =&quot;, p_val) . ANOVA results: F= 8.580681368924756 , P = 0.004411492211225333 . f_val, p_val = stats.f_oneway(grouped_test2.get_group(&#39;4wd&#39;)[&#39;price&#39;], grouped_test2.get_group(&#39;fwd&#39;)[&#39;price&#39;]) print(&quot;ANOVA results: F=&quot;, f_val, &quot;, P =&quot;, p_val) . ANOVA results: F= 0.665465750252303 , P = 0.41620116697845666 . Conclusion: Important Variables . We now have a better idea of what our data looks like and which variables are important to take into account when predicting the car price. We have narrowed it down to the following variables: . Continuous numerical variables: . Length Width Curb-weight Engine-size Horsepower City-mpg Highway-mpg Wheel-base Bore . Categorical variables: . Drive-wheels . . Model Development . df.head() . symboling normalized-losses make num-of-doors body-style drive-wheels engine-location wheel-base length width height curb-weight engine-type num-of-cylinders engine-size fuel-system bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price horsepower-binned diesel gas aspiration-std aspiration-turbo . 0 3 | 122 | alfa-romero | two | convertible | rwd | front | 88.6 | 0.811148 | 0.890278 | 0.816054 | 2548 | dohc | four | 130 | mpfi | 3.47 | 2.68 | 9.0 | 111.0 | 5000.0 | 21 | 27 | 13495.0 | low | 0 | 1 | 1 | 0 | . 1 3 | 122 | alfa-romero | two | convertible | rwd | front | 88.6 | 0.811148 | 0.890278 | 0.816054 | 2548 | dohc | four | 130 | mpfi | 3.47 | 2.68 | 9.0 | 111.0 | 5000.0 | 21 | 27 | 16500.0 | low | 0 | 1 | 1 | 0 | . 2 1 | 122 | alfa-romero | two | hatchback | rwd | front | 94.5 | 0.822681 | 0.909722 | 0.876254 | 2823 | ohcv | six | 152 | mpfi | 2.68 | 3.47 | 9.0 | 154.0 | 5000.0 | 19 | 26 | 16500.0 | medium | 0 | 1 | 1 | 0 | . 3 2 | 164 | audi | four | sedan | fwd | front | 99.8 | 0.848630 | 0.919444 | 0.908027 | 2337 | ohc | four | 109 | mpfi | 3.19 | 3.40 | 10.0 | 102.0 | 5500.0 | 24 | 30 | 13950.0 | low | 0 | 1 | 1 | 0 | . 4 2 | 164 | audi | four | sedan | 4wd | front | 99.4 | 0.848630 | 0.922222 | 0.908027 | 2824 | ohc | five | 136 | mpfi | 3.19 | 3.40 | 8.0 | 115.0 | 5500.0 | 18 | 22 | 17450.0 | low | 0 | 1 | 1 | 0 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Linear Regression and Multiple Linear Regression . Simple Linear Regression . Simple Linear Regression is a method to help us understand the relationship between two variables: . The predictor/independent variable (X) | The response/dependent variable (that we want to predict)(Y) | . The result of Linear Regression is a linear function that predicts the response (dependent) variable as a function of the predictor (independent) variable. . Y: Response Variable X: Predictor Varaible . Linear function: 𝑌ℎ𝑎𝑡 = 𝑎 + 𝑏𝑋 . a refers to the intercept of the regression line, in other words: the value of Y when X is 0 | b refers to the slope of the regression line, in other words: the value with which Y changes when X increases by 1 unit | . from sklearn.linear_model import LinearRegression . How can highway-mpg help predict the price? . lm = LinearRegression() lm . LinearRegression() . X = df[[&#39;highway-mpg&#39;]] Y = df[&#39;price&#39;] # fit the linear model using highway-mpg lm.fit(X,Y) . LinearRegression() . Yhat = lm.predict(X) Yhat[0:5] . array([16236.50464347, 16236.50464347, 17058.23802179, 13771.3045085 , 20345.17153508]) . lm.intercept_ . 38423.3058581574 . lm.coef_ . array([-821.73337832]) . Final estimated linear model: price = 38423.31 - 821.73 * highway-mpg . How can engine size help predict the price? . X = df[[&#39;engine-size&#39;]] Y = df[&#39;price&#39;] # fit the linear model using highway-mpg lm.fit(X,Y) . LinearRegression() . Yhat = lm.predict(X) Yhat[0:5] . array([13728.4631336 , 13728.4631336 , 17399.38347881, 10224.40280408, 14729.62322775]) . lm.intercept_ . -7963.338906281042 . lm.coef_ . array([166.86001569]) . Final estimated linear model: Price = -7963.34 + 166.86 * Engine-size . Multiple Linear Regression . If we want to use more variables in our model to predict car price, we can use Multiple Linear Regression. This method is used to explain the relationship between one continuous response (dependent) variable and two or more predictor (independent) variables. Most of the real-world regression models involve multiple predictors. . 𝑌ℎ𝑎𝑡 = 𝑎 + 𝑏1𝑋1 + 𝑏2𝑋2 + 𝑏3𝑋3 + 𝑏4𝑋4 . From the previous section we know that other good predictors of price could be: . Horsepower | Curb-weight | Engine-size | Highway-mpg | . Z = df[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;]] . lm.fit(Z, df[&#39;price&#39;]) . LinearRegression() . lm.intercept_ . -15806.624626329212 . lm.coef_ . array([53.49574423, 4.70770099, 81.53026382, 36.05748882]) . Final estimated linear model: Price = -15678.74 + 52.65851272 horsepower + 4.699 curb-weight + 81.96 engine-size + 33.58 highway-mpg . lm.fit(df[[&#39;normalized-losses&#39;, &#39;highway-mpg&#39;]], df[&#39;price&#39;]) . LinearRegression() . lm.intercept_ . 38201.31327245728 . lm.coef_ . array([ 1.49789586, -820.45434016]) . Final estimated linear model: Price = 38201.31 + 1.498 normalized-losses - 820.45 highway-mpg . . Model Evaluation using Visualization . import seaborn as sns %matplotlib inline . Regression Plot for Simple Linear Regression . This plot will show a combination of a scattered data points (a scatter plot), as well as the fitted linear regression line going through the data. This will give us a reasonable estimate of the relationship between the two variables, the strength of the correlation, as well as the direction (positive or negative correlation). . width = 12 height = 10 plt.figure(figsize=(width, height)) sns.regplot(x=&#39;highway-mpg&#39;, y=&#39;price&#39;, data=df) plt.ylim(0,) . (0.0, 48174.721379252835) . We can see from this plot that price is negatively correlated to highway-mpg, since the regression slope is negative. One thing to keep in mind when looking at a regression plot is to pay attention to how scattered the data points are around the regression line. This will give you a good indication of the variance of the data, and whether a linear model would be the best fit or not. If the data is too far off from the line, this linear model might not be the best model for this data. . plt.figure(figsize=(width, height)) sns.regplot(x=&#39;peak-rpm&#39;, y=&#39;price&#39;, data=df) plt.ylim(0,) . (0.0, 47414.1) . Comparing the regression plot of &quot;peak-rpm&quot; and &quot;highway-mpg&quot; we see that the points for &quot;highway-mpg&quot; are much closer to the generated line and on the average decrease. The points for &quot;peak-rpm&quot; have more spread around the predicted line, and it is much harder to determine if the points are decreasing or increasing as the &quot;highway-mpg&quot; increases. . df[[&#39;peak-rpm&#39;, &#39;highway-mpg&#39;, &#39;price&#39;]].corr() . peak-rpm highway-mpg price . peak-rpm 1.000000 | -0.058598 | -0.101616 | . highway-mpg -0.058598 | 1.000000 | -0.704692 | . price -0.101616 | -0.704692 | 1.000000 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; As we can see, highway-mpg is more strongly correlated with price as compared to peak-rpm. . Residual Plot to visualize variance of data . The difference between the observed value (y) and the predicted value (Yhat) is called the residual (e). When we look at a regression plot, the residual is the distance from the data point to the fitted regression line. . A residual plot is a graph that shows the residuals on the vertical y-axis and the independent variable on the horizontal x-axis. . We look at the spread of the residuals: . If the points in a residual plot are randomly spread out around the x-axis, then a linear model is appropriate for the data. | Randomly spread out residuals means that the variance is constant, and thus the linear model is a good fit for this data. | . width = 12 height = 10 plt.figure(figsize=(width, height)) sns.residplot(df[&#39;highway-mpg&#39;], df[&#39;price&#39;]) plt.show() . /usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation. FutureWarning . We can see from this residual plot that the residuals are not randomly spread around the x-axis, which leads us to believe that maybe a non-linear model is more appropriate for this data. . Distribution Plot for Multiple Linear Regression . You cannot visualize Multiple Linear Regression with a regression or residual plot. One way to look at the fit of the model is by looking at the distribution plot. We can look at the distribution of the fitted values that result from the model and compare it to the distribution of the actual values. . Z = df[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;]] . lm.fit(Z, df[&#39;price&#39;]) . LinearRegression() . Y_hat = lm.predict(Z) . plt.figure(figsize=(width, height)) ax1 = sns.distplot(df[&#39;price&#39;], hist=False, color=&#39;r&#39;, label=&#39;Actual Value&#39;) sns.distplot(Yhat, hist=False, color=&#39;b&#39;, label=&#39;Fitted Values&#39;, ax=ax1) plt.title(&#39;Actual vs Fitted Values for Price&#39;) plt.xlabel(&#39;Price (in dollars)&#39;) plt.ylabel(&#39;Proportion of Cars&#39;) plt.show() plt.close() . /usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots). warnings.warn(msg, FutureWarning) /usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots). warnings.warn(msg, FutureWarning) . We can see that the fitted values are reasonably close to the actual values, since the two distributions overlap a bit. However, there is definitely some room for improvement. . . Polynomial Regression and Pipelines . Polynomial regression is a particular case of the general linear regression model or multiple linear regression models. We get non-linear relationships by squaring or setting higher-order terms of the predictor variables. . There are different orders of polynomial regression: . Quadratic - 2nd order 𝑌ℎ𝑎𝑡=𝑎+𝑏1𝑋2+𝑏2𝑋2 | Cubic - 3rd order 𝑌ℎ𝑎𝑡=𝑎+𝑏1𝑋2+𝑏2𝑋2+𝑏3𝑋3 | Higher order: 𝑌=𝑎+𝑏1𝑋2+𝑏2𝑋2+𝑏3𝑋3.... | . We saw earlier that a linear model did not provide the best fit while using highway-mpg as the predictor variable. Let&#39;s see if we can try fitting a polynomial model to the data instead. . def PlotPolly(model, independent_variable, dependent_variable, Name): x_new = np.linspace(15, 55, 100) y_new = model(x_new) plt.plot(independent_variable, dependent_variable, &#39;.&#39;, x_new, y_new, &#39;-&#39;) plt.title(&#39;Polynomial Fit with Matplotlib for Price ~ Length&#39;) ax = plt.gca() ax.set_facecolor((0.898, 0.898, 0.898)) fig = plt.gcf() plt.xlabel(Name) plt.ylabel(&#39;Price of Cars&#39;) plt.show() plt.close() . x = df[&#39;highway-mpg&#39;] y = df[&#39;price&#39;] . # we use a polynomial of the 3rd order f = np.polyfit(x, y, 3) # use the poly1d function to display the polynomial function p = np.poly1d(f) print(p) . 3 2 -1.557 x + 204.8 x - 8965 x + 1.379e+05 . PlotPolly(p, x, y, &#39;highway-mpg&#39;) . np.polyfit(x, y, 3) . array([-1.55663829e+00, 2.04754306e+02, -8.96543312e+03, 1.37923594e+05]) . We can already see from plotting that this polynomial model performs better than the linear model. This is because the generated polynomial function &quot;hits&quot; more of the data points. . f1 = np.polyfit(x, y, 11) p1 = np.poly1d(f1) print(p1) . 11 10 9 8 7 -1.243e-08 x + 4.722e-06 x - 0.0008028 x + 0.08056 x - 5.297 x 6 5 4 3 2 + 239.5 x - 7588 x + 1.684e+05 x - 2.565e+06 x + 2.551e+07 x - 1.491e+08 x + 3.879e+08 . PlotPolly(p1, x, y, &#39;highway-mpg&#39;) . We see that by using very high order polynomials, overfitting is observed. . Multivariate Polynomial Function . The analytical expression for Multivariate Polynomial function gets complicated. For example, the expression for a second-order (degree=2)polynomial with two variables is given by: . 𝑌ℎ𝑎𝑡=𝑎+𝑏1𝑋1+𝑏2𝑋2+𝑏3𝑋1𝑋2+𝑏4𝑋21+𝑏5𝑋22 . We will now perform a polynomial transform on multiple features. . from sklearn.preprocessing import PolynomialFeatures . pr = PolynomialFeatures(degree=2) pr . PolynomialFeatures() . Z_pr = pr.fit_transform(Z) . Z.shape . (201, 4) . Z_pr.shape . (201, 15) . Pipeline . Data Pipelines simplify the steps of processing the data. . from sklearn.pipeline import Pipeline from sklearn.preprocessing import StandardScaler . # create a list of tuples inlcuding the name of the model/estimator and its corresponding constructor Input = [(&#39;scale&#39;, StandardScaler()), (&#39;polynomial&#39;, PolynomialFeatures(include_bias=False)), (&#39;model&#39;, LinearRegression())] . pipe = Pipeline(Input) pipe . Pipeline(steps=[(&#39;scale&#39;, StandardScaler()), (&#39;polynomial&#39;, PolynomialFeatures(include_bias=False)), (&#39;model&#39;, LinearRegression())]) . pipe.fit(Z,y) . Pipeline(steps=[(&#39;scale&#39;, StandardScaler()), (&#39;polynomial&#39;, PolynomialFeatures(include_bias=False)), (&#39;model&#39;, LinearRegression())]) . ypipe = pipe.predict(Z) ypipe[0:10] . array([13102.74784201, 13102.74784201, 18225.54572197, 10390.29636555, 16136.29619164, 13880.09787302, 15041.58694037, 15457.93465485, 17974.49032347, 10510.56542385]) . . Measures for In-Sample Evaluation . When evaluating our models, not only do we want to visualize the results, but we also want a quantitative measure to determine how accurate the model is. . Two very important measures that are often used in Statistics to determine the accuracy of a model are: . R^2 / R-squared | Mean Squared Error (MSE) | . R-squared: R squared, also known as the coefficient of determination, is a measure to indicate how close the data is to the fitted regression line. The value of the R-squared is the percentage of variation of the response variable (y) that is explained by a linear model. . Mean Squared Error (MSE): The Mean Squared Error measures the average of the squares of errors, that is, the difference between actual value (y) and the estimated value (ŷ). . Model 1: Simple Linear Regression . X = df[[&#39;highway-mpg&#39;]] Y = df[&#39;price&#39;] # highway_mpg_fit lm.fit(X,Y) # calculate the R^2 print(&#39;The R-square is:&#39;, lm.score(X,Y)) . The R-square is: 0.4965911884339176 . We can say that ~ 49.659% of the variation of the price is explained by this simple linear model &quot;highway_mpg_fit&quot;. . Yhat = lm.predict(X) print(&#39;The output of the first four predicted values is&#39;, Yhat[0:4]) . The output of the first four predicted values is [16236.50464347 16236.50464347 17058.23802179 13771.3045085 ] . from sklearn.metrics import mean_squared_error # calculate the MSE mse = mean_squared_error(df[&#39;price&#39;], Yhat) print(&#39;The mean square error of price and predicted value is: &#39;, mse) . The mean square error of price and predicted value is: 31635042.944639888 . Model 2: Multiple Linear Regression . lm.fit(Z, df[&#39;price&#39;]) # find the R^2 print(&#39;The R-square value is: &#39;, lm.score(Z, df[&#39;price&#39;])) . The R-square value is: 0.8093562806577457 . We can say that ~ 80.93 % of the variation of price is explained by this multiple linear regression &quot;multi_fit&quot;. . Y_predict_multifit = lm.predict(Z) . print(&#39;The mean square error of price and predicted value using multifit is: &#39;, mean_squared_error(df[&#39;price&#39;], Y_predict_multifit)) . The mean square error of price and predicted value using multifit is: 11980366.87072649 . Model 3: Polynomial Fit . from sklearn.metrics import r2_score . r_squared = r2_score(y, p(x)) print(&#39;The R-square value is: &#39;, r_squared) . The R-square value is: 0.6741946663906517 . We can say that ~ 67.419 % of the variation of price is explained by this polynomial fit. . mean_squared_error(df[&#39;price&#39;], p(x)) . 20474146.426361226 . . Prediction and Decision Making . Prediction . We trained the model using fit. Now we will use the method &#39;predict&#39; to produce a prediction. . import matplotlib.pyplot as plt import numpy as np %matplotlib inline . new_input = np.arange(1, 100, 1).reshape(-1, 1) . lm.fit(X,Y) lm . LinearRegression() . yhat = lm.predict(new_input) yhat[0:5] . /usr/local/lib/python3.7/dist-packages/sklearn/base.py:446: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names &#34;X does not have valid feature names, but&#34; . array([37601.57247984, 36779.83910151, 35958.10572319, 35136.37234487, 34314.63896655]) . plt.plot(new_input, yhat) plt.show() . Decision Making: Determing a Good Model Fit . Now that we have visualized the different models, and generated the R-squared and MSE values for the fits, how do we determine a good model fit? . What is a good R-squared value? When comparing models, the model with the higher R-squared value is a better fit for the data. . What is a good MSE? When comparing models, the model with the smallest MSE value is a better fit for the data. . Let&#39;s take a look at the values for the different models. . Simple Linear Regression: Using Highway-mpg as a Predictor Variable of Price. . R-squared: 0.49659118843391759 | MSE: 3.16 x10^7 | . Multiple Linear Regression: Using Horsepower, Curb-weight, Engine-size, and Highway-mpg as Predictor Variables of Price. . R-squared: 0.80896354913783497 | MSE: 1.2 x10^7 | . Polynomial Fit: Using Highway-mpg as a Predictor Variable of Price. . R-squared: 0.6741946663906514 | MSE: 2.05 x 10^7 | . Simple Linear Regression model (SLR) vs Multiple Linear Regression model (MLR) . Usually, the more variables you have, the better your model is at predicting, but this is not always true. Sometimes you may not have enough data, you may run into numerical problems, or many of the variables may not be useful and or even act as noise. As a result, you should always check the MSE and R^2. So to be able to compare the results of the MLR vs SLR models, we look at a combination of both the R-squared and MSE to make the best conclusion about the fit of the model. . MSE: The MSE of SLR is 3.16x10^7 while MLR has an MSE of 1.2 x10^7. The MSE of MLR is much smaller. | R-squared: In this case, we can also see that there is a big difference between the R-squared of the SLR and the R-squared of the MLR. The R-squared for the SLR (0.497) is very small compared to the R-squared for the MLR (0.809). This R-squared in combination with the MSE show that MLR seems like the better model fit in this case, compared to SLR. | . Simple Linear Model (SLR) vs Polynomial Fit . MSE: We can see that Polynomial Fit brought down the MSE, since this MSE is smaller than the one from the SLR. | R-squared: The R-squared for the Polyfit is larger than the R-squared for the SLR, so the Polynomial Fit also brought up the R-squared quite a bit. Since the Polynomial Fit resulted in a lower MSE and a higher R-squared, we can conclude that this was a better fit model than the simple linear regression for predicting Price with Highway-mpg as a predictor variable. | . Multiple Linear Regression (MLR) vs Polynomial Fit . MSE: The MSE for the MLR is smaller than the MSE for the Polynomial Fit. | R-squared: The R-squared for the MLR is also much larger than for the Polynomial Fit. | . Conclusion: . Comparing these three models, we conclude that the MLR model is the best model to be able to predict price from our dataset. This result makes sense, since we have 27 variables in total, and we know that more than one of those variables are potential predictors of the final car price. . . Model Evaluation and Refinement . We have built models and made predictions of vehicle prices. Now we will determine how accurate these predictions are. . import pandas as pd import numpy as np . path = &#39;https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/DA0101EN/module_5_auto.csv&#39; df = pd.read_csv(path) . df = df._get_numeric_data() df.head() . Unnamed: 0 Unnamed: 0.1 symboling normalized-losses wheel-base length width height curb-weight engine-size bore stroke compression-ratio horsepower peak-rpm city-mpg highway-mpg price city-L/100km diesel gas . 0 0 | 0 | 3 | 122 | 88.6 | 0.811148 | 0.890278 | 48.8 | 2548 | 130 | 3.47 | 2.68 | 9.0 | 111.0 | 5000.0 | 21 | 27 | 13495.0 | 11.190476 | 0 | 1 | . 1 1 | 1 | 3 | 122 | 88.6 | 0.811148 | 0.890278 | 48.8 | 2548 | 130 | 3.47 | 2.68 | 9.0 | 111.0 | 5000.0 | 21 | 27 | 16500.0 | 11.190476 | 0 | 1 | . 2 2 | 2 | 1 | 122 | 94.5 | 0.822681 | 0.909722 | 52.4 | 2823 | 152 | 2.68 | 3.47 | 9.0 | 154.0 | 5000.0 | 19 | 26 | 16500.0 | 12.368421 | 0 | 1 | . 3 3 | 3 | 2 | 164 | 99.8 | 0.848630 | 0.919444 | 54.3 | 2337 | 109 | 3.19 | 3.40 | 10.0 | 102.0 | 5500.0 | 24 | 30 | 13950.0 | 9.791667 | 0 | 1 | . 4 4 | 4 | 2 | 164 | 99.4 | 0.848630 | 0.922222 | 54.3 | 2824 | 136 | 3.19 | 3.40 | 8.0 | 115.0 | 5500.0 | 18 | 22 | 17450.0 | 13.055556 | 0 | 1 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; from IPython.display import display from IPython.html import widgets from IPython.display import display from ipywidgets import interact, interactive, fixed, interact_manual . /usr/local/lib/python3.7/dist-packages/IPython/html.py:14: ShimWarning: The `IPython.html` package has been deprecated since IPython 4.0. You should import from `notebook` instead. `IPython.html.widgets` has moved to `ipywidgets`. &#34;`IPython.html.widgets` has moved to `ipywidgets`.&#34;, ShimWarning) . Functions for Plotting . def DistributionPlot(RedFunction, BlueFunction, RedName, BlueName, Title): width = 12 height = 10 plt.figure(figsize=(width, height)) ax1 = sns.distplot(RedFunction, hist=False, color=&#39;r&#39;, label=RedName) ax2 = sns.distplot(BlueFunction, hist=False, color=&#39;b&#39;, label=BlueName, ax=ax1) plt.title(Title) plt.xlabel(&#39;Price (in dollars)&#39;) plt.ylabel(&#39;Proportion of Cars&#39;) plt.show() plt.close() . def PollyPlot(xtrain, xtest, y_train, y_test, lr,poly_transform): #training data #testing data # lr:linear regression object #poly_transform:polynomial transformation object width = 12 height = 10 plt.figure(figsize=(width, height)) xmax=max([xtrain.values.max(), xtest.values.max()]) xmin=min([xtrain.values.min(), xtest.values.min()]) x=np.arange(xmin, xmax, 0.1) plt.plot(xtrain, y_train, &#39;ro&#39;, label=&#39;Training Data&#39;) plt.plot(xtest, y_test, &#39;go&#39;, label=&#39;Test Data&#39;) plt.plot(x, lr.predict(poly_transform.fit_transform(x.reshape(-1, 1))), label=&#39;Predicted Function&#39;) plt.ylim([-10000, 60000]) plt.ylabel(&#39;Price&#39;) plt.legend() . Training and Testing . y_data = df[&#39;price&#39;] . x_data = df.drop(&#39;price&#39;, axis=1) . from sklearn.model_selection import train_test_split x_train, x_test, y_train, y_test = train_test_split(x_data, y_data, test_size=0.1, random_state=1) # test_size setes the proportion of data that is split. The testing set is set to 10% of the total dataset. # use the same random_state value throughout your code print(&#39;number of test samples: &#39;, x_test.shape[0]) print(&#39;number of training samples: &#39;, x_train.shape[0]) . number of test samples: 21 number of training samples: 180 . from sklearn.linear_model import LinearRegression # create Linear Regression object lre = LinearRegression() # fit the model using the feature &#39;horsepower&#39; lre.fit(x_train[[&#39;horsepower&#39;]], y_train) . LinearRegression() . lre.score(x_test[[&#39;horsepower&#39;]], y_test) . 0.36358755750788263 . lre.score(x_train[[&#39;horsepower&#39;]], y_train) . 0.6619724197515104 . We can see that the R^2 is much smaller using the test data. . Cross-Validation Score . from sklearn.model_selection import cross_val_score . Rcross = cross_val_score(lre, x_data[[&#39;horsepower&#39;]], y_data, cv=4) Rcross . array([0.7746232 , 0.51716687, 0.74785353, 0.04839605]) . The default scoring is R^2. Each element in the array has the average R^2 value in the fold. . print(&#39;The mean of the folds is&#39;, Rcross.mean(), &#39;and the standard deviation is&#39;, Rcross.std()) . The mean of the folds is 0.522009915042119 and the standard deviation is 0.291183944475603 . We can use negative squared error as a score by setting the parameter &#39;scoring&#39; metric to &#39;neg_mean_squared_error&#39;. . -1 * cross_val_score(lre, x_data[[&#39;horsepower&#39;]], y_data, cv=4, scoring=&#39;neg_mean_squared_error&#39;) . array([20254142.84026702, 43745493.2650517 , 12539630.34014931, 17561927.72247591]) . Use the function &#39;cross_val_predict&#39; to predict the output. The function splits up the data into the specified number of folds, using one fold to get a prediction while the rest of the folds are used as test data. First import the function. . from sklearn.model_selection import cross_val_predict yhat= cross_val_predict(lre, x_data[[&#39;horsepower&#39;]], y_data, cv=4) yhat[0:5] . array([14141.63807508, 14141.63807508, 20814.29423473, 12745.03562306, 14762.35027598]) . Overfitting, Underfitting and Model Selection . It turns out that the test data sometimes referred to as the out of sample data is a much better measure of how well your model performs in the real world. One reason for this is overfitting; let&#39;s go over some examples. It turns out these differences are more apparent in Multiple Linear Regression and Polynomial Regression so we will explore overfitting in that context. . lr = LinearRegression() lr.fit(x_train[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;]], y_train) . LinearRegression() . y_hat_train = lr.predict(x_train[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;]]) y_hat_train[0:5] . array([ 7426.6731551 , 28323.75090803, 14213.38819709, 4052.34146983, 34500.19124244]) . y_hat_test = lr.predict(x_test[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;]]) y_hat_test[0:5] . array([11349.35089149, 5884.11059106, 11208.6928275 , 6641.07786278, 15565.79920282]) . Lets perform some model evaluation using our training and testing data separately. . import matplotlib.pyplot as plt %matplotlib inline import seaborn as sns . Title = &#39;Distribution Plot of Predicted Value using Training Data vs Training Data distribution&#39; DistributionPlot(y_train, y_hat_train, &#39;Actual Values (Train)&#39;, &#39;Predicted Values (Train)&#39;, Title) . /usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots). warnings.warn(msg, FutureWarning) /usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots). warnings.warn(msg, FutureWarning) . Figure 1: Plot of predicted values using the training data compared to the training data. . So far the model seems to be doing well in learning from the training dataset. But what happens when the model encounters new data from the testing dataset? . Title = &#39;Distribution Plot of Predicted Value using Test Data vs Data Distribution of Test Data&#39; DistributionPlot(y_test, y_hat_test, &#39;Actual Values (Test)&#39;, &#39;Predicted Values (Test)&#39;, Title) . /usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots). warnings.warn(msg, FutureWarning) /usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots). warnings.warn(msg, FutureWarning) . Figure 2: Plot of predicted value using the test data compared to the test data. . When the model generates new values from the test data, we see the distribution of the predicted values is much different from the actual target values. Comparing Figure 1 and Figure 2, it is evident the distribution of the training data in Figure 1 is much better at fitting the data. This difference in Figure 2 is apparent where the ranges are from 5000 to 15000. This is where the distribution shape is exceptionally different. . Let&#39;s see if polynomial regression also exhibits a drop in the prediction accuracy when analysing the test dataset. . from sklearn.preprocessing import PolynomialFeatures . Overfitting . Overfitting occurs when the model fits the noise, not the underlying process. Therefore when testing your model using the test-set, your model does not perform as well as it is modelling noise, not the underlying process that generated the relationship. . x_train, x_test, y_train, y_test = train_test_split(x_data, y_data, test_size=0.45, random_state=0) . pr = PolynomialFeatures(degree=5) x_train_pr = pr.fit_transform(x_train[[&#39;horsepower&#39;]]) x_test_pr = pr.fit_transform(x_test[[&#39;horsepower&#39;]]) pr . PolynomialFeatures(degree=5) . poly = LinearRegression() # train the model poly.fit(x_train_pr, y_train) . LinearRegression() . y_hat = poly.predict(x_test_pr) yhat[0:5] . array([14141.63807508, 14141.63807508, 20814.29423473, 12745.03562306, 14762.35027598]) . print(&#39;Predicted values:&#39;, yhat[0:4]) print(&#39;True values&#39;, y_test[0:4].values) . Predicted values: [14141.63807508 14141.63807508 20814.29423473 12745.03562306] True values [ 6295. 10698. 13860. 13499.] . PollyPlot(x_train[[&#39;horsepower&#39;]], x_test[[&#39;horsepower&#39;]], y_train, y_test, poly, pr) . Figure 3: A polynomial regression model; red dots represent training data, green dots represent test data, and the blue line represents the model prediction. . We see that the estimated function appears to track the data but around 200 horsepower, the function begins to diverge from the data points. . poly.score(x_train_pr, y_train) . 0.5567716902120254 . poly.score(x_test_pr, y_test) . -29.87134030204371 . We see the R^2 for the training data is 0.5567 while the R^2 on the test data was -29.87. The lower the R^2, the worse the model, a Negative R^2 is a sign of overfitting. . Let&#39;s see how the R^2 changes on the test data for different order polynomials and plot the results. . Rsqu_test = [] order = [1, 2, 3, 4] for n in order: pr = PolynomialFeatures(degree=n) x_train_pr = pr.fit_transform(x_train[[&#39;horsepower&#39;]]) x_test_pr = pr.fit_transform(x_test[[&#39;horsepower&#39;]]) lr.fit(x_train_pr, y_train) Rsqu_test.append(lr.score(x_test_pr, y_test)) plt.plot(order, Rsqu_test) plt.xlabel(&#39;order&#39;) plt.ylabel(&#39;R^2&#39;) plt.title(&#39;R^2 Using Test Data&#39;) plt.text(3, 0.75, &#39;Maximum R^2 &#39;) . Text(3, 0.75, &#39;Maximum R^2 &#39;) . We see the R^2 gradually increases until an order three polynomial is used. Then the R^2 dramatically decreases at four. . def f(order, test_data): x_train, x_test, y_train, y_test = train_test_split(x_data, y_data, test_size=test_data, random_state=0) pr = PolynomialFeatures(degree=order) x_train_pr = pr.fit_transform(x_train[[&#39;horsepower&#39;]]) x_test_pr = pr.fit_transform(x_test[[&#39;horsepower&#39;]]) poly = LinearRegression() poly.fit(x_train_pr,y_train) PollyPlot(x_train[[&#39;horsepower&#39;]], x_test[[&#39;horsepower&#39;]], y_train,y_test, poly, pr) . The following interface allows you to experiment with different polynomial orders and different amounts of data. . interact(f, order=(0, 6, 1), test_data=(0.05, 0.95, 0.05)) . &lt;function __main__.f&gt; . Ridge Regression . Review Ridge Regression, see how the parameter Alpha changes the model. Our test data will be used as validation data. . pr = PolynomialFeatures(degree=2) x_train_pr = pr.fit_transform(x_train[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;, &#39;normalized-losses&#39;, &#39;symboling&#39;]]) x_test_pr = pr.fit_transform(x_test[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;,&#39;normalized-losses&#39;,&#39;symboling&#39;]]) . from sklearn.linear_model import Ridge . RidgeModel = Ridge(alpha=0.1) . RidgeModel.fit(x_train_pr, y_train) . /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_ridge.py:156: LinAlgWarning: Ill-conditioned matrix (rcond=1.02972e-16): result may not be accurate. return linalg.solve(A, Xy, sym_pos=True, overwrite_a=True).T . Ridge(alpha=0.1) . yhat = RidgeModel.predict(x_test_pr) . print(&#39;predicted:&#39;, yhat[0:4]) print(&#39;test set:&#39;, y_test[0:4].values) . predicted: [ 6567.83081933 9597.97151399 20836.22326843 19347.69543463] test set: [ 6295. 10698. 13860. 13499.] . Select the value of Alpha that minimizes the test error. For e.g., we can use a loop. . Rsqu_test = [] Rsqu_train = [] dummy1 = [] ALPHA = 10 * np.array(range(0,1000)) for alfa in ALPHA: RigeModel = Ridge(alpha=alfa) RigeModel.fit(x_train_pr, y_train) Rsqu_test.append(RigeModel.score(x_test_pr, y_test)) Rsqu_train.append(RigeModel.score(x_train_pr, y_train)) . width = 12 height = 10 plt.figure(figsize=(width, height)) plt.plot(ALPHA,Rsqu_test, label=&#39;validation data &#39;) plt.plot(ALPHA,Rsqu_train, &#39;r&#39;, label=&#39;training Data &#39;) plt.xlabel(&#39;alpha&#39;) plt.ylabel(&#39;R^2&#39;) plt.legend() . &lt;matplotlib.legend.Legend at 0x7f962c5602d0&gt; . Figure 6: The blue line represents the R^2 of the test data, and the red line represents the R^2 of the training data. The x-axis represents the different values of Alpha. . Grid Search . The term Alpha is a hyperparameter; sklearn has the class GridSearchCV to make the process of finding the best hyperparameter simpler. . from sklearn.model_selection import GridSearchCV . parameters1 = [{&#39;alpha&#39;: [0.001, 0.1, 1, 10, 100, 1000, 10000, 100000]}] parameters1 . [{&#39;alpha&#39;: [0.001, 0.1, 1, 10, 100, 1000, 10000, 100000]}] . RR = Ridge() RR . Ridge() . Grid1 = GridSearchCV(RR, parameters1, cv=4) . Grid1.fit(x_data[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;]], y_data) . GridSearchCV(cv=4, estimator=Ridge(), param_grid=[{&#39;alpha&#39;: [0.001, 0.1, 1, 10, 100, 1000, 10000, 100000]}]) . The object finds the best parameter values on the validation data. We can obtain the estimator with the best parameters and assign it to the variable BestRR. . BestRR = Grid1.best_estimator_ BestRR . Ridge(alpha=10000) . BestRR.score(x_test[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;]], y_test) . 0.8411649831036152 . parameters2= [{&#39;alpha&#39;: [0.001,0.1,1, 10, 100, 1000,10000,100000,100000],&#39;normalize&#39;:[True,False]} ] Grid2 = GridSearchCV(Ridge(), parameters2,cv=4) Grid2.fit(x_data[[&#39;horsepower&#39;, &#39;curb-weight&#39;, &#39;engine-size&#39;, &#39;highway-mpg&#39;]],y_data) Grid2.best_estimator_ . /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:155: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. Please leave the normalize parameter to its default value to silence this warning. The default behavior of this estimator is to not do any normalization. If normalization is needed please use sklearn.preprocessing.StandardScaler instead. FutureWarning, /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py:145: FutureWarning: &#39;normalize&#39; was deprecated in version 1.0 and will be removed in 1.2. If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior: from sklearn.pipeline import make_pipeline model = make_pipeline(StandardScaler(with_mean=False), Ridge()) If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows: kwargs = {s[0] + &#39;__sample_weight&#39;: sample_weight for s in model.steps} model.fit(X, y, **kwargs) Set parameter alpha to: original_alpha * n_samples. FutureWarning, . Ridge(alpha=0.1, normalize=True) . .",
            "url": "https://shirolepranav.github.io/blog/analysis/modeling/2019/09/05/data-analysis-with-python.html",
            "relUrl": "/analysis/modeling/2019/09/05/data-analysis-with-python.html",
            "date": " • Sep 5, 2019"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://shirolepranav.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://shirolepranav.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}